// Code generated by gowsdl DO NOT EDIT.

package sfmetadata

import (
	"context"
	"encoding/xml"
	"github.com/hooklift/gowsdl/soap"
	"time"
)

// against "unused imports"
var _ time.Time
var _ xml.Name

type AnyType struct {
	InnerXML string `xml:",innerxml"`
}

type AnyURI string

type NCName string

type DeployProblemType string

const (
	DeployProblemTypeWarning DeployProblemType = "Warning"

	DeployProblemTypeError DeployProblemType = "Error"

	DeployProblemTypeInfo DeployProblemType = "Info"
)

type ManageableState string

const (
	ManageableStateReleased ManageableState = "released"

	ManageableStateDeleted ManageableState = "deleted"

	ManageableStateDeprecated ManageableState = "deprecated"

	ManageableStateInstalled ManageableState = "installed"

	ManageableStateBeta ManageableState = "beta"

	ManageableStateUnmanaged ManageableState = "unmanaged"

	ManageableStateInstalledEditable ManageableState = "installedEditable"

	ManageableStateDeprecatedEditable ManageableState = "deprecatedEditable"
)

type RetrieveStatus string

const (
	RetrieveStatusPending RetrieveStatus = "Pending"

	RetrieveStatusInProgress RetrieveStatus = "InProgress"

	RetrieveStatusSucceeded RetrieveStatus = "Succeeded"

	RetrieveStatusFailed RetrieveStatus = "Failed"
)

type FlowProcessType string

const (
	FlowProcessTypeAutoLaunchedFlow FlowProcessType = "AutoLaunchedFlow"

	FlowProcessTypeFlow FlowProcessType = "Flow"

	FlowProcessTypeWorkflow FlowProcessType = "Workflow"

	FlowProcessTypeCustomEvent FlowProcessType = "CustomEvent"

	FlowProcessTypeInvocableProcess FlowProcessType = "InvocableProcess"

	FlowProcessTypeLoginFlow FlowProcessType = "LoginFlow"

	FlowProcessTypeActionPlan FlowProcessType = "ActionPlan"

	FlowProcessTypeJourneyBuilderIntegration FlowProcessType = "JourneyBuilderIntegration"

	FlowProcessTypeUserProvisioningFlow FlowProcessType = "UserProvisioningFlow"

	FlowProcessTypeSurvey FlowProcessType = "Survey"

	FlowProcessTypeSurveyEnrich FlowProcessType = "SurveyEnrich"

	FlowProcessTypeAppointments FlowProcessType = "Appointments"

	FlowProcessTypeFSCLending FlowProcessType = "FSCLending"

	FlowProcessTypeDigitalForm FlowProcessType = "DigitalForm"

	FlowProcessTypeFieldServiceMobile FlowProcessType = "FieldServiceMobile"

	FlowProcessTypeOrchestrationFlow FlowProcessType = "OrchestrationFlow"

	FlowProcessTypeFieldServiceWeb FlowProcessType = "FieldServiceWeb"

	FlowProcessTypeTransactionSecurityFlow FlowProcessType = "TransactionSecurityFlow"

	FlowProcessTypeContactRequestFlow FlowProcessType = "ContactRequestFlow"

	FlowProcessTypeActionCadenceFlow FlowProcessType = "ActionCadenceFlow"

	FlowProcessTypeManagedContentFlow FlowProcessType = "ManagedContentFlow"

	FlowProcessTypeCheckoutFlow FlowProcessType = "CheckoutFlow"

	FlowProcessTypeCartAsyncFlow FlowProcessType = "CartAsyncFlow"

	FlowProcessTypeCustomerLifecycle FlowProcessType = "CustomerLifecycle"

	FlowProcessTypeJourney FlowProcessType = "Journey"

	FlowProcessTypeRecommendationStrategy FlowProcessType = "RecommendationStrategy"

	FlowProcessTypeOrchestrator FlowProcessType = "Orchestrator"

	FlowProcessTypeRoutingFlow FlowProcessType = "RoutingFlow"

	FlowProcessTypeServiceCatalogItemFlow FlowProcessType = "ServiceCatalogItemFlow"

	FlowProcessTypeEvaluationFlow FlowProcessType = "EvaluationFlow"

	FlowProcessTypeLoyaltyManagementFlow FlowProcessType = "LoyaltyManagementFlow"

	FlowProcessTypeManagedContentAuthoringWorkflow FlowProcessType = "ManagedContentAuthoringWorkflow"

	FlowProcessTypeActionCadenceAutolaunchedFlow FlowProcessType = "ActionCadenceAutolaunchedFlow"

	FlowProcessTypeActionCadenceStepFlow FlowProcessType = "ActionCadenceStepFlow"

	FlowProcessTypeIndividualObjectLinkingFlow FlowProcessType = "IndividualObjectLinkingFlow"

	FlowProcessTypePromptFlow FlowProcessType = "PromptFlow"
)

type DeployStatus string

const (
	DeployStatusPending DeployStatus = "Pending"

	DeployStatusInProgress DeployStatus = "InProgress"

	DeployStatusSucceeded DeployStatus = "Succeeded"

	DeployStatusSucceededPartial DeployStatus = "SucceededPartial"

	DeployStatusFailed DeployStatus = "Failed"

	DeployStatusCanceling DeployStatus = "Canceling"

	DeployStatusCanceled DeployStatus = "Canceled"
)

type AIApplicationStatus string

const (
	AIApplicationStatusDraft AIApplicationStatus = "Draft"

	AIApplicationStatusMigrated AIApplicationStatus = "Migrated"

	AIApplicationStatusEnabled AIApplicationStatus = "Enabled"

	AIApplicationStatusDisabled AIApplicationStatus = "Disabled"
)

type AIApplicationType string

const (
	AIApplicationTypePredictionBuilder AIApplicationType = "PredictionBuilder"

	AIApplicationTypeRecommendationBuilder AIApplicationType = "RecommendationBuilder"
)

type AIScoringMode string

const (
	AIScoringModeBatch AIScoringMode = "Batch"

	AIScoringModeOnDemand AIScoringMode = "OnDemand"

	AIScoringModeStreaming AIScoringMode = "Streaming"
)

type AIScoringModelDefVersionMode string

const (
	AIScoringModelDefVersionModeTRAIN AIScoringModelDefVersionMode = "TRAIN"

	AIScoringModelDefVersionModeDEPLOY AIScoringModelDefVersionMode = "DEPLOY"

	AIScoringModelDefVersionModeTRAIN_AND_DEPLOY AIScoringModelDefVersionMode = "TRAIN_AND_DEPLOY"
)

type ItemActionType string

const (
	ItemActionTypeOmniscript ItemActionType = "Omniscript"
)

type ItemCategory string

const (
	ItemCategoryDbBased ItemCategory = "dbBased"

	ItemCategoryFileBased ItemCategory = "fileBased"
)

type ActionLinkType string

const (
	ActionLinkTypeAPI ActionLinkType = "API"

	ActionLinkTypeAPIAsync ActionLinkType = "APIAsync"

	ActionLinkTypeDownload ActionLinkType = "Download"

	ActionLinkTypeUI ActionLinkType = "UI"
)

type ActionLinkHttpMethod string

const (
	ActionLinkHttpMethodHttpDelete ActionLinkHttpMethod = "HttpDelete"

	ActionLinkHttpMethodHttpHead ActionLinkHttpMethod = "HttpHead"

	ActionLinkHttpMethodHttpGet ActionLinkHttpMethod = "HttpGet"

	ActionLinkHttpMethodHttpPatch ActionLinkHttpMethod = "HttpPatch"

	ActionLinkHttpMethodHttpPost ActionLinkHttpMethod = "HttpPost"

	ActionLinkHttpMethodHttpPut ActionLinkHttpMethod = "HttpPut"
)

type ActionLinkUserVisibility string

const (
	ActionLinkUserVisibilityCreator ActionLinkUserVisibility = "Creator"

	ActionLinkUserVisibilityEveryone ActionLinkUserVisibility = "Everyone"

	ActionLinkUserVisibilityEveryoneButCreator ActionLinkUserVisibility = "EveryoneButCreator"

	ActionLinkUserVisibilityManager ActionLinkUserVisibility = "Manager"

	ActionLinkUserVisibilityCustomUser ActionLinkUserVisibility = "CustomUser"

	ActionLinkUserVisibilityCustomExcludedUser ActionLinkUserVisibility = "CustomExcludedUser"
)

type PlatformActionGroupCategory string

const (
	PlatformActionGroupCategoryPrimary PlatformActionGroupCategory = "Primary"

	PlatformActionGroupCategoryOverflow PlatformActionGroupCategory = "Overflow"
)

type ActionLinkExecutionsAllowed string

const (
	ActionLinkExecutionsAllowedOnce ActionLinkExecutionsAllowed = "Once"

	ActionLinkExecutionsAllowedOncePerUser ActionLinkExecutionsAllowed = "OncePerUser"

	ActionLinkExecutionsAllowedUnlimited ActionLinkExecutionsAllowed = "Unlimited"
)

type ReportSummaryType string

const (
	ReportSummaryTypeSum ReportSummaryType = "Sum"

	ReportSummaryTypeAverage ReportSummaryType = "Average"

	ReportSummaryTypeMaximum ReportSummaryType = "Maximum"

	ReportSummaryTypeMinimum ReportSummaryType = "Minimum"

	ReportSummaryTypeUnique ReportSummaryType = "Unique"

	ReportSummaryTypeMedian ReportSummaryType = "Median"

	ReportSummaryTypeNone ReportSummaryType = "None"
)

type ReportJobSourceTypes string

const (
	ReportJobSourceTypesTabular ReportJobSourceTypes = "tabular"

	ReportJobSourceTypesSummary ReportJobSourceTypes = "summary"

	ReportJobSourceTypesSnapshot ReportJobSourceTypes = "snapshot"
)

type PolicyApplicableDuration string

const (
	PolicyApplicableDurationParameterBased PolicyApplicableDuration = "ParameterBased"

	PolicyApplicableDurationMonthly PolicyApplicableDuration = "Monthly"

	PolicyApplicableDurationWeekly PolicyApplicableDuration = "Weekly"
)

type AssignmentPolicyType string

const (
	AssignmentPolicyTypeLoadBalancing AssignmentPolicyType = "loadBalancing"
)

type UtilizationFactor string

const (
	UtilizationFactorTotalAppointmentDuration UtilizationFactor = "TotalAppointmentDuration"

	UtilizationFactorNumberOfAppointments UtilizationFactor = "NumberOfAppointments"
)

type ProcessSubmitterType string

const (
	ProcessSubmitterTypeGroup ProcessSubmitterType = "group"

	ProcessSubmitterTypeRole ProcessSubmitterType = "role"

	ProcessSubmitterTypeUser ProcessSubmitterType = "user"

	ProcessSubmitterTypeRoleSubordinates ProcessSubmitterType = "roleSubordinates"

	ProcessSubmitterTypeRoleSubordinatesInternal ProcessSubmitterType = "roleSubordinatesInternal"

	ProcessSubmitterTypeOwner ProcessSubmitterType = "owner"

	ProcessSubmitterTypeCreator ProcessSubmitterType = "creator"

	ProcessSubmitterTypePartnerUser ProcessSubmitterType = "partnerUser"

	ProcessSubmitterTypeCustomerPortalUser ProcessSubmitterType = "customerPortalUser"

	ProcessSubmitterTypePortalRole ProcessSubmitterType = "portalRole"

	ProcessSubmitterTypePortalRoleSubordinates ProcessSubmitterType = "portalRoleSubordinates"

	ProcessSubmitterTypeAllInternalUsers ProcessSubmitterType = "allInternalUsers"
)

type WorkflowActionType string

const (
	WorkflowActionTypeFieldUpdate WorkflowActionType = "FieldUpdate"

	WorkflowActionTypeKnowledgePublish WorkflowActionType = "KnowledgePublish"

	WorkflowActionTypeTask WorkflowActionType = "Task"

	WorkflowActionTypeAlert WorkflowActionType = "Alert"

	WorkflowActionTypeSend WorkflowActionType = "Send"

	WorkflowActionTypeOutboundMessage WorkflowActionType = "OutboundMessage"

	WorkflowActionTypeFlowAction WorkflowActionType = "FlowAction"
)

type NextOwnerType string

const (
	NextOwnerTypeAdhoc NextOwnerType = "adhoc"

	NextOwnerTypeUser NextOwnerType = "user"

	NextOwnerTypeUserHierarchyField NextOwnerType = "userHierarchyField"

	NextOwnerTypeRelatedUserField NextOwnerType = "relatedUserField"

	NextOwnerTypeQueue NextOwnerType = "queue"
)

type RoutingType string

const (
	RoutingTypeUnanimous RoutingType = "Unanimous"

	RoutingTypeFirstResponse RoutingType = "FirstResponse"
)

type FilterOperation string

const (
	FilterOperationEquals FilterOperation = "equals"

	FilterOperationNotEqual FilterOperation = "notEqual"

	FilterOperationLessThan FilterOperation = "lessThan"

	FilterOperationGreaterThan FilterOperation = "greaterThan"

	FilterOperationLessOrEqual FilterOperation = "lessOrEqual"

	FilterOperationGreaterOrEqual FilterOperation = "greaterOrEqual"

	FilterOperationContains FilterOperation = "contains"

	FilterOperationNotContain FilterOperation = "notContain"

	FilterOperationStartsWith FilterOperation = "startsWith"

	FilterOperationIncludes FilterOperation = "includes"

	FilterOperationExcludes FilterOperation = "excludes"

	FilterOperationWithin FilterOperation = "within"
)

type StepCriteriaNotMetType string

const (
	StepCriteriaNotMetTypeApproveRecord StepCriteriaNotMetType = "ApproveRecord"

	StepCriteriaNotMetTypeRejectRecord StepCriteriaNotMetType = "RejectRecord"

	StepCriteriaNotMetTypeGotoNextStep StepCriteriaNotMetType = "GotoNextStep"
)

type StepRejectBehaviorType string

const (
	StepRejectBehaviorTypeRejectRequest StepRejectBehaviorType = "RejectRequest"

	StepRejectBehaviorTypeBackToPrevious StepRejectBehaviorType = "BackToPrevious"
)

type RecordEditabilityType string

const (
	RecordEditabilityTypeAdminOnly RecordEditabilityType = "AdminOnly"

	RecordEditabilityTypeAdminOrCurrentApprover RecordEditabilityType = "AdminOrCurrentApprover"
)

type AssignToLookupValueType string

const (
	AssignToLookupValueTypeUser AssignToLookupValueType = "User"

	AssignToLookupValueTypeQueue AssignToLookupValueType = "Queue"
)

type BusinessHoursSourceType string

const (
	BusinessHoursSourceTypeNone BusinessHoursSourceType = "None"

	BusinessHoursSourceTypeCase BusinessHoursSourceType = "Case"

	BusinessHoursSourceTypeStatic BusinessHoursSourceType = "Static"
)

type EscalationStartTimeType string

const (
	EscalationStartTimeTypeCaseCreation EscalationStartTimeType = "CaseCreation"

	EscalationStartTimeTypeCaseLastModified EscalationStartTimeType = "CaseLastModified"
)

type AudienceCriterionOperator string

const (
	AudienceCriterionOperatorEqual AudienceCriterionOperator = "Equal"

	AudienceCriterionOperatorNotEqual AudienceCriterionOperator = "NotEqual"

	AudienceCriterionOperatorGreaterThan AudienceCriterionOperator = "GreaterThan"

	AudienceCriterionOperatorGreaterThanOrEqual AudienceCriterionOperator = "GreaterThanOrEqual"

	AudienceCriterionOperatorLessThan AudienceCriterionOperator = "LessThan"

	AudienceCriterionOperatorLessThanOrEqual AudienceCriterionOperator = "LessThanOrEqual"

	AudienceCriterionOperatorContains AudienceCriterionOperator = "Contains"

	AudienceCriterionOperatorStartsWith AudienceCriterionOperator = "StartsWith"

	AudienceCriterionOperatorIncludes AudienceCriterionOperator = "Includes"

	AudienceCriterionOperatorNotIncludes AudienceCriterionOperator = "NotIncludes"
)

type AudienceCriterionType string

const (
	AudienceCriterionTypeDefault AudienceCriterionType = "Default"

	AudienceCriterionTypeProfile AudienceCriterionType = "Profile"

	AudienceCriterionTypeFieldBased AudienceCriterionType = "FieldBased"

	AudienceCriterionTypeGeoLocation AudienceCriterionType = "GeoLocation"

	AudienceCriterionTypeDomain AudienceCriterionType = "Domain"

	AudienceCriterionTypePermission AudienceCriterionType = "Permission"

	AudienceCriterionTypeAudience AudienceCriterionType = "Audience"
)

type FormulaFilterType string

const (
	FormulaFilterTypeAllCriteriaMatch FormulaFilterType = "AllCriteriaMatch"

	FormulaFilterTypeAnyCriterionMatches FormulaFilterType = "AnyCriterionMatches"

	FormulaFilterTypeCustomLogicMatches FormulaFilterType = "CustomLogicMatches"
)

type AuraBundleType string

const (
	AuraBundleTypeApplication AuraBundleType = "Application"

	AuraBundleTypeComponent AuraBundleType = "Component"

	AuraBundleTypeEvent AuraBundleType = "Event"

	AuraBundleTypeInterface AuraBundleType = "Interface"

	AuraBundleTypeTokens AuraBundleType = "Tokens"
)

type MuleSoftControlPlane string

const (
	MuleSoftControlPlaneNone MuleSoftControlPlane = "None"

	MuleSoftControlPlaneUS MuleSoftControlPlane = "US"

	MuleSoftControlPlaneEU MuleSoftControlPlane = "EU"
)

type AuthProviderType string

const (
	AuthProviderTypeFacebook AuthProviderType = "Facebook"

	AuthProviderTypeJanrain AuthProviderType = "Janrain"

	AuthProviderTypeSalesforce AuthProviderType = "Salesforce"

	AuthProviderTypeOpenIdConnect AuthProviderType = "OpenIdConnect"

	AuthProviderTypeMicrosoftACS AuthProviderType = "MicrosoftACS"

	AuthProviderTypeLinkedIn AuthProviderType = "LinkedIn"

	AuthProviderTypeTwitter AuthProviderType = "Twitter"

	AuthProviderTypeGoogle AuthProviderType = "Google"

	AuthProviderTypeGitHub AuthProviderType = "GitHub"

	AuthProviderTypeCustom AuthProviderType = "Custom"

	AuthProviderTypeApple AuthProviderType = "Apple"

	AuthProviderTypeEvergreen AuthProviderType = "Evergreen"

	AuthProviderTypeSlack AuthProviderType = "Slack"

	AuthProviderTypeHubSpot AuthProviderType = "HubSpot"

	AuthProviderTypeMicrosoft AuthProviderType = "Microsoft"

	AuthProviderTypeMuleSoft AuthProviderType = "MuleSoft"
)

type Language string

const (
	LanguageEn_US Language = "en_US"

	LanguageDe Language = "de"

	LanguageEs Language = "es"

	LanguageFr Language = "fr"

	LanguageIt Language = "it"

	LanguageJa Language = "ja"

	LanguageSv Language = "sv"

	LanguageKo Language = "ko"

	LanguageZh_TW Language = "zh_TW"

	LanguageZh_CN Language = "zh_CN"

	LanguagePt_BR Language = "pt_BR"

	LanguageNl_NL Language = "nl_NL"

	LanguageDa Language = "da"

	LanguageTh Language = "th"

	LanguageFi Language = "fi"

	LanguageRu Language = "ru"

	LanguageEs_MX Language = "es_MX"

	LanguageNo Language = "no"

	LanguageHu Language = "hu"

	LanguagePl Language = "pl"

	LanguageCs Language = "cs"

	LanguageTr Language = "tr"

	LanguageIn Language = "in"

	LanguageRo Language = "ro"

	LanguageVi Language = "vi"

	LanguageUk Language = "uk"

	LanguageIw Language = "iw"

	LanguageEl Language = "el"

	LanguageBg Language = "bg"

	LanguageEn_GB Language = "en_GB"

	LanguageAr Language = "ar"

	LanguageSk Language = "sk"

	LanguagePt_PT Language = "pt_PT"

	LanguageHr Language = "hr"

	LanguageSl Language = "sl"

	LanguageFr_CA Language = "fr_CA"

	LanguageKa Language = "ka"

	LanguageSr Language = "sr"

	LanguageSh Language = "sh"

	LanguageEn_AU Language = "en_AU"

	LanguageEn_MY Language = "en_MY"

	LanguageEn_IN Language = "en_IN"

	LanguageEn_PH Language = "en_PH"

	LanguageEn_CA Language = "en_CA"

	LanguageRo_MD Language = "ro_MD"

	LanguageBs Language = "bs"

	LanguageMk Language = "mk"

	LanguageLv Language = "lv"

	LanguageLt Language = "lt"

	LanguageEt Language = "et"

	LanguageSq Language = "sq"

	LanguageSh_ME Language = "sh_ME"

	LanguageMt Language = "mt"

	LanguageGa Language = "ga"

	LanguageEu Language = "eu"

	LanguageCy Language = "cy"

	LanguageIs Language = "is"

	LanguageMs Language = "ms"

	LanguageTl Language = "tl"

	LanguageLb Language = "lb"

	LanguageRm Language = "rm"

	LanguageHy Language = "hy"

	LanguageHi Language = "hi"

	LanguageUr Language = "ur"

	LanguageBn Language = "bn"

	LanguageDe_AT Language = "de_AT"

	LanguageDe_CH Language = "de_CH"

	LanguageTa Language = "ta"

	LanguageAr_DZ Language = "ar_DZ"

	LanguageAr_BH Language = "ar_BH"

	LanguageAr_EG Language = "ar_EG"

	LanguageAr_IQ Language = "ar_IQ"

	LanguageAr_JO Language = "ar_JO"

	LanguageAr_KW Language = "ar_KW"

	LanguageAr_LB Language = "ar_LB"

	LanguageAr_LY Language = "ar_LY"

	LanguageAr_MA Language = "ar_MA"

	LanguageAr_OM Language = "ar_OM"

	LanguageAr_QA Language = "ar_QA"

	LanguageAr_SA Language = "ar_SA"

	LanguageAr_SD Language = "ar_SD"

	LanguageAr_SY Language = "ar_SY"

	LanguageAr_TN Language = "ar_TN"

	LanguageAr_AE Language = "ar_AE"

	LanguageAr_YE Language = "ar_YE"

	LanguageZh_SG Language = "zh_SG"

	LanguageZh_HK Language = "zh_HK"

	LanguageEn_HK Language = "en_HK"

	LanguageEn_IE Language = "en_IE"

	LanguageEn_SG Language = "en_SG"

	LanguageEn_ZA Language = "en_ZA"

	LanguageFr_BE Language = "fr_BE"

	LanguageFr_LU Language = "fr_LU"

	LanguageFr_CH Language = "fr_CH"

	LanguageDe_BE Language = "de_BE"

	LanguageDe_LU Language = "de_LU"

	LanguageIt_CH Language = "it_CH"

	LanguageNl_BE Language = "nl_BE"

	LanguageEs_AR Language = "es_AR"

	LanguageEs_BO Language = "es_BO"

	LanguageEs_CL Language = "es_CL"

	LanguageEs_CO Language = "es_CO"

	LanguageEs_CR Language = "es_CR"

	LanguageEs_DO Language = "es_DO"

	LanguageEs_EC Language = "es_EC"

	LanguageEs_SV Language = "es_SV"

	LanguageEs_GT Language = "es_GT"

	LanguageEs_HN Language = "es_HN"

	LanguageEs_NI Language = "es_NI"

	LanguageEs_PA Language = "es_PA"

	LanguageEs_PY Language = "es_PY"

	LanguageEs_PE Language = "es_PE"

	LanguageEs_PR Language = "es_PR"

	LanguageEs_US Language = "es_US"

	LanguageEs_UY Language = "es_UY"

	LanguageEs_VE Language = "es_VE"

	LanguageCa Language = "ca"

	LanguageAf Language = "af"

	LanguageSw Language = "sw"

	LanguageZu Language = "zu"

	LanguageXh Language = "xh"

	LanguageTe Language = "te"

	LanguageMl Language = "ml"

	LanguageKn Language = "kn"

	LanguageMr Language = "mr"

	LanguageGu Language = "gu"

	LanguagePa Language = "pa"

	LanguageEn_NZ Language = "en_NZ"

	LanguageMi Language = "mi"

	LanguageMy Language = "my"

	LanguageFa Language = "fa"

	LanguageKm Language = "km"

	LanguageAm Language = "am"

	LanguageKk Language = "kk"

	LanguageHt Language = "ht"

	LanguageSm Language = "sm"

	LanguageHaw Language = "haw"

	LanguageZh_MY Language = "zh_MY"

	LanguageRu_LT Language = "ru_LT"

	LanguageRu_PL Language = "ru_PL"

	LanguageRu_AM Language = "ru_AM"

	LanguageRu_KZ Language = "ru_KZ"

	LanguageRu_KG Language = "ru_KG"

	LanguageRu_BY Language = "ru_BY"

	LanguageRu_MD Language = "ru_MD"

	LanguageRu_UA Language = "ru_UA"

	LanguageEn_AE Language = "en_AE"

	LanguageEn_BE Language = "en_BE"

	LanguageEn_CY Language = "en_CY"

	LanguageEn_DE Language = "en_DE"

	LanguageEn_IL Language = "en_IL"

	LanguageEn_NL Language = "en_NL"

	LanguageEn_MT Language = "en_MT"

	LanguageEl_CY Language = "el_CY"

	LanguageFr_MA Language = "fr_MA"

	LanguageKl Language = "kl"

	LanguageJi Language = "ji"

	LanguageHmn Language = "hmn"

	LanguageEo Language = "eo"

	LanguageIw_EO Language = "iw_EO"
)

type MlSlotClassDataType string

const (
	MlSlotClassDataTypeText MlSlotClassDataType = "Text"

	MlSlotClassDataTypeNumber MlSlotClassDataType = "Number"

	MlSlotClassDataTypeBoolean MlSlotClassDataType = "Boolean"

	MlSlotClassDataTypeDate MlSlotClassDataType = "Date"

	MlSlotClassDataTypeDateTime MlSlotClassDataType = "DateTime"

	MlSlotClassDataTypeCurrency MlSlotClassDataType = "Currency"
)

type MlSlotClassExtractionType string

const (
	MlSlotClassExtractionTypePattern MlSlotClassExtractionType = "Pattern"

	MlSlotClassExtractionTypeValue MlSlotClassExtractionType = "Value"
)

type ConversationInvocableTargetType string

const (
	ConversationInvocableTargetTypeApex ConversationInvocableTargetType = "apex"

	ConversationInvocableTargetTypeFlow ConversationInvocableTargetType = "flow"

	ConversationInvocableTargetTypeStandardInvocableAction ConversationInvocableTargetType = "standardInvocableAction"

	ConversationInvocableTargetTypeLogFeedback ConversationInvocableTargetType = "logFeedback"

	ConversationInvocableTargetTypeExternalService ConversationInvocableTargetType = "externalService"

	ConversationInvocableTargetTypeLogGoalAchieved ConversationInvocableTargetType = "logGoalAchieved"

	ConversationInvocableTargetTypeLogDisambiguation ConversationInvocableTargetType = "logDisambiguation"

	ConversationInvocableTargetTypeQuickAction ConversationInvocableTargetType = "quickAction"
)

type BotInvocationMappingType string

const (
	BotInvocationMappingTypeInput BotInvocationMappingType = "Input"

	BotInvocationMappingTypeOutput BotInvocationMappingType = "Output"

	BotInvocationMappingTypeError BotInvocationMappingType = "Error"
)

type ConversationVariableType string

const (
	ConversationVariableTypeConversationVariable ConversationVariableType = "ConversationVariable"

	ConversationVariableTypeContextVariable ConversationVariableType = "ContextVariable"
)

type BotNavigationType string

const (
	BotNavigationTypeCall BotNavigationType = "Call"

	BotNavigationTypeRedirect BotNavigationType = "Redirect"

	BotNavigationTypeTransferToAgent BotNavigationType = "TransferToAgent"
)

type BotStepConditionOperatorType string

const (
	BotStepConditionOperatorTypeEquals BotStepConditionOperatorType = "Equals"

	BotStepConditionOperatorTypeNotEquals BotStepConditionOperatorType = "NotEquals"

	BotStepConditionOperatorTypeIsSet BotStepConditionOperatorType = "IsSet"

	BotStepConditionOperatorTypeIsNotSet BotStepConditionOperatorType = "IsNotSet"

	BotStepConditionOperatorTypeGreaterThan BotStepConditionOperatorType = "GreaterThan"

	BotStepConditionOperatorTypeLessThan BotStepConditionOperatorType = "LessThan"

	BotStepConditionOperatorTypeGreaterThanOrEqualTo BotStepConditionOperatorType = "GreaterThanOrEqualTo"

	BotStepConditionOperatorTypeLessThanOrEqualTo BotStepConditionOperatorType = "LessThanOrEqualTo"
)

type ConversationVariableOperandSourceType string

const (
	ConversationVariableOperandSourceTypeStandardConversationVariable ConversationVariableOperandSourceType = "StandardConversationVariable"

	ConversationVariableOperandSourceTypeConversationVariable ConversationVariableOperandSourceType = "ConversationVariable"

	ConversationVariableOperandSourceTypeContextVariable ConversationVariableOperandSourceType = "ContextVariable"

	ConversationVariableOperandSourceTypeMlSlotClass ConversationVariableOperandSourceType = "MlSlotClass"

	ConversationVariableOperandSourceTypeStandardMlSlotClass ConversationVariableOperandSourceType = "StandardMlSlotClass"

	ConversationVariableOperandSourceTypeValue ConversationVariableOperandSourceType = "Value"

	ConversationVariableOperandSourceTypeBotDefinition ConversationVariableOperandSourceType = "BotDefinition"

	ConversationVariableOperandSourceTypeQueue ConversationVariableOperandSourceType = "Queue"

	ConversationVariableOperandSourceTypeFlowDefinition ConversationVariableOperandSourceType = "FlowDefinition"
)

type ConversationMessageExecutionType string

const (
	ConversationMessageExecutionTypeSync ConversationMessageExecutionType = "Sync"

	ConversationMessageExecutionTypeAsync ConversationMessageExecutionType = "Async"
)

type BotQuickReplyType string

const (
	BotQuickReplyTypeStatic BotQuickReplyType = "Static"

	BotQuickReplyTypeDynamic BotQuickReplyType = "Dynamic"
)

type BotWidgetType string

const (
	BotWidgetTypeMenu BotWidgetType = "Menu"

	BotWidgetTypeButtons BotWidgetType = "Buttons"
)

type BotVariableOperationType string

const (
	BotVariableOperationTypeSet BotVariableOperationType = "Set"

	BotVariableOperationTypeUnset BotVariableOperationType = "Unset"

	BotVariableOperationTypeCollect BotVariableOperationType = "Collect"

	BotVariableOperationTypeSetConversationLanguage BotVariableOperationType = "SetConversationLanguage"

	BotVariableOperationTypeCollectAttachment BotVariableOperationType = "CollectAttachment"
)

type ConversationDefinitionLogicalOperatorType string

const (
	ConversationDefinitionLogicalOperatorTypeAnd ConversationDefinitionLogicalOperatorType = "And"

	ConversationDefinitionLogicalOperatorTypeOr ConversationDefinitionLogicalOperatorType = "Or"
)

type SortOrder string

const (
	SortOrderAsc SortOrder = "Asc"

	SortOrderDesc SortOrder = "Desc"
)

type ConversationMappingType string

const (
	ConversationMappingTypeInput ConversationMappingType = "Input"

	ConversationMappingTypeOutput ConversationMappingType = "Output"
)

type ConversationSystemMessageParamType string

const (
	ConversationSystemMessageParamTypeTransfer ConversationSystemMessageParamType = "Transfer"
)

type ConversationSystemMessageType string

const (
	ConversationSystemMessageTypeTransfer ConversationSystemMessageType = "Transfer"

	ConversationSystemMessageTypeEndChat ConversationSystemMessageType = "EndChat"
)

type BotStepType string

const (
	BotStepTypeNavigation BotStepType = "Navigation"

	BotStepTypeInvocation BotStepType = "Invocation"

	BotStepTypeVariableOperation BotStepType = "VariableOperation"

	BotStepTypeMessage BotStepType = "Message"

	BotStepTypeWait BotStepType = "Wait"

	BotStepTypeGroup BotStepType = "Group"

	BotStepTypeSystemMessage BotStepType = "SystemMessage"

	BotStepTypeRecordLookup BotStepType = "RecordLookup"

	BotStepTypeRichMessage BotStepType = "RichMessage"

	BotStepTypeGoalStep BotStepType = "GoalStep"
)

type ConversationSystemDialogType string

const (
	ConversationSystemDialogTypeTransferFailed ConversationSystemDialogType = "TransferFailed"

	ConversationSystemDialogTypeErrorHandling ConversationSystemDialogType = "ErrorHandling"

	ConversationSystemDialogTypeKnowledgeFallback ConversationSystemDialogType = "KnowledgeFallback"

	ConversationSystemDialogTypeDisambiguation ConversationSystemDialogType = "Disambiguation"

	ConversationSystemDialogTypeDisambiguationFailed ConversationSystemDialogType = "DisambiguationFailed"
)

type ConversationVariableCollectionType string

const (
	ConversationVariableCollectionTypeList ConversationVariableCollectionType = "List"
)

type ConversationDataType string

const (
	ConversationDataTypeText ConversationDataType = "Text"

	ConversationDataTypeNumber ConversationDataType = "Number"

	ConversationDataTypeBoolean ConversationDataType = "Boolean"

	ConversationDataTypeObject ConversationDataType = "Object"

	ConversationDataTypeDate ConversationDataType = "Date"

	ConversationDataTypeDateTime ConversationDataType = "DateTime"

	ConversationDataTypeCurrency ConversationDataType = "Currency"

	ConversationDataTypeId ConversationDataType = "Id"
)

type ConversationDefinitionNlpProviderType string

const (
	ConversationDefinitionNlpProviderTypeEinsteinAi ConversationDefinitionNlpProviderType = "EinsteinAi"

	ConversationDefinitionNlpProviderTypeApex ConversationDefinitionNlpProviderType = "Apex"
)

type MessageType string

const (
	MessageTypeText MessageType = "Text"

	MessageTypeFacebook MessageType = "Facebook"

	MessageTypeLine MessageType = "Line"

	MessageTypeGoogleHome MessageType = "GoogleHome"

	MessageTypeAlexa MessageType = "Alexa"

	MessageTypeOmega MessageType = "Omega"

	MessageTypeAppleBusinessChat MessageType = "AppleBusinessChat"

	MessageTypeWeChat MessageType = "WeChat"

	MessageTypeWebChat MessageType = "WebChat"

	MessageTypeWhatsApp MessageType = "WhatsApp"

	MessageTypePhone MessageType = "Phone"

	MessageTypeEmbeddedMessaging MessageType = "EmbeddedMessaging"

	MessageTypeVoice MessageType = "Voice"

	MessageTypeCustom MessageType = "Custom"
)

type ConvDefBlockVersionStatus string

const (
	ConvDefBlockVersionStatusPublished ConvDefBlockVersionStatus = "Published"
)

type BriefcaseFilterOperator string

const (
	BriefcaseFilterOperatorE BriefcaseFilterOperator = "e"

	BriefcaseFilterOperatorN BriefcaseFilterOperator = "n"

	BriefcaseFilterOperatorL BriefcaseFilterOperator = "l"

	BriefcaseFilterOperatorG BriefcaseFilterOperator = "g"

	BriefcaseFilterOperatorM BriefcaseFilterOperator = "m"

	BriefcaseFilterOperatorH BriefcaseFilterOperator = "h"

	BriefcaseFilterOperatorS BriefcaseFilterOperator = "s"

	BriefcaseFilterOperatorD BriefcaseFilterOperator = "d"
)

type FilterScope string

const (
	FilterScopeEverything FilterScope = "Everything"

	FilterScopeMine FilterScope = "Mine"

	FilterScopeQueue FilterScope = "Queue"

	FilterScopeDelegated FilterScope = "Delegated"

	FilterScopeMyTerritory FilterScope = "MyTerritory"

	FilterScopeMyTeamTerritory FilterScope = "MyTeamTerritory"

	FilterScopeTeam FilterScope = "Team"

	FilterScopeSalesTeam FilterScope = "SalesTeam"

	FilterScopeAssignedToMe FilterScope = "AssignedToMe"

	FilterScopeMineAndMyGroups FilterScope = "MineAndMyGroups"

	FilterScopeScopingRule FilterScope = "ScopingRule"
)

type BriefcaseRuleRelationshipType string

const (
	BriefcaseRuleRelationshipTypeParentToChild BriefcaseRuleRelationshipType = "ParentToChild"

	BriefcaseRuleRelationshipTypeChildToParent BriefcaseRuleRelationshipType = "ChildToParent"
)

type BriefcaseType string

const (
	BriefcaseTypeStandard BriefcaseType = "Standard"

	BriefcaseTypeHighVolume BriefcaseType = "HighVolume"
)

type ForecastCategories string

const (
	ForecastCategoriesOmitted ForecastCategories = "Omitted"

	ForecastCategoriesPipeline ForecastCategories = "Pipeline"

	ForecastCategoriesBestCase ForecastCategories = "BestCase"

	ForecastCategoriesMostLikely ForecastCategories = "MostLikely"

	ForecastCategoriesForecast ForecastCategories = "Forecast"

	ForecastCategoriesClosed ForecastCategories = "Closed"
)

type ExpFeedbackCollType string

const (
	ExpFeedbackCollTypeSURVEY ExpFeedbackCollType = "SURVEY"

	ExpFeedbackCollTypePHONE_CALL ExpFeedbackCollType = "PHONE_CALL"
)

type SurveyQuestionType string

const (
	SurveyQuestionTypeMultiChoice SurveyQuestionType = "MultiChoice"

	SurveyQuestionTypeRadioButton SurveyQuestionType = "RadioButton"

	SurveyQuestionTypeFreeText SurveyQuestionType = "FreeText"

	SurveyQuestionTypeDate SurveyQuestionType = "Date"

	SurveyQuestionTypeRating SurveyQuestionType = "Rating"

	SurveyQuestionTypeCSAT SurveyQuestionType = "CSAT"

	SurveyQuestionTypeSlider SurveyQuestionType = "Slider"

	SurveyQuestionTypePicklist SurveyQuestionType = "Picklist"

	SurveyQuestionTypeNPS SurveyQuestionType = "NPS"

	SurveyQuestionTypeStackRank SurveyQuestionType = "StackRank"

	SurveyQuestionTypeCurrency SurveyQuestionType = "Currency"

	SurveyQuestionTypeNumber SurveyQuestionType = "Number"

	SurveyQuestionTypeDateTime SurveyQuestionType = "DateTime"

	SurveyQuestionTypeToggle SurveyQuestionType = "Toggle"

	SurveyQuestionTypeMultiSelectPicklist SurveyQuestionType = "MultiSelectPicklist"

	SurveyQuestionTypeImage SurveyQuestionType = "Image"

	SurveyQuestionTypeBoolean SurveyQuestionType = "Boolean"

	SurveyQuestionTypeShortText SurveyQuestionType = "ShortText"

	SurveyQuestionTypeAttachment SurveyQuestionType = "Attachment"

	SurveyQuestionTypeMatrix SurveyQuestionType = "Matrix"
)

type CMSSourceConnectionType string

const (
	CMSSourceConnectionTypePublic CMSSourceConnectionType = "Public"

	CMSSourceConnectionTypeAuthenticated CMSSourceConnectionType = "Authenticated"
)

type CMSConnectionStatus string

const (
	CMSConnectionStatusACTIVE CMSConnectionStatus = "ACTIVE"

	CMSConnectionStatusINACTIVE CMSConnectionStatus = "INACTIVE"
)

type CMSConnectionSourceType string

const (
	CMSConnectionSourceTypeAEM CMSConnectionSourceType = "AEM"

	CMSConnectionSourceTypeDrupal CMSConnectionSourceType = "Drupal"

	CMSConnectionSourceTypeWordPress CMSConnectionSourceType = "WordPress"

	CMSConnectionSourceTypeSDL CMSConnectionSourceType = "SDL"

	CMSConnectionSourceTypeSitecore CMSConnectionSourceType = "Sitecore"

	CMSConnectionSourceTypeOther CMSConnectionSourceType = "Other"
)

type FeedItemDisplayFormat string

const (
	FeedItemDisplayFormatDefault FeedItemDisplayFormat = "Default"

	FeedItemDisplayFormatHideBlankLines FeedItemDisplayFormat = "HideBlankLines"
)

type FeedItemType string

const (
	FeedItemTypeTrackedChange FeedItemType = "TrackedChange"

	FeedItemTypeUserStatus FeedItemType = "UserStatus"

	FeedItemTypeTextPost FeedItemType = "TextPost"

	FeedItemTypeAdvancedTextPost FeedItemType = "AdvancedTextPost"

	FeedItemTypeLinkPost FeedItemType = "LinkPost"

	FeedItemTypeContentPost FeedItemType = "ContentPost"

	FeedItemTypePollPost FeedItemType = "PollPost"

	FeedItemTypeRypplePost FeedItemType = "RypplePost"

	FeedItemTypeProfileSkillPost FeedItemType = "ProfileSkillPost"

	FeedItemTypeDashboardComponentSnapshot FeedItemType = "DashboardComponentSnapshot"

	FeedItemTypeApprovalPost FeedItemType = "ApprovalPost"

	FeedItemTypeCaseCommentPost FeedItemType = "CaseCommentPost"

	FeedItemTypeReplyPost FeedItemType = "ReplyPost"

	FeedItemTypeEmailMessageEvent FeedItemType = "EmailMessageEvent"

	FeedItemTypeCallLogPost FeedItemType = "CallLogPost"

	FeedItemTypeChangeStatusPost FeedItemType = "ChangeStatusPost"

	FeedItemTypeAttachArticleEvent FeedItemType = "AttachArticleEvent"

	FeedItemTypeMilestoneEvent FeedItemType = "MilestoneEvent"

	FeedItemTypeActivityEvent FeedItemType = "ActivityEvent"

	FeedItemTypeChatTranscriptPost FeedItemType = "ChatTranscriptPost"

	FeedItemTypeCollaborationGroupCreated FeedItemType = "CollaborationGroupCreated"

	FeedItemTypeCollaborationGroupUnarchived FeedItemType = "CollaborationGroupUnarchived"

	FeedItemTypeSocialPost FeedItemType = "SocialPost"

	FeedItemTypeQuestionPost FeedItemType = "QuestionPost"

	FeedItemTypeFacebookPost FeedItemType = "FacebookPost"

	FeedItemTypeBasicTemplateFeedItem FeedItemType = "BasicTemplateFeedItem"

	FeedItemTypeCreateRecordEvent FeedItemType = "CreateRecordEvent"

	FeedItemTypeCanvasPost FeedItemType = "CanvasPost"

	FeedItemTypeAnnouncementPost FeedItemType = "AnnouncementPost"
)

type EmailToCaseOnFailureActionType string

const (
	EmailToCaseOnFailureActionTypeBounce EmailToCaseOnFailureActionType = "Bounce"

	EmailToCaseOnFailureActionTypeDiscard EmailToCaseOnFailureActionType = "Discard"

	EmailToCaseOnFailureActionTypeRequeue EmailToCaseOnFailureActionType = "Requeue"
)

type EmailToCaseRoutingAddressType string

const (
	EmailToCaseRoutingAddressTypeEmailToCase EmailToCaseRoutingAddressType = "EmailToCase"

	EmailToCaseRoutingAddressTypeOutlook EmailToCaseRoutingAddressType = "Outlook"

	EmailToCaseRoutingAddressTypeGmailOAuth EmailToCaseRoutingAddressType = "GmailOAuth"

	EmailToCaseRoutingAddressTypeE2cEasy EmailToCaseRoutingAddressType = "E2cEasy"
)

type CaseSubjectParticleType string

const (
	CaseSubjectParticleTypeProvidedString CaseSubjectParticleType = "ProvidedString"

	CaseSubjectParticleTypeSource CaseSubjectParticleType = "Source"

	CaseSubjectParticleTypeMessageType CaseSubjectParticleType = "MessageType"

	CaseSubjectParticleTypeSocialHandle CaseSubjectParticleType = "SocialHandle"

	CaseSubjectParticleTypeSocialNetwork CaseSubjectParticleType = "SocialNetwork"

	CaseSubjectParticleTypeSentiment CaseSubjectParticleType = "Sentiment"

	CaseSubjectParticleTypeRealName CaseSubjectParticleType = "RealName"

	CaseSubjectParticleTypeContent CaseSubjectParticleType = "Content"

	CaseSubjectParticleTypePipeSeparator CaseSubjectParticleType = "PipeSeparator"

	CaseSubjectParticleTypeColonSeparator CaseSubjectParticleType = "ColonSeparator"

	CaseSubjectParticleTypeHyphenSeparator CaseSubjectParticleType = "HyphenSeparator"
)

type ActionForNoRecordFound string

const (
	ActionForNoRecordFoundCreateNewRecordAndLink ActionForNoRecordFound = "CreateNewRecordAndLink"

	ActionForNoRecordFoundPromptAgent ActionForNoRecordFound = "PromptAgent"
)

type ActionForSingleRecordFound string

const (
	ActionForSingleRecordFoundAutoLink ActionForSingleRecordFound = "AutoLink"

	ActionForSingleRecordFoundPromptAgent ActionForSingleRecordFound = "PromptAgent"
)

type ChannelType string

const (
	ChannelTypeFacebookMessenger ChannelType = "FacebookMessenger"

	ChannelTypeText ChannelType = "Text"

	ChannelTypeWeChat ChannelType = "WeChat"

	ChannelTypeWhatsApp ChannelType = "WhatsApp"

	ChannelTypePhone ChannelType = "Phone"
)

type ObjectToLink string

const (
	ObjectToLinkContact ObjectToLink = "Contact"
)

type ChatterExtensionType string

const (
	ChatterExtensionTypeLightning ChatterExtensionType = "Lightning"
)

type MappingOperation string

const (
	MappingOperationAutofill MappingOperation = "Autofill"

	MappingOperationOverwrite MappingOperation = "Overwrite"
)

type CleanRuleStatus string

const (
	CleanRuleStatusInactive CleanRuleStatus = "Inactive"

	CleanRuleStatusActive CleanRuleStatus = "Active"
)

type CommunityBaseTemplate string

const (
	CommunityBaseTemplateC CommunityBaseTemplate = "c"
)

type CommunityTemplateBundleInfoType string

const (
	CommunityTemplateBundleInfoTypeHighlight CommunityTemplateBundleInfoType = "Highlight"

	CommunityTemplateBundleInfoTypePreviewImage CommunityTemplateBundleInfoType = "PreviewImage"
)

type CommunityTemplateCategory string

const (
	CommunityTemplateCategoryIT CommunityTemplateCategory = "IT"

	CommunityTemplateCategoryMarketing CommunityTemplateCategory = "Marketing"

	CommunityTemplateCategorySales CommunityTemplateCategory = "Sales"

	CommunityTemplateCategoryService CommunityTemplateCategory = "Service"

	CommunityTemplateCategoryCommerce CommunityTemplateCategory = "Commerce"
)

type CommunityThemeLayoutType string

const (
	CommunityThemeLayoutTypeLogin CommunityThemeLayoutType = "Login"

	CommunityThemeLayoutTypeHome CommunityThemeLayoutType = "Home"

	CommunityThemeLayoutTypeInner CommunityThemeLayoutType = "Inner"

	CommunityThemeLayoutTypeServiceNotAvailable CommunityThemeLayoutType = "ServiceNotAvailable"
)

type AccessMethod string

const (
	AccessMethodGet AccessMethod = "Get"

	AccessMethodPost AccessMethod = "Post"
)

type CanvasLocationOptions string

const (
	CanvasLocationOptionsNone CanvasLocationOptions = "None"

	CanvasLocationOptionsChatter CanvasLocationOptions = "Chatter"

	CanvasLocationOptionsUserProfile CanvasLocationOptions = "UserProfile"

	CanvasLocationOptionsVisualforce CanvasLocationOptions = "Visualforce"

	CanvasLocationOptionsAura CanvasLocationOptions = "Aura"

	CanvasLocationOptionsPublisher CanvasLocationOptions = "Publisher"

	CanvasLocationOptionsChatterFeed CanvasLocationOptions = "ChatterFeed"

	CanvasLocationOptionsServiceDesk CanvasLocationOptions = "ServiceDesk"

	CanvasLocationOptionsOpenCTI CanvasLocationOptions = "OpenCTI"

	CanvasLocationOptionsAppLauncher CanvasLocationOptions = "AppLauncher"

	CanvasLocationOptionsMobileNav CanvasLocationOptions = "MobileNav"

	CanvasLocationOptionsPageLayout CanvasLocationOptions = "PageLayout"
)

type CanvasOptions string

const (
	CanvasOptionsHideShare CanvasOptions = "HideShare"

	CanvasOptionsHideHeader CanvasOptions = "HideHeader"

	CanvasOptionsPersonalEnabled CanvasOptions = "PersonalEnabled"
)

type SamlInitiationMethod string

const (
	SamlInitiationMethodNone SamlInitiationMethod = "None"

	SamlInitiationMethodIdpInitiated SamlInitiationMethod = "IdpInitiated"

	SamlInitiationMethodSpInitiated SamlInitiationMethod = "SpInitiated"
)

type DevicePlatformType string

const (
	DevicePlatformTypeIos DevicePlatformType = "ios"

	DevicePlatformTypeAndroid DevicePlatformType = "android"
)

type DeviceType string

const (
	DeviceTypePhone DeviceType = "phone"

	DeviceTypeTablet DeviceType = "tablet"

	DeviceTypeMinitablet DeviceType = "minitablet"
)

type ConnectedAppOauthAccessScope string

const (
	ConnectedAppOauthAccessScopeBasic ConnectedAppOauthAccessScope = "Basic"

	ConnectedAppOauthAccessScopeApi ConnectedAppOauthAccessScope = "Api"

	ConnectedAppOauthAccessScopeWeb ConnectedAppOauthAccessScope = "Web"

	ConnectedAppOauthAccessScopeFull ConnectedAppOauthAccessScope = "Full"

	ConnectedAppOauthAccessScopeChatter ConnectedAppOauthAccessScope = "Chatter"

	ConnectedAppOauthAccessScopeCustomApplications ConnectedAppOauthAccessScope = "CustomApplications"

	ConnectedAppOauthAccessScopeRefreshToken ConnectedAppOauthAccessScope = "RefreshToken"

	ConnectedAppOauthAccessScopeOpenID ConnectedAppOauthAccessScope = "OpenID"

	ConnectedAppOauthAccessScopeProfile ConnectedAppOauthAccessScope = "Profile"

	ConnectedAppOauthAccessScopeEmail ConnectedAppOauthAccessScope = "Email"

	ConnectedAppOauthAccessScopeAddress ConnectedAppOauthAccessScope = "Address"

	ConnectedAppOauthAccessScopePhone ConnectedAppOauthAccessScope = "Phone"

	ConnectedAppOauthAccessScopeOfflineAccess ConnectedAppOauthAccessScope = "OfflineAccess"

	ConnectedAppOauthAccessScopeCustomPermissions ConnectedAppOauthAccessScope = "CustomPermissions"

	ConnectedAppOauthAccessScopeWave ConnectedAppOauthAccessScope = "Wave"

	ConnectedAppOauthAccessScopeEclair ConnectedAppOauthAccessScope = "Eclair"

	ConnectedAppOauthAccessScopePardot ConnectedAppOauthAccessScope = "Pardot"

	ConnectedAppOauthAccessScopeLightning ConnectedAppOauthAccessScope = "Lightning"

	ConnectedAppOauthAccessScopeContent ConnectedAppOauthAccessScope = "Content"

	ConnectedAppOauthAccessScopeCDPIngest ConnectedAppOauthAccessScope = "CDPIngest"

	ConnectedAppOauthAccessScopeCDPProfile ConnectedAppOauthAccessScope = "CDPProfile"

	ConnectedAppOauthAccessScopeCDPQuery ConnectedAppOauthAccessScope = "CDPQuery"

	ConnectedAppOauthAccessScopeChatbot ConnectedAppOauthAccessScope = "Chatbot"

	ConnectedAppOauthAccessScopeCDPSegment ConnectedAppOauthAccessScope = "CDPSegment"

	ConnectedAppOauthAccessScopeCDPIdentityResolution ConnectedAppOauthAccessScope = "CDPIdentityResolution"

	ConnectedAppOauthAccessScopeCDPCalculatedInsight ConnectedAppOauthAccessScope = "CDPCalculatedInsight"

	ConnectedAppOauthAccessScopeForgotPassword ConnectedAppOauthAccessScope = "ForgotPassword"

	ConnectedAppOauthAccessScopeUserRegistration ConnectedAppOauthAccessScope = "UserRegistration"

	ConnectedAppOauthAccessScopeSFAP ConnectedAppOauthAccessScope = "SFAP"

	ConnectedAppOauthAccessScopeInteraction ConnectedAppOauthAccessScope = "Interaction"

	ConnectedAppOauthAccessScopeCDP ConnectedAppOauthAccessScope = "CDP"

	ConnectedAppOauthAccessScopeEinsteinGPT ConnectedAppOauthAccessScope = "EinsteinGPT"

	ConnectedAppOauthAccessScopePwdlessLogin ConnectedAppOauthAccessScope = "PwdlessLogin"
)

type SamlEncryptionType string

const (
	SamlEncryptionTypeAES_128 SamlEncryptionType = "AES_128"

	SamlEncryptionTypeAES_256 SamlEncryptionType = "AES_256"

	SamlEncryptionTypeTriple_Des SamlEncryptionType = "Triple_Des"
)

type SamlIdpSLOBinding string

const (
	SamlIdpSLOBindingRedirectBinding SamlIdpSLOBinding = "RedirectBinding"

	SamlIdpSLOBindingPostBinding SamlIdpSLOBinding = "PostBinding"
)

type SamlNameIdFormatType string

const (
	SamlNameIdFormatTypeUnspecified SamlNameIdFormatType = "Unspecified"

	SamlNameIdFormatTypeEmailAddress SamlNameIdFormatType = "EmailAddress"

	SamlNameIdFormatTypePersistent SamlNameIdFormatType = "Persistent"

	SamlNameIdFormatTypeTransient SamlNameIdFormatType = "Transient"
)

type SamlSigningAlgoType string

const (
	SamlSigningAlgoTypeSHA1 SamlSigningAlgoType = "SHA1"

	SamlSigningAlgoTypeSHA256 SamlSigningAlgoType = "SHA256"
)

type SamlSubjectType string

const (
	SamlSubjectTypeUsername SamlSubjectType = "Username"

	SamlSubjectTypeFederationId SamlSubjectType = "FederationId"

	SamlSubjectTypeUserId SamlSubjectType = "UserId"

	SamlSubjectTypeSpokeId SamlSubjectType = "SpokeId"

	SamlSubjectTypeCustomAttribute SamlSubjectType = "CustomAttribute"

	SamlSubjectTypePersistentId SamlSubjectType = "PersistentId"
)

type ConversationMessageConstantType string

const (
	ConversationMessageConstantTypeTitle ConversationMessageConstantType = "Title"

	ConversationMessageConstantTypeUrl ConversationMessageConstantType = "Url"

	ConversationMessageConstantTypeImage ConversationMessageConstantType = "Image"

	ConversationMessageConstantTypeOptions ConversationMessageConstantType = "Options"

	ConversationMessageConstantTypeSubTitle ConversationMessageConstantType = "SubTitle"
)

type ConversationMessageConstantValueType string

const (
	ConversationMessageConstantValueTypeText ConversationMessageConstantValueType = "Text"

	ConversationMessageConstantValueTypeUrl ConversationMessageConstantValueType = "Url"

	ConversationMessageConstantValueTypeImageAsset ConversationMessageConstantValueType = "ImageAsset"
)

type ConversationMessageHandlerType string

const (
	ConversationMessageHandlerTypeQuickAction ConversationMessageHandlerType = "QuickAction"

	ConversationMessageHandlerTypeAuthProvider ConversationMessageHandlerType = "AuthProvider"

	ConversationMessageHandlerTypePaymentProvider ConversationMessageHandlerType = "PaymentProvider"
)

type ConvMsgExternalTemplateVersionStatus string

const (
	ConvMsgExternalTemplateVersionStatusPending ConvMsgExternalTemplateVersionStatus = "Pending"

	ConvMsgExternalTemplateVersionStatusRejected ConvMsgExternalTemplateVersionStatus = "Rejected"

	ConvMsgExternalTemplateVersionStatusApproved ConvMsgExternalTemplateVersionStatus = "Approved"

	ConvMsgExternalTemplateVersionStatusPaused ConvMsgExternalTemplateVersionStatus = "Paused"

	ConvMsgExternalTemplateVersionStatusDisabled ConvMsgExternalTemplateVersionStatus = "Disabled"

	ConvMsgExternalTemplateVersionStatusInAppeal ConvMsgExternalTemplateVersionStatus = "InAppeal"
)

type ConversationMessageFormatType string

const (
	ConversationMessageFormatTypeText ConversationMessageFormatType = "Text"

	ConversationMessageFormatTypeRichLink ConversationMessageFormatType = "RichLink"

	ConversationMessageFormatTypeMedia ConversationMessageFormatType = "Media"

	ConversationMessageFormatTypeButtons ConversationMessageFormatType = "Buttons"

	ConversationMessageFormatTypeCarousel ConversationMessageFormatType = "Carousel"

	ConversationMessageFormatTypeQuickReplies ConversationMessageFormatType = "QuickReplies"

	ConversationMessageFormatTypeListPicker ConversationMessageFormatType = "ListPicker"

	ConversationMessageFormatTypeTimePicker ConversationMessageFormatType = "TimePicker"

	ConversationMessageFormatTypeEncryptedOAuthToken ConversationMessageFormatType = "EncryptedOAuthToken"

	ConversationMessageFormatTypeApplication ConversationMessageFormatType = "Application"

	ConversationMessageFormatTypeInputs ConversationMessageFormatType = "Inputs"

	ConversationMessageFormatTypeWebView ConversationMessageFormatType = "WebView"

	ConversationMessageFormatTypePayment ConversationMessageFormatType = "Payment"

	ConversationMessageFormatTypeExternalTemplate ConversationMessageFormatType = "ExternalTemplate"
)

type ConversationMessageCollectionType string

const (
	ConversationMessageCollectionTypeNone ConversationMessageCollectionType = "None"

	ConversationMessageCollectionTypeStaticList ConversationMessageCollectionType = "StaticList"

	ConversationMessageCollectionTypeDynamicList ConversationMessageCollectionType = "DynamicList"
)

type ConversationMessageMergeFieldType string

const (
	ConversationMessageMergeFieldTypeListTemplate ConversationMessageMergeFieldType = "ListTemplate"
)

type ConversationMessageLayoutValueType string

const (
	ConversationMessageLayoutValueTypeLiteral ConversationMessageLayoutValueType = "Literal"

	ConversationMessageLayoutValueTypeMediaAsset ConversationMessageLayoutValueType = "MediaAsset"

	ConversationMessageLayoutValueTypeSourceSobjectFieldValue ConversationMessageLayoutValueType = "SourceSobjectFieldValue"

	ConversationMessageLayoutValueTypeSourceSobjectFormula ConversationMessageLayoutValueType = "SourceSobjectFormula"

	ConversationMessageLayoutValueTypeSourcePrimitiveValue ConversationMessageLayoutValueType = "SourcePrimitiveValue"

	ConversationMessageLayoutValueTypeFormulaTemplate ConversationMessageLayoutValueType = "FormulaTemplate"

	ConversationMessageLayoutValueTypeSourceSobjectField ConversationMessageLayoutValueType = "SourceSobjectField"
)

type ConversationMessageType string

const (
	ConversationMessageTypeStaticContent ConversationMessageType = "StaticContent"

	ConversationMessageTypeChoices ConversationMessageType = "Choices"

	ConversationMessageTypeForm ConversationMessageType = "Form"

	ConversationMessageTypeAuthenticationRequest ConversationMessageType = "AuthenticationRequest"

	ConversationMessageTypePaymentRequest ConversationMessageType = "PaymentRequest"
)

type ConversationMessageValueType string

const (
	ConversationMessageValueTypeText ConversationMessageValueType = "Text"

	ConversationMessageValueTypeBoolean ConversationMessageValueType = "Boolean"

	ConversationMessageValueTypeInteger ConversationMessageValueType = "Integer"

	ConversationMessageValueTypeDouble ConversationMessageValueType = "Double"

	ConversationMessageValueTypeDate ConversationMessageValueType = "Date"

	ConversationMessageValueTypeDateTime ConversationMessageValueType = "DateTime"

	ConversationMessageValueTypeUrl ConversationMessageValueType = "Url"

	ConversationMessageValueTypeRecordId ConversationMessageValueType = "RecordId"

	ConversationMessageValueTypeImageId ConversationMessageValueType = "ImageId"
)

type ConversationMessageOptionsParameterType string

const (
	ConversationMessageOptionsParameterTypeRecordIdOptions ConversationMessageOptionsParameterType = "RecordIdOptions"

	ConversationMessageOptionsParameterTypeTimeSlotOptions ConversationMessageOptionsParameterType = "TimeSlotOptions"

	ConversationMessageOptionsParameterTypeCustomPrimitiveOptions ConversationMessageOptionsParameterType = "CustomPrimitiveOptions"

	ConversationMessageOptionsParameterTypeCustomCompositeOptions ConversationMessageOptionsParameterType = "CustomCompositeOptions"
)

type ConversationMessageParameterType string

const (
	ConversationMessageParameterTypeRecordIds ConversationMessageParameterType = "RecordIds"

	ConversationMessageParameterTypeCustomPrimitive ConversationMessageParameterType = "CustomPrimitive"

	ConversationMessageParameterTypeCustomComposite ConversationMessageParameterType = "CustomComposite"
)

type ConversationMessageDefinitionType string

const (
	ConversationMessageDefinitionTypeRecordView ConversationMessageDefinitionType = "RecordView"

	ConversationMessageDefinitionTypeRecordPicker ConversationMessageDefinitionType = "RecordPicker"

	ConversationMessageDefinitionTypePicklist ConversationMessageDefinitionType = "Picklist"

	ConversationMessageDefinitionTypeTimePicker ConversationMessageDefinitionType = "TimePicker"

	ConversationMessageDefinitionTypeLink ConversationMessageDefinitionType = "Link"

	ConversationMessageDefinitionTypeAuthenticationRequest ConversationMessageDefinitionType = "AuthenticationRequest"

	ConversationMessageDefinitionTypeAction ConversationMessageDefinitionType = "Action"

	ConversationMessageDefinitionTypeAutoResponse ConversationMessageDefinitionType = "AutoResponse"

	ConversationMessageDefinitionTypePaymentRequest ConversationMessageDefinitionType = "PaymentRequest"

	ConversationMessageDefinitionTypeNotification ConversationMessageDefinitionType = "Notification"
)

type ClientAuthMode string

const (
	ClientAuthModeSSO ClientAuthMode = "SSO"

	ClientAuthModeCustom ClientAuthMode = "Custom"

	ClientAuthModeMixed ClientAuthMode = "Mixed"
)

type ServerAuthMode string

const (
	ServerAuthModeOAuth ServerAuthMode = "OAuth"

	ServerAuthModeNone ServerAuthMode = "None"
)

type ConversationVendorType string

const (
	ConversationVendorTypeServiceCloudVoicePartner ConversationVendorType = "ServiceCloudVoicePartner"

	ConversationVendorTypeAmazon_Connect ConversationVendorType = "Amazon_Connect"

	ConversationVendorTypeBringYourOwnChannelPartner ConversationVendorType = "BringYourOwnChannelPartner"
)

type CspTrustedSiteContext string

const (
	CspTrustedSiteContextAll CspTrustedSiteContext = "All"

	CspTrustedSiteContextLEX CspTrustedSiteContext = "LEX"

	CspTrustedSiteContextCommunities CspTrustedSiteContext = "Communities"

	CspTrustedSiteContextFieldServiceMobileExtension CspTrustedSiteContext = "FieldServiceMobileExtension"

	CspTrustedSiteContextVisualForce CspTrustedSiteContext = "VisualForce"
)

type FormFactor string

const (
	FormFactorSmall FormFactor = "Small"

	FormFactorMedium FormFactor = "Medium"

	FormFactorLarge FormFactor = "Large"
)

type ActionOverrideType string

const (
	ActionOverrideTypeDefault ActionOverrideType = "Default"

	ActionOverrideTypeStandard ActionOverrideType = "Standard"

	ActionOverrideTypeScontrol ActionOverrideType = "Scontrol"

	ActionOverrideTypeVisualforce ActionOverrideType = "Visualforce"

	ActionOverrideTypeFlexipage ActionOverrideType = "Flexipage"

	ActionOverrideTypeLightningComponent ActionOverrideType = "LightningComponent"
)

type NavType string

const (
	NavTypeStandard NavType = "Standard"

	NavTypeConsole NavType = "Console"
)

type UiType string

const (
	UiTypeAloha UiType = "Aloha"

	UiTypeLightning UiType = "Lightning"
)

type FeedItemVisibility string

const (
	FeedItemVisibilityAllUsers FeedItemVisibility = "AllUsers"

	FeedItemVisibilityInternalUsers FeedItemVisibility = "InternalUsers"
)

type DeleteConstraint string

const (
	DeleteConstraintCascade DeleteConstraint = "Cascade"

	DeleteConstraintRestrict DeleteConstraint = "Restrict"

	DeleteConstraintSetNull DeleteConstraint = "SetNull"
)

type EncryptionScheme string

const (
	EncryptionSchemeNone EncryptionScheme = "None"

	EncryptionSchemeProbabilisticEncryption EncryptionScheme = "ProbabilisticEncryption"

	EncryptionSchemeCaseSensitiveDeterministicEncryption EncryptionScheme = "CaseSensitiveDeterministicEncryption"

	EncryptionSchemeCaseInsensitiveDeterministicEncryption EncryptionScheme = "CaseInsensitiveDeterministicEncryption"
)

type FieldManageability string

const (
	FieldManageabilityDeveloperControlled FieldManageability = "DeveloperControlled"

	FieldManageabilitySubscriberControlled FieldManageability = "SubscriberControlled"

	FieldManageabilityLocked FieldManageability = "Locked"
)

type TreatBlanksAs string

const (
	TreatBlanksAsBlankAsBlank TreatBlanksAs = "BlankAsBlank"

	TreatBlanksAsBlankAsZero TreatBlanksAs = "BlankAsZero"
)

type EncryptedFieldMaskChar string

const (
	EncryptedFieldMaskCharAsterisk EncryptedFieldMaskChar = "asterisk"

	EncryptedFieldMaskCharX EncryptedFieldMaskChar = "X"
)

type EncryptedFieldMaskType string

const (
	EncryptedFieldMaskTypeAll EncryptedFieldMaskType = "all"

	EncryptedFieldMaskTypeCreditCard EncryptedFieldMaskType = "creditCard"

	EncryptedFieldMaskTypeSsn EncryptedFieldMaskType = "ssn"

	EncryptedFieldMaskTypeLastFour EncryptedFieldMaskType = "lastFour"

	EncryptedFieldMaskTypeSin EncryptedFieldMaskType = "sin"

	EncryptedFieldMaskTypeNino EncryptedFieldMaskType = "nino"
)

type DefinitionCreationType string

const (
	DefinitionCreationTypeStandard DefinitionCreationType = "Standard"

	DefinitionCreationTypeCustom DefinitionCreationType = "Custom"

	DefinitionCreationTypeSystem DefinitionCreationType = "System"

	DefinitionCreationTypeDerived DefinitionCreationType = "Derived"

	DefinitionCreationTypeBridge DefinitionCreationType = "Bridge"

	DefinitionCreationTypeCurated DefinitionCreationType = "Curated"

	DefinitionCreationTypeSegment_Membership DefinitionCreationType = "Segment_Membership"

	DefinitionCreationTypeCalculated_Insight DefinitionCreationType = "Calculated_Insight"

	DefinitionCreationTypeMl_Prediction DefinitionCreationType = "Ml_Prediction"

	DefinitionCreationTypeActivation_Audience DefinitionCreationType = "Activation_Audience"

	DefinitionCreationTypeTransform DefinitionCreationType = "Transform"

	DefinitionCreationTypeADG DefinitionCreationType = "ADG"

	DefinitionCreationTypeExternal DefinitionCreationType = "External"
)

type UsageTag string

const (
	UsageTagNONE UsageTag = "NONE"

	UsageTagKEY_QUALIFIER UsageTag = "KEY_QUALIFIER"
)

type InvalidMergeActionType string

const (
	InvalidMergeActionTypeDrop InvalidMergeActionType = "Drop"

	InvalidMergeActionTypeKeep InvalidMergeActionType = "Keep"

	InvalidMergeActionTypeOverride InvalidMergeActionType = "Override"
)

type MktDataModelFieldUsageTag string

const (
	MktDataModelFieldUsageTagNone MktDataModelFieldUsageTag = "None"

	MktDataModelFieldUsageTagKeyQualifier MktDataModelFieldUsageTag = "KeyQualifier"
)

type SummaryOperations string

const (
	SummaryOperationsCount SummaryOperations = "count"

	SummaryOperationsSum SummaryOperations = "sum"

	SummaryOperationsMin SummaryOperations = "min"

	SummaryOperationsMax SummaryOperations = "max"
)

type FieldType string

const (
	FieldTypeAutoNumber FieldType = "AutoNumber"

	FieldTypeLookup FieldType = "Lookup"

	FieldTypeMasterDetail FieldType = "MasterDetail"

	FieldTypeCheckbox FieldType = "Checkbox"

	FieldTypeCurrency FieldType = "Currency"

	FieldTypeDate FieldType = "Date"

	FieldTypeDateTime FieldType = "DateTime"

	FieldTypeEmail FieldType = "Email"

	FieldTypeNumber FieldType = "Number"

	FieldTypePercent FieldType = "Percent"

	FieldTypePhone FieldType = "Phone"

	FieldTypePicklist FieldType = "Picklist"

	FieldTypeMultiselectPicklist FieldType = "MultiselectPicklist"

	FieldTypeText FieldType = "Text"

	FieldTypeTextArea FieldType = "TextArea"

	FieldTypeLongTextArea FieldType = "LongTextArea"

	FieldTypeHtml FieldType = "Html"

	FieldTypeUrl FieldType = "Url"

	FieldTypeEncryptedText FieldType = "EncryptedText"

	FieldTypeSummary FieldType = "Summary"

	FieldTypeHierarchy FieldType = "Hierarchy"

	FieldTypeFile FieldType = "File"

	FieldTypeMetadataRelationship FieldType = "MetadataRelationship"

	FieldTypeLocation FieldType = "Location"

	FieldTypeExternalLookup FieldType = "ExternalLookup"

	FieldTypeIndirectLookup FieldType = "IndirectLookup"

	FieldTypeCustomDataType FieldType = "CustomDataType"

	FieldTypeTime FieldType = "Time"

	FieldTypeAddress FieldType = "Address"
)

type Channel string

const (
	ChannelAllChannels Channel = "AllChannels"

	ChannelApp Channel = "App"

	ChannelPkb Channel = "Pkb"

	ChannelCsp Channel = "Csp"

	ChannelPrm Channel = "Prm"
)

type Template string

const (
	TemplatePage Template = "Page"

	TemplateTab Template = "Tab"

	TemplateToc Template = "Toc"
)

type CustomSettingsType string

const (
	CustomSettingsTypeList CustomSettingsType = "List"

	CustomSettingsTypeHierarchy CustomSettingsType = "Hierarchy"
)

type DeploymentStatus string

const (
	DeploymentStatusInDevelopment DeploymentStatus = "InDevelopment"

	DeploymentStatusDeployed DeploymentStatus = "Deployed"
)

type PlatformEventType string

const (
	PlatformEventTypeHighVolume PlatformEventType = "HighVolume"

	PlatformEventTypeStandardVolume PlatformEventType = "StandardVolume"

	PlatformEventTypeExternalEvent PlatformEventType = "ExternalEvent"
)

type SharingModel string

const (
	SharingModelPrivate SharingModel = "Private"

	SharingModelRead SharingModel = "Read"

	SharingModelReadSelect SharingModel = "ReadSelect"

	SharingModelReadWrite SharingModel = "ReadWrite"

	SharingModelReadWriteTransfer SharingModel = "ReadWriteTransfer"

	SharingModelFullAccess SharingModel = "FullAccess"

	SharingModelControlledByParent SharingModel = "ControlledByParent"

	SharingModelControlledByLeadOrContact SharingModel = "ControlledByLeadOrContact"

	SharingModelControlledByCampaign SharingModel = "ControlledByCampaign"
)

type Gender string

const (
	GenderNeuter Gender = "Neuter"

	GenderMasculine Gender = "Masculine"

	GenderFeminine Gender = "Feminine"

	GenderAnimateMasculine Gender = "AnimateMasculine"

	GenderClassI Gender = "ClassI"

	GenderClassIII Gender = "ClassIII"

	GenderClassV Gender = "ClassV"

	GenderClassVII Gender = "ClassVII"

	GenderClassIX Gender = "ClassIX"

	GenderClassXI Gender = "ClassXI"

	GenderClassXIV Gender = "ClassXIV"

	GenderClassXV Gender = "ClassXV"

	GenderClassXVI Gender = "ClassXVI"

	GenderClassXVII Gender = "ClassXVII"

	GenderClassXVIII Gender = "ClassXVIII"
)

type PlatformEventPublishBehavior string

const (
	PlatformEventPublishBehaviorPublishAfterCommit PlatformEventPublishBehavior = "PublishAfterCommit"

	PlatformEventPublishBehaviorPublishImmediately PlatformEventPublishBehavior = "PublishImmediately"
)

type StartsWith string

const (
	StartsWithConsonant StartsWith = "Consonant"

	StartsWithVowel StartsWith = "Vowel"

	StartsWithSpecial StartsWith = "Special"
)

type SetupObjectVisibility string

const (
	SetupObjectVisibilityPackageProtected SetupObjectVisibility = "PackageProtected"

	SetupObjectVisibilityProtected SetupObjectVisibility = "Protected"

	SetupObjectVisibilityPublic SetupObjectVisibility = "Public"
)

type WebLinkAvailability string

const (
	WebLinkAvailabilityOnline WebLinkAvailability = "online"

	WebLinkAvailabilityOffline WebLinkAvailability = "offline"
)

type WebLinkDisplayType string

const (
	WebLinkDisplayTypeLink WebLinkDisplayType = "link"

	WebLinkDisplayTypeButton WebLinkDisplayType = "button"

	WebLinkDisplayTypeMassActionButton WebLinkDisplayType = "massActionButton"
)

type Encoding string

const (
	EncodingUTF8 Encoding = "UTF-8"

	EncodingISO88591 Encoding = "ISO-8859-1"

	EncodingShift_JIS Encoding = "Shift_JIS"

	EncodingISO2022JP Encoding = "ISO-2022-JP"

	EncodingEUCJP Encoding = "EUC-JP"

	EncodingKs_c_56011987 Encoding = "ks_c_5601-1987"

	EncodingBig5 Encoding = "Big5"

	EncodingGB2312 Encoding = "GB2312"

	EncodingBig5HKSCS Encoding = "Big5-HKSCS"

	EncodingXSJIS_0213 Encoding = "x-SJIS_0213"
)

type WebLinkType string

const (
	WebLinkTypeUrl WebLinkType = "url"

	WebLinkTypeSControl WebLinkType = "sControl"

	WebLinkTypeJavascript WebLinkType = "javascript"

	WebLinkTypePage WebLinkType = "page"

	WebLinkTypeFlow WebLinkType = "flow"
)

type WebLinkWindowType string

const (
	WebLinkWindowTypeNewWindow WebLinkWindowType = "newWindow"

	WebLinkWindowTypeSidebar WebLinkWindowType = "sidebar"

	WebLinkWindowTypeNoSidebar WebLinkWindowType = "noSidebar"

	WebLinkWindowTypeReplace WebLinkWindowType = "replace"

	WebLinkWindowTypeOnClickJavaScript WebLinkWindowType = "onClickJavaScript"
)

type WebLinkPosition string

const (
	WebLinkPositionFullScreen WebLinkPosition = "fullScreen"

	WebLinkPositionNone WebLinkPosition = "none"

	WebLinkPositionTopLeft WebLinkPosition = "topLeft"
)

type Article string

const (
	ArticleNone Article = "None"

	ArticleIndefinite Article = "Indefinite"

	ArticleDefinite Article = "Definite"
)

type CaseType string

const (
	CaseTypeNominative CaseType = "Nominative"

	CaseTypeAccusative CaseType = "Accusative"

	CaseTypeGenitive CaseType = "Genitive"

	CaseTypeDative CaseType = "Dative"

	CaseTypeInessive CaseType = "Inessive"

	CaseTypeElative CaseType = "Elative"

	CaseTypeIllative CaseType = "Illative"

	CaseTypeAdessive CaseType = "Adessive"

	CaseTypeAblative CaseType = "Ablative"

	CaseTypeAllative CaseType = "Allative"

	CaseTypeEssive CaseType = "Essive"

	CaseTypeTranslative CaseType = "Translative"

	CaseTypePartitive CaseType = "Partitive"

	CaseTypeObjective CaseType = "Objective"

	CaseTypeSubjective CaseType = "Subjective"

	CaseTypeInstrumental CaseType = "Instrumental"

	CaseTypePrepositional CaseType = "Prepositional"

	CaseTypeLocative CaseType = "Locative"

	CaseTypeVocative CaseType = "Vocative"

	CaseTypeSublative CaseType = "Sublative"

	CaseTypeSuperessive CaseType = "Superessive"

	CaseTypeDelative CaseType = "Delative"

	CaseTypeCausalfinal CaseType = "Causalfinal"

	CaseTypeEssiveformal CaseType = "Essiveformal"

	CaseTypeTermanative CaseType = "Termanative"

	CaseTypeDistributive CaseType = "Distributive"

	CaseTypeErgative CaseType = "Ergative"

	CaseTypeAdverbial CaseType = "Adverbial"

	CaseTypeAbessive CaseType = "Abessive"

	CaseTypeComitative CaseType = "Comitative"
)

type Possessive string

const (
	PossessiveNone Possessive = "None"

	PossessiveFirst Possessive = "First"

	PossessiveSecond Possessive = "Second"
)

type SiteClickjackProtectionLevel string

const (
	SiteClickjackProtectionLevelAllowAllFraming SiteClickjackProtectionLevel = "AllowAllFraming"

	SiteClickjackProtectionLevelExternal SiteClickjackProtectionLevel = "External"

	SiteClickjackProtectionLevelSameOriginOnly SiteClickjackProtectionLevel = "SameOriginOnly"

	SiteClickjackProtectionLevelNoFraming SiteClickjackProtectionLevel = "NoFraming"
)

type SiteRedirect string

const (
	SiteRedirectPermanent SiteRedirect = "Permanent"

	SiteRedirectTemporary SiteRedirect = "Temporary"
)

type SiteType string

const (
	SiteTypeSiteforce SiteType = "Siteforce"

	SiteTypeVisualforce SiteType = "Visualforce"
)

type ChartBackgroundDirection string

const (
	ChartBackgroundDirectionTopToBottom ChartBackgroundDirection = "TopToBottom"

	ChartBackgroundDirectionLeftToRight ChartBackgroundDirection = "LeftToRight"

	ChartBackgroundDirectionDiagonal ChartBackgroundDirection = "Diagonal"
)

type ChartTheme string

const (
	ChartThemeLight ChartTheme = "light"

	ChartThemeDark ChartTheme = "dark"
)

type ChartColorPalettes string

const (
	ChartColorPalettesDefault ChartColorPalettes = "Default"

	ChartColorPalettesGray ChartColorPalettes = "gray"

	ChartColorPalettesColorSafe ChartColorPalettes = "colorSafe"

	ChartColorPalettesUnity ChartColorPalettes = "unity"

	ChartColorPalettesJustice ChartColorPalettes = "justice"

	ChartColorPalettesNightfall ChartColorPalettes = "nightfall"

	ChartColorPalettesSunrise ChartColorPalettes = "sunrise"

	ChartColorPalettesBluegrass ChartColorPalettes = "bluegrass"

	ChartColorPalettesTropic ChartColorPalettes = "tropic"

	ChartColorPalettesHeat ChartColorPalettes = "heat"

	ChartColorPalettesDusk ChartColorPalettes = "dusk"

	ChartColorPalettesPond ChartColorPalettes = "pond"

	ChartColorPalettesWatermelon ChartColorPalettes = "watermelon"

	ChartColorPalettesFire ChartColorPalettes = "fire"

	ChartColorPalettesWater ChartColorPalettes = "water"

	ChartColorPalettesEarth ChartColorPalettes = "earth"

	ChartColorPalettesAccessible ChartColorPalettes = "accessible"
)

type DashboardFilterOperation string

const (
	DashboardFilterOperationEquals DashboardFilterOperation = "equals"

	DashboardFilterOperationNotEqual DashboardFilterOperation = "notEqual"

	DashboardFilterOperationLessThan DashboardFilterOperation = "lessThan"

	DashboardFilterOperationGreaterThan DashboardFilterOperation = "greaterThan"

	DashboardFilterOperationLessOrEqual DashboardFilterOperation = "lessOrEqual"

	DashboardFilterOperationGreaterOrEqual DashboardFilterOperation = "greaterOrEqual"

	DashboardFilterOperationContains DashboardFilterOperation = "contains"

	DashboardFilterOperationNotContain DashboardFilterOperation = "notContain"

	DashboardFilterOperationStartsWith DashboardFilterOperation = "startsWith"

	DashboardFilterOperationIncludes DashboardFilterOperation = "includes"

	DashboardFilterOperationExcludes DashboardFilterOperation = "excludes"

	DashboardFilterOperationBetween DashboardFilterOperation = "between"
)

type ChartRangeType string

const (
	ChartRangeTypeAuto ChartRangeType = "Auto"

	ChartRangeTypeManual ChartRangeType = "Manual"
)

type ChartAxis string

const (
	ChartAxisX ChartAxis = "x"

	ChartAxisY ChartAxis = "y"

	ChartAxisY2 ChartAxis = "y2"

	ChartAxisR ChartAxis = "r"
)

type DashboardComponentType string

const (
	DashboardComponentTypeBar DashboardComponentType = "Bar"

	DashboardComponentTypeBarGrouped DashboardComponentType = "BarGrouped"

	DashboardComponentTypeBarStacked DashboardComponentType = "BarStacked"

	DashboardComponentTypeBarStacked100 DashboardComponentType = "BarStacked100"

	DashboardComponentTypeColumn DashboardComponentType = "Column"

	DashboardComponentTypeColumnGrouped DashboardComponentType = "ColumnGrouped"

	DashboardComponentTypeColumnStacked DashboardComponentType = "ColumnStacked"

	DashboardComponentTypeColumnStacked100 DashboardComponentType = "ColumnStacked100"

	DashboardComponentTypeLine DashboardComponentType = "Line"

	DashboardComponentTypeLineGrouped DashboardComponentType = "LineGrouped"

	DashboardComponentTypePie DashboardComponentType = "Pie"

	DashboardComponentTypeTable DashboardComponentType = "Table"

	DashboardComponentTypeMetric DashboardComponentType = "Metric"

	DashboardComponentTypeGauge DashboardComponentType = "Gauge"

	DashboardComponentTypeLineCumulative DashboardComponentType = "LineCumulative"

	DashboardComponentTypeLineGroupedCumulative DashboardComponentType = "LineGroupedCumulative"

	DashboardComponentTypeScontrol DashboardComponentType = "Scontrol"

	DashboardComponentTypeVisualforcePage DashboardComponentType = "VisualforcePage"

	DashboardComponentTypeDonut DashboardComponentType = "Donut"

	DashboardComponentTypeFunnel DashboardComponentType = "Funnel"

	DashboardComponentTypeColumnLine DashboardComponentType = "ColumnLine"

	DashboardComponentTypeColumnLineGrouped DashboardComponentType = "ColumnLineGrouped"

	DashboardComponentTypeColumnLineStacked DashboardComponentType = "ColumnLineStacked"

	DashboardComponentTypeColumnLineStacked100 DashboardComponentType = "ColumnLineStacked100"

	DashboardComponentTypeScatter DashboardComponentType = "Scatter"

	DashboardComponentTypeScatterGrouped DashboardComponentType = "ScatterGrouped"

	DashboardComponentTypeFlexTable DashboardComponentType = "FlexTable"

	DashboardComponentTypeImage DashboardComponentType = "Image"

	DashboardComponentTypeRichText DashboardComponentType = "RichText"
)

type Fit string

type HorizontalAlignment string

type VerticalAlignment string

type DashboardComponentFilter string

const (
	DashboardComponentFilterRowLabelAscending DashboardComponentFilter = "RowLabelAscending"

	DashboardComponentFilterRowLabelDescending DashboardComponentFilter = "RowLabelDescending"

	DashboardComponentFilterRowValueAscending DashboardComponentFilter = "RowValueAscending"

	DashboardComponentFilterRowValueDescending DashboardComponentFilter = "RowValueDescending"
)

type ChartUnits string

const (
	ChartUnitsAuto ChartUnits = "Auto"

	ChartUnitsInteger ChartUnits = "Integer"

	ChartUnitsHundreds ChartUnits = "Hundreds"

	ChartUnitsThousands ChartUnits = "Thousands"

	ChartUnitsMillions ChartUnits = "Millions"

	ChartUnitsBillions ChartUnits = "Billions"

	ChartUnitsTrillions ChartUnits = "Trillions"
)

type DashboardComponentColumnType string

type ChartLegendPosition string

const (
	ChartLegendPositionRight ChartLegendPosition = "Right"

	ChartLegendPositionBottom ChartLegendPosition = "Bottom"

	ChartLegendPositionOnChart ChartLegendPosition = "OnChart"
)

type DashboardType string

const (
	DashboardTypeSpecifiedUser DashboardType = "SpecifiedUser"

	DashboardTypeLoggedInUser DashboardType = "LoggedInUser"

	DashboardTypeMyTeamUser DashboardType = "MyTeamUser"
)

type DashboardComponentSize string

const (
	DashboardComponentSizeNarrow DashboardComponentSize = "Narrow"

	DashboardComponentSizeMedium DashboardComponentSize = "Medium"

	DashboardComponentSizeWide DashboardComponentSize = "Wide"
)

type SchedulingCategory string

const (
	SchedulingCategoryB SchedulingCategory = "B"

	SchedulingCategoryA SchedulingCategory = "A"
)

type SchedulingObjectiveType string

const (
	SchedulingObjectiveTypeAgentPreference SchedulingObjectiveType = "AgentPreference"

	SchedulingObjectiveTypeBalanceShifts SchedulingObjectiveType = "BalanceShifts"

	SchedulingObjectiveTypeBalanceNonStandardShifts SchedulingObjectiveType = "BalanceNonStandardShifts"
)

type ObjectiveParameterKey string

const (
	ObjectiveParameterKeyDaysBack ObjectiveParameterKey = "DaysBack"

	ObjectiveParameterKeyDaysAhead ObjectiveParameterKey = "DaysAhead"
)

type PipelineInspectionMetric string

const (
	PipelineInspectionMetricTotalPipeline PipelineInspectionMetric = "TotalPipeline"

	PipelineInspectionMetricClosedWon PipelineInspectionMetric = "ClosedWon"

	PipelineInspectionMetricCommit PipelineInspectionMetric = "Commit"

	PipelineInspectionMetricMostLikely PipelineInspectionMetric = "MostLikely"

	PipelineInspectionMetricBestCase PipelineInspectionMetric = "BestCase"

	PipelineInspectionMetricOpenPipeline PipelineInspectionMetric = "OpenPipeline"

	PipelineInspectionMetricClosedLost PipelineInspectionMetric = "ClosedLost"
)

type VirtualVisitComprehendServiceType string

const (
	VirtualVisitComprehendServiceTypeComprehendService VirtualVisitComprehendServiceType = "ComprehendService"

	VirtualVisitComprehendServiceTypeComprehendMedicalService VirtualVisitComprehendServiceType = "ComprehendMedicalService"
)

type VirtualVisitUsageType string

const (
	VirtualVisitUsageTypeCHIME VirtualVisitUsageType = "CHIME"

	VirtualVisitUsageTypeINTELLIGENT_FORM_READER VirtualVisitUsageType = "INTELLIGENT_FORM_READER"

	VirtualVisitUsageTypeSENTIMENT_ANALYSIS VirtualVisitUsageType = "SENTIMENT_ANALYSIS"

	VirtualVisitUsageTypeKEY_PHRASE_EXTRACTION VirtualVisitUsageType = "KEY_PHRASE_EXTRACTION"

	VirtualVisitUsageTypeENTITY_DETECTION VirtualVisitUsageType = "ENTITY_DETECTION"
)

type VirtualVisitVisitRegion string

const (
	VirtualVisitVisitRegionUseast1 VirtualVisitVisitRegion = "us-east-1"

	VirtualVisitVisitRegionUseast2 VirtualVisitVisitRegion = "us-east-2"

	VirtualVisitVisitRegionUswest1 VirtualVisitVisitRegion = "us-west-1"

	VirtualVisitVisitRegionUswest2 VirtualVisitVisitRegion = "us-west-2"

	VirtualVisitVisitRegionAfsouth1 VirtualVisitVisitRegion = "af-south-1"

	VirtualVisitVisitRegionApeast1 VirtualVisitVisitRegion = "ap-east-1"

	VirtualVisitVisitRegionApsouth1 VirtualVisitVisitRegion = "ap-south-1"

	VirtualVisitVisitRegionApnortheast1 VirtualVisitVisitRegion = "ap-northeast-1"

	VirtualVisitVisitRegionApnortheast2 VirtualVisitVisitRegion = "ap-northeast-2"

	VirtualVisitVisitRegionApnortheast3 VirtualVisitVisitRegion = "ap-northeast-3"

	VirtualVisitVisitRegionApsoutheast1 VirtualVisitVisitRegion = "ap-southeast-1"

	VirtualVisitVisitRegionApsoutheast2 VirtualVisitVisitRegion = "ap-southeast-2"

	VirtualVisitVisitRegionCacentral1 VirtualVisitVisitRegion = "ca-central-1"

	VirtualVisitVisitRegionEucentral1 VirtualVisitVisitRegion = "eu-central-1"

	VirtualVisitVisitRegionEuwest1 VirtualVisitVisitRegion = "eu-west-1"

	VirtualVisitVisitRegionEuwest2 VirtualVisitVisitRegion = "eu-west-2"

	VirtualVisitVisitRegionEuwest3 VirtualVisitVisitRegion = "eu-west-3"

	VirtualVisitVisitRegionEusouth1 VirtualVisitVisitRegion = "eu-south-1"

	VirtualVisitVisitRegionEunorth1 VirtualVisitVisitRegion = "eu-north-1"

	VirtualVisitVisitRegionMesouth1 VirtualVisitVisitRegion = "me-south-1"

	VirtualVisitVisitRegionSaeast1 VirtualVisitVisitRegion = "sa-east-1"
)

type MobileSecurityMobilePlatform string

const (
	MobileSecurityMobilePlatformAndroid MobileSecurityMobilePlatform = "Android"

	MobileSecurityMobilePlatformIOS MobileSecurityMobilePlatform = "iOS"
)

type MobileSecurityPolicyRuleValueType string

const (
	MobileSecurityPolicyRuleValueTypeBoolean MobileSecurityPolicyRuleValueType = "Boolean"

	MobileSecurityPolicyRuleValueTypeText MobileSecurityPolicyRuleValueType = "Text"

	MobileSecurityPolicyRuleValueTypeTextList MobileSecurityPolicyRuleValueType = "TextList"
)

type MobileSecurityPolicySeverityLevel string

const (
	MobileSecurityPolicySeverityLevelWarn MobileSecurityPolicySeverityLevel = "Warn"

	MobileSecurityPolicySeverityLevelError MobileSecurityPolicySeverityLevel = "Error"

	MobileSecurityPolicySeverityLevelCritical MobileSecurityPolicySeverityLevel = "Critical"

	MobileSecurityPolicySeverityLevelInfo MobileSecurityPolicySeverityLevel = "Info"
)

type MobileSecurityPolicyType string

const (
	MobileSecurityPolicyTypeJailbrokenDevice MobileSecurityPolicyType = "JailbrokenDevice"

	MobileSecurityPolicyTypeMinimumOsVersion MobileSecurityPolicyType = "MinimumOsVersion"

	MobileSecurityPolicyTypeMaximumOsVersion MobileSecurityPolicyType = "MaximumOsVersion"

	MobileSecurityPolicyTypeMinimumSecurityPatchVersion MobileSecurityPolicyType = "MinimumSecurityPatchVersion"

	MobileSecurityPolicyTypeManInMiddle MobileSecurityPolicyType = "ManInMiddle"

	MobileSecurityPolicyTypeMinimumAppVersion MobileSecurityPolicyType = "MinimumAppVersion"

	MobileSecurityPolicyTypeMininumAppVersion MobileSecurityPolicyType = "MininumAppVersion"

	MobileSecurityPolicyTypeMaximumAppVersion MobileSecurityPolicyType = "MaximumAppVersion"

	MobileSecurityPolicyTypeDevicePasscode MobileSecurityPolicyType = "DevicePasscode"

	MobileSecurityPolicyTypeBlockedDeviceList MobileSecurityPolicyType = "BlockedDeviceList"

	MobileSecurityPolicyTypeBlockCustomKeyboard MobileSecurityPolicyType = "BlockCustomKeyboard"

	MobileSecurityPolicyTypeBlockFileBackup MobileSecurityPolicyType = "BlockFileBackup"

	MobileSecurityPolicyTypeBlock3dTouch MobileSecurityPolicyType = "Block3dTouch"

	MobileSecurityPolicyTypeScreenshot MobileSecurityPolicyType = "Screenshot"

	MobileSecurityPolicyTypeLogScreenshot MobileSecurityPolicyType = "LogScreenshot"

	MobileSecurityPolicyTypeLogEmail MobileSecurityPolicyType = "LogEmail"

	MobileSecurityPolicyTypeLogPhonecall MobileSecurityPolicyType = "LogPhonecall"

	MobileSecurityPolicyTypeLogTextmessage MobileSecurityPolicyType = "LogTextmessage"

	MobileSecurityPolicyTypeLogPolicyResult MobileSecurityPolicyType = "LogPolicyResult"

	MobileSecurityPolicyTypeBlockMicrophone MobileSecurityPolicyType = "BlockMicrophone"

	MobileSecurityPolicyTypeBlockCamera MobileSecurityPolicyType = "BlockCamera"

	MobileSecurityPolicyTypeMalwareDetection MobileSecurityPolicyType = "MalwareDetection"

	MobileSecurityPolicyTypeDisableUrlCaching MobileSecurityPolicyType = "DisableUrlCaching"

	MobileSecurityPolicyTypeMaxOffline MobileSecurityPolicyType = "MaxOffline"

	MobileSecurityPolicyTypeLogoutAfterRestart MobileSecurityPolicyType = "LogoutAfterRestart"

	MobileSecurityPolicyTypeLogoutOnBiometricChange MobileSecurityPolicyType = "LogoutOnBiometricChange"

	MobileSecurityPolicyTypeBlockOsSharing MobileSecurityPolicyType = "BlockOsSharing"

	MobileSecurityPolicyTypeBrowserUriScheme MobileSecurityPolicyType = "BrowserUriScheme"

	MobileSecurityPolicyTypeCheckBiometric MobileSecurityPolicyType = "CheckBiometric"

	MobileSecurityPolicyTypeBlockContacts MobileSecurityPolicyType = "BlockContacts"

	MobileSecurityPolicyTypeBlockCalendar MobileSecurityPolicyType = "BlockCalendar"

	MobileSecurityPolicyTypePhonecallUriScheme MobileSecurityPolicyType = "PhonecallUriScheme"

	MobileSecurityPolicyTypeAllowedDeviceList MobileSecurityPolicyType = "AllowedDeviceList"

	MobileSecurityPolicyTypeLogCertPin MobileSecurityPolicyType = "LogCertPin"
)

type LearningAchievementType string

const (
	LearningAchievementTypeLearningCourse LearningAchievementType = "LearningCourse"

	LearningAchievementTypeLearningProgram LearningAchievementType = "LearningProgram"

	LearningAchievementTypeAchievementGroup LearningAchievementType = "AchievementGroup"

	LearningAchievementTypeCustom LearningAchievementType = "Custom"
)

type RecordAlertDataSourceType string

const (
	RecordAlertDataSourceTypeAPEX RecordAlertDataSourceType = "APEX"

	RecordAlertDataSourceTypeBusinessRulesEngine RecordAlertDataSourceType = "BusinessRulesEngine"
)

type ExtensionPointName string

const (
	ExtensionPointNameCommerce_Domain_Cart_Calculate ExtensionPointName = "Commerce_Domain_Cart_Calculate"

	ExtensionPointNameCommerce_Domain_Tax_CartCalculator ExtensionPointName = "Commerce_Domain_Tax_CartCalculator"

	ExtensionPointNameCommerce_Domain_Inventory_CartCalculator ExtensionPointName = "Commerce_Domain_Inventory_CartCalculator"

	ExtensionPointNameCommerce_Domain_Promotions_CartCalculator ExtensionPointName = "Commerce_Domain_Promotions_CartCalculator"

	ExtensionPointNameCommerce_Domain_Pricing_CartCalculator ExtensionPointName = "Commerce_Domain_Pricing_CartCalculator"

	ExtensionPointNameCommerce_Domain_Shipping_CartCalculator ExtensionPointName = "Commerce_Domain_Shipping_CartCalculator"

	ExtensionPointNameCommerce_Domain_Inventory_Service ExtensionPointName = "Commerce_Domain_Inventory_Service"

	ExtensionPointNameCommerce_Domain_Pricing_Service ExtensionPointName = "Commerce_Domain_Pricing_Service"

	ExtensionPointNameCommerce_Domain_Tax_Service ExtensionPointName = "Commerce_Domain_Tax_Service"

	ExtensionPointNameCommerce_Domain_Checkout_CreateOrder ExtensionPointName = "Commerce_Domain_Checkout_CreateOrder"

	ExtensionPointNameProduct_Inventory_CheckInventory ExtensionPointName = "Product_Inventory_CheckInventory"

	ExtensionPointNameCart_Prices_Extension ExtensionPointName = "Cart_Prices_Extension"

	ExtensionPointNameCheckout_CartSummary_ComputePromotions ExtensionPointName = "Checkout_CartSummary_ComputePromotions"

	ExtensionPointNameCheckout_CartSummary_PriceCart ExtensionPointName = "Checkout_CartSummary_PriceCart"

	ExtensionPointNameCheckout_Update_CalcCartSummary ExtensionPointName = "Checkout_Update_CalcCartSummary"

	ExtensionPointNameCheckout_CartSummary_Inventory ExtensionPointName = "Checkout_CartSummary_Inventory"

	ExtensionPointNameCommerce_Domain_OrderManagement_Product ExtensionPointName = "Commerce_Domain_OrderManagement_Product"

	ExtensionPointNameCommerce_Endpoint_Account_Addresses ExtensionPointName = "Commerce_Endpoint_Account_Addresses"

	ExtensionPointNameCommerce_Endpoint_Account_Address ExtensionPointName = "Commerce_Endpoint_Account_Address"

	ExtensionPointNameCommerce_Endpoint_Catalog_Products ExtensionPointName = "Commerce_Endpoint_Catalog_Products"

	ExtensionPointNameCommerce_Endpoint_Catalog_Product ExtensionPointName = "Commerce_Endpoint_Catalog_Product"

	ExtensionPointNameCommerce_Endpoint_Search_Products ExtensionPointName = "Commerce_Endpoint_Search_Products"

	ExtensionPointNameCommerce_Endpoint_Search_ProductSearch ExtensionPointName = "Commerce_Endpoint_Search_ProductSearch"

	ExtensionPointNameCommerce_Endpoint_Search_ProductsByCategory ExtensionPointName = "Commerce_Endpoint_Search_ProductsByCategory"
)

type RegistryProviderType string

const (
	RegistryProviderTypePrice RegistryProviderType = "Price"

	RegistryProviderTypePromotions RegistryProviderType = "Promotions"

	RegistryProviderTypeInventory RegistryProviderType = "Inventory"

	RegistryProviderTypeShipment RegistryProviderType = "Shipment"

	RegistryProviderTypeTax RegistryProviderType = "Tax"

	RegistryProviderTypeExtension RegistryProviderType = "Extension"
)

type MappingBehaviorType string

const (
	MappingBehaviorTypePointInTime MappingBehaviorType = "PointInTime"

	MappingBehaviorTypeCurrentValue MappingBehaviorType = "CurrentValue"
)

type MobileSecurityCertPinType string

const (
	MobileSecurityCertPinTypeAuthServer MobileSecurityCertPinType = "AuthServer"

	MobileSecurityCertPinTypeResource MobileSecurityCertPinType = "Resource"
)

type ActionableListSourceType string

const (
	ActionableListSourceTypeCrmAnalytics ActionableListSourceType = "CrmAnalytics"

	ActionableListSourceTypeDataCloudPlatform ActionableListSourceType = "DataCloudPlatform"
)

type DatasetColumnDataType string

const (
	DatasetColumnDataTypeDimensions DatasetColumnDataType = "Dimensions"

	DatasetColumnDataTypeDates DatasetColumnDataType = "Dates"

	DatasetColumnDataTypeMeasures DatasetColumnDataType = "Measures"
)

type DatatableDataType string

const (
	DatatableDataTypeBoolean DatatableDataType = "Boolean"

	DatatableDataTypeCurrency DatatableDataType = "Currency"

	DatatableDataTypeDate DatatableDataType = "Date"

	DatatableDataTypeDateTime DatatableDataType = "DateTime"

	DatatableDataTypeEmail DatatableDataType = "Email"

	DatatableDataTypeLocation DatatableDataType = "Location"

	DatatableDataTypeNumber DatatableDataType = "Number"

	DatatableDataTypePercent DatatableDataType = "Percent"

	DatatableDataTypePhone DatatableDataType = "Phone"

	DatatableDataTypeText DatatableDataType = "Text"

	DatatableDataTypeUrl DatatableDataType = "Url"
)

type ProviderSearchObjectMapping string

const (
	ProviderSearchObjectMappingHealthcareProvider ProviderSearchObjectMapping = "HealthcareProvider"

	ProviderSearchObjectMappingHealthcarePractitionerFacility ProviderSearchObjectMapping = "HealthcarePractitionerFacility"
)

type SourceSystemFieldRole string

const (
	SourceSystemFieldRoleNotApplicable SourceSystemFieldRole = "NotApplicable"

	SourceSystemFieldRolePatient SourceSystemFieldRole = "Patient"

	SourceSystemFieldRoleServiceProvider SourceSystemFieldRole = "ServiceProvider"

	SourceSystemFieldRoleRemoteMonitoringPatient SourceSystemFieldRole = "RemoteMonitoringPatient"

	SourceSystemFieldRoleRemoteMonitoringDevice SourceSystemFieldRole = "RemoteMonitoringDevice"
)

type CareLimitTypeMetricType string

const (
	CareLimitTypeMetricTypeMoney CareLimitTypeMetricType = "Money"

	CareLimitTypeMetricTypePercentage CareLimitTypeMetricType = "Percentage"

	CareLimitTypeMetricTypeAmount CareLimitTypeMetricType = "Amount"

	CareLimitTypeMetricTypeText CareLimitTypeMetricType = "Text"
)

type AssessmentConfigurationOption string

const (
	AssessmentConfigurationOptionSend AssessmentConfigurationOption = "Send"
)

type AssessmentType string

const (
	AssessmentTypeDiscoveryFramework AssessmentType = "DiscoveryFramework"
)

type SchedulingRuleType string

const (
	SchedulingRuleTypeM SchedulingRuleType = "M"

	SchedulingRuleTypeB SchedulingRuleType = "B"

	SchedulingRuleTypeW SchedulingRuleType = "W"

	SchedulingRuleTypeA SchedulingRuleType = "A"

	SchedulingRuleTypeRestTimeMinutes SchedulingRuleType = "RestTimeMinutes"

	SchedulingRuleTypeQ SchedulingRuleType = "Q"

	SchedulingRuleTypeC SchedulingRuleType = "C"

	SchedulingRuleTypeLimitNonstandardShifts SchedulingRuleType = "LimitNonstandardShifts"
)

type SchedulingParameterKey string

const (
	SchedulingParameterKeyL SchedulingParameterKey = "L"

	SchedulingParameterKeyR SchedulingParameterKey = "R"

	SchedulingParameterKeyW SchedulingParameterKey = "W"

	SchedulingParameterKeyT SchedulingParameterKey = "T"

	SchedulingParameterKeyC SchedulingParameterKey = "C"

	SchedulingParameterKeyConsiderAbsence SchedulingParameterKey = "ConsiderAbsence"

	SchedulingParameterKeyConsiderSTM SchedulingParameterKey = "ConsiderSTM"
)

type CareProviderAfflType string

const (
	CareProviderAfflTypeHospitalAffiliation CareProviderAfflType = "HospitalAffiliation"
)

type AssociationType string

const (
	AssociationTypeBranchManagement AssociationType = "BranchManagement"
)

type AssociationEventType string

const (
	AssociationEventTypeCreate AssociationEventType = "Create"

	AssociationEventTypeUpdate AssociationEventType = "Update"
)

type AssociationStatusType string

const (
	AssociationStatusTypeDraft AssociationStatusType = "Draft"

	AssociationStatusTypeActive AssociationStatusType = "Active"

	AssociationStatusTypeInactive AssociationStatusType = "Inactive"
)

type ApexCodeUnitStatus string

const (
	ApexCodeUnitStatusInactive ApexCodeUnitStatus = "Inactive"

	ApexCodeUnitStatusActive ApexCodeUnitStatus = "Active"

	ApexCodeUnitStatusDeleted ApexCodeUnitStatus = "Deleted"
)

type ContentAssetFormat string

const (
	ContentAssetFormatOriginal ContentAssetFormat = "Original"

	ContentAssetFormatZippedVersions ContentAssetFormat = "ZippedVersions"
)

type ContentAssetAccess string

const (
	ContentAssetAccessVIEWER ContentAssetAccess = "VIEWER"

	ContentAssetAccessCOLLABORATOR ContentAssetAccess = "COLLABORATOR"

	ContentAssetAccessINFERRED ContentAssetAccess = "INFERRED"
)

type DiscoveryAlgorithmType string

const (
	DiscoveryAlgorithmTypeGlm DiscoveryAlgorithmType = "Glm"

	DiscoveryAlgorithmTypeGbm DiscoveryAlgorithmType = "Gbm"

	DiscoveryAlgorithmTypeXgboost DiscoveryAlgorithmType = "Xgboost"

	DiscoveryAlgorithmTypeDrf DiscoveryAlgorithmType = "Drf"

	DiscoveryAlgorithmTypeBest DiscoveryAlgorithmType = "Best"
)

type DiscoveryModelFieldType string

const (
	DiscoveryModelFieldTypeText DiscoveryModelFieldType = "Text"

	DiscoveryModelFieldTypeNumber DiscoveryModelFieldType = "Number"

	DiscoveryModelFieldTypeDate DiscoveryModelFieldType = "Date"
)

type DiscoveryModelRuntimeType string

const (
	DiscoveryModelRuntimeTypeDiscovery DiscoveryModelRuntimeType = "Discovery"

	DiscoveryModelRuntimeTypeH2O DiscoveryModelRuntimeType = "H2O"
)

type DiscoveryPredictionType string

const (
	DiscoveryPredictionTypeUnknown DiscoveryPredictionType = "Unknown"

	DiscoveryPredictionTypeRegression DiscoveryPredictionType = "Regression"

	DiscoveryPredictionTypeClassification DiscoveryPredictionType = "Classification"

	DiscoveryPredictionTypeMulticlassClassification DiscoveryPredictionType = "MulticlassClassification"
)

type DiscoveryModelSourceType string

const (
	DiscoveryModelSourceTypeDiscovery DiscoveryModelSourceType = "Discovery"

	DiscoveryModelSourceTypeUserUpload DiscoveryModelSourceType = "UserUpload"
)

type DiscoveryAIModelStatus string

const (
	DiscoveryAIModelStatusDisabled DiscoveryAIModelStatus = "Disabled"

	DiscoveryAIModelStatusEnabled DiscoveryAIModelStatus = "Enabled"
)

type DiscoveryAIModelTransformationType string

type DiscoveryStoryAutopilotStatus string

type DiscoveryStoryOutcomeGoal string

type DiscoveryStoryOutcomeType string

type DiscoveryStorySourceType string

type EmailTemplateStyle string

const (
	EmailTemplateStyleNone EmailTemplateStyle = "none"

	EmailTemplateStyleFreeForm EmailTemplateStyle = "freeForm"

	EmailTemplateStyleFormalLetter EmailTemplateStyle = "formalLetter"

	EmailTemplateStylePromotionRight EmailTemplateStyle = "promotionRight"

	EmailTemplateStylePromotionLeft EmailTemplateStyle = "promotionLeft"

	EmailTemplateStyleNewsletter EmailTemplateStyle = "newsletter"

	EmailTemplateStyleProducts EmailTemplateStyle = "products"
)

type EmailTemplateType string

const (
	EmailTemplateTypeText EmailTemplateType = "text"

	EmailTemplateTypeHtml EmailTemplateType = "html"

	EmailTemplateTypeCustom EmailTemplateType = "custom"

	EmailTemplateTypeVisualforce EmailTemplateType = "visualforce"
)

type EmailTemplateUiType string

const (
	EmailTemplateUiTypeAloha EmailTemplateUiType = "Aloha"

	EmailTemplateUiTypeSFX EmailTemplateUiType = "SFX"

	EmailTemplateUiTypeSFX_Sample EmailTemplateUiType = "SFX_Sample"
)

type SControlContentSource string

const (
	SControlContentSourceHTML SControlContentSource = "HTML"

	SControlContentSourceURL SControlContentSource = "URL"

	SControlContentSourceSnippet SControlContentSource = "Snippet"
)

type StaticResourceCacheControl string

const (
	StaticResourceCacheControlPrivate StaticResourceCacheControl = "Private"

	StaticResourceCacheControlPublic StaticResourceCacheControl = "Public"
)

type DiscoveryFieldMapSourceType string

const (
	DiscoveryFieldMapSourceTypeSalesforceField DiscoveryFieldMapSourceType = "SalesforceField"

	DiscoveryFieldMapSourceTypeAnalyticsDatasetField DiscoveryFieldMapSourceType = "AnalyticsDatasetField"
)

type DiscoveryFilterOperator string

const (
	DiscoveryFilterOperatorEqual DiscoveryFilterOperator = "Equal"

	DiscoveryFilterOperatorNotEqual DiscoveryFilterOperator = "NotEqual"

	DiscoveryFilterOperatorGreaterThan DiscoveryFilterOperator = "GreaterThan"

	DiscoveryFilterOperatorGreaterThanOrEqual DiscoveryFilterOperator = "GreaterThanOrEqual"

	DiscoveryFilterOperatorLessThan DiscoveryFilterOperator = "LessThan"

	DiscoveryFilterOperatorLessThanOrEqual DiscoveryFilterOperator = "LessThanOrEqual"

	DiscoveryFilterOperatorBetween DiscoveryFilterOperator = "Between"

	DiscoveryFilterOperatorNotBetween DiscoveryFilterOperator = "NotBetween"

	DiscoveryFilterOperatorInSet DiscoveryFilterOperator = "InSet"

	DiscoveryFilterOperatorNotIn DiscoveryFilterOperator = "NotIn"

	DiscoveryFilterOperatorContains DiscoveryFilterOperator = "Contains"

	DiscoveryFilterOperatorStartsWith DiscoveryFilterOperator = "StartsWith"

	DiscoveryFilterOperatorEndsWith DiscoveryFilterOperator = "EndsWith"

	DiscoveryFilterOperatorIsNull DiscoveryFilterOperator = "IsNull"

	DiscoveryFilterOperatorIsNotNull DiscoveryFilterOperator = "IsNotNull"
)

type DiscoveryFilterFieldType string

const (
	DiscoveryFilterFieldTypeText DiscoveryFilterFieldType = "Text"

	DiscoveryFilterFieldTypeNumber DiscoveryFilterFieldType = "Number"

	DiscoveryFilterFieldTypeDate DiscoveryFilterFieldType = "Date"

	DiscoveryFilterFieldTypeDateTime DiscoveryFilterFieldType = "DateTime"

	DiscoveryFilterFieldTypeBoolean DiscoveryFilterFieldType = "Boolean"
)

type DiscoveryFilterValueType string

const (
	DiscoveryFilterValueTypeConstant DiscoveryFilterValueType = "Constant"

	DiscoveryFilterValueTypePlaceHolder DiscoveryFilterValueType = "PlaceHolder"
)

type DiscoveryOutcomeGoal string

const (
	DiscoveryOutcomeGoalMinimize DiscoveryOutcomeGoal = "Minimize"

	DiscoveryOutcomeGoalMaximize DiscoveryOutcomeGoal = "Maximize"

	DiscoveryOutcomeGoalNone DiscoveryOutcomeGoal = "None"
)

type DiscoveryPushbackType string

const (
	DiscoveryPushbackTypeAiRecordInsight DiscoveryPushbackType = "AiRecordInsight"

	DiscoveryPushbackTypeDirect DiscoveryPushbackType = "Direct"
)

type DupeActionType string

const (
	DupeActionTypeAllow DupeActionType = "Allow"

	DupeActionTypeBlock DupeActionType = "Block"
)

type DupeSecurityOptionType string

const (
	DupeSecurityOptionTypeEnforceSharingRules DupeSecurityOptionType = "EnforceSharingRules"

	DupeSecurityOptionTypeBypassSharingRules DupeSecurityOptionType = "BypassSharingRules"
)

type EmailServicesAttOptions string

const (
	EmailServicesAttOptionsNone EmailServicesAttOptions = "None"

	EmailServicesAttOptionsTextOnly EmailServicesAttOptions = "TextOnly"

	EmailServicesAttOptionsBinaryOnly EmailServicesAttOptions = "BinaryOnly"

	EmailServicesAttOptionsAll EmailServicesAttOptions = "All"

	EmailServicesAttOptionsNoContent EmailServicesAttOptions = "NoContent"
)

type EmailServicesErrorAction string

const (
	EmailServicesErrorActionUseSystemDefault EmailServicesErrorAction = "UseSystemDefault"

	EmailServicesErrorActionBounce EmailServicesErrorAction = "Bounce"

	EmailServicesErrorActionDiscard EmailServicesErrorAction = "Discard"

	EmailServicesErrorActionRequeue EmailServicesErrorAction = "Requeue"
)

type EmbeddedServiceAuthMethod string

const (
	EmbeddedServiceAuthMethodCommunitiesLogin EmbeddedServiceAuthMethod = "CommunitiesLogin"

	EmbeddedServiceAuthMethodCustomLogin EmbeddedServiceAuthMethod = "CustomLogin"
)

type EmbeddedServiceDeploymentFeature string

const (
	EmbeddedServiceDeploymentFeatureNone EmbeddedServiceDeploymentFeature = "None"

	EmbeddedServiceDeploymentFeatureEmbeddedMessaging EmbeddedServiceDeploymentFeature = "EmbeddedMessaging"

	EmbeddedServiceDeploymentFeatureLiveAgent EmbeddedServiceDeploymentFeature = "LiveAgent"

	EmbeddedServiceDeploymentFeatureFlows EmbeddedServiceDeploymentFeature = "Flows"

	EmbeddedServiceDeploymentFeatureFieldService EmbeddedServiceDeploymentFeature = "FieldService"
)

type EmbeddedServiceDeploymentType string

const (
	EmbeddedServiceDeploymentTypeWeb EmbeddedServiceDeploymentType = "Web"

	EmbeddedServiceDeploymentTypeMobile EmbeddedServiceDeploymentType = "Mobile"
)

type EmbeddedServiceComponentBundleType string

const (
	EmbeddedServiceComponentBundleTypeAuraDefinitionBundle EmbeddedServiceComponentBundleType = "AuraDefinitionBundle"

	EmbeddedServiceComponentBundleTypeLightningComponentBundle EmbeddedServiceComponentBundleType = "LightningComponentBundle"
)

type EmbeddedServiceCustomComponentType string

const (
	EmbeddedServiceCustomComponentTypeLA_Prechat EmbeddedServiceCustomComponentType = "LA_Prechat"

	EmbeddedServiceCustomComponentTypeLA_Minimized EmbeddedServiceCustomComponentType = "LA_Minimized"

	EmbeddedServiceCustomComponentTypeLA_PlainTextChatMessage EmbeddedServiceCustomComponentType = "LA_PlainTextChatMessage"

	EmbeddedServiceCustomComponentTypeLA_ChatHeader EmbeddedServiceCustomComponentType = "LA_ChatHeader"

	EmbeddedServiceCustomComponentTypeMIAW_Prechat EmbeddedServiceCustomComponentType = "MIAW_Prechat"
)

type EmbeddedServiceFeature string

const (
	EmbeddedServiceFeatureNotInUse EmbeddedServiceFeature = "NotInUse"

	EmbeddedServiceFeatureBase EmbeddedServiceFeature = "Base"

	EmbeddedServiceFeatureLiveAgent EmbeddedServiceFeature = "LiveAgent"

	EmbeddedServiceFeatureFieldService EmbeddedServiceFeature = "FieldService"

	EmbeddedServiceFeatureFlows EmbeddedServiceFeature = "Flows"

	EmbeddedServiceFeatureChannelMenu EmbeddedServiceFeature = "ChannelMenu"

	EmbeddedServiceFeatureEmbeddedMessaging EmbeddedServiceFeature = "EmbeddedMessaging"
)

type EmbeddedServiceLabelKey string

const (
	EmbeddedServiceLabelKeyLA_Container_Base_Close EmbeddedServiceLabelKey = "LA_Container_Base_Close"

	EmbeddedServiceLabelKeyLA_Container_Base_Minimize EmbeddedServiceLabelKey = "LA_Container_Base_Minimize"

	EmbeddedServiceLabelKeyLA_Container_Base_EndOfDialog EmbeddedServiceLabelKey = "LA_Container_Base_EndOfDialog"

	EmbeddedServiceLabelKeyLA_Container_Base_MinimizedContainerAssistiveText EmbeddedServiceLabelKey = "LA_Container_Base_MinimizedContainerAssistiveText"

	EmbeddedServiceLabelKeyLA_Chat_Body_ChatWindowAgent EmbeddedServiceLabelKey = "LA_Chat_Body_ChatWindowAgent"

	EmbeddedServiceLabelKeyLA_Chat_Body_InputTextPlaceholder EmbeddedServiceLabelKey = "LA_Chat_Body_InputTextPlaceholder"

	EmbeddedServiceLabelKeyLA_Chat_Body_AgentTypingUpdate EmbeddedServiceLabelKey = "LA_Chat_Body_AgentTypingUpdate"

	EmbeddedServiceLabelKeyLA_Chat_Body_Send EmbeddedServiceLabelKey = "LA_Chat_Body_Send"

	EmbeddedServiceLabelKeyLA_Chat_Body_ChatStartTime EmbeddedServiceLabelKey = "LA_Chat_Body_ChatStartTime"

	EmbeddedServiceLabelKeyLA_Chat_Body_MessageAreaTransferred EmbeddedServiceLabelKey = "LA_Chat_Body_MessageAreaTransferred"

	EmbeddedServiceLabelKeyLA_Chat_Body_FileTransferCanceled EmbeddedServiceLabelKey = "LA_Chat_Body_FileTransferCanceled"

	EmbeddedServiceLabelKeyLA_Chat_Body_FileTransferSuccess EmbeddedServiceLabelKey = "LA_Chat_Body_FileTransferSuccess"

	EmbeddedServiceLabelKeyLA_Chat_Body_FileTransferFailure EmbeddedServiceLabelKey = "LA_Chat_Body_FileTransferFailure"

	EmbeddedServiceLabelKeyLA_Chat_Body_FileTransferRequested EmbeddedServiceLabelKey = "LA_Chat_Body_FileTransferRequested"

	EmbeddedServiceLabelKeyLA_Chat_Body_TransferFailed EmbeddedServiceLabelKey = "LA_Chat_Body_TransferFailed"

	EmbeddedServiceLabelKeyLA_Chat_ExtendedHeader_ShowExtendedHeader EmbeddedServiceLabelKey = "LA_Chat_ExtendedHeader_ShowExtendedHeader"

	EmbeddedServiceLabelKeyLA_Chat_ExtendedHeader_HideExtendedHeader EmbeddedServiceLabelKey = "LA_Chat_ExtendedHeader_HideExtendedHeader"

	EmbeddedServiceLabelKeyLA_Chat_ExtendedHeader_ChatStateHeaderGreeting EmbeddedServiceLabelKey = "LA_Chat_ExtendedHeader_ChatStateHeaderGreeting"

	EmbeddedServiceLabelKeyLA_Chat_ExtendedHeader_SaveTranscript EmbeddedServiceLabelKey = "LA_Chat_ExtendedHeader_SaveTranscript"

	EmbeddedServiceLabelKeyLA_Chat_ExtendedHeader_EndChatAction EmbeddedServiceLabelKey = "LA_Chat_ExtendedHeader_EndChatAction"

	EmbeddedServiceLabelKeyLA_Chat_FileTransfer_FileUpload EmbeddedServiceLabelKey = "LA_Chat_FileTransfer_FileUpload"

	EmbeddedServiceLabelKeyLA_Chat_FileTransfer_UploadFile EmbeddedServiceLabelKey = "LA_Chat_FileTransfer_UploadFile"

	EmbeddedServiceLabelKeyLA_Chat_FileTransfer_SelectNewFile EmbeddedServiceLabelKey = "LA_Chat_FileTransfer_SelectNewFile"

	EmbeddedServiceLabelKeyLA_Chat_FileTransfer_UsePreviousElementToUploadFile EmbeddedServiceLabelKey = "LA_Chat_FileTransfer_UsePreviousElementToUploadFile"

	EmbeddedServiceLabelKeyLA_Chat_FileTransfer_RemoveFile EmbeddedServiceLabelKey = "LA_Chat_FileTransfer_RemoveFile"

	EmbeddedServiceLabelKeyLA_Chat_Minimized_MessageNotification EmbeddedServiceLabelKey = "LA_Chat_Minimized_MessageNotification"

	EmbeddedServiceLabelKeyLA_Chat_Minimized_SingleMessageNotification EmbeddedServiceLabelKey = "LA_Chat_Minimized_SingleMessageNotification"

	EmbeddedServiceLabelKeyLA_Chat_Minimized_AgentSaysNotification EmbeddedServiceLabelKey = "LA_Chat_Minimized_AgentSaysNotification"

	EmbeddedServiceLabelKeyLA_Chat_Minimized_IdleTimeoutMinimizedWarning EmbeddedServiceLabelKey = "LA_Chat_Minimized_IdleTimeoutMinimizedWarning"

	EmbeddedServiceLabelKeyLA_Chat_Minimized_IdleTimeoutMinimizedEndChat EmbeddedServiceLabelKey = "LA_Chat_Minimized_IdleTimeoutMinimizedEndChat"

	EmbeddedServiceLabelKeyLA_Chat_Ended_ChatEnd EmbeddedServiceLabelKey = "LA_Chat_Ended_ChatEnd"

	EmbeddedServiceLabelKeyLA_Chat_Ended_ChatEndAgent EmbeddedServiceLabelKey = "LA_Chat_Ended_ChatEndAgent"

	EmbeddedServiceLabelKeyLA_Chat_Ended_ChatEndConnection EmbeddedServiceLabelKey = "LA_Chat_Ended_ChatEndConnection"

	EmbeddedServiceLabelKeyLA_Chat_Ended_ChatButtonClose EmbeddedServiceLabelKey = "LA_Chat_Ended_ChatButtonClose"

	EmbeddedServiceLabelKeyLA_Chat_Ended_PostChatButton EmbeddedServiceLabelKey = "LA_Chat_Ended_PostChatButton"

	EmbeddedServiceLabelKeyLA_Chat_Ended_IdleTimeoutEndChatMessage EmbeddedServiceLabelKey = "LA_Chat_Ended_IdleTimeoutEndChatMessage"

	EmbeddedServiceLabelKeyLA_Chat_Reconnecting_ReconnectingChasitorIssue EmbeddedServiceLabelKey = "LA_Chat_Reconnecting_ReconnectingChasitorIssue"

	EmbeddedServiceLabelKeyLA_Chat_Reconnecting_ReconnectingMinimizedMessage EmbeddedServiceLabelKey = "LA_Chat_Reconnecting_ReconnectingMinimizedMessage"

	EmbeddedServiceLabelKeyLA_Chat_Timeout_IdleTimeoutWarningQuestion EmbeddedServiceLabelKey = "LA_Chat_Timeout_IdleTimeoutWarningQuestion"

	EmbeddedServiceLabelKeyLA_Chat_AgentTransfer_BannerInProgressTransfer EmbeddedServiceLabelKey = "LA_Chat_AgentTransfer_BannerInProgressTransfer"

	EmbeddedServiceLabelKeyLA_Chat_AgentTransfer_MinimizedInProgressTransfer EmbeddedServiceLabelKey = "LA_Chat_AgentTransfer_MinimizedInProgressTransfer"

	EmbeddedServiceLabelKeyLA_Chat_AgentTransfer_BannerTransferred EmbeddedServiceLabelKey = "LA_Chat_AgentTransfer_BannerTransferred"

	EmbeddedServiceLabelKeyLA_Chat_AgentTransfer_BannerReconnected EmbeddedServiceLabelKey = "LA_Chat_AgentTransfer_BannerReconnected"

	EmbeddedServiceLabelKeyLA_Chat_CloseConfirmation_ChatStateHeader EmbeddedServiceLabelKey = "LA_Chat_CloseConfirmation_ChatStateHeader"

	EmbeddedServiceLabelKeyLA_Chat_CloseConfirmation_ChatStateBody EmbeddedServiceLabelKey = "LA_Chat_CloseConfirmation_ChatStateBody"

	EmbeddedServiceLabelKeyLA_Chat_CloseConfirmation_ChatStateResume EmbeddedServiceLabelKey = "LA_Chat_CloseConfirmation_ChatStateResume"

	EmbeddedServiceLabelKeyLA_Chat_CloseConfirmation_ChatStateEnd EmbeddedServiceLabelKey = "LA_Chat_CloseConfirmation_ChatStateEnd"

	EmbeddedServiceLabelKeyLA_Chat_UnseenMessage_UnseenMessage EmbeddedServiceLabelKey = "LA_Chat_UnseenMessage_UnseenMessage"

	EmbeddedServiceLabelKeyLA_Chat_UnseenMessage_SingleUnseenMessage EmbeddedServiceLabelKey = "LA_Chat_UnseenMessage_SingleUnseenMessage"

	EmbeddedServiceLabelKeyLA_OfflineSupport_SupportForm_HeaderText EmbeddedServiceLabelKey = "LA_OfflineSupport_SupportForm_HeaderText"

	EmbeddedServiceLabelKeyLA_OfflineSupport_Error_ErrorDialogTitle EmbeddedServiceLabelKey = "LA_OfflineSupport_Error_ErrorDialogTitle"

	EmbeddedServiceLabelKeyLA_OfflineSupport_Error_ErrorDialogBody EmbeddedServiceLabelKey = "LA_OfflineSupport_Error_ErrorDialogBody"

	EmbeddedServiceLabelKeyLA_OfflineSupport_Error_ErrorDialogButton EmbeddedServiceLabelKey = "LA_OfflineSupport_Error_ErrorDialogButton"

	EmbeddedServiceLabelKeyLA_OfflineSupport_SupportForm_SupportFormTitle EmbeddedServiceLabelKey = "LA_OfflineSupport_SupportForm_SupportFormTitle"

	EmbeddedServiceLabelKeyLA_OfflineSupport_SupportForm_SupportFormSubtitle EmbeddedServiceLabelKey = "LA_OfflineSupport_SupportForm_SupportFormSubtitle"

	EmbeddedServiceLabelKeyLA_OfflineSupport_SupportForm_SupportFormButton EmbeddedServiceLabelKey = "LA_OfflineSupport_SupportForm_SupportFormButton"

	EmbeddedServiceLabelKeyLA_OfflineSupport_SupportForm_BannerAltText EmbeddedServiceLabelKey = "LA_OfflineSupport_SupportForm_BannerAltText"

	EmbeddedServiceLabelKeyLA_OfflineSupport_CloseConfirmation_ConfirmationDialogTitle EmbeddedServiceLabelKey = "LA_OfflineSupport_CloseConfirmation_ConfirmationDialogTitle"

	EmbeddedServiceLabelKeyLA_OfflineSupport_CloseConfirmation_ConfirmationDialogBody EmbeddedServiceLabelKey = "LA_OfflineSupport_CloseConfirmation_ConfirmationDialogBody"

	EmbeddedServiceLabelKeyLA_OfflineSupport_CloseConfirmation_ConfirmationDialogButton EmbeddedServiceLabelKey = "LA_OfflineSupport_CloseConfirmation_ConfirmationDialogButton"

	EmbeddedServiceLabelKeyLA_OfflineSupport_Minimized_ConfirmationMinimizedText EmbeddedServiceLabelKey = "LA_OfflineSupport_Minimized_ConfirmationMinimizedText"

	EmbeddedServiceLabelKeyLA_OfflineSupport_Minimized_ErrorMinimizedText EmbeddedServiceLabelKey = "LA_OfflineSupport_Minimized_ErrorMinimizedText"

	EmbeddedServiceLabelKeyLA_PostChat_Base_PostChat EmbeddedServiceLabelKey = "LA_PostChat_Base_PostChat"

	EmbeddedServiceLabelKeyLA_PreChat_Base_LiveChat EmbeddedServiceLabelKey = "LA_PreChat_Base_LiveChat"

	EmbeddedServiceLabelKeyLA_PreChat_Base_Instructions EmbeddedServiceLabelKey = "LA_PreChat_Base_Instructions"

	EmbeddedServiceLabelKeyLA_PreChat_Base_BannerAltText EmbeddedServiceLabelKey = "LA_PreChat_Base_BannerAltText"

	EmbeddedServiceLabelKeyLA_PreChat_Base_PrechatAssistiveText EmbeddedServiceLabelKey = "LA_PreChat_Base_PrechatAssistiveText"

	EmbeddedServiceLabelKeyLA_PreChat_Base_StartChat EmbeddedServiceLabelKey = "LA_PreChat_Base_StartChat"

	EmbeddedServiceLabelKeyLA_PreChat_Base_FieldError EmbeddedServiceLabelKey = "LA_PreChat_Base_FieldError"

	EmbeddedServiceLabelKeyLA_Waiting_WithoutQueuePos_WaitingGreeting EmbeddedServiceLabelKey = "LA_Waiting_WithoutQueuePos_WaitingGreeting"

	EmbeddedServiceLabelKeyLA_Waiting_WithoutQueuePos_WaitingDefaultName EmbeddedServiceLabelKey = "LA_Waiting_WithoutQueuePos_WaitingDefaultName"

	EmbeddedServiceLabelKeyLA_Waiting_WithoutQueuePos_WaitingMessage EmbeddedServiceLabelKey = "LA_Waiting_WithoutQueuePos_WaitingMessage"

	EmbeddedServiceLabelKeyLA_Waiting_WithoutQueuePos_WaitingCancelChatRequest EmbeddedServiceLabelKey = "LA_Waiting_WithoutQueuePos_WaitingCancelChatRequest"

	EmbeddedServiceLabelKeyLA_Waiting_WithQueuePos_WaitingQueuePosMessageFirstLine EmbeddedServiceLabelKey = "LA_Waiting_WithQueuePos_WaitingQueuePosMessageFirstLine"

	EmbeddedServiceLabelKeyLA_Waiting_WithQueuePos_WaitingQueuePosMessageSecondLine EmbeddedServiceLabelKey = "LA_Waiting_WithQueuePos_WaitingQueuePosMessageSecondLine"

	EmbeddedServiceLabelKeyLA_Waiting_WithQueuePos_WaitingQueuePosZeroMessage EmbeddedServiceLabelKey = "LA_Waiting_WithQueuePos_WaitingQueuePosZeroMessage"

	EmbeddedServiceLabelKeyLA_Waiting_WithQueuePos_WaitingQueuePosConnectingMessage EmbeddedServiceLabelKey = "LA_Waiting_WithQueuePos_WaitingQueuePosConnectingMessage"

	EmbeddedServiceLabelKeyLA_Waiting_WithQueuePos_WaitingQueuePosMaxNumber EmbeddedServiceLabelKey = "LA_Waiting_WithQueuePos_WaitingQueuePosMaxNumber"

	EmbeddedServiceLabelKeyLA_Waiting_WithQueuePos_WaitingQueuePosMaxMessageFirstLine EmbeddedServiceLabelKey = "LA_Waiting_WithQueuePos_WaitingQueuePosMaxMessageFirstLine"

	EmbeddedServiceLabelKeyLA_Waiting_WithQueuePos_WaitingQueuePosMaxMessageSecondLine EmbeddedServiceLabelKey = "LA_Waiting_WithQueuePos_WaitingQueuePosMaxMessageSecondLine"

	EmbeddedServiceLabelKeyLA_Waiting_Minimized_MinimizedWaitingMessage EmbeddedServiceLabelKey = "LA_Waiting_Minimized_MinimizedWaitingMessage"

	EmbeddedServiceLabelKeyLA_Waiting_Minimized_MinimizedQueuePosMessage EmbeddedServiceLabelKey = "LA_Waiting_Minimized_MinimizedQueuePosMessage"

	EmbeddedServiceLabelKeyLA_Waiting_Minimized_MinimizedQueuePosZeroMessage EmbeddedServiceLabelKey = "LA_Waiting_Minimized_MinimizedQueuePosZeroMessage"

	EmbeddedServiceLabelKeyLA_Waiting_Minimized_MinimizedQueuePosAssistiveMessage EmbeddedServiceLabelKey = "LA_Waiting_Minimized_MinimizedQueuePosAssistiveMessage"

	EmbeddedServiceLabelKeyLA_Waiting_Minimized_MinimizedQueuePosZeroAssistiveMessage EmbeddedServiceLabelKey = "LA_Waiting_Minimized_MinimizedQueuePosZeroAssistiveMessage"

	EmbeddedServiceLabelKeyLA_Waiting_Error_ErrorNoAgentTitle EmbeddedServiceLabelKey = "LA_Waiting_Error_ErrorNoAgentTitle"

	EmbeddedServiceLabelKeyLA_Waiting_Error_ErrorNoAgentHeader EmbeddedServiceLabelKey = "LA_Waiting_Error_ErrorNoAgentHeader"

	EmbeddedServiceLabelKeyLA_Waiting_Error_ErrorNoAgentBodyApology EmbeddedServiceLabelKey = "LA_Waiting_Error_ErrorNoAgentBodyApology"

	EmbeddedServiceLabelKeyLA_Waiting_Error_ErrorBlockedTitleAndHeader EmbeddedServiceLabelKey = "LA_Waiting_Error_ErrorBlockedTitleAndHeader"

	EmbeddedServiceLabelKeyLA_Waiting_Error_ErrorBlockedBody EmbeddedServiceLabelKey = "LA_Waiting_Error_ErrorBlockedBody"

	EmbeddedServiceLabelKeyLA_Waiting_Error_ErrorBlockedCloseButton EmbeddedServiceLabelKey = "LA_Waiting_Error_ErrorBlockedCloseButton"

	EmbeddedServiceLabelKeyLA_Waiting_Error_ErrorNoConnectionTitle EmbeddedServiceLabelKey = "LA_Waiting_Error_ErrorNoConnectionTitle"

	EmbeddedServiceLabelKeyLA_Waiting_Error_ErrorNoConnectionHeader EmbeddedServiceLabelKey = "LA_Waiting_Error_ErrorNoConnectionHeader"

	EmbeddedServiceLabelKeyLA_Waiting_Error_ErrorNoConnectionBodyApology EmbeddedServiceLabelKey = "LA_Waiting_Error_ErrorNoConnectionBodyApology"

	EmbeddedServiceLabelKeyLA_Waiting_Error_ErrorTryAgainButton EmbeddedServiceLabelKey = "LA_Waiting_Error_ErrorTryAgainButton"

	EmbeddedServiceLabelKeyLA_Waiting_Error_ErrorExitChatButton EmbeddedServiceLabelKey = "LA_Waiting_Error_ErrorExitChatButton"

	EmbeddedServiceLabelKeyLA_Waiting_CloseConfirmation_WaitingStateHeader EmbeddedServiceLabelKey = "LA_Waiting_CloseConfirmation_WaitingStateHeader"

	EmbeddedServiceLabelKeyLA_Waiting_CloseConfirmation_WaitingStateBodyApology EmbeddedServiceLabelKey = "LA_Waiting_CloseConfirmation_WaitingStateBodyApology"

	EmbeddedServiceLabelKeyLA_Waiting_CloseConfirmation_WaitingStateLeave EmbeddedServiceLabelKey = "LA_Waiting_CloseConfirmation_WaitingStateLeave"

	EmbeddedServiceLabelKeyLA_Waiting_CloseConfirmation_WaitingStateContinue EmbeddedServiceLabelKey = "LA_Waiting_CloseConfirmation_WaitingStateContinue"

	EmbeddedServiceLabelKeyLA_Chat_Timeout_IdleTimeoutWarningRequest EmbeddedServiceLabelKey = "LA_Chat_Timeout_IdleTimeoutWarningRequest"

	EmbeddedServiceLabelKeyLA_Waiting_Error_ErrorNoAgentBodyRequest EmbeddedServiceLabelKey = "LA_Waiting_Error_ErrorNoAgentBodyRequest"

	EmbeddedServiceLabelKeyLA_Waiting_Error_ErrorNoConnectionBodyRequest EmbeddedServiceLabelKey = "LA_Waiting_Error_ErrorNoConnectionBodyRequest"

	EmbeddedServiceLabelKeyLA_Waiting_CloseConfirmation_WaitingStateBodyWarning EmbeddedServiceLabelKey = "LA_Waiting_CloseConfirmation_WaitingStateBodyWarning"

	EmbeddedServiceLabelKeyLA_General_CloseSessionWarningTitle EmbeddedServiceLabelKey = "LA_General_CloseSessionWarningTitle"

	EmbeddedServiceLabelKeyLA_General_CloseSessionWarningBody EmbeddedServiceLabelKey = "LA_General_CloseSessionWarningBody"

	EmbeddedServiceLabelKeyLA_General_CloseSessionWarningButton EmbeddedServiceLabelKey = "LA_General_CloseSessionWarningButton"

	EmbeddedServiceLabelKeyLA_Chat_Body_ChooseOption EmbeddedServiceLabelKey = "LA_Chat_Body_ChooseOption"

	EmbeddedServiceLabelKeyLA_Waiting_Base_BannerAssistiveText EmbeddedServiceLabelKey = "LA_Waiting_Base_BannerAssistiveText"

	EmbeddedServiceLabelKeyLA_Chat_Group_Chat_HeaderTitle EmbeddedServiceLabelKey = "LA_Chat_Group_Chat_HeaderTitle"

	EmbeddedServiceLabelKeyLA_Chat_Group_Chat_ExtendedHeaderGreeting EmbeddedServiceLabelKey = "LA_Chat_Group_Chat_ExtendedHeaderGreeting"

	EmbeddedServiceLabelKeyLA_Chat_Group_Chat_AgentJoinedChat EmbeddedServiceLabelKey = "LA_Chat_Group_Chat_AgentJoinedChat"

	EmbeddedServiceLabelKeyLA_Chat_Group_Chat_AgentLeftChat EmbeddedServiceLabelKey = "LA_Chat_Group_Chat_AgentLeftChat"

	EmbeddedServiceLabelKeyLA_Chat_Group_Chat_MinimizedStateMessage EmbeddedServiceLabelKey = "LA_Chat_Group_Chat_MinimizedStateMessage"

	EmbeddedServiceLabelKeyLA_Chat_WithQueuePos_QueuePosTransferringMessage EmbeddedServiceLabelKey = "LA_Chat_WithQueuePos_QueuePosTransferringMessage"

	EmbeddedServiceLabelKeyLA_Chat_Ended_ChatEndChatbot EmbeddedServiceLabelKey = "LA_Chat_Ended_ChatEndChatbot"

	EmbeddedServiceLabelKeyLA_Chat_Body_InputTextAssistiveText EmbeddedServiceLabelKey = "LA_Chat_Body_InputTextAssistiveText"

	EmbeddedServiceLabelKeyLA_Waiting_Header_Text EmbeddedServiceLabelKey = "LA_Waiting_Header_Text"

	EmbeddedServiceLabelKeyLA_PreChat_Terms_And_Conditions EmbeddedServiceLabelKey = "LA_PreChat_Terms_And_Conditions"

	EmbeddedServiceLabelKeyLA_PreChat_Base_Terms_And_Conditions_Acknowledgement EmbeddedServiceLabelKey = "LA_PreChat_Base_Terms_And_Conditions_Acknowledgement"

	EmbeddedServiceLabelKeyFS_Container_Base_Back EmbeddedServiceLabelKey = "FS_Container_Base_Back"

	EmbeddedServiceLabelKeyFS_Container_AuthenticationFailure_Title EmbeddedServiceLabelKey = "FS_Container_AuthenticationFailure_Title"

	EmbeddedServiceLabelKeyFS_Container_AuthenticationFailure_Body EmbeddedServiceLabelKey = "FS_Container_AuthenticationFailure_Body"

	EmbeddedServiceLabelKeyFS_Container_AuthenticationFailure_Button EmbeddedServiceLabelKey = "FS_Container_AuthenticationFailure_Button"

	EmbeddedServiceLabelKeyFS_AppointmentDetail_Error_AccessDenied EmbeddedServiceLabelKey = "FS_AppointmentDetail_Error_AccessDenied"

	EmbeddedServiceLabelKeyFS_AppointmentDetail_Error_NoAppointmentFound EmbeddedServiceLabelKey = "FS_AppointmentDetail_Error_NoAppointmentFound"

	EmbeddedServiceLabelKeyFS_AppointmentDetail_Error_ButtonOK EmbeddedServiceLabelKey = "FS_AppointmentDetail_Error_ButtonOK"

	EmbeddedServiceLabelKeyFS_AppointmentList_Base_ActiveAppointmentTab EmbeddedServiceLabelKey = "FS_AppointmentList_Base_ActiveAppointmentTab"

	EmbeddedServiceLabelKeyFS_AppointmentList_Base_ClosedAppointmentTab EmbeddedServiceLabelKey = "FS_AppointmentList_Base_ClosedAppointmentTab"

	EmbeddedServiceLabelKeyFS_AppointmentList_Base_Header EmbeddedServiceLabelKey = "FS_AppointmentList_Base_Header"

	EmbeddedServiceLabelKeyFS_AppointmentList_Base_NewAppointmentButtonLabel EmbeddedServiceLabelKey = "FS_AppointmentList_Base_NewAppointmentButtonLabel"

	EmbeddedServiceLabelKeyFS_AppointmentList_Error_GenericErrorStatement EmbeddedServiceLabelKey = "FS_AppointmentList_Error_GenericErrorStatement"

	EmbeddedServiceLabelKeyFS_AppointmentList_Empty_NoAppointmentsTitleUpcomingTab EmbeddedServiceLabelKey = "FS_AppointmentList_Empty_NoAppointmentsTitleUpcomingTab"

	EmbeddedServiceLabelKeyFS_AppointmentList_Empty_NoAppointmentsDescriptionUpcomingTab EmbeddedServiceLabelKey = "FS_AppointmentList_Empty_NoAppointmentsDescriptionUpcomingTab"

	EmbeddedServiceLabelKeyFS_AppointmentList_Empty_NoAppointmentsTitlePastTab EmbeddedServiceLabelKey = "FS_AppointmentList_Empty_NoAppointmentsTitlePastTab"

	EmbeddedServiceLabelKeyFS_AppointmentList_Empty_NoAppointmentsDescriptionPastTab EmbeddedServiceLabelKey = "FS_AppointmentList_Empty_NoAppointmentsDescriptionPastTab"

	EmbeddedServiceLabelKeyFS_Confirmation_Base_Scheduled EmbeddedServiceLabelKey = "FS_Confirmation_Base_Scheduled"

	EmbeddedServiceLabelKeyFS_Confirmation_Base_Assigned EmbeddedServiceLabelKey = "FS_Confirmation_Base_Assigned"

	EmbeddedServiceLabelKeyFS_Confirmation_Base_Arriving EmbeddedServiceLabelKey = "FS_Confirmation_Base_Arriving"

	EmbeddedServiceLabelKeyFS_Confirmation_Base_InProgress EmbeddedServiceLabelKey = "FS_Confirmation_Base_InProgress"

	EmbeddedServiceLabelKeyFS_Confirmation_Base_Dispatched EmbeddedServiceLabelKey = "FS_Confirmation_Base_Dispatched"

	EmbeddedServiceLabelKeyFS_Confirmation_Base_Completed EmbeddedServiceLabelKey = "FS_Confirmation_Base_Completed"

	EmbeddedServiceLabelKeyFS_Confirmation_Base_HeaderText EmbeddedServiceLabelKey = "FS_Confirmation_Base_HeaderText"

	EmbeddedServiceLabelKeyFS_Confirmation_Base_AddCalendar EmbeddedServiceLabelKey = "FS_Confirmation_Base_AddCalendar"

	EmbeddedServiceLabelKeyFS_Confirmation_Base_ViewAppointment EmbeddedServiceLabelKey = "FS_Confirmation_Base_ViewAppointment"

	EmbeddedServiceLabelKeyFS_Flows_Error_Title EmbeddedServiceLabelKey = "FS_Flows_Error_Title"

	EmbeddedServiceLabelKeyFS_Flows_Error_Body EmbeddedServiceLabelKey = "FS_Flows_Error_Body"

	EmbeddedServiceLabelKeyFS_Flows_Error_ConfirmButton EmbeddedServiceLabelKey = "FS_Flows_Error_ConfirmButton"

	EmbeddedServiceLabelKeyFS_Flows_Error_CancelOrModifyError EmbeddedServiceLabelKey = "FS_Flows_Error_CancelOrModifyError"

	EmbeddedServiceLabelKeyFS_Flows_NewAppointmentCloseConfirmation_Title EmbeddedServiceLabelKey = "FS_Flows_NewAppointmentCloseConfirmation_Title"

	EmbeddedServiceLabelKeyFS_Flows_NewAppointmentCloseConfirmation_Body EmbeddedServiceLabelKey = "FS_Flows_NewAppointmentCloseConfirmation_Body"

	EmbeddedServiceLabelKeyFS_Flows_NewAppointmentCloseConfirmation_ButtonClose EmbeddedServiceLabelKey = "FS_Flows_NewAppointmentCloseConfirmation_ButtonClose"

	EmbeddedServiceLabelKeyFS_Flows_NewAppointmentCloseConfirmation_ButtonCancel EmbeddedServiceLabelKey = "FS_Flows_NewAppointmentCloseConfirmation_ButtonCancel"

	EmbeddedServiceLabelKeyFS_Flows_CancelAppointmentCloseConfirmation_Title EmbeddedServiceLabelKey = "FS_Flows_CancelAppointmentCloseConfirmation_Title"

	EmbeddedServiceLabelKeyFS_Flows_CancelAppointmentCloseConfirmation_Body EmbeddedServiceLabelKey = "FS_Flows_CancelAppointmentCloseConfirmation_Body"

	EmbeddedServiceLabelKeyFS_Flows_CancelAppointmentCloseConfirmation_ButtonClose EmbeddedServiceLabelKey = "FS_Flows_CancelAppointmentCloseConfirmation_ButtonClose"

	EmbeddedServiceLabelKeyFS_Flows_CancelAppointmentCloseConfirmation_ButtonCancel EmbeddedServiceLabelKey = "FS_Flows_CancelAppointmentCloseConfirmation_ButtonCancel"

	EmbeddedServiceLabelKeyFS_Flows_CancelAppointmentCloseConfirmation_Footer EmbeddedServiceLabelKey = "FS_Flows_CancelAppointmentCloseConfirmation_Footer"

	EmbeddedServiceLabelKeyFS_Flows_ModifyAppointmentCloseConfirmation_Title EmbeddedServiceLabelKey = "FS_Flows_ModifyAppointmentCloseConfirmation_Title"

	EmbeddedServiceLabelKeyFS_Flows_ModifyAppointmentCloseConfirmation_Body EmbeddedServiceLabelKey = "FS_Flows_ModifyAppointmentCloseConfirmation_Body"

	EmbeddedServiceLabelKeyFS_Flows_ModifyAppointmentCloseConfirmation_ButtonClose EmbeddedServiceLabelKey = "FS_Flows_ModifyAppointmentCloseConfirmation_ButtonClose"

	EmbeddedServiceLabelKeyFS_Flows_ModifyAppointmentCloseConfirmation_ButtonCancel EmbeddedServiceLabelKey = "FS_Flows_ModifyAppointmentCloseConfirmation_ButtonCancel"

	EmbeddedServiceLabelKeyFS_Flows_ModifyAppointmentCloseConfirmation_Footer EmbeddedServiceLabelKey = "FS_Flows_ModifyAppointmentCloseConfirmation_Footer"

	EmbeddedServiceLabelKeyFS_Scheduling_Base_HeaderText EmbeddedServiceLabelKey = "FS_Scheduling_Base_HeaderText"

	EmbeddedServiceLabelKeyFS_Scheduling_Base_RecommendedTab EmbeddedServiceLabelKey = "FS_Scheduling_Base_RecommendedTab"

	EmbeddedServiceLabelKeyFS_Scheduling_Base_ByDateTab EmbeddedServiceLabelKey = "FS_Scheduling_Base_ByDateTab"

	EmbeddedServiceLabelKeyFS_Scheduling_Base_PreviousWeekAssistiveText EmbeddedServiceLabelKey = "FS_Scheduling_Base_PreviousWeekAssistiveText"

	EmbeddedServiceLabelKeyFS_Scheduling_Base_NextWeekAssistiveText EmbeddedServiceLabelKey = "FS_Scheduling_Base_NextWeekAssistiveText"

	EmbeddedServiceLabelKeyFS_Scheduling_Base_DatePickerAssistiveText EmbeddedServiceLabelKey = "FS_Scheduling_Base_DatePickerAssistiveText"

	EmbeddedServiceLabelKeyFS_Scheduling_Error_UnexpectedError EmbeddedServiceLabelKey = "FS_Scheduling_Error_UnexpectedError"

	EmbeddedServiceLabelKeyFS_Scheduling_Error_NoAvailableTimeslotsError EmbeddedServiceLabelKey = "FS_Scheduling_Error_NoAvailableTimeslotsError"

	EmbeddedServiceLabelKeyFS_Scheduling_Error_NoAvailableTimeslotsByDateError EmbeddedServiceLabelKey = "FS_Scheduling_Error_NoAvailableTimeslotsByDateError"

	EmbeddedServiceLabelKeyFS_Welcome_Base_GreetingTitle EmbeddedServiceLabelKey = "FS_Welcome_Base_GreetingTitle"

	EmbeddedServiceLabelKeyFS_Welcome_Base_NewAppointmentButton EmbeddedServiceLabelKey = "FS_Welcome_Base_NewAppointmentButton"

	EmbeddedServiceLabelKeyFS_Welcome_Base_ExistingAppointmentsButton EmbeddedServiceLabelKey = "FS_Welcome_Base_ExistingAppointmentsButton"

	EmbeddedServiceLabelKeyFS_Confirmation_Base_DoneButton EmbeddedServiceLabelKey = "FS_Confirmation_Base_DoneButton"

	EmbeddedServiceLabelKeyFS_AppointmentList_Error_GenericErrorRequest EmbeddedServiceLabelKey = "FS_AppointmentList_Error_GenericErrorRequest"

	EmbeddedServiceLabelKeyFS_AppointmentHome_Base_CancelAppointmentButton EmbeddedServiceLabelKey = "FS_AppointmentHome_Base_CancelAppointmentButton"

	EmbeddedServiceLabelKeyFS_AppointmentHome_Base_ModifyAppointmentButton EmbeddedServiceLabelKey = "FS_AppointmentHome_Base_ModifyAppointmentButton"

	EmbeddedServiceLabelKeyFS_AppointmentHome_Base_ErrorTitle EmbeddedServiceLabelKey = "FS_AppointmentHome_Base_ErrorTitle"

	EmbeddedServiceLabelKeyFS_Scheduling_Base_TimePickerAssistiveText EmbeddedServiceLabelKey = "FS_Scheduling_Base_TimePickerAssistiveText"

	EmbeddedServiceLabelKeyFS_ResourceDetail_Base_Header EmbeddedServiceLabelKey = "FS_ResourceDetail_Base_Header"

	EmbeddedServiceLabelKeyFS_AppointmentHome_Base_DefaultCardHeaderText EmbeddedServiceLabelKey = "FS_AppointmentHome_Base_DefaultCardHeaderText"

	EmbeddedServiceLabelKeyFS_Error_Dialog_Title EmbeddedServiceLabelKey = "FS_Error_Dialog_Title"

	EmbeddedServiceLabelKeyFS_Error_Dialog_Body EmbeddedServiceLabelKey = "FS_Error_Dialog_Body"

	EmbeddedServiceLabelKeyFS_Error_Dialog_Confirm_Button EmbeddedServiceLabelKey = "FS_Error_Dialog_Confirm_Button"

	EmbeddedServiceLabelKeyCM_Container_Header_Primary_Greeting EmbeddedServiceLabelKey = "CM_Container_Header_Primary_Greeting"

	EmbeddedServiceLabelKeyCM_Container_Header_Secondary_Greeting EmbeddedServiceLabelKey = "CM_Container_Header_Secondary_Greeting"

	EmbeddedServiceLabelKeyCM_Container_MenuItems_WebChatAvailable EmbeddedServiceLabelKey = "CM_Container_MenuItems_WebChatAvailable"

	EmbeddedServiceLabelKeyCM_Container_MenuItems_WebChatUnavailable EmbeddedServiceLabelKey = "CM_Container_MenuItems_WebChatUnavailable"

	EmbeddedServiceLabelKeyCM_Container_MenuItems_WebChatLoading EmbeddedServiceLabelKey = "CM_Container_MenuItems_WebChatLoading"

	EmbeddedServiceLabelKeyCM_Container_MenuItems_ChannelLabel EmbeddedServiceLabelKey = "CM_Container_MenuItems_ChannelLabel"

	EmbeddedServiceLabelKeyCM_Container_Button_AssistiveText EmbeddedServiceLabelKey = "CM_Container_Button_AssistiveText"

	EmbeddedServiceLabelKeyCM_Container_MenuItems_AssistiveText EmbeddedServiceLabelKey = "CM_Container_MenuItems_AssistiveText"

	EmbeddedServiceLabelKeyCM_Container_MenuItems_WebLinkNewTabAssistiveText EmbeddedServiceLabelKey = "CM_Container_MenuItems_WebLinkNewTabAssistiveText"

	EmbeddedServiceLabelKeyCM_Container_MenuItems_EmbeddedMessagingChatLoading EmbeddedServiceLabelKey = "CM_Container_MenuItems_EmbeddedMessagingChatLoading"

	EmbeddedServiceLabelKeyEM_Container_Base_DefaultHeaderText EmbeddedServiceLabelKey = "EM_Container_Base_DefaultHeaderText"

	EmbeddedServiceLabelKeyEM_Container_Base_Minimize EmbeddedServiceLabelKey = "EM_Container_Base_Minimize"

	EmbeddedServiceLabelKeyEM_Container_Base_Close EmbeddedServiceLabelKey = "EM_Container_Base_Close"

	EmbeddedServiceLabelKeyEM_Container_Base_CloseConversation EmbeddedServiceLabelKey = "EM_Container_Base_CloseConversation"

	EmbeddedServiceLabelKeyEM_Container_Base_DefaultMinimizedText EmbeddedServiceLabelKey = "EM_Container_Base_DefaultMinimizedText"

	EmbeddedServiceLabelKeyEM_Container_Base_MinimizedButtonAssistiveText EmbeddedServiceLabelKey = "EM_Container_Base_MinimizedButtonAssistiveText"

	EmbeddedServiceLabelKeyEM_Container_Base_MinimizedNotifDismissButtonAssistiveText EmbeddedServiceLabelKey = "EM_Container_Base_MinimizedNotifDismissButtonAssistiveText"

	EmbeddedServiceLabelKeyEM_Container_Base_HeaderGreetingAnnouncement EmbeddedServiceLabelKey = "EM_Container_Base_HeaderGreetingAnnouncement"

	EmbeddedServiceLabelKeyEM_Container_Base_NinePlusUnseenMessageCount EmbeddedServiceLabelKey = "EM_Container_Base_NinePlusUnseenMessageCount"

	EmbeddedServiceLabelKeyEM_Container_Base_ZeroUnseenMessagesAssistiveText EmbeddedServiceLabelKey = "EM_Container_Base_ZeroUnseenMessagesAssistiveText"

	EmbeddedServiceLabelKeyEM_Container_Base_UnseenMessagesAssistiveText EmbeddedServiceLabelKey = "EM_Container_Base_UnseenMessagesAssistiveText"

	EmbeddedServiceLabelKeyEM_Container_Base_NinePlusUnseenMessagesAssistiveText EmbeddedServiceLabelKey = "EM_Container_Base_NinePlusUnseenMessagesAssistiveText"

	EmbeddedServiceLabelKeyEM_Container_Base_InputFooterTextAreaPlaceHolder EmbeddedServiceLabelKey = "EM_Container_Base_InputFooterTextAreaPlaceHolder"

	EmbeddedServiceLabelKeyEM_Container_Base_PrechatFirstName EmbeddedServiceLabelKey = "EM_Container_Base_PrechatFirstName"

	EmbeddedServiceLabelKeyEM_Container_Base_PrechatLastName EmbeddedServiceLabelKey = "EM_Container_Base_PrechatLastName"

	EmbeddedServiceLabelKeyEM_Container_Base_PrechatSubject EmbeddedServiceLabelKey = "EM_Container_Base_PrechatSubject"

	EmbeddedServiceLabelKeyEM_Container_Base_PrechatEmail EmbeddedServiceLabelKey = "EM_Container_Base_PrechatEmail"

	EmbeddedServiceLabelKeyEM_Container_Base_BeforeUnloadWarningMessage EmbeddedServiceLabelKey = "EM_Container_Base_BeforeUnloadWarningMessage"

	EmbeddedServiceLabelKeyEM_Container_Base_StartBookendText EmbeddedServiceLabelKey = "EM_Container_Base_StartBookendText"

	EmbeddedServiceLabelKeyEM_Container_Base_EndBookendText EmbeddedServiceLabelKey = "EM_Container_Base_EndBookendText"

	EmbeddedServiceLabelKeyEM_Container_Base_ChatMessageMetadataAssistiveText EmbeddedServiceLabelKey = "EM_Container_Base_ChatMessageMetadataAssistiveText"

	EmbeddedServiceLabelKeyEM_Container_Base_ParticipantJoinText EmbeddedServiceLabelKey = "EM_Container_Base_ParticipantJoinText"

	EmbeddedServiceLabelKeyEM_Container_Base_ParticipantLeaveText EmbeddedServiceLabelKey = "EM_Container_Base_ParticipantLeaveText"

	EmbeddedServiceLabelKeyEM_Container_Base_InputFooterTextAreaAssistiveText EmbeddedServiceLabelKey = "EM_Container_Base_InputFooterTextAreaAssistiveText"

	EmbeddedServiceLabelKeyEM_Container_Base_InputFooterSendButtonAssistiveText EmbeddedServiceLabelKey = "EM_Container_Base_InputFooterSendButtonAssistiveText"

	EmbeddedServiceLabelKeyEM_Container_Base_PrechatStateSubmitButton EmbeddedServiceLabelKey = "EM_Container_Base_PrechatStateSubmitButton"

	EmbeddedServiceLabelKeyEM_Container_Base_InvalidEmailFormFieldError EmbeddedServiceLabelKey = "EM_Container_Base_InvalidEmailFormFieldError"

	EmbeddedServiceLabelKeyEM_Container_Base_RequiredFormFieldError EmbeddedServiceLabelKey = "EM_Container_Base_RequiredFormFieldError"

	EmbeddedServiceLabelKeyEM_Container_Base_NotificationDismissButtonText EmbeddedServiceLabelKey = "EM_Container_Base_NotificationDismissButtonText"

	EmbeddedServiceLabelKeyEM_Container_Base_ConversationEndedMinimizedText EmbeddedServiceLabelKey = "EM_Container_Base_ConversationEndedMinimizedText"

	EmbeddedServiceLabelKeyEM_Container_Base_ExpiredJWT EmbeddedServiceLabelKey = "EM_Container_Base_ExpiredJWT"

	EmbeddedServiceLabelKeyEM_Chat_FileTransfer_SelectNewFileText EmbeddedServiceLabelKey = "EM_Chat_FileTransfer_SelectNewFileText"

	EmbeddedServiceLabelKeyEM_PreChat_Base_PrechatCustomFieldLabel EmbeddedServiceLabelKey = "EM_PreChat_Base_PrechatCustomFieldLabel"

	EmbeddedServiceLabelKeyEM_Chat_FileTransfer_FileSendingText EmbeddedServiceLabelKey = "EM_Chat_FileTransfer_FileSendingText"

	EmbeddedServiceLabelKeyEM_Chat_FileTransfer_DownloadFileButtonTitle EmbeddedServiceLabelKey = "EM_Chat_FileTransfer_DownloadFileButtonTitle"

	EmbeddedServiceLabelKeyEM_Chat_FileTransfer_SelectFileAttachmentButtonTitle EmbeddedServiceLabelKey = "EM_Chat_FileTransfer_SelectFileAttachmentButtonTitle"

	EmbeddedServiceLabelKeyEM_Chat_FileTransfer_CancelFileAttachmentButtonTitle EmbeddedServiceLabelKey = "EM_Chat_FileTransfer_CancelFileAttachmentButtonTitle"

	EmbeddedServiceLabelKeyEM_Chat_FileTransfer_DownloadFileButtonAssistiveText EmbeddedServiceLabelKey = "EM_Chat_FileTransfer_DownloadFileButtonAssistiveText"

	EmbeddedServiceLabelKeyEM_Chat_FileTransfer_SelectFileAttachmentButtonAssistiveText EmbeddedServiceLabelKey = "EM_Chat_FileTransfer_SelectFileAttachmentButtonAssistiveText"

	EmbeddedServiceLabelKeyEM_Chat_FileTransfer_CancelFileAttachmentButtonAssistiveText EmbeddedServiceLabelKey = "EM_Chat_FileTransfer_CancelFileAttachmentButtonAssistiveText"

	EmbeddedServiceLabelKeyEM_Chat_ChatBody_Sent EmbeddedServiceLabelKey = "EM_Chat_ChatBody_Sent"

	EmbeddedServiceLabelKeyEM_Chat_ChatBody_Delivered EmbeddedServiceLabelKey = "EM_Chat_ChatBody_Delivered"

	EmbeddedServiceLabelKeyEM_Chat_ChatBody_Read EmbeddedServiceLabelKey = "EM_Chat_ChatBody_Read"

	EmbeddedServiceLabelKeyEM_Chat_ChoicesMessage_MenuAssistiveText EmbeddedServiceLabelKey = "EM_Chat_ChoicesMessage_MenuAssistiveText"

	EmbeddedServiceLabelKeyEM_Chat_ChoicesSelectionResponse_PlaceholderText EmbeddedServiceLabelKey = "EM_Chat_ChoicesSelectionResponse_PlaceholderText"

	EmbeddedServiceLabelKeyEM_Chat_ChoicesMessage_ButtonsAssistiveText EmbeddedServiceLabelKey = "EM_Chat_ChoicesMessage_ButtonsAssistiveText"

	EmbeddedServiceLabelKeyEM_Container_Base_HeaderAnnouncementTransferRequestSuccess EmbeddedServiceLabelKey = "EM_Container_Base_HeaderAnnouncementTransferRequestSuccess"

	EmbeddedServiceLabelKeyEM_Container_Base_HeaderAnnouncementTransferRequestFailure EmbeddedServiceLabelKey = "EM_Container_Base_HeaderAnnouncementTransferRequestFailure"

	EmbeddedServiceLabelKeyEM_Container_Base_SystemMessageTransferRequestSuccess EmbeddedServiceLabelKey = "EM_Container_Base_SystemMessageTransferRequestSuccess"

	EmbeddedServiceLabelKeyEM_Container_Base_SystemMessageTransferRequestFailure EmbeddedServiceLabelKey = "EM_Container_Base_SystemMessageTransferRequestFailure"

	EmbeddedServiceLabelKeyEM_Container_Base_SystemMessageTransferRequestTryAgain EmbeddedServiceLabelKey = "EM_Container_Base_SystemMessageTransferRequestTryAgain"

	EmbeddedServiceLabelKeyEM_Chat_ChatBody_AgentTypingIndicatorAssistiveText EmbeddedServiceLabelKey = "EM_Chat_ChatBody_AgentTypingIndicatorAssistiveText"

	EmbeddedServiceLabelKeyEM_Chat_ChatBody_ChatbotTypingIndicatorAssistiveText EmbeddedServiceLabelKey = "EM_Chat_ChatBody_ChatbotTypingIndicatorAssistiveText"

	EmbeddedServiceLabelKeyEM_Container_Base_InputFooterTextAreaPlaceholderOnlyParticipant EmbeddedServiceLabelKey = "EM_Container_Base_InputFooterTextAreaPlaceholderOnlyParticipant"

	EmbeddedServiceLabelKeyEM_Container_Base_AgentJoinAnnouncement EmbeddedServiceLabelKey = "EM_Container_Base_AgentJoinAnnouncement"

	EmbeddedServiceLabelKeyEM_Container_Base_AgentLeaveAnnouncement EmbeddedServiceLabelKey = "EM_Container_Base_AgentLeaveAnnouncement"

	EmbeddedServiceLabelKeyEM_Container_Base_JWTExpiredAnnouncement EmbeddedServiceLabelKey = "EM_Container_Base_JWTExpiredAnnouncement"

	EmbeddedServiceLabelKeyEM_Container_Base_ParticipantJoinedText EmbeddedServiceLabelKey = "EM_Container_Base_ParticipantJoinedText"

	EmbeddedServiceLabelKeyEM_Container_Base_ParticipantLeftText EmbeddedServiceLabelKey = "EM_Container_Base_ParticipantLeftText"

	EmbeddedServiceLabelKeyEM_Container_Base_NewMessageText EmbeddedServiceLabelKey = "EM_Container_Base_NewMessageText"

	EmbeddedServiceLabelKeyEM_Container_Base_MultipleNewMessagesText EmbeddedServiceLabelKey = "EM_Container_Base_MultipleNewMessagesText"

	EmbeddedServiceLabelKeyEM_Container_Base_JwtExpiredText EmbeddedServiceLabelKey = "EM_Container_Base_JwtExpiredText"

	EmbeddedServiceLabelKeyEM_Container_Base_TransferInitiatedText EmbeddedServiceLabelKey = "EM_Container_Base_TransferInitiatedText"

	EmbeddedServiceLabelKeyEM_Container_Base_TransferFailedText EmbeddedServiceLabelKey = "EM_Container_Base_TransferFailedText"

	EmbeddedServiceLabelKeyEM_Chat_ChatBody_NotSent EmbeddedServiceLabelKey = "EM_Chat_ChatBody_NotSent"

	EmbeddedServiceLabelKeyEM_Chat_ChatBody_SpinnerDefaultAssistiveText EmbeddedServiceLabelKey = "EM_Chat_ChatBody_SpinnerDefaultAssistiveText"

	EmbeddedServiceLabelKeyEM_Chat_ChatBody_FetchMoreEntriesSpinnerAssistiveText EmbeddedServiceLabelKey = "EM_Chat_ChatBody_FetchMoreEntriesSpinnerAssistiveText"

	EmbeddedServiceLabelKeyEM_Container_Base_MinimizeButtonAssistiveText EmbeddedServiceLabelKey = "EM_Container_Base_MinimizeButtonAssistiveText"

	EmbeddedServiceLabelKeyEM_Container_Base_CloseButtonAssistiveText EmbeddedServiceLabelKey = "EM_Container_Base_CloseButtonAssistiveText"

	EmbeddedServiceLabelKeyEM_Container_Base_ConfirmationDialogMenuItemAssistiveText EmbeddedServiceLabelKey = "EM_Container_Base_ConfirmationDialogMenuItemAssistiveText"

	EmbeddedServiceLabelKeyEM_Container_Base_MinimizedNotificationAssistiveText EmbeddedServiceLabelKey = "EM_Container_Base_MinimizedNotificationAssistiveText"

	EmbeddedServiceLabelKeyEM_Container_Base_MinimizedStateAssistiveText EmbeddedServiceLabelKey = "EM_Container_Base_MinimizedStateAssistiveText"

	EmbeddedServiceLabelKeyEM_Chat_ChatBody_NotRoutedToAgentRoutingResult EmbeddedServiceLabelKey = "EM_Chat_ChatBody_NotRoutedToAgentRoutingResult"

	EmbeddedServiceLabelKeyEM_Container_Base_TitleNotificationSenderDisplayName EmbeddedServiceLabelKey = "EM_Container_Base_TitleNotificationSenderDisplayName"

	EmbeddedServiceLabelKeyEM_Container_Base_MessagingIframeTitle EmbeddedServiceLabelKey = "EM_Container_Base_MessagingIframeTitle"

	EmbeddedServiceLabelKeyEM_Container_Base_FilePreviewIframeTitle EmbeddedServiceLabelKey = "EM_Container_Base_FilePreviewIframeTitle"

	EmbeddedServiceLabelKeyEM_Container_Base_FilePreviewIframeCloseButtonTitle EmbeddedServiceLabelKey = "EM_Container_Base_FilePreviewIframeCloseButtonTitle"

	EmbeddedServiceLabelKeyEM_Chat_ChatBody_MessageResendButtonText EmbeddedServiceLabelKey = "EM_Chat_ChatBody_MessageResendButtonText"

	EmbeddedServiceLabelKeyEM_Chat_ChatBody_EstimatedWaitTimeInMinute EmbeddedServiceLabelKey = "EM_Chat_ChatBody_EstimatedWaitTimeInMinute"

	EmbeddedServiceLabelKeyEM_Chat_ChatBody_EstimatedWaitTimeInMinutes EmbeddedServiceLabelKey = "EM_Chat_ChatBody_EstimatedWaitTimeInMinutes"

	EmbeddedServiceLabelKeyEM_Container_Base_InputFooterEmojiButtonAssistiveText EmbeddedServiceLabelKey = "EM_Container_Base_InputFooterEmojiButtonAssistiveText"

	EmbeddedServiceLabelKeyEM_Container_Base_InputFooterEmojiKeyboardAssistiveText EmbeddedServiceLabelKey = "EM_Container_Base_InputFooterEmojiKeyboardAssistiveText"

	EmbeddedServiceLabelKeyEM_Container_Base_PostchatFrameTitle EmbeddedServiceLabelKey = "EM_Container_Base_PostchatFrameTitle"

	EmbeddedServiceLabelKeyEM_Container_Base_PostchatHeaderText EmbeddedServiceLabelKey = "EM_Container_Base_PostchatHeaderText"

	EmbeddedServiceLabelKeyEM_Container_Base_PostchatHeaderBackButtonTitle EmbeddedServiceLabelKey = "EM_Container_Base_PostchatHeaderBackButtonTitle"

	EmbeddedServiceLabelKeyEM_Container_Base_PostchatHeaderBackButtonAssistiveText EmbeddedServiceLabelKey = "EM_Container_Base_PostchatHeaderBackButtonAssistiveText"

	EmbeddedServiceLabelKeyEM_Container_Base_PostchatConfirmationDialogTitleText EmbeddedServiceLabelKey = "EM_Container_Base_PostchatConfirmationDialogTitleText"

	EmbeddedServiceLabelKeyEM_Container_Base_PostchatConfirmationDialogBodyText EmbeddedServiceLabelKey = "EM_Container_Base_PostchatConfirmationDialogBodyText"

	EmbeddedServiceLabelKeyEM_Container_Base_PostchatConfirmationDialogConfirmButton EmbeddedServiceLabelKey = "EM_Container_Base_PostchatConfirmationDialogConfirmButton"

	EmbeddedServiceLabelKeyEM_Container_Base_PostchatConfirmationDialogCancelButton EmbeddedServiceLabelKey = "EM_Container_Base_PostchatConfirmationDialogCancelButton"

	EmbeddedServiceLabelKeyEM_Container_Base_JWTRetrievalFailureText EmbeddedServiceLabelKey = "EM_Container_Base_JWTRetrievalFailureText"

	EmbeddedServiceLabelKeyEM_Chat_FileTransfer_MaximumNumberOfFilesAllowedErrorText EmbeddedServiceLabelKey = "EM_Chat_FileTransfer_MaximumNumberOfFilesAllowedErrorText"

	EmbeddedServiceLabelKeyEM_Chat_FileTransfer_UnsupportedFileTypeErrorText EmbeddedServiceLabelKey = "EM_Chat_FileTransfer_UnsupportedFileTypeErrorText"

	EmbeddedServiceLabelKeyEM_Chat_FileTransfer_FileExceededSizeLimitErrorText EmbeddedServiceLabelKey = "EM_Chat_FileTransfer_FileExceededSizeLimitErrorText"

	EmbeddedServiceLabelKeyEM_PreChat_ChoiceList_PrechatCustomFieldLabel EmbeddedServiceLabelKey = "EM_PreChat_ChoiceList_PrechatCustomFieldLabel"

	EmbeddedServiceLabelKeyEM_Container_Base_PrechatChoiceListValueNone EmbeddedServiceLabelKey = "EM_Container_Base_PrechatChoiceListValueNone"

	EmbeddedServiceLabelKeyEM_Container_Base_MenuButtonAssistiveText EmbeddedServiceLabelKey = "EM_Container_Base_MenuButtonAssistiveText"

	EmbeddedServiceLabelKeyEM_Container_Base_CloseMenuButtonAssistiveText EmbeddedServiceLabelKey = "EM_Container_Base_CloseMenuButtonAssistiveText"

	EmbeddedServiceLabelKeyEM_Chat_ChatBody_Yesterday EmbeddedServiceLabelKey = "EM_Chat_ChatBody_Yesterday"

	EmbeddedServiceLabelKeyEM_PreChat_TermsAndConditions EmbeddedServiceLabelKey = "EM_PreChat_TermsAndConditions"

	EmbeddedServiceLabelKeyEM_Container_Base_ReconnectInProgress EmbeddedServiceLabelKey = "EM_Container_Base_ReconnectInProgress"

	EmbeddedServiceLabelKeyEM_Container_Base_ReconnectInProgressAssistiveText EmbeddedServiceLabelKey = "EM_Container_Base_ReconnectInProgressAssistiveText"

	EmbeddedServiceLabelKeyEM_Container_Base_MinimizedReconnectInProgress EmbeddedServiceLabelKey = "EM_Container_Base_MinimizedReconnectInProgress"

	EmbeddedServiceLabelKeyEM_Container_Base_PrechatTermsAndConditionsAcknowledgement EmbeddedServiceLabelKey = "EM_Container_Base_PrechatTermsAndConditionsAcknowledgement"

	EmbeddedServiceLabelKeyEM_Container_Base_ChatWindowAssistiveText EmbeddedServiceLabelKey = "EM_Container_Base_ChatWindowAssistiveText"

	EmbeddedServiceLabelKeyEM_Chat_SecureForms_FormButtonInitialStateAssistiveText EmbeddedServiceLabelKey = "EM_Chat_SecureForms_FormButtonInitialStateAssistiveText"

	EmbeddedServiceLabelKeyEM_Chat_SecureForms_FormButtonInactiveStateAssistiveText EmbeddedServiceLabelKey = "EM_Chat_SecureForms_FormButtonInactiveStateAssistiveText"

	EmbeddedServiceLabelKeyEM_Chat_SecureForms_FormButtonPendingStateTitle EmbeddedServiceLabelKey = "EM_Chat_SecureForms_FormButtonPendingStateTitle"

	EmbeddedServiceLabelKeyEM_Chat_SecureForms_FormButtonErrorResponseStateTitle EmbeddedServiceLabelKey = "EM_Chat_SecureForms_FormButtonErrorResponseStateTitle"

	EmbeddedServiceLabelKeyEM_Chat_SecureForms_FormButtonSuccessResponseStateTitle EmbeddedServiceLabelKey = "EM_Chat_SecureForms_FormButtonSuccessResponseStateTitle"

	EmbeddedServiceLabelKeyEM_Chat_SecureForms_OptionSelectInputSingleSelectInstruction EmbeddedServiceLabelKey = "EM_Chat_SecureForms_OptionSelectInputSingleSelectInstruction"

	EmbeddedServiceLabelKeyEM_Chat_SecureForms_OptionSelectInputMultipleSelectInstruction EmbeddedServiceLabelKey = "EM_Chat_SecureForms_OptionSelectInputMultipleSelectInstruction"

	EmbeddedServiceLabelKeyEM_Chat_SecureForms_DatePickerInputSelectInstruction EmbeddedServiceLabelKey = "EM_Chat_SecureForms_DatePickerInputSelectInstruction"

	EmbeddedServiceLabelKeyEM_Chat_SecureForms_TextInputSelectInstruction EmbeddedServiceLabelKey = "EM_Chat_SecureForms_TextInputSelectInstruction"

	EmbeddedServiceLabelKeyEM_Chat_SecureForms_RequiredInputMissing EmbeddedServiceLabelKey = "EM_Chat_SecureForms_RequiredInputMissing"

	EmbeddedServiceLabelKeyEM_Chat_SecureForms_RegexPatternMismatch EmbeddedServiceLabelKey = "EM_Chat_SecureForms_RegexPatternMismatch"

	EmbeddedServiceLabelKeyEM_Chat_SecureForms_NextButtonLabel EmbeddedServiceLabelKey = "EM_Chat_SecureForms_NextButtonLabel"

	EmbeddedServiceLabelKeyEM_Chat_SecureForms_BackButtonLabel EmbeddedServiceLabelKey = "EM_Chat_SecureForms_BackButtonLabel"

	EmbeddedServiceLabelKeyEM_Chat_SecureForms_SubmitButtonLabel EmbeddedServiceLabelKey = "EM_Chat_SecureForms_SubmitButtonLabel"

	EmbeddedServiceLabelKeyEM_Chat_SecureForms_ProgressBarAssistiveText EmbeddedServiceLabelKey = "EM_Chat_SecureForms_ProgressBarAssistiveText"

	EmbeddedServiceLabelKeyEM_Chat_SecureForms_NextButtonDisabledAssistiveText EmbeddedServiceLabelKey = "EM_Chat_SecureForms_NextButtonDisabledAssistiveText"

	EmbeddedServiceLabelKeyEM_Chat_SecureForms_BackButtonDisabledAssistiveText EmbeddedServiceLabelKey = "EM_Chat_SecureForms_BackButtonDisabledAssistiveText"

	EmbeddedServiceLabelKeyEM_Chat_SecureForms_SubmitButtonDisabledAssistiveText EmbeddedServiceLabelKey = "EM_Chat_SecureForms_SubmitButtonDisabledAssistiveText"

	EmbeddedServiceLabelKeyEM_Chat_SecureForms_CloseConfirmationDialogTitleText EmbeddedServiceLabelKey = "EM_Chat_SecureForms_CloseConfirmationDialogTitleText"

	EmbeddedServiceLabelKeyEM_Chat_SecureForms_CloseConfirmationDialogBodyText EmbeddedServiceLabelKey = "EM_Chat_SecureForms_CloseConfirmationDialogBodyText"

	EmbeddedServiceLabelKeyEM_Chat_SecureForms_CloseConfirmationConfirmButtonLabel EmbeddedServiceLabelKey = "EM_Chat_SecureForms_CloseConfirmationConfirmButtonLabel"

	EmbeddedServiceLabelKeyEM_Chat_SecureForms_CloseConfirmationCancelButtonLabel EmbeddedServiceLabelKey = "EM_Chat_SecureForms_CloseConfirmationCancelButtonLabel"

	EmbeddedServiceLabelKeyEM_Chat_SecureForms_RequiredSelectInputMissing EmbeddedServiceLabelKey = "EM_Chat_SecureForms_RequiredSelectInputMissing"
)

type EmbeddedServiceResourceType string

const (
	EmbeddedServiceResourceTypeSettingsFile EmbeddedServiceResourceType = "SettingsFile"

	EmbeddedServiceResourceTypeChatInvitation EmbeddedServiceResourceType = "ChatInvitation"
)

type EmbeddedServiceFlowType string

const (
	EmbeddedServiceFlowTypeFL_Flow EmbeddedServiceFlowType = "FL_Flow"

	EmbeddedServiceFlowTypeFS_NewAppointment EmbeddedServiceFlowType = "FS_NewAppointment"

	EmbeddedServiceFlowTypeFS_ModifyAppointment EmbeddedServiceFlowType = "FS_ModifyAppointment"

	EmbeddedServiceFlowTypeFS_CancelAppointment EmbeddedServiceFlowType = "FS_CancelAppointment"

	EmbeddedServiceFlowTypeLA_Survey EmbeddedServiceFlowType = "LA_Survey"
)

type EmbeddedServiceLayoutType string

const (
	EmbeddedServiceLayoutTypeFS_AppointmentHome EmbeddedServiceLayoutType = "FS_AppointmentHome"
)

type EmbeddedServiceQuickActionType string

const (
	EmbeddedServiceQuickActionTypePrechat EmbeddedServiceQuickActionType = "Prechat"

	EmbeddedServiceQuickActionTypeOfflineCase EmbeddedServiceQuickActionType = "OfflineCase"
)

type EmbeddedServiceFontSize string

const (
	EmbeddedServiceFontSizeSmall EmbeddedServiceFontSize = "Small"

	EmbeddedServiceFontSizeMedium EmbeddedServiceFontSize = "Medium"

	EmbeddedServiceFontSizeLarge EmbeddedServiceFontSize = "Large"
)

type EmbeddedServiceScenario string

const (
	EmbeddedServiceScenarioSales EmbeddedServiceScenario = "Sales"

	EmbeddedServiceScenarioService EmbeddedServiceScenario = "Service"

	EmbeddedServiceScenarioBasic EmbeddedServiceScenario = "Basic"
)

type EmbeddedServiceChannelType string

const (
	EmbeddedServiceChannelTypeEmbeddedServiceConfig EmbeddedServiceChannelType = "EmbeddedServiceConfig"

	EmbeddedServiceChannelTypeMessagingChannel EmbeddedServiceChannelType = "MessagingChannel"

	EmbeddedServiceChannelTypePhone EmbeddedServiceChannelType = "Phone"

	EmbeddedServiceChannelTypeCustomURL EmbeddedServiceChannelType = "CustomURL"

	EmbeddedServiceChannelTypeEmbeddedMessaging EmbeddedServiceChannelType = "EmbeddedMessaging"
)

type MilestoneTimeUnits string

const (
	MilestoneTimeUnitsMinutes MilestoneTimeUnits = "Minutes"

	MilestoneTimeUnitsHours MilestoneTimeUnits = "Hours"

	MilestoneTimeUnitsDays MilestoneTimeUnits = "Days"
)

type EventRelayAdminState string

const (
	EventRelayAdminStateRUN EventRelayAdminState = "RUN"

	EventRelayAdminStateSTOP EventRelayAdminState = "STOP"

	EventRelayAdminStatePAUSE EventRelayAdminState = "PAUSE"
)

type EventRelayUsageType string

const (
	EventRelayUsageTypeAMAZON_EVENTBRIDGE EventRelayUsageType = "AMAZON_EVENTBRIDGE"

	EventRelayUsageTypeINTERNAL_MANAGED_SUBSCRIPTIONS EventRelayUsageType = "INTERNAL_MANAGED_SUBSCRIPTIONS"

	EventRelayUsageTypeINTERNAL_REPLICATION EventRelayUsageType = "INTERNAL_REPLICATION"
)

type ExperienceContainerType string

const (
	ExperienceContainerTypeSFS ExperienceContainerType = "SFS"
)

type AuthenticationProtocol string

const (
	AuthenticationProtocolNoAuthentication AuthenticationProtocol = "NoAuthentication"

	AuthenticationProtocolOauth AuthenticationProtocol = "Oauth"

	AuthenticationProtocolPassword AuthenticationProtocol = "Password"

	AuthenticationProtocolAwsSv4 AuthenticationProtocol = "AwsSv4"

	AuthenticationProtocolJwt AuthenticationProtocol = "Jwt"

	AuthenticationProtocolJwtExchange AuthenticationProtocol = "JwtExchange"

	AuthenticationProtocolCustom AuthenticationProtocol = "Custom"
)

type ExternalCredentialParamType string

const (
	ExternalCredentialParamTypeAuthProvider ExternalCredentialParamType = "AuthProvider"

	ExternalCredentialParamTypeAuthProviderUrl ExternalCredentialParamType = "AuthProviderUrl"

	ExternalCredentialParamTypeAuthProviderUrlQueryParameter ExternalCredentialParamType = "AuthProviderUrlQueryParameter"

	ExternalCredentialParamTypeSigningCertificate ExternalCredentialParamType = "SigningCertificate"

	ExternalCredentialParamTypeAuthParameter ExternalCredentialParamType = "AuthParameter"

	ExternalCredentialParamTypeNamedPrincipal ExternalCredentialParamType = "NamedPrincipal"

	ExternalCredentialParamTypePerUserPrincipal ExternalCredentialParamType = "PerUserPrincipal"

	ExternalCredentialParamTypeAwsStsPrincipal ExternalCredentialParamType = "AwsStsPrincipal"

	ExternalCredentialParamTypeAuthHeader ExternalCredentialParamType = "AuthHeader"

	ExternalCredentialParamTypeAuthProtocolVariant ExternalCredentialParamType = "AuthProtocolVariant"

	ExternalCredentialParamTypeJwtBodyClaim ExternalCredentialParamType = "JwtBodyClaim"

	ExternalCredentialParamTypeJwtHeaderClaim ExternalCredentialParamType = "JwtHeaderClaim"

	ExternalCredentialParamTypeCreatedByNamespace ExternalCredentialParamType = "CreatedByNamespace"
)

type ExternalDataSrcDescSubtype string

const (
	ExternalDataSrcDescSubtypeSchemaTableQualifiers ExternalDataSrcDescSubtype = "SchemaTableQualifiers"

	ExternalDataSrcDescSubtypeSchemaTableMetadata ExternalDataSrcDescSubtype = "SchemaTableMetadata"
)

type ExternalDataSrcDescType string

const (
	ExternalDataSrcDescTypeSchema ExternalDataSrcDescType = "Schema"
)

type ExternalPrincipalType string

const (
	ExternalPrincipalTypeAnonymous ExternalPrincipalType = "Anonymous"

	ExternalPrincipalTypePerUser ExternalPrincipalType = "PerUser"

	ExternalPrincipalTypeNamedUser ExternalPrincipalType = "NamedUser"
)

type ExternalDataSourceType string

const (
	ExternalDataSourceTypeContentHubItem ExternalDataSourceType = "contentHubItem"

	ExternalDataSourceTypeDatajourney ExternalDataSourceType = "Datajourney"

	ExternalDataSourceTypeFLAttribute ExternalDataSourceType = "FLAttribute"

	ExternalDataSourceTypeIdentity ExternalDataSourceType = "Identity"

	ExternalDataSourceTypeOIAttribute ExternalDataSourceType = "OIAttribute"

	ExternalDataSourceTypeOpenSearch ExternalDataSourceType = "OpenSearch"

	ExternalDataSourceTypeOutgoingemail ExternalDataSourceType = "outgoingemail"

	ExternalDataSourceTypeQLIAttribute ExternalDataSourceType = "QLIAttribute"

	ExternalDataSourceTypeSciApi ExternalDataSourceType = "SciApi"

	ExternalDataSourceTypeSelectableEmailAddressView ExternalDataSourceType = "SelectableEmailAddressView"

	ExternalDataSourceTypeSimpleURL ExternalDataSourceType = "SimpleURL"

	ExternalDataSourceTypeTrailheadEditWithId ExternalDataSourceType = "TrailheadEditWithId"

	ExternalDataSourceTypeUsermobileconfig ExternalDataSourceType = "usermobileconfig"

	ExternalDataSourceTypeUsrconnectionstatus ExternalDataSourceType = "usrconnectionstatus"

	ExternalDataSourceTypeWrapper ExternalDataSourceType = "Wrapper"
)

type ExternalServiceRegistrationProviderType string

const (
	ExternalServiceRegistrationProviderTypeMuleSoft ExternalServiceRegistrationProviderType = "MuleSoft"

	ExternalServiceRegistrationProviderTypeCustom ExternalServiceRegistrationProviderType = "Custom"

	ExternalServiceRegistrationProviderTypeSchemaInferred ExternalServiceRegistrationProviderType = "SchemaInferred"

	ExternalServiceRegistrationProviderTypeStandard ExternalServiceRegistrationProviderType = "Standard"
)

type ClassificationType string

const (
	ClassificationTypeComplianceCategory ClassificationType = "ComplianceCategory"

	ClassificationTypeFieldSet ClassificationType = "FieldSet"
)

type EnforcementType string

const (
	EnforcementTypeScoping EnforcementType = "Scoping"

	EnforcementTypeRestrict EnforcementType = "Restrict"

	EnforcementTypeFieldRestrict EnforcementType = "FieldRestrict"

	EnforcementTypeD360_Restrict EnforcementType = "D360_Restrict"
)

type ApptAssistantRadiusUnit string

const (
	ApptAssistantRadiusUnitKilometer ApptAssistantRadiusUnit = "Kilometer"

	ApptAssistantRadiusUnitMeter ApptAssistantRadiusUnit = "Meter"

	ApptAssistantRadiusUnitMile ApptAssistantRadiusUnit = "Mile"

	ApptAssistantRadiusUnitYard ApptAssistantRadiusUnit = "Yard"
)

type MappingType string

type WorkOrderDurationSource string

const (
	WorkOrderDurationSourceWorkType WorkOrderDurationSource = "WorkType"

	WorkOrderDurationSourceTotalFromWorkPlan WorkOrderDurationSource = "TotalFromWorkPlan"

	WorkOrderDurationSourceCustom WorkOrderDurationSource = "Custom"
)

type FileDownloadBehavior string

const (
	FileDownloadBehaviorDOWNLOAD FileDownloadBehavior = "DOWNLOAD"

	FileDownloadBehaviorEXECUTE_IN_BROWSER FileDownloadBehavior = "EXECUTE_IN_BROWSER"

	FileDownloadBehaviorHYBRID FileDownloadBehavior = "HYBRID"
)

type FileType string

const (
	FileTypeUNKNOWN FileType = "UNKNOWN"

	FileTypePDF FileType = "PDF"

	FileTypePOWER_POINT FileType = "POWER_POINT"

	FileTypePOWER_POINT_X FileType = "POWER_POINT_X"

	FileTypePOWER_POINT_M FileType = "POWER_POINT_M"

	FileTypePOWER_POINT_T FileType = "POWER_POINT_T"

	FileTypeWORD FileType = "WORD"

	FileTypeWORD_X FileType = "WORD_X"

	FileTypeWORD_M FileType = "WORD_M"

	FileTypeWORD_T FileType = "WORD_T"

	FileTypePPS FileType = "PPS"

	FileTypePPSX FileType = "PPSX"

	FileTypeEXCEL FileType = "EXCEL"

	FileTypeEXCEL_X FileType = "EXCEL_X"

	FileTypeEXCEL_M FileType = "EXCEL_M"

	FileTypeEXCEL_T FileType = "EXCEL_T"

	FileTypeGOOGLE_DOCUMENT FileType = "GOOGLE_DOCUMENT"

	FileTypeGOOGLE_PRESENTATION FileType = "GOOGLE_PRESENTATION"

	FileTypeGOOGLE_SPREADSHEET FileType = "GOOGLE_SPREADSHEET"

	FileTypeGOOGLE_DRAWING FileType = "GOOGLE_DRAWING"

	FileTypeGOOGLE_FORM FileType = "GOOGLE_FORM"

	FileTypeGOOGLE_SCRIPT FileType = "GOOGLE_SCRIPT"

	FileTypeLINK FileType = "LINK"

	FileTypeSLIDE FileType = "SLIDE"

	FileTypeAAC FileType = "AAC"

	FileTypeACGI FileType = "ACGI"

	FileTypeAI FileType = "AI"

	FileTypeAVI FileType = "AVI"

	FileTypeBMP FileType = "BMP"

	FileTypeBOXNOTE FileType = "BOXNOTE"

	FileTypeCSV FileType = "CSV"

	FileTypeEPS FileType = "EPS"

	FileTypeEXE FileType = "EXE"

	FileTypeFLASH FileType = "FLASH"

	FileTypeGIF FileType = "GIF"

	FileTypeGZIP FileType = "GZIP"

	FileTypeHTM FileType = "HTM"

	FileTypeHTML FileType = "HTML"

	FileTypeHTX FileType = "HTX"

	FileTypeJPEG FileType = "JPEG"

	FileTypeJPE FileType = "JPE"

	FileTypePJP FileType = "PJP"

	FileTypePJPEG FileType = "PJPEG"

	FileTypeJFIF FileType = "JFIF"

	FileTypeJPG FileType = "JPG"

	FileTypeJS FileType = "JS"

	FileTypeJSON FileType = "JSON"

	FileTypeMHTM FileType = "MHTM"

	FileTypeMHTML FileType = "MHTML"

	FileTypeMP3 FileType = "MP3"

	FileTypeM4A FileType = "M4A"

	FileTypeM4V FileType = "M4V"

	FileTypeMP4 FileType = "MP4"

	FileTypeMPEG FileType = "MPEG"

	FileTypeMPG FileType = "MPG"

	FileTypeMOV FileType = "MOV"

	FileTypeMSG FileType = "MSG"

	FileTypeODP FileType = "ODP"

	FileTypeODS FileType = "ODS"

	FileTypeODT FileType = "ODT"

	FileTypeOGG FileType = "OGG"

	FileTypeOGV FileType = "OGV"

	FileTypePNG FileType = "PNG"

	FileTypePSD FileType = "PSD"

	FileTypeRTF FileType = "RTF"

	FileTypeQUIPDOC FileType = "QUIPDOC"

	FileTypeQUIPSHEET FileType = "QUIPSHEET"

	FileTypeQUIPCHAT FileType = "QUIPCHAT"

	FileTypeQUIPSLIDES FileType = "QUIPSLIDES"

	FileTypeQUIPTEMPLATE FileType = "QUIPTEMPLATE"

	FileTypeSHTM FileType = "SHTM"

	FileTypeSHTML FileType = "SHTML"

	FileTypeSNOTE FileType = "SNOTE"

	FileTypeMCONTENT FileType = "MCONTENT"

	FileTypeSTYPI FileType = "STYPI"

	FileTypeSVG FileType = "SVG"

	FileTypeSVGZ FileType = "SVGZ"

	FileTypeJPGZ FileType = "JPGZ"

	FileTypeTEXT FileType = "TEXT"

	FileTypeTHTML FileType = "THTML"

	FileTypeUSDZ FileType = "USDZ"

	FileTypeVISIO FileType = "VISIO"

	FileTypeVTT FileType = "VTT"

	FileTypeWMV FileType = "WMV"

	FileTypeWRF FileType = "WRF"

	FileTypeXML FileType = "XML"

	FileTypeZIP FileType = "ZIP"

	FileTypeXZIP FileType = "XZIP"

	FileTypeWMA FileType = "WMA"

	FileTypeXSN FileType = "XSN"

	FileTypeINSIGHT FileType = "INSIGHT"

	FileTypeTRTF FileType = "TRTF"

	FileTypeTXML FileType = "TXML"

	FileTypeWEBVIEW FileType = "WEBVIEW"

	FileTypeRFC822 FileType = "RFC822"

	FileTypeASF FileType = "ASF"

	FileTypeDWG FileType = "DWG"

	FileTypeJAR FileType = "JAR"

	FileTypeXJS FileType = "XJS"

	FileTypeOPX FileType = "OPX"

	FileTypeXPSD FileType = "XPSD"

	FileTypeTIF FileType = "TIF"

	FileTypeTIFF FileType = "TIFF"

	FileTypeWAV FileType = "WAV"

	FileTypeCSS FileType = "CSS"

	FileTypeTHUMB720BY480 FileType = "THUMB720BY480"

	FileTypeTHUMB240BY180 FileType = "THUMB240BY180"

	FileTypeTHUMB120BY90 FileType = "THUMB120BY90"

	FileTypeALLTHUMBS FileType = "ALLTHUMBS"

	FileTypePAGED_FLASH FileType = "PAGED_FLASH"

	FileTypeXMOB FileType = "XMOB"

	FileTypePACK FileType = "PACK"

	FileTypeC FileType = "C"

	FileTypeCPP FileType = "CPP"

	FileTypeWORDT FileType = "WORDT"

	FileTypeINI FileType = "INI"

	FileTypeJAVA FileType = "JAVA"

	FileTypeLOG FileType = "LOG"

	FileTypePOWER_POINTT FileType = "POWER_POINTT"

	FileTypeSQL FileType = "SQL"

	FileTypeXHTML FileType = "XHTML"

	FileTypeEXCELT FileType = "EXCELT"

	FileTypeWEBP FileType = "WEBP"

	FileTypeAVIF FileType = "AVIF"

	FileTypeICS FileType = "ICS"

	FileTypeCAF FileType = "CAF"

	FileTypeV3GP FileType = "V3GP"

	FileTypeV3G2 FileType = "V3G2"
)

type FlexipageEventSourceTypeEnum string

const (
	FlexipageEventSourceTypeEnumComponent FlexipageEventSourceTypeEnum = "Component"
)

type FlexipageEventTargetTypeEnum string

const (
	FlexipageEventTargetTypeEnumFlexipageServices FlexipageEventTargetTypeEnum = "FlexipageServices"

	FlexipageEventTargetTypeEnumLwcServices FlexipageEventTargetTypeEnum = "LwcServices"

	FlexipageEventTargetTypeEnumInvocableApexServices FlexipageEventTargetTypeEnum = "InvocableApexServices"

	FlexipageEventTargetTypeEnumInvocableExternalServices FlexipageEventTargetTypeEnum = "InvocableExternalServices"

	FlexipageEventTargetTypeEnumActionServices FlexipageEventTargetTypeEnum = "ActionServices"

	FlexipageEventTargetTypeEnumViewServices FlexipageEventTargetTypeEnum = "ViewServices"
)

type RegionFlagStatus string

const (
	RegionFlagStatusDisabled RegionFlagStatus = "disabled"

	RegionFlagStatusEnabled RegionFlagStatus = "enabled"
)

type ComponentInstancePropertyTypeEnum string

const (
	ComponentInstancePropertyTypeEnumDecorator ComponentInstancePropertyTypeEnum = "decorator"
)

type ComponentInstanceType string

const (
	ComponentInstanceTypeComponent ComponentInstanceType = "Component"

	ComponentInstanceTypeCard ComponentInstanceType = "Card"
)

type FlexiPageRegionMode string

const (
	FlexiPageRegionModeAppend FlexiPageRegionMode = "Append"

	FlexiPageRegionModePrepend FlexiPageRegionMode = "Prepend"

	FlexiPageRegionModeReplace FlexiPageRegionMode = "Replace"
)

type FlexiPageRegionType string

const (
	FlexiPageRegionTypeRegion FlexiPageRegionType = "Region"

	FlexiPageRegionTypeFacet FlexiPageRegionType = "Facet"

	FlexiPageRegionTypeBackground FlexiPageRegionType = "Background"
)

type PlatformActionListContext string

const (
	PlatformActionListContextListView PlatformActionListContext = "ListView"

	PlatformActionListContextRelatedList PlatformActionListContext = "RelatedList"

	PlatformActionListContextListViewRecord PlatformActionListContext = "ListViewRecord"

	PlatformActionListContextRelatedListRecord PlatformActionListContext = "RelatedListRecord"

	PlatformActionListContextRecord PlatformActionListContext = "Record"

	PlatformActionListContextFeedElement PlatformActionListContext = "FeedElement"

	PlatformActionListContextChatter PlatformActionListContext = "Chatter"

	PlatformActionListContextGlobal PlatformActionListContext = "Global"

	PlatformActionListContextFlexipage PlatformActionListContext = "Flexipage"

	PlatformActionListContextMruList PlatformActionListContext = "MruList"

	PlatformActionListContextMruRow PlatformActionListContext = "MruRow"

	PlatformActionListContextRecordEdit PlatformActionListContext = "RecordEdit"

	PlatformActionListContextPhoto PlatformActionListContext = "Photo"

	PlatformActionListContextBannerPhoto PlatformActionListContext = "BannerPhoto"

	PlatformActionListContextObjectHomeChart PlatformActionListContext = "ObjectHomeChart"

	PlatformActionListContextListViewDefinition PlatformActionListContext = "ListViewDefinition"

	PlatformActionListContextDockable PlatformActionListContext = "Dockable"

	PlatformActionListContextLookup PlatformActionListContext = "Lookup"

	PlatformActionListContextAssistant PlatformActionListContext = "Assistant"
)

type PlatformActionType string

const (
	PlatformActionTypeQuickAction PlatformActionType = "QuickAction"

	PlatformActionTypeStandardButton PlatformActionType = "StandardButton"

	PlatformActionTypeCustomButton PlatformActionType = "CustomButton"

	PlatformActionTypeProductivityAction PlatformActionType = "ProductivityAction"

	PlatformActionTypeActionLink PlatformActionType = "ActionLink"

	PlatformActionTypeInvocableAction PlatformActionType = "InvocableAction"
)

type FlexiPageType string

const (
	FlexiPageTypeAppPage FlexiPageType = "AppPage"

	FlexiPageTypeObjectPage FlexiPageType = "ObjectPage"

	FlexiPageTypeRecordPage FlexiPageType = "RecordPage"

	FlexiPageTypeHomePage FlexiPageType = "HomePage"

	FlexiPageTypeForecastingPage FlexiPageType = "ForecastingPage"

	FlexiPageTypeMailAppAppPage FlexiPageType = "MailAppAppPage"

	FlexiPageTypeCommAppPage FlexiPageType = "CommAppPage"

	FlexiPageTypeCommForgotPasswordPage FlexiPageType = "CommForgotPasswordPage"

	FlexiPageTypeCommLoginPage FlexiPageType = "CommLoginPage"

	FlexiPageTypeCommObjectPage FlexiPageType = "CommObjectPage"

	FlexiPageTypeCommQuickActionCreatePage FlexiPageType = "CommQuickActionCreatePage"

	FlexiPageTypeCommRecordPage FlexiPageType = "CommRecordPage"

	FlexiPageTypeCommRelatedListPage FlexiPageType = "CommRelatedListPage"

	FlexiPageTypeCommSearchResultPage FlexiPageType = "CommSearchResultPage"

	FlexiPageTypeCommGlobalSearchResultPage FlexiPageType = "CommGlobalSearchResultPage"

	FlexiPageTypeCommSelfRegisterPage FlexiPageType = "CommSelfRegisterPage"

	FlexiPageTypeCommThemeLayoutPage FlexiPageType = "CommThemeLayoutPage"

	FlexiPageTypeUtilityBar FlexiPageType = "UtilityBar"

	FlexiPageTypeRecordPreview FlexiPageType = "RecordPreview"

	FlexiPageTypeEmbeddedServicePage FlexiPageType = "EmbeddedServicePage"

	FlexiPageTypeCommCheckoutPage FlexiPageType = "CommCheckoutPage"

	FlexiPageTypeCommOrderConfirmationPage FlexiPageType = "CommOrderConfirmationPage"

	FlexiPageTypeCommFlowPage FlexiPageType = "CommFlowPage"

	FlexiPageTypeEmailTemplatePage FlexiPageType = "EmailTemplatePage"

	FlexiPageTypeApplicationLayout FlexiPageType = "ApplicationLayout"

	FlexiPageTypeCommNoSearchResultsPage FlexiPageType = "CommNoSearchResultsPage"

	FlexiPageTypeCommElectronicSignaturePage FlexiPageType = "CommElectronicSignaturePage"

	FlexiPageTypeCommContractDocumentsPage FlexiPageType = "CommContractDocumentsPage"

	FlexiPageTypeEmailContentPage FlexiPageType = "EmailContentPage"

	FlexiPageTypeServiceDocument FlexiPageType = "ServiceDocument"

	FlexiPageTypeLandingPage FlexiPageType = "LandingPage"

	FlexiPageTypeCdpRecordPage FlexiPageType = "CdpRecordPage"

	FlexiPageTypeSlackAppHome FlexiPageType = "SlackAppHome"

	FlexiPageTypeSlackMessage FlexiPageType = "SlackMessage"

	FlexiPageTypeSlackModal FlexiPageType = "SlackModal"

	FlexiPageTypeSlackNotification FlexiPageType = "SlackNotification"

	FlexiPageTypeEasyHomePage FlexiPageType = "EasyHomePage"

	FlexiPageTypeCardPage FlexiPageType = "CardPage"

	FlexiPageTypeVoiceExtension FlexiPageType = "VoiceExtension"

	FlexiPageTypeConfiguratorAppPage FlexiPageType = "ConfiguratorAppPage"
)

type FlowDataType string

const (
	FlowDataTypeCurrency FlowDataType = "Currency"

	FlowDataTypeDate FlowDataType = "Date"

	FlowDataTypeNumber FlowDataType = "Number"

	FlowDataTypeString FlowDataType = "String"

	FlowDataTypeBoolean FlowDataType = "Boolean"

	FlowDataTypeSObject FlowDataType = "SObject"

	FlowDataTypeDateTime FlowDataType = "DateTime"

	FlowDataTypePicklist FlowDataType = "Picklist"

	FlowDataTypeMultipicklist FlowDataType = "Multipicklist"

	FlowDataTypeApex FlowDataType = "Apex"
)

type FlowAssignmentOperator string

const (
	FlowAssignmentOperatorAssign FlowAssignmentOperator = "Assign"

	FlowAssignmentOperatorAdd FlowAssignmentOperator = "Add"

	FlowAssignmentOperatorSubtract FlowAssignmentOperator = "Subtract"

	FlowAssignmentOperatorAddItem FlowAssignmentOperator = "AddItem"

	FlowAssignmentOperatorRemoveFirst FlowAssignmentOperator = "RemoveFirst"

	FlowAssignmentOperatorRemoveBeforeFirst FlowAssignmentOperator = "RemoveBeforeFirst"

	FlowAssignmentOperatorRemoveAfterFirst FlowAssignmentOperator = "RemoveAfterFirst"

	FlowAssignmentOperatorRemoveAll FlowAssignmentOperator = "RemoveAll"

	FlowAssignmentOperatorAddAtStart FlowAssignmentOperator = "AddAtStart"

	FlowAssignmentOperatorRemoveUncommon FlowAssignmentOperator = "RemoveUncommon"

	FlowAssignmentOperatorAssignCount FlowAssignmentOperator = "AssignCount"

	FlowAssignmentOperatorRemovePosition FlowAssignmentOperator = "RemovePosition"
)

type FlowComparisonOperator string

const (
	FlowComparisonOperatorNone FlowComparisonOperator = "None"

	FlowComparisonOperatorEqualTo FlowComparisonOperator = "EqualTo"

	FlowComparisonOperatorNotEqualTo FlowComparisonOperator = "NotEqualTo"

	FlowComparisonOperatorGreaterThan FlowComparisonOperator = "GreaterThan"

	FlowComparisonOperatorLessThan FlowComparisonOperator = "LessThan"

	FlowComparisonOperatorGreaterThanOrEqualTo FlowComparisonOperator = "GreaterThanOrEqualTo"

	FlowComparisonOperatorLessThanOrEqualTo FlowComparisonOperator = "LessThanOrEqualTo"

	FlowComparisonOperatorStartsWith FlowComparisonOperator = "StartsWith"

	FlowComparisonOperatorEndsWith FlowComparisonOperator = "EndsWith"

	FlowComparisonOperatorContains FlowComparisonOperator = "Contains"

	FlowComparisonOperatorIsNull FlowComparisonOperator = "IsNull"

	FlowComparisonOperatorIsChanged FlowComparisonOperator = "IsChanged"

	FlowComparisonOperatorWasSet FlowComparisonOperator = "WasSet"

	FlowComparisonOperatorWasSelected FlowComparisonOperator = "WasSelected"

	FlowComparisonOperatorWasVisited FlowComparisonOperator = "WasVisited"

	FlowComparisonOperatorIn FlowComparisonOperator = "In"

	FlowComparisonOperatorNotIn FlowComparisonOperator = "NotIn"
)

type FlowRecordFilterOperator string

const (
	FlowRecordFilterOperatorEqualTo FlowRecordFilterOperator = "EqualTo"

	FlowRecordFilterOperatorNotEqualTo FlowRecordFilterOperator = "NotEqualTo"

	FlowRecordFilterOperatorGreaterThan FlowRecordFilterOperator = "GreaterThan"

	FlowRecordFilterOperatorLessThan FlowRecordFilterOperator = "LessThan"

	FlowRecordFilterOperatorGreaterThanOrEqualTo FlowRecordFilterOperator = "GreaterThanOrEqualTo"

	FlowRecordFilterOperatorLessThanOrEqualTo FlowRecordFilterOperator = "LessThanOrEqualTo"

	FlowRecordFilterOperatorStartsWith FlowRecordFilterOperator = "StartsWith"

	FlowRecordFilterOperatorEndsWith FlowRecordFilterOperator = "EndsWith"

	FlowRecordFilterOperatorContains FlowRecordFilterOperator = "Contains"

	FlowRecordFilterOperatorIsNull FlowRecordFilterOperator = "IsNull"

	FlowRecordFilterOperatorIsChanged FlowRecordFilterOperator = "IsChanged"

	FlowRecordFilterOperatorIn FlowRecordFilterOperator = "In"

	FlowRecordFilterOperatorNotIn FlowRecordFilterOperator = "NotIn"
)

type FlowStageStepAssigneeType string

const (
	FlowStageStepAssigneeTypeUser FlowStageStepAssigneeType = "User"

	FlowStageStepAssigneeTypeGroup FlowStageStepAssigneeType = "Group"

	FlowStageStepAssigneeTypeQueue FlowStageStepAssigneeType = "Queue"
)

type FlowTransformValueActionType string

const (
	FlowTransformValueActionTypeMap FlowTransformValueActionType = "Map"
)

type FlowScheduledPathOffsetUnit string

const (
	FlowScheduledPathOffsetUnitHours FlowScheduledPathOffsetUnit = "Hours"

	FlowScheduledPathOffsetUnitDays FlowScheduledPathOffsetUnit = "Days"

	FlowScheduledPathOffsetUnitMinutes FlowScheduledPathOffsetUnit = "Minutes"

	FlowScheduledPathOffsetUnitMonths FlowScheduledPathOffsetUnit = "Months"

	FlowScheduledPathOffsetUnitWeeks FlowScheduledPathOffsetUnit = "Weeks"
)

type FlowScheduledPathType string

const (
	FlowScheduledPathTypeAsyncAfterCommit FlowScheduledPathType = "AsyncAfterCommit"
)

type FlowScheduledPathTimeSource string

const (
	FlowScheduledPathTimeSourceRecordTriggerEvent FlowScheduledPathTimeSource = "RecordTriggerEvent"

	FlowScheduledPathTimeSourceRecordField FlowScheduledPathTimeSource = "RecordField"
)

type InvocableActionType string

const (
	InvocableActionTypeApex InvocableActionType = "apex"

	InvocableActionTypeChatterPost InvocableActionType = "chatterPost"

	InvocableActionTypeContentWorkspaceEnableFolders InvocableActionType = "contentWorkspaceEnableFolders"

	InvocableActionTypeEmailAlert InvocableActionType = "emailAlert"

	InvocableActionTypeEmailSimple InvocableActionType = "emailSimple"

	InvocableActionTypeExternalService InvocableActionType = "externalService"

	InvocableActionTypeSalesforceAPIPlatform InvocableActionType = "salesforceAPIPlatform"

	InvocableActionTypeFlow InvocableActionType = "flow"

	InvocableActionTypeMetricRefresh InvocableActionType = "metricRefresh"

	InvocableActionTypeQuickAction InvocableActionType = "quickAction"

	InvocableActionTypeSubmit InvocableActionType = "submit"

	InvocableActionTypeThanks InvocableActionType = "thanks"

	InvocableActionTypeThunderResponse InvocableActionType = "thunderResponse"

	InvocableActionTypeCreateServiceReport InvocableActionType = "createServiceReport"

	InvocableActionTypeDeployOrchestration InvocableActionType = "deployOrchestration"

	InvocableActionTypeCreateResponseEventAction InvocableActionType = "createResponseEventAction"

	InvocableActionTypeSfdcOutputAction InvocableActionType = "sfdcOutputAction"

	InvocableActionTypeInvokeOrchOutputFlow InvocableActionType = "invokeOrchOutputFlow"

	InvocableActionTypeGenerateWorkOrders InvocableActionType = "generateWorkOrders"

	InvocableActionTypeDeactivateSessionPermSet InvocableActionType = "deactivateSessionPermSet"

	InvocableActionTypeActivateSessionPermSet InvocableActionType = "activateSessionPermSet"

	InvocableActionTypeAggregateValue InvocableActionType = "aggregateValue"

	InvocableActionTypeOrchestrationTimer InvocableActionType = "orchestrationTimer"

	InvocableActionTypeOrchestrationDebugLog InvocableActionType = "orchestrationDebugLog"

	InvocableActionTypeChoosePricebook InvocableActionType = "choosePricebook"

	InvocableActionTypeComponent InvocableActionType = "component"

	InvocableActionTypeLiveMessageNotification InvocableActionType = "liveMessageNotification"

	InvocableActionTypeScaleCacheAsyncRefresh InvocableActionType = "scaleCacheAsyncRefresh"

	InvocableActionTypeSkillsBasedRouting InvocableActionType = "skillsBasedRouting"

	InvocableActionTypeAddSkillRequirements InvocableActionType = "addSkillRequirements"

	InvocableActionTypeAddScreenPop InvocableActionType = "addScreenPop"

	InvocableActionTypeFindMatchingIndividuals InvocableActionType = "findMatchingIndividuals"

	InvocableActionTypeRouteWork InvocableActionType = "routeWork"

	InvocableActionTypeScvOutboundCall InvocableActionType = "scvOutboundCall"

	InvocableActionTypeCheckAvailabilityForRouting InvocableActionType = "checkAvailabilityForRouting"

	InvocableActionTypeCreateCustomField InvocableActionType = "createCustomField"

	InvocableActionTypeAssignTrailheadBadge InvocableActionType = "assignTrailheadBadge"

	InvocableActionTypeInsightFeedback InvocableActionType = "insightFeedback"

	InvocableActionTypePublishKnowledgeArticles InvocableActionType = "publishKnowledgeArticles"

	InvocableActionTypeRoutingAddressVerification InvocableActionType = "routingAddressVerification"

	InvocableActionTypeAssignTargetToSalesCadence InvocableActionType = "assignTargetToSalesCadence"

	InvocableActionTypeRemoveTargetFromSalesCadence InvocableActionType = "removeTargetFromSalesCadence"

	InvocableActionTypeModifyCadenceTrackerAttributes InvocableActionType = "modifyCadenceTrackerAttributes"

	InvocableActionTypeInvocableApplyLeadAssignmentRules InvocableActionType = "invocableApplyLeadAssignmentRules"

	InvocableActionTypePauseSalesCadenceTracker InvocableActionType = "pauseSalesCadenceTracker"

	InvocableActionTypeResumeSalesCadenceTracker InvocableActionType = "resumeSalesCadenceTracker"

	InvocableActionTypeChangeSalesCadenceTargetAssignee InvocableActionType = "changeSalesCadenceTargetAssignee"

	InvocableActionTypeSendSalesCadenceEvent InvocableActionType = "sendSalesCadenceEvent"

	InvocableActionTypeSelectTemplateForSalesCadenceStepTracker InvocableActionType = "selectTemplateForSalesCadenceStepTracker"

	InvocableActionTypeAssignKnowledgeArticles InvocableActionType = "assignKnowledgeArticles"

	InvocableActionTypeCreateDraftFromOnlineKnowledgeArticle InvocableActionType = "createDraftFromOnlineKnowledgeArticle"

	InvocableActionTypeArchiveKnowledgeArticles InvocableActionType = "archiveKnowledgeArticles"

	InvocableActionTypeRestoreKnowledgeArticleVersion InvocableActionType = "restoreKnowledgeArticleVersion"

	InvocableActionTypeCustomNotificationAction InvocableActionType = "customNotificationAction"

	InvocableActionTypeBroadcastRenderSlackMsgPreview InvocableActionType = "broadcastRenderSlackMsgPreview"

	InvocableActionTypeSubmitDigitalFormResponse InvocableActionType = "submitDigitalFormResponse"

	InvocableActionTypeContactRequestAction InvocableActionType = "contactRequestAction"

	InvocableActionTypeSaveAppointment InvocableActionType = "saveAppointment"

	InvocableActionTypeSaveAppointmentInvitationDetails InvocableActionType = "saveAppointmentInvitationDetails"

	InvocableActionTypeCreateWaitlist InvocableActionType = "createWaitlist"

	InvocableActionTypeDeleteKnowledgeArticles InvocableActionType = "deleteKnowledgeArticles"

	InvocableActionTypeSubmitKnowledgeArticleForTranslation InvocableActionType = "submitKnowledgeArticleForTranslation"

	InvocableActionTypeEinsteinEPLitePredictionAction InvocableActionType = "einsteinEPLitePredictionAction"

	InvocableActionTypeCartToOrderAction InvocableActionType = "cartToOrderAction"

	InvocableActionTypeOrderToCartAction InvocableActionType = "orderToCartAction"

	InvocableActionTypeActivateOrderAction InvocableActionType = "activateOrderAction"

	InvocableActionTypeRefreshActualsCalculation InvocableActionType = "refreshActualsCalculation"

	InvocableActionTypeCancelAppointment InvocableActionType = "cancelAppointment"

	InvocableActionTypeRecalculateForecast InvocableActionType = "recalculateForecast"

	InvocableActionTypeGetBenefitAndCalculateRebateAmount InvocableActionType = "getBenefitAndCalculateRebateAmount"

	InvocableActionTypeUpsertCustomRebatePayout InvocableActionType = "upsertCustomRebatePayout"

	InvocableActionTypeCalculateRebateAmountAndUpsertPayout InvocableActionType = "calculateRebateAmountAndUpsertPayout"

	InvocableActionTypeProcessRebatesBatchCalculationJob InvocableActionType = "processRebatesBatchCalculationJob"

	InvocableActionTypeGenerateRebatePayoutPeriods InvocableActionType = "generateRebatePayoutPeriods"

	InvocableActionTypeCalculateAdvancedAccountForecast InvocableActionType = "calculateAdvancedAccountForecast"

	InvocableActionTypeProcessAccountForecasts InvocableActionType = "processAccountForecasts"

	InvocableActionTypeManagedContentReleasePublish InvocableActionType = "managedContentReleasePublish"

	InvocableActionTypeEditQuipDocument InvocableActionType = "editQuipDocument"

	InvocableActionTypeAttachQuipDocumentToRecord InvocableActionType = "attachQuipDocumentToRecord"

	InvocableActionTypeCreateQuipDocument InvocableActionType = "createQuipDocument"

	InvocableActionTypeCreateQuipFolder InvocableActionType = "createQuipFolder"

	InvocableActionTypeAddUsersToQuipDocument InvocableActionType = "addUsersToQuipDocument"

	InvocableActionTypeRemoveUsersFromQuipDocument InvocableActionType = "removeUsersFromQuipDocument"

	InvocableActionTypeCopyQuipDocument InvocableActionType = "copyQuipDocument"

	InvocableActionTypeAddMessageToQuipDocument InvocableActionType = "addMessageToQuipDocument"

	InvocableActionTypeAddQuipDocumentToFolder InvocableActionType = "addQuipDocumentToFolder"

	InvocableActionTypeRemoveQuipDocumentFromFolder InvocableActionType = "removeQuipDocumentFromFolder"

	InvocableActionTypeCreateQuipChat InvocableActionType = "createQuipChat"

	InvocableActionTypeAddMessageToQuipChat InvocableActionType = "addMessageToQuipChat"

	InvocableActionTypeAddUsersToQuipChat InvocableActionType = "addUsersToQuipChat"

	InvocableActionTypeRemoveUsersFromQuipChat InvocableActionType = "removeUsersFromQuipChat"

	InvocableActionTypeCopyQuipContent InvocableActionType = "copyQuipContent"

	InvocableActionTypeLockQuipDocument InvocableActionType = "lockQuipDocument"

	InvocableActionTypeLockQuipSection InvocableActionType = "lockQuipSection"

	InvocableActionTypeQuipLivePaste InvocableActionType = "quipLivePaste"

	InvocableActionTypeExportQuipDocumentToPdf InvocableActionType = "exportQuipDocumentToPdf"

	InvocableActionTypePriceCart InvocableActionType = "priceCart"

	InvocableActionTypeCartInitiateAsyncStep InvocableActionType = "cartInitiateAsyncStep"

	InvocableActionTypeCartCompleteAsyncStep InvocableActionType = "cartCompleteAsyncStep"

	InvocableActionTypeCancelCartAsyncOperation InvocableActionType = "cancelCartAsyncOperation"

	InvocableActionTypeCreateCart InvocableActionType = "createCart"

	InvocableActionTypeAddCartItem InvocableActionType = "addCartItem"

	InvocableActionTypeDeleteCart InvocableActionType = "deleteCart"

	InvocableActionTypeCancelFulfillmentOrderItem InvocableActionType = "cancelFulfillmentOrderItem"

	InvocableActionTypeCreateFulfillmentOrder InvocableActionType = "createFulfillmentOrder"

	InvocableActionTypeCreateInvoiceFromFulfillmentOrder InvocableActionType = "createInvoiceFromFulfillmentOrder"

	InvocableActionTypeCreateFulfillmentOrders InvocableActionType = "createFulfillmentOrders"

	InvocableActionTypeCreateOrderPaymentSummary InvocableActionType = "createOrderPaymentSummary"

	InvocableActionTypeCancelOrderItemSummariesPreview InvocableActionType = "cancelOrderItemSummariesPreview"

	InvocableActionTypeCancelOrderItemSummariesSubmit InvocableActionType = "cancelOrderItemSummariesSubmit"

	InvocableActionTypeCreateCreditMemoOrderSummary InvocableActionType = "createCreditMemoOrderSummary"

	InvocableActionTypeEnsureFundsOrderSummaryAsync InvocableActionType = "ensureFundsOrderSummaryAsync"

	InvocableActionTypeEnsureRefundsOrderSummaryAsync InvocableActionType = "ensureRefundsOrderSummaryAsync"

	InvocableActionTypeReturnOrderItemSummariesPreview InvocableActionType = "returnOrderItemSummariesPreview"

	InvocableActionTypeReturnOrderItemSummariesSubmit InvocableActionType = "returnOrderItemSummariesSubmit"

	InvocableActionTypeCreateReturnOrder InvocableActionType = "createReturnOrder"

	InvocableActionTypeCreateOrderSummary InvocableActionType = "createOrderSummary"

	InvocableActionTypeAdjustOrderItemSummariesPreview InvocableActionType = "adjustOrderItemSummariesPreview"

	InvocableActionTypeAdjustOrderItemSummariesSubmit InvocableActionType = "adjustOrderItemSummariesSubmit"

	InvocableActionTypeAddOrderItemSummarySubmit InvocableActionType = "addOrderItemSummarySubmit"

	InvocableActionTypeDistributePickedQuantities InvocableActionType = "distributePickedQuantities"

	InvocableActionTypeCreateOrderFromQuote InvocableActionType = "createOrderFromQuote"

	InvocableActionTypeCreateOrUpdateAssetFromOrder InvocableActionType = "createOrUpdateAssetFromOrder"

	InvocableActionTypeCreateBillingScheduleFromOrderItem InvocableActionType = "createBillingScheduleFromOrderItem"

	InvocableActionTypeChangeFinancePeriodStatus InvocableActionType = "changeFinancePeriodStatus"

	InvocableActionTypeApplyPayment InvocableActionType = "applyPayment"

	InvocableActionTypePaymentSale InvocableActionType = "paymentSale"

	InvocableActionTypeAutomateRefund InvocableActionType = "automateRefund"

	InvocableActionTypeCreateInvoiceFromOrder InvocableActionType = "createInvoiceFromOrder"

	InvocableActionTypeCreateOrUpdateAssetFromOrderItem InvocableActionType = "createOrUpdateAssetFromOrderItem"

	InvocableActionTypeCreateContract InvocableActionType = "createContract"

	InvocableActionTypeOciTransferReservation InvocableActionType = "ociTransferReservation"

	InvocableActionTypeOciReleaseReservation InvocableActionType = "ociReleaseReservation"

	InvocableActionTypeOciGetAvailability InvocableActionType = "ociGetAvailability"

	InvocableActionTypeOciFulfillReservation InvocableActionType = "ociFulfillReservation"

	InvocableActionTypeOciCreateReservation InvocableActionType = "ociCreateReservation"

	InvocableActionTypeOrderRoutingRankByAverageDistance InvocableActionType = "orderRoutingRankByAverageDistance"

	InvocableActionTypeOrderRoutingFindRoutesWithFewestSplits InvocableActionType = "orderRoutingFindRoutesWithFewestSplits"

	InvocableActionTypeOrderRoutingFindRoutesWithFewestSplitsUsingOCI InvocableActionType = "orderRoutingFindRoutesWithFewestSplitsUsingOCI"

	InvocableActionTypeHoldFulfillmentOrderCapacity InvocableActionType = "holdFulfillmentOrderCapacity"

	InvocableActionTypeReleaseHeldFulfillmentOrderCapacity InvocableActionType = "releaseHeldFulfillmentOrderCapacity"

	InvocableActionTypeConfirmHeldFulfillmentOrderCapacity InvocableActionType = "confirmHeldFulfillmentOrderCapacity"

	InvocableActionTypeGetFulfillmentOrderCapacityValues InvocableActionType = "getFulfillmentOrderCapacityValues"

	InvocableActionTypePrint InvocableActionType = "print"

	InvocableActionTypeExportSurveyResponses InvocableActionType = "exportSurveyResponses"

	InvocableActionTypeCheckoutSessionAction InvocableActionType = "checkoutSessionAction"

	InvocableActionTypeCheckCartInventoryAction InvocableActionType = "checkCartInventoryAction"

	InvocableActionTypeCalcCartTaxesAction InvocableActionType = "calcCartTaxesAction"

	InvocableActionTypeCalcCartShipmentAction InvocableActionType = "calcCartShipmentAction"

	InvocableActionTypeCalcCartPromotionsAction InvocableActionType = "calcCartPromotionsAction"

	InvocableActionTypeSendSurveyInvitation InvocableActionType = "sendSurveyInvitation"

	InvocableActionTypePublishPardotContent InvocableActionType = "publishPardotContent"

	InvocableActionTypeStoreReplyRecommendationsFeedback InvocableActionType = "storeReplyRecommendationsFeedback"

	InvocableActionTypeMarketingEmail InvocableActionType = "marketingEmail"

	InvocableActionTypeUpdateCheckoutSessionStateAction InvocableActionType = "updateCheckoutSessionStateAction"

	InvocableActionTypeMassUpdateAccountForecast InvocableActionType = "massUpdateAccountForecast"

	InvocableActionTypeMassUpdateSalesAgreement InvocableActionType = "massUpdateSalesAgreement"

	InvocableActionTypeBuildWarrantyClaimContext InvocableActionType = "buildWarrantyClaimContext"

	InvocableActionTypeDecisionTableAction InvocableActionType = "decisionTableAction"

	InvocableActionTypeRunDecisionMatrix InvocableActionType = "runDecisionMatrix"

	InvocableActionTypeCreateFinancialRecords InvocableActionType = "createFinancialRecords"

	InvocableActionTypeAddWorkPlans InvocableActionType = "addWorkPlans"

	InvocableActionTypeAddWorkSteps InvocableActionType = "addWorkSteps"

	InvocableActionTypeGenerateWorkPlans InvocableActionType = "generateWorkPlans"

	InvocableActionTypeDeleteWorkPlans InvocableActionType = "deleteWorkPlans"

	InvocableActionTypePardotGetListx InvocableActionType = "pardotGetListx"

	InvocableActionTypePardotAddToListMembership InvocableActionType = "pardotAddToListMembership"

	InvocableActionTypeGetTier InvocableActionType = "getTier"

	InvocableActionTypeChangeTier InvocableActionType = "changeTier"

	InvocableActionTypeChangeAllTierOrNone InvocableActionType = "changeAllTierOrNone"

	InvocableActionTypeGetPointsBalance InvocableActionType = "getPointsBalance"

	InvocableActionTypeUpdateAcctMgrTarget InvocableActionType = "updateAcctMgrTarget"

	InvocableActionTypeCreditPoints InvocableActionType = "creditPoints"

	InvocableActionTypeDebitPoints InvocableActionType = "debitPoints"

	InvocableActionTypeBatchJobAction InvocableActionType = "batchJobAction"

	InvocableActionTypeDataProcessingEngineAction InvocableActionType = "dataProcessingEngineAction"

	InvocableActionTypeAdjustPointsAction InvocableActionType = "adjustPointsAction"

	InvocableActionTypeCancelRedemption InvocableActionType = "cancelRedemption"

	InvocableActionTypeCancelAccrual InvocableActionType = "cancelAccrual"

	InvocableActionTypeAddRebateMemberList InvocableActionType = "addRebateMemberList"

	InvocableActionTypeSaveRecommendationDecision InvocableActionType = "saveRecommendationDecision"

	InvocableActionTypeOutboundMessage InvocableActionType = "outboundMessage"

	InvocableActionTypeInternalTestAction InvocableActionType = "internalTestAction"

	InvocableActionTypeInternalTestConnectApiAction InvocableActionType = "internalTestConnectApiAction"

	InvocableActionTypeGetDialerSoftphonePathSuffix InvocableActionType = "getDialerSoftphonePathSuffix"

	InvocableActionTypePerformMultiLevelRollups InvocableActionType = "performMultiLevelRollups"

	InvocableActionTypeRebatesProcessCSV InvocableActionType = "rebatesProcessCSV"

	InvocableActionTypeProcessMemberBenefitAction InvocableActionType = "processMemberBenefitAction"

	InvocableActionTypeAssignMemberTierBenefits InvocableActionType = "assignMemberTierBenefits"

	InvocableActionTypeDynamicSendSurveyInvitation InvocableActionType = "dynamicSendSurveyInvitation"

	InvocableActionTypeGetIntelligentAccountSettingsToken InvocableActionType = "getIntelligentAccountSettingsToken"

	InvocableActionTypeIssueVoucher InvocableActionType = "issueVoucher"

	InvocableActionTypeSetCheckoutDeliveryMethod InvocableActionType = "setCheckoutDeliveryMethod"

	InvocableActionTypeRefreshDecisionTable InvocableActionType = "refreshDecisionTable"

	InvocableActionTypeEvaluationFlow InvocableActionType = "evaluationFlow"

	InvocableActionTypeStepInteractive InvocableActionType = "stepInteractive"

	InvocableActionTypeStepBackground InvocableActionType = "stepBackground"

	InvocableActionTypeStepMuleSoft InvocableActionType = "stepMuleSoft"

	InvocableActionTypeManagedContentRoleStepInteractive InvocableActionType = "managedContentRoleStepInteractive"

	InvocableActionTypeManagedContentVariantSetLockStepBackground InvocableActionType = "managedContentVariantSetLockStepBackground"

	InvocableActionTypeManagedContentVariantSetReadyStepBackground InvocableActionType = "managedContentVariantSetReadyStepBackground"

	InvocableActionTypeManagedContentVariantAutoPublishStepBackground InvocableActionType = "managedContentVariantAutoPublishStepBackground"

	InvocableActionTypeManagedContentVariantAutoUnpublishStepBackground InvocableActionType = "managedContentVariantAutoUnpublishStepBackground"

	InvocableActionTypeGenerateKnowledgeLogData InvocableActionType = "generateKnowledgeLogData"

	InvocableActionTypeSubmitFailedRecordsBatchJob InvocableActionType = "submitFailedRecordsBatchJob"

	InvocableActionTypeGetEligibleProgramRebateTypes InvocableActionType = "getEligibleProgramRebateTypes"

	InvocableActionTypeReturnReturnOrderItems InvocableActionType = "returnReturnOrderItems"

	InvocableActionTypeSlackPostMessage InvocableActionType = "slackPostMessage"

	InvocableActionTypeSlackUpdateMessage InvocableActionType = "slackUpdateMessage"

	InvocableActionTypeSlackPinMessage InvocableActionType = "slackPinMessage"

	InvocableActionTypeSlackCreateChannel InvocableActionType = "slackCreateChannel"

	InvocableActionTypeSlackInviteUsersToChannel InvocableActionType = "slackInviteUsersToChannel"

	InvocableActionTypeSlackUserInWorkspace InvocableActionType = "slackUserInWorkspace"

	InvocableActionTypeSlackCheckUsersAreConnectedToSlack InvocableActionType = "slackCheckUsersAreConnectedToSlack"

	InvocableActionTypeSlackArchiveChannel InvocableActionType = "slackArchiveChannel"

	InvocableActionTypeSlackGetConversationInfo InvocableActionType = "slackGetConversationInfo"

	InvocableActionTypeGetLoyaltyPromotionBasedOnSalesforceCDP InvocableActionType = "getLoyaltyPromotionBasedOnSalesforceCDP"

	InvocableActionTypeTransferMemberPointsToGroups InvocableActionType = "transferMemberPointsToGroups"

	InvocableActionTypeGetLoyaltyPromotion InvocableActionType = "getLoyaltyPromotion"

	InvocableActionTypeCreateServiceDocument InvocableActionType = "createServiceDocument"

	InvocableActionTypeCreateArticleRecommendations InvocableActionType = "createArticleRecommendations"

	InvocableActionTypeDiscoveryPredict InvocableActionType = "discoveryPredict"

	InvocableActionTypeProcessProgramRebateTypeProducts InvocableActionType = "processProgramRebateTypeProducts"

	InvocableActionTypeFetchCaseClassificationRecommendations InvocableActionType = "fetchCaseClassificationRecommendations"

	InvocableActionTypeApplyCaseClassificationRecommendations InvocableActionType = "applyCaseClassificationRecommendations"

	InvocableActionTypeUpdateProgressForCumulativePromotionUsage InvocableActionType = "updateProgressForCumulativePromotionUsage"

	InvocableActionTypeUpdateAdvancedAccountForecastSetPartner InvocableActionType = "updateAdvancedAccountForecastSetPartner"

	InvocableActionTypeSwarmingCollaborationToolSettings InvocableActionType = "swarmingCollaborationToolSettings"

	InvocableActionTypeGetArticleSmartLinkUrl InvocableActionType = "getArticleSmartLinkUrl"

	InvocableActionTypePerformSurveySentimentAnalysis InvocableActionType = "performSurveySentimentAnalysis"

	InvocableActionTypePardotSlackCompletionActionNotification InvocableActionType = "pardotSlackCompletionActionNotification"

	InvocableActionTypeCalculateProjectedRebateAmount InvocableActionType = "calculateProjectedRebateAmount"

	InvocableActionTypeRunProgramProcessForTransactionJournal InvocableActionType = "runProgramProcessForTransactionJournal"

	InvocableActionTypeGoalAchievedAction InvocableActionType = "goalAchievedAction"

	InvocableActionTypeBuildIdentityVerification InvocableActionType = "buildIdentityVerification"

	InvocableActionTypeGetVerificationData InvocableActionType = "getVerificationData"

	InvocableActionTypeCreateEinsteinDocReaderLogic InvocableActionType = "createEinsteinDocReaderLogic"

	InvocableActionTypeSendNotification InvocableActionType = "sendNotification"

	InvocableActionTypeUploadBlockchainData InvocableActionType = "uploadBlockchainData"

	InvocableActionTypeSaveMemberVerificationSteps InvocableActionType = "saveMemberVerificationSteps"

	InvocableActionTypeLimitRepetitions InvocableActionType = "limitRepetitions"

	InvocableActionTypeSlackSendMessageToLaunchFlow InvocableActionType = "slackSendMessageToLaunchFlow"

	InvocableActionTypeManageRecurringSchedules InvocableActionType = "manageRecurringSchedules"

	InvocableActionTypeImportRecordsFromCsvFile InvocableActionType = "importRecordsFromCsvFile"

	InvocableActionTypeAuthorizePayment InvocableActionType = "authorizePayment"

	InvocableActionTypeGetMemberActiveSegments InvocableActionType = "getMemberActiveSegments"

	InvocableActionTypeGetAvailableSwarmObject InvocableActionType = "getAvailableSwarmObject"

	InvocableActionTypeRunExpressionSet InvocableActionType = "runExpressionSet"

	InvocableActionTypeMergeLoyaltyProgramMembership InvocableActionType = "mergeLoyaltyProgramMembership"

	InvocableActionTypeUnmergeLoyaltyProgramMembership InvocableActionType = "unmergeLoyaltyProgramMembership"

	InvocableActionTypeMassUpdateAdvAccountForecast InvocableActionType = "massUpdateAdvAccountForecast"

	InvocableActionTypeRunProgramProcess InvocableActionType = "runProgramProcess"

	InvocableActionTypeGetAssessmentResponseSummary InvocableActionType = "getAssessmentResponseSummary"

	InvocableActionTypeIndustriesSendApexAsyncRequest InvocableActionType = "industriesSendApexAsyncRequest"

	InvocableActionTypeSlackJoinChannel InvocableActionType = "slackJoinChannel"

	InvocableActionTypeCreateInvoiceFromChangeOrders InvocableActionType = "createInvoiceFromChangeOrders"

	InvocableActionTypeGenerateInboxSchedulingLink InvocableActionType = "generateInboxSchedulingLink"

	InvocableActionTypeGenerateInboxMeetingTimes InvocableActionType = "generateInboxMeetingTimes"

	InvocableActionTypeConfirmInboxMeetingTime InvocableActionType = "confirmInboxMeetingTime"

	InvocableActionTypeSendEmailMessage InvocableActionType = "sendEmailMessage"

	InvocableActionTypeGoToCadenceStep InvocableActionType = "goToCadenceStep"

	InvocableActionTypeCreateBenefitDisbursement InvocableActionType = "createBenefitDisbursement"

	InvocableActionTypeCreateCareProgramEnrolleeWorkOrderStep InvocableActionType = "createCareProgramEnrolleeWorkOrderStep"

	InvocableActionTypeGenerateTransactionJournals InvocableActionType = "generateTransactionJournals"

	InvocableActionTypeCdpRefreshDataStream InvocableActionType = "cdpRefreshDataStream"

	InvocableActionTypeGenerateMemberReferralCode InvocableActionType = "generateMemberReferralCode"

	InvocableActionTypeCdpPublishSegment InvocableActionType = "cdpPublishSegment"

	InvocableActionTypeIndustriesSendExtAsyncRequest InvocableActionType = "industriesSendExtAsyncRequest"

	InvocableActionTypeGetDataCategoryDetails InvocableActionType = "getDataCategoryDetails"

	InvocableActionTypeGetDataCategoryGroups InvocableActionType = "getDataCategoryGroups"

	InvocableActionTypeSearchKnowledgeArticles InvocableActionType = "searchKnowledgeArticles"

	InvocableActionTypeCdpPublishCalculatedInsight InvocableActionType = "cdpPublishCalculatedInsight"

	InvocableActionTypeCdpGetMlPrediction InvocableActionType = "cdpGetMlPrediction"

	InvocableActionTypeCdpTriggerModelPredJob InvocableActionType = "cdpTriggerModelPredJob"

	InvocableActionTypeScheduleHomeVisit InvocableActionType = "scheduleHomeVisit"

	InvocableActionTypeScheduleRecurringHomeVisit InvocableActionType = "scheduleRecurringHomeVisit"

	InvocableActionTypeGenerateAssessmentEnvelopeSignature InvocableActionType = "generateAssessmentEnvelopeSignature"

	InvocableActionTypeSendChannelMessage InvocableActionType = "sendChannelMessage"

	InvocableActionTypeCreateInvRsvForCart InvocableActionType = "createInvRsvForCart"

	InvocableActionTypeDeleteInvRsvForCart InvocableActionType = "deleteInvRsvForCart"

	InvocableActionTypeInitiateTextExtraction InvocableActionType = "initiateTextExtraction"

	InvocableActionTypeFetchActiveOcrTemplates InvocableActionType = "fetchActiveOcrTemplates"

	InvocableActionTypeFetchExtractedText InvocableActionType = "fetchExtractedText"

	InvocableActionTypeCreateMaterialLineForSalesItem InvocableActionType = "createMaterialLineForSalesItem"

	InvocableActionTypeGenerateDisambiguationLogData InvocableActionType = "generateDisambiguationLogData"

	InvocableActionTypeCdpRunIdentityResolution InvocableActionType = "cdpRunIdentityResolution"

	InvocableActionTypeHandleResourceAbsence InvocableActionType = "handleResourceAbsence"

	InvocableActionTypeFetchRebateClaimDetails InvocableActionType = "fetchRebateClaimDetails"

	InvocableActionTypeProcessGiftEntries InvocableActionType = "processGiftEntries"

	InvocableActionTypeProcessGiftCommitment InvocableActionType = "processGiftCommitment"

	InvocableActionTypePauseGiftCommitmentSchedule InvocableActionType = "pauseGiftCommitmentSchedule"

	InvocableActionTypeResumeGiftCommitmentSchedule InvocableActionType = "resumeGiftCommitmentSchedule"

	InvocableActionTypeCloseGiftCommitment InvocableActionType = "closeGiftCommitment"

	InvocableActionTypeManageCustomGiftCmtSchds InvocableActionType = "manageCustomGiftCmtSchds"

	InvocableActionTypeManageGiftDefaultDesignations InvocableActionType = "manageGiftDefaultDesignations"

	InvocableActionTypeManageRcrGiftCmtSchd InvocableActionType = "manageRcrGiftCmtSchd"

	InvocableActionTypeUpdateProcessedGiftEntries InvocableActionType = "updateProcessedGiftEntries"

	InvocableActionTypeAssignEnablementProgram InvocableActionType = "assignEnablementProgram"

	InvocableActionTypeInviteToReorderPortal InvocableActionType = "inviteToReorderPortal"

	InvocableActionTypeRunRecordAggrBatchProcDef InvocableActionType = "runRecordAggrBatchProcDef"

	InvocableActionTypeSendSmsMessage InvocableActionType = "sendSmsMessage"

	InvocableActionTypeCreaContactsFromGrpCensMembers InvocableActionType = "creaContactsFromGrpCensMembers"

	InvocableActionTypeCreaPersAccountsFromGrpCensMbr InvocableActionType = "creaPersAccountsFromGrpCensMbr"

	InvocableActionTypeCreaUsersFromGrpCensusMembers InvocableActionType = "creaUsersFromGrpCensusMembers"

	InvocableActionTypeEnrollMembers InvocableActionType = "enrollMembers"

	InvocableActionTypeInitiateAmendQuantity InvocableActionType = "initiateAmendQuantity"

	InvocableActionTypeManageGiftTrxnDesignations InvocableActionType = "manageGiftTrxnDesignations"

	InvocableActionTypeProcessReceivedDocument InvocableActionType = "processReceivedDocument"

	InvocableActionTypeGetEffectiveAccountsForStoreUser InvocableActionType = "getEffectiveAccountsForStoreUser"

	InvocableActionTypeGetProductRecommendations InvocableActionType = "getProductRecommendations"

	InvocableActionTypeGenerateOrderSummaryUrl InvocableActionType = "generateOrderSummaryUrl"

	InvocableActionTypeCreateBenefitDisbursementForServiceAppointment InvocableActionType = "createBenefitDisbursementForServiceAppointment"

	InvocableActionTypeBuildContext InvocableActionType = "buildContext"

	InvocableActionTypeCreateContractDocGen InvocableActionType = "createContractDocGen"

	InvocableActionTypeCheckinContract InvocableActionType = "checkinContract"

	InvocableActionTypeContractAction InvocableActionType = "contractAction"

	InvocableActionTypeSendEsignContract InvocableActionType = "sendEsignContract"

	InvocableActionTypePersistContextData InvocableActionType = "persistContextData"

	InvocableActionTypeCreateReferral InvocableActionType = "createReferral"

	InvocableActionTypeCreateChatSessionId InvocableActionType = "createChatSessionId"

	InvocableActionTypeAddOrderToCart InvocableActionType = "addOrderToCart"

	InvocableActionTypeGenerateUserInputs InvocableActionType = "generateUserInputs"

	InvocableActionTypeRateProducts InvocableActionType = "rateProducts"

	InvocableActionTypeUpdateCareGapStatus InvocableActionType = "updateCareGapStatus"

	InvocableActionTypeSendConversationMessages InvocableActionType = "sendConversationMessages"

	InvocableActionTypeInitiateNaturalLangProcessing InvocableActionType = "initiateNaturalLangProcessing"

	InvocableActionTypeFetchBoostBuryRuleRecommendation InvocableActionType = "fetchBoostBuryRuleRecommendation"

	InvocableActionTypeCaptureUserFeedback InvocableActionType = "captureUserFeedback"

	InvocableActionTypeCreateSearchBoostBuryRule InvocableActionType = "createSearchBoostBuryRule"
)

type FlowScreenFieldType string

const (
	FlowScreenFieldTypeDisplayText FlowScreenFieldType = "DisplayText"

	FlowScreenFieldTypeInputField FlowScreenFieldType = "InputField"

	FlowScreenFieldTypeLargeTextArea FlowScreenFieldType = "LargeTextArea"

	FlowScreenFieldTypePasswordField FlowScreenFieldType = "PasswordField"

	FlowScreenFieldTypeRadioButtons FlowScreenFieldType = "RadioButtons"

	FlowScreenFieldTypeDropdownBox FlowScreenFieldType = "DropdownBox"

	FlowScreenFieldTypeMultiSelectCheckboxes FlowScreenFieldType = "MultiSelectCheckboxes"

	FlowScreenFieldTypeMultiSelectPicklist FlowScreenFieldType = "MultiSelectPicklist"

	FlowScreenFieldTypeComponentInstance FlowScreenFieldType = "ComponentInstance"

	FlowScreenFieldTypeComponentInput FlowScreenFieldType = "ComponentInput"

	FlowScreenFieldTypeComponentChoice FlowScreenFieldType = "ComponentChoice"

	FlowScreenFieldTypeComponentMultiChoice FlowScreenFieldType = "ComponentMultiChoice"

	FlowScreenFieldTypeComponentDisplay FlowScreenFieldType = "ComponentDisplay"

	FlowScreenFieldTypeRepeater FlowScreenFieldType = "Repeater"

	FlowScreenFieldTypeRegionContainer FlowScreenFieldType = "RegionContainer"

	FlowScreenFieldTypeRegion FlowScreenFieldType = "Region"

	FlowScreenFieldTypeObjectProvided FlowScreenFieldType = "ObjectProvided"
)

type FlowScreenFieldInputsRevisited string

const (
	FlowScreenFieldInputsRevisitedUseStoredValues FlowScreenFieldInputsRevisited = "UseStoredValues"

	FlowScreenFieldInputsRevisitedResetValues FlowScreenFieldInputsRevisited = "ResetValues"
)

type FlowRegionContainerType string

const (
	FlowRegionContainerTypeSectionWithHeader FlowRegionContainerType = "SectionWithHeader"

	FlowRegionContainerTypeSectionWithoutHeader FlowRegionContainerType = "SectionWithoutHeader"
)

type FlowElementSubtype string

const (
	FlowElementSubtypeSortCollectionProcessor FlowElementSubtype = "SortCollectionProcessor"

	FlowElementSubtypeRecommendationMapCollectionProcessor FlowElementSubtype = "RecommendationMapCollectionProcessor"

	FlowElementSubtypeFilterCollectionProcessor FlowElementSubtype = "FilterCollectionProcessor"

	FlowElementSubtypeWaitDate FlowElementSubtype = "WaitDate"

	FlowElementSubtypeWaitAttribute FlowElementSubtype = "WaitAttribute"

	FlowElementSubtypeWaitDuration FlowElementSubtype = "WaitDuration"

	FlowElementSubtypeInteractiveStep FlowElementSubtype = "InteractiveStep"

	FlowElementSubtypeBackgroundStep FlowElementSubtype = "BackgroundStep"

	FlowElementSubtypeMuleSoftStep FlowElementSubtype = "MuleSoftStep"

	FlowElementSubtypeManagedContentRoleInteractiveStep FlowElementSubtype = "ManagedContentRoleInteractiveStep"

	FlowElementSubtypeManagedContentVariantSetLockBackgroundStep FlowElementSubtype = "ManagedContentVariantSetLockBackgroundStep"

	FlowElementSubtypeManagedContentVariantSetReadyBackgroundStep FlowElementSubtype = "ManagedContentVariantSetReadyBackgroundStep"

	FlowElementSubtypeManagedContentVariantAutoPublishBackgroundStep FlowElementSubtype = "ManagedContentVariantAutoPublishBackgroundStep"

	FlowElementSubtypeManagedContentVariantAutoUnpublishBackgroundStep FlowElementSubtype = "ManagedContentVariantAutoUnpublishBackgroundStep"

	FlowElementSubtypeCreatePromptInstructions FlowElementSubtype = "CreatePromptInstructions"
)

type FlowCollectionProcessorType string

const (
	FlowCollectionProcessorTypeSortCollectionProcessor FlowCollectionProcessorType = "SortCollectionProcessor"

	FlowCollectionProcessorTypeRecommendationMapCollectionProcessor FlowCollectionProcessorType = "RecommendationMapCollectionProcessor"

	FlowCollectionProcessorTypeFilterCollectionProcessor FlowCollectionProcessorType = "FilterCollectionProcessor"
)

type IterationOrder string

const (
	IterationOrderAsc IterationOrder = "Asc"

	IterationOrderDesc IterationOrder = "Desc"
)

type FlowEntryType string

const (
	FlowEntryTypeAlways FlowEntryType = "Always"

	FlowEntryTypeAfterCompletion FlowEntryType = "AfterCompletion"
)

type RecordTriggerType string

const (
	RecordTriggerTypeUpdate RecordTriggerType = "Update"

	RecordTriggerTypeCreate RecordTriggerType = "Create"

	RecordTriggerTypeCreateAndUpdate RecordTriggerType = "CreateAndUpdate"

	RecordTriggerTypeDelete RecordTriggerType = "Delete"

	RecordTriggerTypeNone RecordTriggerType = "None"
)

type FlowStartFrequency string

const (
	FlowStartFrequencyOnActivate FlowStartFrequency = "OnActivate"

	FlowStartFrequencyOnce FlowStartFrequency = "Once"

	FlowStartFrequencyDaily FlowStartFrequency = "Daily"

	FlowStartFrequencyWeekly FlowStartFrequency = "Weekly"
)

type FlowTriggerType string

const (
	FlowTriggerTypeNone FlowTriggerType = "None"

	FlowTriggerTypeScheduled FlowTriggerType = "Scheduled"

	FlowTriggerTypeRecordBeforeSave FlowTriggerType = "RecordBeforeSave"

	FlowTriggerTypeRecordBeforeDelete FlowTriggerType = "RecordBeforeDelete"

	FlowTriggerTypeRecordAfterSave FlowTriggerType = "RecordAfterSave"

	FlowTriggerTypePlatformEvent FlowTriggerType = "PlatformEvent"

	FlowTriggerTypeEventDrivenJourney FlowTriggerType = "EventDrivenJourney"

	FlowTriggerTypeSegment FlowTriggerType = "Segment"

	FlowTriggerTypeDataCloudDataChange FlowTriggerType = "DataCloudDataChange"

	FlowTriggerTypeFormSubmissionEvent FlowTriggerType = "FormSubmissionEvent"
)

type FlowTransactionModel string

const (
	FlowTransactionModelAutomatic FlowTransactionModel = "Automatic"

	FlowTransactionModelNewTransaction FlowTransactionModel = "NewTransaction"

	FlowTransactionModelCurrentTransaction FlowTransactionModel = "CurrentTransaction"
)

type FlowEnvironment string

const (
	FlowEnvironmentDefault FlowEnvironment = "Default"

	FlowEnvironmentSlack FlowEnvironment = "Slack"
)

type FlowRunInMode string

const (
	FlowRunInModeDefaultMode FlowRunInMode = "DefaultMode"

	FlowRunInModeSystemModeWithSharing FlowRunInMode = "SystemModeWithSharing"

	FlowRunInModeSystemModeWithoutSharing FlowRunInMode = "SystemModeWithoutSharing"
)

type FlowVersionStatus string

const (
	FlowVersionStatusActive FlowVersionStatus = "Active"

	FlowVersionStatusDraft FlowVersionStatus = "Draft"

	FlowVersionStatusObsolete FlowVersionStatus = "Obsolete"

	FlowVersionStatusInvalidDraft FlowVersionStatus = "InvalidDraft"
)

type FlowTestParameterType string

const (
	FlowTestParameterTypeInputTriggeringRecordInitial FlowTestParameterType = "InputTriggeringRecordInitial"

	FlowTestParameterTypeInputTriggeringRecordUpdated FlowTestParameterType = "InputTriggeringRecordUpdated"

	FlowTestParameterTypeScheduledPath FlowTestParameterType = "ScheduledPath"
)

type FolderAccessTypes string

const (
	FolderAccessTypesShared FolderAccessTypes = "Shared"

	FolderAccessTypesPublic FolderAccessTypes = "Public"

	FolderAccessTypesHidden FolderAccessTypes = "Hidden"

	FolderAccessTypesPublicInternal FolderAccessTypes = "PublicInternal"
)

type FolderShareAccessLevel string

const (
	FolderShareAccessLevelView FolderShareAccessLevel = "View"

	FolderShareAccessLevelEditAllContents FolderShareAccessLevel = "EditAllContents"

	FolderShareAccessLevelManage FolderShareAccessLevel = "Manage"
)

type FolderSharedToType string

const (
	FolderSharedToTypeGroup FolderSharedToType = "Group"

	FolderSharedToTypeRole FolderSharedToType = "Role"

	FolderSharedToTypeRoleAndSubordinates FolderSharedToType = "RoleAndSubordinates"

	FolderSharedToTypeRoleAndSubordinatesInternal FolderSharedToType = "RoleAndSubordinatesInternal"

	FolderSharedToTypeManager FolderSharedToType = "Manager"

	FolderSharedToTypeManagerAndSubordinatesInternal FolderSharedToType = "ManagerAndSubordinatesInternal"

	FolderSharedToTypeOrganization FolderSharedToType = "Organization"

	FolderSharedToTypeTerritory FolderSharedToType = "Territory"

	FolderSharedToTypeTerritoryAndSubordinates FolderSharedToType = "TerritoryAndSubordinates"

	FolderSharedToTypeAllPrmUsers FolderSharedToType = "AllPrmUsers"

	FolderSharedToTypeUser FolderSharedToType = "User"

	FolderSharedToTypePartnerUser FolderSharedToType = "PartnerUser"

	FolderSharedToTypeAllCspUsers FolderSharedToType = "AllCspUsers"

	FolderSharedToTypeCustomerPortalUser FolderSharedToType = "CustomerPortalUser"

	FolderSharedToTypePortalRole FolderSharedToType = "PortalRole"

	FolderSharedToTypePortalRoleAndSubordinates FolderSharedToType = "PortalRoleAndSubordinates"

	FolderSharedToTypeChannelProgramGroup FolderSharedToType = "ChannelProgramGroup"
)

type PublicFolderAccess string

const (
	PublicFolderAccessReadOnly PublicFolderAccess = "ReadOnly"

	PublicFolderAccessReadWrite PublicFolderAccess = "ReadWrite"
)

type ForecastingDateType string

const (
	ForecastingDateTypeOpportunityCloseDate ForecastingDateType = "OpportunityCloseDate"

	ForecastingDateTypeProductDate ForecastingDateType = "ProductDate"

	ForecastingDateTypeScheduleDate ForecastingDateType = "ScheduleDate"

	ForecastingDateTypeOLIMeasureCloseDateOnly ForecastingDateType = "OLIMeasureCloseDateOnly"

	ForecastingDateTypeProductDateOnly ForecastingDateType = "ProductDateOnly"

	ForecastingDateTypeScheduleDateOnly ForecastingDateType = "ScheduleDateOnly"

	ForecastingDateTypeOpportunityCustomDate ForecastingDateType = "OpportunityCustomDate"

	ForecastingDateTypeOLIMeasureOppCustomDateOnly ForecastingDateType = "OLIMeasureOppCustomDateOnly"
)

type PeriodTypes string

const (
	PeriodTypesMonth PeriodTypes = "Month"

	PeriodTypesQuarter PeriodTypes = "Quarter"

	PeriodTypesWeek PeriodTypes = "Week"

	PeriodTypesYear PeriodTypes = "Year"
)

type PlannerAttrDataType string

type PlannerAttrMappingType string

const (
	PlannerAttrMappingTypeInput PlannerAttrMappingType = "input"

	PlannerAttrMappingTypeOutput PlannerAttrMappingType = "output"
)

type PlannerFunctionInvocableTargetType string

const (
	PlannerFunctionInvocableTargetTypeApex PlannerFunctionInvocableTargetType = "apex"

	PlannerFunctionInvocableTargetTypeFlow PlannerFunctionInvocableTargetType = "flow"

	PlannerFunctionInvocableTargetTypeStandardInvocableAction PlannerFunctionInvocableTargetType = "standardInvocableAction"

	PlannerFunctionInvocableTargetTypePrompt PlannerFunctionInvocableTargetType = "prompt"

	PlannerFunctionInvocableTargetTypeExternalService PlannerFunctionInvocableTargetType = "externalService"

	PlannerFunctionInvocableTargetTypeQuickAction PlannerFunctionInvocableTargetType = "quickAction"
)

type PageComponentType string

const (
	PageComponentTypeLinks PageComponentType = "links"

	PageComponentTypeHtmlArea PageComponentType = "htmlArea"

	PageComponentTypeImageOrNote PageComponentType = "imageOrNote"

	PageComponentTypeVisualforcePage PageComponentType = "visualforcePage"
)

type PageComponentWidth string

const (
	PageComponentWidthNarrow PageComponentWidth = "narrow"

	PageComponentWidthWide PageComponentWidth = "wide"
)

type IPAddressFeature string

const (
	IPAddressFeatureEmailIpFiltering IPAddressFeature = "EmailIpFiltering"
)

type IPAddressUsageScope string

const (
	IPAddressUsageScopeExclusion IPAddressUsageScope = "Exclusion"

	IPAddressUsageScopeInclusion IPAddressUsageScope = "Inclusion"
)

type IdentityVerificationDataSourceType string

const (
	IdentityVerificationDataSourceTypeSalesforce IdentityVerificationDataSourceType = "Salesforce"

	IdentityVerificationDataSourceTypeExternal IdentityVerificationDataSourceType = "External"
)

type IdentityVerificationProcFldDataSourceType string

const (
	IdentityVerificationProcFldDataSourceTypeSalesforce IdentityVerificationProcFldDataSourceType = "Salesforce"

	IdentityVerificationProcFldDataSourceTypeExternal IdentityVerificationProcFldDataSourceType = "External"
)

type IdentityVerificationProcFldFieldDataType string

const (
	IdentityVerificationProcFldFieldDataTypeAddress IdentityVerificationProcFldFieldDataType = "address"

	IdentityVerificationProcFldFieldDataTypeCheckbox IdentityVerificationProcFldFieldDataType = "checkbox"

	IdentityVerificationProcFldFieldDataTypeCurrency IdentityVerificationProcFldFieldDataType = "currency"

	IdentityVerificationProcFldFieldDataTypeDateonly IdentityVerificationProcFldFieldDataType = "dateonly"

	IdentityVerificationProcFldFieldDataTypeDatetime IdentityVerificationProcFldFieldDataType = "datetime"

	IdentityVerificationProcFldFieldDataTypeEmail IdentityVerificationProcFldFieldDataType = "email"

	IdentityVerificationProcFldFieldDataTypeNumber IdentityVerificationProcFldFieldDataType = "number"

	IdentityVerificationProcFldFieldDataTypePercent IdentityVerificationProcFldFieldDataType = "percent"

	IdentityVerificationProcFldFieldDataTypePhone IdentityVerificationProcFldFieldDataType = "phone"

	IdentityVerificationProcFldFieldDataTypePicklist IdentityVerificationProcFldFieldDataType = "picklist"

	IdentityVerificationProcFldFieldDataTypeReference IdentityVerificationProcFldFieldDataType = "reference"

	IdentityVerificationProcFldFieldDataTypeText IdentityVerificationProcFldFieldDataType = "text"

	IdentityVerificationProcFldFieldDataTypeTimeonly IdentityVerificationProcFldFieldDataType = "timeonly"

	IdentityVerificationProcFldFieldDataTypeUrl IdentityVerificationProcFldFieldDataType = "url"

	IdentityVerificationProcFldFieldDataTypeOther IdentityVerificationProcFldFieldDataType = "other"
)

type IdentityVerificationProcFldFieldType string

const (
	IdentityVerificationProcFldFieldTypeRequiredVerifier IdentityVerificationProcFldFieldType = "requiredVerifier"

	IdentityVerificationProcFldFieldTypeOptionalVerifier IdentityVerificationProcFldFieldType = "optionalVerifier"

	IdentityVerificationProcFldFieldTypeSearchField IdentityVerificationProcFldFieldType = "searchField"

	IdentityVerificationProcFldFieldTypeResultField IdentityVerificationProcFldFieldType = "resultField"

	IdentityVerificationProcFldFieldTypeAdditionalResultField IdentityVerificationProcFldFieldType = "additionalResultField"

	IdentityVerificationProcFldFieldTypeSearchFilter IdentityVerificationProcFldFieldType = "searchFilter"
)

type IdentityVerificationSearchType string

const (
	IdentityVerificationSearchTypeTextBased IdentityVerificationSearchType = "Text-Based"

	IdentityVerificationSearchTypeObjectBased IdentityVerificationSearchType = "Object-Based"
)

type IdentityVerificationSearchLayoutType string

const (
	IdentityVerificationSearchLayoutTypeTab IdentityVerificationSearchLayoutType = "Tab"

	IdentityVerificationSearchLayoutTypeStack IdentityVerificationSearchLayoutType = "Stack"
)

type IFrameWhitelistContext string

const (
	IFrameWhitelistContextVisualforcePages IFrameWhitelistContext = "VisualforcePages"

	IFrameWhitelistContextSurveys IFrameWhitelistContext = "Surveys"
)

type ExternalConnectionType string

const (
	ExternalConnectionTypeAwsPrivateLink ExternalConnectionType = "AwsPrivateLink"
)

type InboundConnPropertyName string

const (
	InboundConnPropertyNameRegion InboundConnPropertyName = "Region"

	InboundConnPropertyNameAwsVpcEndpointId InboundConnPropertyName = "AwsVpcEndpointId"

	InboundConnPropertyNameSourceIpRanges InboundConnPropertyName = "SourceIpRanges"
)

type ExternalConnectionStatus string

const (
	ExternalConnectionStatusUnprovisioned ExternalConnectionStatus = "Unprovisioned"

	ExternalConnectionStatusAllocating ExternalConnectionStatus = "Allocating"

	ExternalConnectionStatusPendingAcceptance ExternalConnectionStatus = "PendingAcceptance"

	ExternalConnectionStatusPendingActivation ExternalConnectionStatus = "PendingActivation"

	ExternalConnectionStatusRejectedRemotely ExternalConnectionStatus = "RejectedRemotely"

	ExternalConnectionStatusDeletedRemotely ExternalConnectionStatus = "DeletedRemotely"

	ExternalConnectionStatusTeardownInProgress ExternalConnectionStatus = "TeardownInProgress"

	ExternalConnectionStatusReady ExternalConnectionStatus = "Ready"
)

type KnowledgeCaseEditor string

const (
	KnowledgeCaseEditorSimple KnowledgeCaseEditor = "simple"

	KnowledgeCaseEditorStandard KnowledgeCaseEditor = "standard"
)

type KnowledgeLanguageLookupValueType string

const (
	KnowledgeLanguageLookupValueTypeUser KnowledgeLanguageLookupValueType = "User"

	KnowledgeLanguageLookupValueTypeQueue KnowledgeLanguageLookupValueType = "Queue"
)

type FeedLayoutFilterPosition string

const (
	FeedLayoutFilterPositionCenterDropDown FeedLayoutFilterPosition = "CenterDropDown"

	FeedLayoutFilterPositionLeftFixed FeedLayoutFilterPosition = "LeftFixed"

	FeedLayoutFilterPositionLeftFloat FeedLayoutFilterPosition = "LeftFloat"
)

type FeedLayoutFilterType string

const (
	FeedLayoutFilterTypeAllUpdates FeedLayoutFilterType = "AllUpdates"

	FeedLayoutFilterTypeFeedItemType FeedLayoutFilterType = "FeedItemType"

	FeedLayoutFilterTypeCustom FeedLayoutFilterType = "Custom"
)

type FeedLayoutComponentType string

const (
	FeedLayoutComponentTypeHelpAndToolLinks FeedLayoutComponentType = "HelpAndToolLinks"

	FeedLayoutComponentTypeCustomButtons FeedLayoutComponentType = "CustomButtons"

	FeedLayoutComponentTypeFollowing FeedLayoutComponentType = "Following"

	FeedLayoutComponentTypeFollowers FeedLayoutComponentType = "Followers"

	FeedLayoutComponentTypeCustomLinks FeedLayoutComponentType = "CustomLinks"

	FeedLayoutComponentTypeMilestones FeedLayoutComponentType = "Milestones"

	FeedLayoutComponentTypeTopics FeedLayoutComponentType = "Topics"

	FeedLayoutComponentTypeCaseUnifiedFiles FeedLayoutComponentType = "CaseUnifiedFiles"

	FeedLayoutComponentTypeVisualforce FeedLayoutComponentType = "Visualforce"
)

type LayoutHeader string

const (
	LayoutHeaderPersonalTagging LayoutHeader = "PersonalTagging"

	LayoutHeaderPublicTagging LayoutHeader = "PublicTagging"
)

type UiBehavior string

const (
	UiBehaviorEdit UiBehavior = "Edit"

	UiBehaviorRequired UiBehavior = "Required"

	UiBehaviorReadonly UiBehavior = "Readonly"
)

type ReportChartComponentSize string

const (
	ReportChartComponentSizeSMALL ReportChartComponentSize = "SMALL"

	ReportChartComponentSizeMEDIUM ReportChartComponentSize = "MEDIUM"

	ReportChartComponentSizeLARGE ReportChartComponentSize = "LARGE"
)

type LayoutSectionStyle string

const (
	LayoutSectionStyleTwoColumnsTopToBottom LayoutSectionStyle = "TwoColumnsTopToBottom"

	LayoutSectionStyleTwoColumnsLeftToRight LayoutSectionStyle = "TwoColumnsLeftToRight"

	LayoutSectionStyleOneColumn LayoutSectionStyle = "OneColumn"

	LayoutSectionStyleCustomLinks LayoutSectionStyle = "CustomLinks"
)

type SummaryLayoutStyle string

const (
	SummaryLayoutStyleDefault SummaryLayoutStyle = "Default"

	SummaryLayoutStyleQuoteTemplate SummaryLayoutStyle = "QuoteTemplate"

	SummaryLayoutStyleDefaultQuoteTemplate SummaryLayoutStyle = "DefaultQuoteTemplate"

	SummaryLayoutStyleServiceReportTemplate SummaryLayoutStyle = "ServiceReportTemplate"

	SummaryLayoutStyleChildServiceReportTemplateStyle SummaryLayoutStyle = "ChildServiceReportTemplateStyle"

	SummaryLayoutStyleDefaultServiceReportTemplate SummaryLayoutStyle = "DefaultServiceReportTemplate"

	SummaryLayoutStyleCaseInteraction SummaryLayoutStyle = "CaseInteraction"

	SummaryLayoutStyleQuickActionLayoutLeftRight SummaryLayoutStyle = "QuickActionLayoutLeftRight"

	SummaryLayoutStyleQuickActionLayoutTopDown SummaryLayoutStyle = "QuickActionLayoutTopDown"

	SummaryLayoutStylePathAssistant SummaryLayoutStyle = "PathAssistant"
)

type VisibleOrRequired string

const (
	VisibleOrRequiredVisibleOptional VisibleOrRequired = "VisibleOptional"

	VisibleOrRequiredVisibleRequired VisibleOrRequired = "VisibleRequired"

	VisibleOrRequiredNotVisible VisibleOrRequired = "NotVisible"
)

type LetterheadHorizontalAlignment string

const (
	LetterheadHorizontalAlignmentNone LetterheadHorizontalAlignment = "None"

	LetterheadHorizontalAlignmentLeft LetterheadHorizontalAlignment = "Left"

	LetterheadHorizontalAlignmentCenter LetterheadHorizontalAlignment = "Center"

	LetterheadHorizontalAlignmentRight LetterheadHorizontalAlignment = "Right"
)

type LetterheadVerticalAlignment string

const (
	LetterheadVerticalAlignmentNone LetterheadVerticalAlignment = "None"

	LetterheadVerticalAlignmentTop LetterheadVerticalAlignment = "Top"

	LetterheadVerticalAlignmentMiddle LetterheadVerticalAlignment = "Middle"

	LetterheadVerticalAlignmentBottom LetterheadVerticalAlignment = "Bottom"
)

type LightningBoltCategory string

const (
	LightningBoltCategoryCommunications LightningBoltCategory = "Communications"

	LightningBoltCategoryEducation LightningBoltCategory = "Education"

	LightningBoltCategoryFinancialServices LightningBoltCategory = "FinancialServices"

	LightningBoltCategoryGovernment LightningBoltCategory = "Government"

	LightningBoltCategoryHealthcareLifeSciences LightningBoltCategory = "HealthcareLifeSciences"

	LightningBoltCategoryManufacturing LightningBoltCategory = "Manufacturing"

	LightningBoltCategoryMedia LightningBoltCategory = "Media"

	LightningBoltCategoryNonprofits LightningBoltCategory = "Nonprofits"

	LightningBoltCategoryProfessionalServices LightningBoltCategory = "ProfessionalServices"

	LightningBoltCategoryRealEstate LightningBoltCategory = "RealEstate"

	LightningBoltCategoryRetail LightningBoltCategory = "Retail"

	LightningBoltCategoryTravelTransportationHospitality LightningBoltCategory = "TravelTransportationHospitality"

	LightningBoltCategoryHighTech LightningBoltCategory = "HighTech"

	LightningBoltCategoryGeneralBusiness LightningBoltCategory = "GeneralBusiness"
)

type SupervisorAgentStatusFilter string

const (
	SupervisorAgentStatusFilterOnline SupervisorAgentStatusFilter = "Online"

	SupervisorAgentStatusFilterAway SupervisorAgentStatusFilter = "Away"

	SupervisorAgentStatusFilterOffline SupervisorAgentStatusFilter = "Offline"
)

type LiveChatButtonPresentation string

const (
	LiveChatButtonPresentationSlide LiveChatButtonPresentation = "Slide"

	LiveChatButtonPresentationFade LiveChatButtonPresentation = "Fade"

	LiveChatButtonPresentationAppear LiveChatButtonPresentation = "Appear"

	LiveChatButtonPresentationCustom LiveChatButtonPresentation = "Custom"
)

type LiveChatButtonInviteEndPosition string

const (
	LiveChatButtonInviteEndPositionTopLeft LiveChatButtonInviteEndPosition = "TopLeft"

	LiveChatButtonInviteEndPositionTop LiveChatButtonInviteEndPosition = "Top"

	LiveChatButtonInviteEndPositionTopRight LiveChatButtonInviteEndPosition = "TopRight"

	LiveChatButtonInviteEndPositionLeft LiveChatButtonInviteEndPosition = "Left"

	LiveChatButtonInviteEndPositionCenter LiveChatButtonInviteEndPosition = "Center"

	LiveChatButtonInviteEndPositionRight LiveChatButtonInviteEndPosition = "Right"

	LiveChatButtonInviteEndPositionBottomLeft LiveChatButtonInviteEndPosition = "BottomLeft"

	LiveChatButtonInviteEndPositionBottom LiveChatButtonInviteEndPosition = "Bottom"

	LiveChatButtonInviteEndPositionBottomRight LiveChatButtonInviteEndPosition = "BottomRight"
)

type LiveChatButtonInviteStartPosition string

const (
	LiveChatButtonInviteStartPositionTopLeft LiveChatButtonInviteStartPosition = "TopLeft"

	LiveChatButtonInviteStartPositionTopLeftTop LiveChatButtonInviteStartPosition = "TopLeftTop"

	LiveChatButtonInviteStartPositionTop LiveChatButtonInviteStartPosition = "Top"

	LiveChatButtonInviteStartPositionTopRightTop LiveChatButtonInviteStartPosition = "TopRightTop"

	LiveChatButtonInviteStartPositionTopRight LiveChatButtonInviteStartPosition = "TopRight"

	LiveChatButtonInviteStartPositionTopRightRight LiveChatButtonInviteStartPosition = "TopRightRight"

	LiveChatButtonInviteStartPositionRight LiveChatButtonInviteStartPosition = "Right"

	LiveChatButtonInviteStartPositionBottomRightRight LiveChatButtonInviteStartPosition = "BottomRightRight"

	LiveChatButtonInviteStartPositionBottomRight LiveChatButtonInviteStartPosition = "BottomRight"

	LiveChatButtonInviteStartPositionBottomRightBottom LiveChatButtonInviteStartPosition = "BottomRightBottom"

	LiveChatButtonInviteStartPositionBottom LiveChatButtonInviteStartPosition = "Bottom"

	LiveChatButtonInviteStartPositionBottomLeftBottom LiveChatButtonInviteStartPosition = "BottomLeftBottom"

	LiveChatButtonInviteStartPositionBottomLeft LiveChatButtonInviteStartPosition = "BottomLeft"

	LiveChatButtonInviteStartPositionBottomLeftLeft LiveChatButtonInviteStartPosition = "BottomLeftLeft"

	LiveChatButtonInviteStartPositionLeft LiveChatButtonInviteStartPosition = "Left"

	LiveChatButtonInviteStartPositionTopLeftLeft LiveChatButtonInviteStartPosition = "TopLeftLeft"
)

type LiveChatButtonRoutingType string

const (
	LiveChatButtonRoutingTypeChoice LiveChatButtonRoutingType = "Choice"

	LiveChatButtonRoutingTypeLeastActive LiveChatButtonRoutingType = "LeastActive"

	LiveChatButtonRoutingTypeMostAvailable LiveChatButtonRoutingType = "MostAvailable"
)

type LiveChatButtonType string

const (
	LiveChatButtonTypeStandard LiveChatButtonType = "Standard"

	LiveChatButtonTypeInvite LiveChatButtonType = "Invite"
)

type SensitiveDataActionType string

const (
	SensitiveDataActionTypeRemove SensitiveDataActionType = "Remove"

	SensitiveDataActionTypeReplace SensitiveDataActionType = "Replace"
)

type MLRelationType string

const (
	MLRelationTypeInner MLRelationType = "Inner"

	MLRelationTypeLeftouter MLRelationType = "Leftouter"

	MLRelationTypeLeftinner MLRelationType = "Leftinner"

	MLRelationTypeFull MLRelationType = "Full"
)

type MLFieldType string

const (
	MLFieldTypePrediction MLFieldType = "Prediction"

	MLFieldTypePushback MLFieldType = "Pushback"

	MLFieldTypeIncluded MLFieldType = "Included"

	MLFieldTypeExcluded MLFieldType = "Excluded"

	MLFieldTypeJoin MLFieldType = "Join"

	MLFieldTypeRelated MLFieldType = "Related"

	MLFieldTypeExpression MLFieldType = "Expression"

	MLFieldTypeSegmentExpression MLFieldType = "SegmentExpression"

	MLFieldTypeTrainingExpression MLFieldType = "TrainingExpression"

	MLFieldTypeScoringExpression MLFieldType = "ScoringExpression"

	MLFieldTypePositiveExpression MLFieldType = "PositiveExpression"

	MLFieldTypeNegativeExpression MLFieldType = "NegativeExpression"

	MLFieldTypeSourceDate MLFieldType = "SourceDate"

	MLFieldTypeRetriever MLFieldType = "Retriever"
)

type AIValueType string

const (
	AIValueTypeNumber AIValueType = "Number"

	AIValueTypeString AIValueType = "String"

	AIValueTypeBoolean AIValueType = "Boolean"

	AIValueTypeDate AIValueType = "Date"

	AIValueTypeDateTime AIValueType = "DateTime"

	AIValueTypeSupplier AIValueType = "Supplier"

	AIValueTypeCurrency AIValueType = "Currency"

	AIValueTypeVarchar AIValueType = "Varchar"

	AIValueTypeComparison AIValueType = "Comparison"
)

type AIFilterUnit string

const (
	AIFilterUnitMilliseconds AIFilterUnit = "Milliseconds"

	AIFilterUnitSeconds AIFilterUnit = "Seconds"

	AIFilterUnitMinutes AIFilterUnit = "Minutes"

	AIFilterUnitHours AIFilterUnit = "Hours"

	AIFilterUnitDays AIFilterUnit = "Days"

	AIFilterUnitWeeks AIFilterUnit = "Weeks"

	AIFilterUnitMonths AIFilterUnit = "Months"

	AIFilterUnitYears AIFilterUnit = "Years"
)

type AIFilterOperation string

const (
	AIFilterOperationAnd AIFilterOperation = "And"

	AIFilterOperationOr AIFilterOperation = "Or"

	AIFilterOperationNot AIFilterOperation = "Not"

	AIFilterOperationLessThan AIFilterOperation = "LessThan"

	AIFilterOperationLessThanOrEqual AIFilterOperation = "LessThanOrEqual"

	AIFilterOperationGreaterThan AIFilterOperation = "GreaterThan"

	AIFilterOperationGreaterThanOrEqual AIFilterOperation = "GreaterThanOrEqual"

	AIFilterOperationEquals AIFilterOperation = "Equals"

	AIFilterOperationNotEquals AIFilterOperation = "NotEquals"

	AIFilterOperationAdd AIFilterOperation = "Add"

	AIFilterOperationSubtract AIFilterOperation = "Subtract"

	AIFilterOperationMultiply AIFilterOperation = "Multiply"

	AIFilterOperationDivide AIFilterOperation = "Divide"

	AIFilterOperationIsNull AIFilterOperation = "IsNull"

	AIFilterOperationIsNotNull AIFilterOperation = "IsNotNull"

	AIFilterOperationStartsWith AIFilterOperation = "StartsWith"

	AIFilterOperationEndsWith AIFilterOperation = "EndsWith"

	AIFilterOperationContains AIFilterOperation = "Contains"

	AIFilterOperationConcat AIFilterOperation = "Concat"

	AIFilterOperationDoesNotContain AIFilterOperation = "DoesNotContain"

	AIFilterOperationBetween AIFilterOperation = "Between"

	AIFilterOperationIn AIFilterOperation = "In"
)

type MLDataDefinitionType string

const (
	MLDataDefinitionTypeRecipient MLDataDefinitionType = "Recipient"

	MLDataDefinitionTypeCandidate MLDataDefinitionType = "Candidate"

	MLDataDefinitionTypeInteraction MLDataDefinitionType = "Interaction"

	MLDataDefinitionTypePrediction MLDataDefinitionType = "Prediction"

	MLDataDefinitionTypeGenerative MLDataDefinitionType = "Generative"
)

type MLPredictionDefinitionStatus string

const (
	MLPredictionDefinitionStatusEnabled MLPredictionDefinitionStatus = "Enabled"

	MLPredictionDefinitionStatusDisabled MLPredictionDefinitionStatus = "Disabled"

	MLPredictionDefinitionStatusDraft MLPredictionDefinitionStatus = "Draft"
)

type AIPredictionType string

const (
	AIPredictionTypeScoringSpecificOutcome AIPredictionType = "ScoringSpecificOutcome"

	AIPredictionTypeBinaryClassification AIPredictionType = "BinaryClassification"

	AIPredictionTypeMulticlassClassification AIPredictionType = "MulticlassClassification"

	AIPredictionTypeRegression AIPredictionType = "Regression"

	AIPredictionTypeLanguageDetection AIPredictionType = "LanguageDetection"

	AIPredictionTypeDeepLearningIntentClassification AIPredictionType = "DeepLearningIntentClassification"

	AIPredictionTypeDeepLearningNameEntityRecognition AIPredictionType = "DeepLearningNameEntityRecognition"

	AIPredictionTypeGlobalDeepLearningIntentClassification AIPredictionType = "GlobalDeepLearningIntentClassification"

	AIPredictionTypeGlobalDeepLearningNameEntityRecognition AIPredictionType = "GlobalDeepLearningNameEntityRecognition"
)

type MLRecommendationDefinitionStatus string

const (
	MLRecommendationDefinitionStatusEnabled MLRecommendationDefinitionStatus = "Enabled"

	MLRecommendationDefinitionStatusDisabled MLRecommendationDefinitionStatus = "Disabled"

	MLRecommendationDefinitionStatusDraft MLRecommendationDefinitionStatus = "Draft"
)

type MCNodeType string

const (
	MCNodeTypeTEXT MCNodeType = "TEXT"

	MCNodeTypeMTEXT MCNodeType = "MTEXT"

	MCNodeTypeRTE MCNodeType = "RTE"

	MCNodeTypeIMG MCNodeType = "IMG"

	MCNodeTypeNAMEFIELD MCNodeType = "NAMEFIELD"

	MCNodeTypeURL MCNodeType = "URL"

	MCNodeTypeDATETIME MCNodeType = "DATETIME"

	MCNodeTypeDATE MCNodeType = "DATE"
)

type BlankValueBehavior string

const (
	BlankValueBehaviorMatchBlanks BlankValueBehavior = "MatchBlanks"

	BlankValueBehaviorNullNotAllowed BlankValueBehavior = "NullNotAllowed"
)

type MatchingMethod string

const (
	MatchingMethodExact MatchingMethod = "Exact"

	MatchingMethodFirstName MatchingMethod = "FirstName"

	MatchingMethodLastName MatchingMethod = "LastName"

	MatchingMethodCompanyName MatchingMethod = "CompanyName"

	MatchingMethodPhone MatchingMethod = "Phone"

	MatchingMethodCity MatchingMethod = "City"

	MatchingMethodStreet MatchingMethod = "Street"

	MatchingMethodZip MatchingMethod = "Zip"

	MatchingMethodTitle MatchingMethod = "Title"
)

type MatchingRuleStatus string

const (
	MatchingRuleStatusInactive MatchingRuleStatus = "Inactive"

	MatchingRuleStatusDeactivationFailed MatchingRuleStatus = "DeactivationFailed"

	MatchingRuleStatusActivating MatchingRuleStatus = "Activating"

	MatchingRuleStatusDeactivating MatchingRuleStatus = "Deactivating"

	MatchingRuleStatusActive MatchingRuleStatus = "Active"

	MatchingRuleStatusActivationFailed MatchingRuleStatus = "ActivationFailed"
)

type MessagingAutoResponseType string

const (
	MessagingAutoResponseTypeInitialResponse MessagingAutoResponseType = "InitialResponse"

	MessagingAutoResponseTypeAgentEngagedResponse MessagingAutoResponseType = "AgentEngagedResponse"

	MessagingAutoResponseTypeAgentEndEngagementResponse MessagingAutoResponseType = "AgentEndEngagementResponse"
)

type MessagingChannelType string

const (
	MessagingChannelTypeEmbeddedMessaging MessagingChannelType = "EmbeddedMessaging"

	MessagingChannelTypeVoice MessagingChannelType = "Voice"
)

type MessagingSessionHandlerType string

const (
	MessagingSessionHandlerTypeQueue MessagingSessionHandlerType = "Queue"

	MessagingSessionHandlerTypeFlow MessagingSessionHandlerType = "Flow"
)

type MessagingChannelStandardParameterType string

const (
	MessagingChannelStandardParameterTypeFirstName MessagingChannelStandardParameterType = "FirstName"

	MessagingChannelStandardParameterTypeLastName MessagingChannelStandardParameterType = "LastName"

	MessagingChannelStandardParameterTypeEmail MessagingChannelStandardParameterType = "Email"

	MessagingChannelStandardParameterTypeSubject MessagingChannelStandardParameterType = "Subject"
)

type MilestoneTypeRecurrenceType string

const (
	MilestoneTypeRecurrenceTypeNone MilestoneTypeRecurrenceType = "none"

	MilestoneTypeRecurrenceTypeRecursIndependently MilestoneTypeRecurrenceType = "recursIndependently"

	MilestoneTypeRecurrenceTypeRecursChained MilestoneTypeRecurrenceType = "recursChained"
)

type ModerationRuleAction string

const (
	ModerationRuleActionBlock ModerationRuleAction = "Block"

	ModerationRuleActionFreezeAndNotify ModerationRuleAction = "FreezeAndNotify"

	ModerationRuleActionReview ModerationRuleAction = "Review"

	ModerationRuleActionReplace ModerationRuleAction = "Replace"

	ModerationRuleActionFlag ModerationRuleAction = "Flag"
)

type RateLimitTimePeriod string

const (
	RateLimitTimePeriodShort RateLimitTimePeriod = "Short"

	RateLimitTimePeriodMedium RateLimitTimePeriod = "Medium"
)

type ModerationRuleType string

const (
	ModerationRuleTypeContent ModerationRuleType = "Content"

	ModerationRuleTypeRate ModerationRuleType = "Rate"
)

type OrgDomainShard string

const (
	OrgDomainShardNone OrgDomainShard = "none"

	OrgDomainShardSandbox OrgDomainShard = "sandbox"

	OrgDomainShardDevelop OrgDomainShard = "develop"

	OrgDomainShardPatch OrgDomainShard = "patch"

	OrgDomainShardTrailblaze OrgDomainShard = "trailblaze"

	OrgDomainShardScratch OrgDomainShard = "scratch"

	OrgDomainShardDemo OrgDomainShard = "demo"

	OrgDomainShardFree OrgDomainShard = "free"

	OrgDomainShardSfdctest OrgDomainShard = "sfdctest"
)

type OrgDomainRedirectOption string

const (
	OrgDomainRedirectOptionRedirect OrgDomainRedirectOption = "Redirect"

	OrgDomainRedirectOptionWarnOnRedirect OrgDomainRedirectOption = "WarnOnRedirect"

	OrgDomainRedirectOptionNoRedirect OrgDomainRedirectOption = "NoRedirect"
)

type OrgDomainProdSuffix string

const (
	OrgDomainProdSuffixMySalesforceLimited OrgDomainProdSuffix = "MySalesforceLimited"

	OrgDomainProdSuffixDatabaseLimited OrgDomainProdSuffix = "DatabaseLimited"

	OrgDomainProdSuffixCloudforceLimited OrgDomainProdSuffix = "CloudforceLimited"

	OrgDomainProdSuffixOrgLevelCertificateLimited OrgDomainProdSuffix = "OrgLevelCertificateLimited"

	OrgDomainProdSuffixRestricted1 OrgDomainProdSuffix = "Restricted1"

	OrgDomainProdSuffixMySalesforce OrgDomainProdSuffix = "MySalesforce"

	OrgDomainProdSuffixRestricted2 OrgDomainProdSuffix = "Restricted2"
)

type CalloutStatus string

const (
	CalloutStatusEnabled CalloutStatus = "Enabled"

	CalloutStatusDisabled CalloutStatus = "Disabled"
)

type NamedCredentialParamType string

const (
	NamedCredentialParamTypeUrl NamedCredentialParamType = "Url"

	NamedCredentialParamTypeHttpHeader NamedCredentialParamType = "HttpHeader"

	NamedCredentialParamTypeClientCertificate NamedCredentialParamType = "ClientCertificate"

	NamedCredentialParamTypeAuthentication NamedCredentialParamType = "Authentication"

	NamedCredentialParamTypeOutboundNetworkConnection NamedCredentialParamType = "OutboundNetworkConnection"

	NamedCredentialParamTypeAllowedManagedPackageNamespaces NamedCredentialParamType = "AllowedManagedPackageNamespaces"

	NamedCredentialParamTypeCreatedByNamespace NamedCredentialParamType = "CreatedByNamespace"
)

type NamedCredentialType string

const (
	NamedCredentialTypeLegacy NamedCredentialType = "Legacy"

	NamedCredentialTypeSecuredEndpoint NamedCredentialType = "SecuredEndpoint"

	NamedCredentialTypePrivateEndpoint NamedCredentialType = "PrivateEndpoint"
)

type NetworkPageOverrideSetting string

const (
	NetworkPageOverrideSettingDesigner NetworkPageOverrideSetting = "Designer"

	NetworkPageOverrideSettingVisualForce NetworkPageOverrideSetting = "VisualForce"

	NetworkPageOverrideSettingStandard NetworkPageOverrideSetting = "Standard"

	NetworkPageOverrideSettingConfigurable NetworkPageOverrideSetting = "Configurable"
)

type AudienceCriteriaType string

const (
	AudienceCriteriaTypeCustomList AudienceCriteriaType = "CustomList"

	AudienceCriteriaTypeMaxDaysInCommunity AudienceCriteriaType = "MaxDaysInCommunity"
)

type RecommendationChannel string

const (
	RecommendationChannelDefaultChannel RecommendationChannel = "DefaultChannel"

	RecommendationChannelCustomChannel1 RecommendationChannel = "CustomChannel1"

	RecommendationChannelCustomChannel2 RecommendationChannel = "CustomChannel2"

	RecommendationChannelCustomChannel3 RecommendationChannel = "CustomChannel3"

	RecommendationChannelCustomChannel4 RecommendationChannel = "CustomChannel4"

	RecommendationChannelCustomChannel5 RecommendationChannel = "CustomChannel5"
)

type SitesArchiveStatus string

const (
	SitesArchiveStatusTemporarilyArchived SitesArchiveStatus = "TemporarilyArchived"

	SitesArchiveStatusNotArchived SitesArchiveStatus = "NotArchived"
)

type NetworkStatus string

const (
	NetworkStatusUnderConstruction NetworkStatus = "UnderConstruction"

	NetworkStatusLive NetworkStatus = "Live"

	NetworkStatusDownForMaintenance NetworkStatus = "DownForMaintenance"
)

type OmniDataTransformInputType string

const (
	OmniDataTransformInputTypeJSON OmniDataTransformInputType = "JSON"

	OmniDataTransformInputTypeXML OmniDataTransformInputType = "XML"

	OmniDataTransformInputTypeSObject OmniDataTransformInputType = "SObject"

	OmniDataTransformInputTypeCustom OmniDataTransformInputType = "Custom"
)

type ODTItemFilterDataType string

const (
	ODTItemFilterDataTypeADDRESS ODTItemFilterDataType = "ADDRESS"

	ODTItemFilterDataTypeANYTYPE ODTItemFilterDataType = "ANYTYPE"

	ODTItemFilterDataTypeBASE64 ODTItemFilterDataType = "BASE64"

	ODTItemFilterDataTypeBOOLEAN ODTItemFilterDataType = "BOOLEAN"

	ODTItemFilterDataTypeCOMBOBOX ODTItemFilterDataType = "COMBOBOX"

	ODTItemFilterDataTypeCURRENCY ODTItemFilterDataType = "CURRENCY"

	ODTItemFilterDataTypeDATACATEGORY ODTItemFilterDataType = "DATACATEGORY"

	ODTItemFilterDataTypeGROUPREFERENCE ODTItemFilterDataType = "GROUPREFERENCE"

	ODTItemFilterDataTypeDATE ODTItemFilterDataType = "DATE"

	ODTItemFilterDataTypeDATETIME ODTItemFilterDataType = "DATETIME"

	ODTItemFilterDataTypeDOUBLE ODTItemFilterDataType = "DOUBLE"

	ODTItemFilterDataTypeEMAIL ODTItemFilterDataType = "EMAIL"

	ODTItemFilterDataTypeENCRYPTEDSTRING ODTItemFilterDataType = "ENCRYPTEDSTRING"

	ODTItemFilterDataTypeID ODTItemFilterDataType = "ID"

	ODTItemFilterDataTypeINTEGER ODTItemFilterDataType = "INTEGER"

	ODTItemFilterDataTypeLONG ODTItemFilterDataType = "LONG"

	ODTItemFilterDataTypeMULTIPICKLIST ODTItemFilterDataType = "MULTIPICKLIST"

	ODTItemFilterDataTypePERCENT ODTItemFilterDataType = "PERCENT"

	ODTItemFilterDataTypePHONE ODTItemFilterDataType = "PHONE"

	ODTItemFilterDataTypePICKLIST ODTItemFilterDataType = "PICKLIST"

	ODTItemFilterDataTypeREFERENCE ODTItemFilterDataType = "REFERENCE"

	ODTItemFilterDataTypeSTRING ODTItemFilterDataType = "STRING"

	ODTItemFilterDataTypeTEXTAREA ODTItemFilterDataType = "TEXTAREA"

	ODTItemFilterDataTypeTIME ODTItemFilterDataType = "TIME"

	ODTItemFilterDataTypeURL ODTItemFilterDataType = "URL"
)

type OmniProcessType string

const (
	OmniProcessTypeOmniScript OmniProcessType = "OmniScript"
)

type OmniSupervisorActionName string

const (
	OmniSupervisorActionNameChangeQueues OmniSupervisorActionName = "ChangeQueues"

	OmniSupervisorActionNameChangeSkills OmniSupervisorActionName = "ChangeSkills"

	OmniSupervisorActionNameAssignLearning OmniSupervisorActionName = "AssignLearning"

	OmniSupervisorActionNameAWSDashboard OmniSupervisorActionName = "AWSDashboard"

	OmniSupervisorActionNameManageQueues OmniSupervisorActionName = "ManageQueues"

	OmniSupervisorActionNameCustomAction OmniSupervisorActionName = "CustomAction"
)

type OmniSupervisorActionTab string

const (
	OmniSupervisorActionTabAllAgents OmniSupervisorActionTab = "AllAgents"

	OmniSupervisorActionTabAgentDetails OmniSupervisorActionTab = "AgentDetails"

	OmniSupervisorActionTabQueuesBacklog OmniSupervisorActionTab = "QueuesBacklog"

	OmniSupervisorActionTabQueueDetails OmniSupervisorActionTab = "QueueDetails"

	OmniSupervisorActionTabAssignedWork OmniSupervisorActionTab = "AssignedWork"

	OmniSupervisorActionTabAssignedWorkDetails OmniSupervisorActionTab = "AssignedWorkDetails"

	OmniSupervisorActionTabSkillsBacklog OmniSupervisorActionTab = "SkillsBacklog"

	OmniSupervisorActionTabSkillDetails OmniSupervisorActionTab = "SkillDetails"
)

type OmniSuperSkillVisibilityType string

const (
	OmniSuperSkillVisibilityTypeAllSkills OmniSuperSkillVisibilityType = "AllSkills"

	OmniSuperSkillVisibilityTypeAnySkill OmniSuperSkillVisibilityType = "AnySkill"
)

type OmniUiCardType string

const (
	OmniUiCardTypeParent OmniUiCardType = "Parent"

	OmniUiCardTypeChild OmniUiCardType = "Child"
)

type OutboundConnPropertyName string

const (
	OutboundConnPropertyNameRegion OutboundConnPropertyName = "Region"

	OutboundConnPropertyNameAwsVpcEndpointId OutboundConnPropertyName = "AwsVpcEndpointId"

	OutboundConnPropertyNameAwsVpcEndpointServiceName OutboundConnPropertyName = "AwsVpcEndpointServiceName"
)

type APIAccessLevel string

const (
	APIAccessLevelUnrestricted APIAccessLevel = "Unrestricted"

	APIAccessLevelRestricted APIAccessLevel = "Restricted"
)

type ParticipantRoleAccessLevel string

const (
	ParticipantRoleAccessLevelNone ParticipantRoleAccessLevel = "None"

	ParticipantRoleAccessLevelRead ParticipantRoleAccessLevel = "Read"

	ParticipantRoleAccessLevelEdit ParticipantRoleAccessLevel = "Edit"
)

type IdempotencySupportStatus string

const (
	IdempotencySupportStatusNo IdempotencySupportStatus = "No"

	IdempotencySupportStatusYes IdempotencySupportStatus = "Yes"
)

type PermissionSetTabVisibility string

const (
	PermissionSetTabVisibilityNone PermissionSetTabVisibility = "None"

	PermissionSetTabVisibilityAvailable PermissionSetTabVisibility = "Available"

	PermissionSetTabVisibilityVisible PermissionSetTabVisibility = "Visible"
)

type LicenseExpirationPolicy string

const (
	LicenseExpirationPolicyAllowNamespaceAccess LicenseExpirationPolicy = "AllowNamespaceAccess"

	LicenseExpirationPolicyBlockNamespaceAccess LicenseExpirationPolicy = "BlockNamespaceAccess"
)

type PlatformCacheType string

const (
	PlatformCacheTypeSession PlatformCacheType = "Session"

	PlatformCacheTypeOrganization PlatformCacheType = "Organization"
)

type PlatformEventChannelType string

const (
	PlatformEventChannelTypeEvent PlatformEventChannelType = "event"

	PlatformEventChannelTypeData PlatformEventChannelType = "data"
)

type PortalRoles string

const (
	PortalRolesExecutive PortalRoles = "Executive"

	PortalRolesManager PortalRoles = "Manager"

	PortalRolesWorker PortalRoles = "Worker"

	PortalRolesPersonAccount PortalRoles = "PersonAccount"
)

type PortalType string

const (
	PortalTypeCustomerSuccess PortalType = "CustomerSuccess"

	PortalTypePartner PortalType = "Partner"

	PortalTypeNetwork PortalType = "Network"
)

type ConditionLogic string

const (
	ConditionLogicAll ConditionLogic = "All"
)

type InputValueType string

const (
	InputValueTypeVariable InputValueType = "Variable"

	InputValueTypeExpression InputValueType = "Expression"

	InputValueTypeString InputValueType = "String"
)

type TypeOfAction string

const (
	TypeOfActionAdd TypeOfAction = "Add"

	TypeOfActionEdit TypeOfAction = "Edit"

	TypeOfActionDelete TypeOfAction = "Delete"
)

type AccumulateResultCondInputType string

const (
	AccumulateResultCondInputTypeVariable AccumulateResultCondInputType = "Variable"

	AccumulateResultCondInputTypeExpression AccumulateResultCondInputType = "Expression"

	AccumulateResultCondInputTypeString AccumulateResultCondInputType = "String"
)

type AccumulateResultOperator string

const (
	AccumulateResultOperatorAny AccumulateResultOperator = "Any"

	AccumulateResultOperatorEquals AccumulateResultOperator = "Equals"

	AccumulateResultOperatorNotEquals AccumulateResultOperator = "NotEquals"

	AccumulateResultOperatorLessThan AccumulateResultOperator = "LessThan"

	AccumulateResultOperatorLessOrEqual AccumulateResultOperator = "LessOrEqual"

	AccumulateResultOperatorGreaterThan AccumulateResultOperator = "GreaterThan"

	AccumulateResultOperatorGreaterOrEqual AccumulateResultOperator = "GreaterOrEqual"
)

type ConditionAggregationFunction string

const (
	ConditionAggregationFunctionSum ConditionAggregationFunction = "Sum"

	ConditionAggregationFunctionAverage ConditionAggregationFunction = "Average"

	ConditionAggregationFunctionMinimum ConditionAggregationFunction = "Minimum"

	ConditionAggregationFunctionMaximum ConditionAggregationFunction = "Maximum"

	ConditionAggregationFunctionCount ConditionAggregationFunction = "Count"
)

type TargetEntityMatchType string

const (
	TargetEntityMatchTypeEquals TargetEntityMatchType = "Equals"
)

type ConditionFilterInputValueType string

const (
	ConditionFilterInputValueTypeVariable ConditionFilterInputValueType = "Variable"

	ConditionFilterInputValueTypeString ConditionFilterInputValueType = "String"

	ConditionFilterInputValueTypeExpression ConditionFilterInputValueType = "Expression"
)

type ConditionFilterOperator string

const (
	ConditionFilterOperatorEquals ConditionFilterOperator = "Equals"

	ConditionFilterOperatorNotEquals ConditionFilterOperator = "NotEquals"

	ConditionFilterOperatorLessThan ConditionFilterOperator = "LessThan"

	ConditionFilterOperatorLessOrEqual ConditionFilterOperator = "LessOrEqual"

	ConditionFilterOperatorGreaterThan ConditionFilterOperator = "GreaterThan"

	ConditionFilterOperatorGreaterOrEqual ConditionFilterOperator = "GreaterOrEqual"

	ConditionFilterOperatorIsNull ConditionFilterOperator = "IsNull"

	ConditionFilterOperatorNotNull ConditionFilterOperator = "NotNull"
)

type ConditionType string

const (
	ConditionTypeSingleCriterion ConditionType = "SingleCriterion"

	ConditionTypeAggregation ConditionType = "Aggregation"
)

type ExecutionStageOfPriceRule string

type RuleStatus string

const (
	RuleStatusDraft RuleStatus = "Draft"

	RuleStatusActivated RuleStatus = "Activated"

	RuleStatusDeactivated RuleStatus = "Deactivated"

	RuleStatusVerified RuleStatus = "Verified"

	RuleStatusActivationInProgress RuleStatus = "ActivationInProgress"

	RuleStatusDeactivationInProgress RuleStatus = "DeactivationInProgress"
)

type CategoryGroupVisibility string

const (
	CategoryGroupVisibilityALL CategoryGroupVisibility = "ALL"

	CategoryGroupVisibilityNONE CategoryGroupVisibility = "NONE"

	CategoryGroupVisibilityCUSTOM CategoryGroupVisibility = "CUSTOM"
)

type LoginFlowType string

const (
	LoginFlowTypeUI LoginFlowType = "UI"
)

type UiLoginFlowType string

const (
	UiLoginFlowTypeVisualWorkflow UiLoginFlowType = "VisualWorkflow"

	UiLoginFlowTypeVisualForce UiLoginFlowType = "VisualForce"
)

type TabVisibility string

const (
	TabVisibilityHidden TabVisibility = "Hidden"

	TabVisibilityDefaultOff TabVisibility = "DefaultOff"

	TabVisibilityDefaultOn TabVisibility = "DefaultOn"
)

type SessionSecurityLevel string

const (
	SessionSecurityLevelLOW SessionSecurityLevel = "LOW"

	SessionSecurityLevelSTANDARD SessionSecurityLevel = "STANDARD"

	SessionSecurityLevelHIGH_ASSURANCE SessionSecurityLevel = "HIGH_ASSURANCE"
)

type PromptDisplayPosition string

const (
	PromptDisplayPositionTopLeft PromptDisplayPosition = "TopLeft"

	PromptDisplayPositionTopCenter PromptDisplayPosition = "TopCenter"

	PromptDisplayPositionTopRight PromptDisplayPosition = "TopRight"

	PromptDisplayPositionBottomLeft PromptDisplayPosition = "BottomLeft"

	PromptDisplayPositionBottomCenter PromptDisplayPosition = "BottomCenter"

	PromptDisplayPositionBottomRight PromptDisplayPosition = "BottomRight"

	PromptDisplayPositionMiddleLeft PromptDisplayPosition = "MiddleLeft"

	PromptDisplayPositionMiddleCenter PromptDisplayPosition = "MiddleCenter"

	PromptDisplayPositionMiddleRight PromptDisplayPosition = "MiddleRight"
)

type PromptDisplayType string

const (
	PromptDisplayTypeDockedComposer PromptDisplayType = "DockedComposer"

	PromptDisplayTypeFloatingPanel PromptDisplayType = "FloatingPanel"

	PromptDisplayTypeTargeted PromptDisplayType = "Targeted"
)

type PromptElementRelativePosition string

const (
	PromptElementRelativePositionTopLeft PromptElementRelativePosition = "TopLeft"

	PromptElementRelativePositionTopCenter PromptElementRelativePosition = "TopCenter"

	PromptElementRelativePositionTopRight PromptElementRelativePosition = "TopRight"

	PromptElementRelativePositionLeftTop PromptElementRelativePosition = "LeftTop"

	PromptElementRelativePositionLeftCenter PromptElementRelativePosition = "LeftCenter"

	PromptElementRelativePositionLeftBottom PromptElementRelativePosition = "LeftBottom"

	PromptElementRelativePositionRightTop PromptElementRelativePosition = "RightTop"

	PromptElementRelativePositionRightCenter PromptElementRelativePosition = "RightCenter"

	PromptElementRelativePositionRightBottom PromptElementRelativePosition = "RightBottom"

	PromptElementRelativePositionBottomLeft PromptElementRelativePosition = "BottomLeft"

	PromptElementRelativePositionBottomCenter PromptElementRelativePosition = "BottomCenter"

	PromptElementRelativePositionBottomRight PromptElementRelativePosition = "BottomRight"
)

type PromptExperience string

const (
	PromptExperienceLightning PromptExperience = "Lightning"

	PromptExperienceSite PromptExperience = "Site"
)

type PromptImageLocation string

const (
	PromptImageLocationTop PromptImageLocation = "Top"

	PromptImageLocationBottom PromptImageLocation = "Bottom"

	PromptImageLocationLeft PromptImageLocation = "Left"

	PromptImageLocationRight PromptImageLocation = "Right"
)

type PromptThemeColor string

const (
	PromptThemeColorTheme1 PromptThemeColor = "Theme1"

	PromptThemeColorTheme2 PromptThemeColor = "Theme2"

	PromptThemeColorTheme3 PromptThemeColor = "Theme3"

	PromptThemeColorTheme4 PromptThemeColor = "Theme4"
)

type PromptThemeSaturation string

const (
	PromptThemeSaturationDark PromptThemeSaturation = "Dark"

	PromptThemeSaturationLight PromptThemeSaturation = "Light"
)

type PromptUserAccess string

const (
	PromptUserAccessEveryone PromptUserAccess = "Everyone"

	PromptUserAccessSpecificPermissions PromptUserAccess = "SpecificPermissions"
)

type PromptUserProfileAccess string

const (
	PromptUserProfileAccessEveryone PromptUserProfileAccess = "Everyone"

	PromptUserProfileAccessSpecificProfiles PromptUserProfileAccess = "SpecificProfiles"
)

type CapacityType string

const (
	CapacityTypeINHERITED CapacityType = "INHERITED"

	CapacityTypeINTERRUPTIBLE CapacityType = "INTERRUPTIBLE"

	CapacityTypeNOT_INTERRUPTIBLE CapacityType = "NOT_INTERRUPTIBLE"
)

type RoutingModel string

const (
	RoutingModelLEAST_ACTIVE RoutingModel = "LEAST_ACTIVE"

	RoutingModelMOST_AVAILABLE RoutingModel = "MOST_AVAILABLE"

	RoutingModelEXTERNAL_ROUTING RoutingModel = "EXTERNAL_ROUTING"
)

type ActionSubtype string

const (
	ActionSubtypeScreenAction ActionSubtype = "ScreenAction"

	ActionSubtypeAction ActionSubtype = "Action"
)

type QuickActionLabel string

const (
	QuickActionLabelLogACall QuickActionLabel = "LogACall"

	QuickActionLabelLogANote QuickActionLabel = "LogANote"

	QuickActionLabelNew QuickActionLabel = "New"

	QuickActionLabelNewRecordType QuickActionLabel = "NewRecordType"

	QuickActionLabelUpdate QuickActionLabel = "Update"

	QuickActionLabelNewChild QuickActionLabel = "NewChild"

	QuickActionLabelNewChildRecordType QuickActionLabel = "NewChildRecordType"

	QuickActionLabelCreateNew QuickActionLabel = "CreateNew"

	QuickActionLabelCreateNewRecordType QuickActionLabel = "CreateNewRecordType"

	QuickActionLabelSendEmail QuickActionLabel = "SendEmail"

	QuickActionLabelQuickRecordType QuickActionLabel = "QuickRecordType"

	QuickActionLabelQuick QuickActionLabel = "Quick"

	QuickActionLabelEditDescription QuickActionLabel = "EditDescription"

	QuickActionLabelDefer QuickActionLabel = "Defer"

	QuickActionLabelChangeDueDate QuickActionLabel = "ChangeDueDate"

	QuickActionLabelChangePriority QuickActionLabel = "ChangePriority"

	QuickActionLabelChangeStatus QuickActionLabel = "ChangeStatus"

	QuickActionLabelSocialPost QuickActionLabel = "SocialPost"

	QuickActionLabelEscalate QuickActionLabel = "Escalate"

	QuickActionLabelEscalateToRecord QuickActionLabel = "EscalateToRecord"

	QuickActionLabelOfferFeedback QuickActionLabel = "OfferFeedback"

	QuickActionLabelRequestFeedback QuickActionLabel = "RequestFeedback"

	QuickActionLabelAddRecord QuickActionLabel = "AddRecord"

	QuickActionLabelAddMember QuickActionLabel = "AddMember"

	QuickActionLabelReply QuickActionLabel = "Reply"

	QuickActionLabelReplyAll QuickActionLabel = "ReplyAll"

	QuickActionLabelForward QuickActionLabel = "Forward"

	QuickActionLabelScheduleAppointment QuickActionLabel = "ScheduleAppointment"

	QuickActionLabelEnrollInProgram QuickActionLabel = "EnrollInProgram"

	QuickActionLabelModifyAppointment QuickActionLabel = "ModifyAppointment"

	QuickActionLabelPatientDetails QuickActionLabel = "PatientDetails"

	QuickActionLabelQuip QuickActionLabel = "Quip"

	QuickActionLabelSendConversationMessage QuickActionLabel = "SendConversationMessage"
)

type QuickActionType string

const (
	QuickActionTypeCreate QuickActionType = "Create"

	QuickActionTypeVisualforcePage QuickActionType = "VisualforcePage"

	QuickActionTypePost QuickActionType = "Post"

	QuickActionTypeSendEmail QuickActionType = "SendEmail"

	QuickActionTypeLogACall QuickActionType = "LogACall"

	QuickActionTypeSocialPost QuickActionType = "SocialPost"

	QuickActionTypeCanvas QuickActionType = "Canvas"

	QuickActionTypeUpdate QuickActionType = "Update"

	QuickActionTypeLightningComponent QuickActionType = "LightningComponent"

	QuickActionTypeLightningWebComponent QuickActionType = "LightningWebComponent"

	QuickActionTypeFlow QuickActionType = "Flow"

	QuickActionTypeMobileExtension QuickActionType = "MobileExtension"

	QuickActionTypeQuip QuickActionType = "Quip"

	QuickActionTypeSendConversationMessage QuickActionType = "SendConversationMessage"
)

type StrategyReactionType string

const (
	StrategyReactionTypeAccepted StrategyReactionType = "Accepted"

	StrategyReactionTypeRejected StrategyReactionType = "Rejected"
)

type RecommendationConditionOperator string

const (
	RecommendationConditionOperatorEQUALS RecommendationConditionOperator = "EQUALS"

	RecommendationConditionOperatorGREATER_THAN RecommendationConditionOperator = "GREATER_THAN"

	RecommendationConditionOperatorGREATER_THAN_OR_EQUAL_TO RecommendationConditionOperator = "GREATER_THAN_OR_EQUAL_TO"

	RecommendationConditionOperatorLESS_THAN RecommendationConditionOperator = "LESS_THAN"

	RecommendationConditionOperatorLESS_THAN_OR_EQUAL_TO RecommendationConditionOperator = "LESS_THAN_OR_EQUAL_TO"

	RecommendationConditionOperatorNOT_EQUALS RecommendationConditionOperator = "NOT_EQUALS"

	RecommendationConditionOperatorLIKE RecommendationConditionOperator = "LIKE"

	RecommendationConditionOperatorSTARTS_WITH RecommendationConditionOperator = "STARTS_WITH"

	RecommendationConditionOperatorENDS_WITH RecommendationConditionOperator = "ENDS_WITH"

	RecommendationConditionOperatorCONTAINS RecommendationConditionOperator = "CONTAINS"
)

type RecommendationConditionValueType string

const (
	RecommendationConditionValueTypeTEXT RecommendationConditionValueType = "TEXT"

	RecommendationConditionValueTypeNUMBER RecommendationConditionValueType = "NUMBER"

	RecommendationConditionValueTypeBOOLEAN RecommendationConditionValueType = "BOOLEAN"

	RecommendationConditionValueTypeDATE RecommendationConditionValueType = "DATE"

	RecommendationConditionValueTypeDATE_TIME RecommendationConditionValueType = "DATE_TIME"

	RecommendationConditionValueTypeTIME RecommendationConditionValueType = "TIME"
)

type ChannelSource string

const (
	ChannelSourceOther ChannelSource = "Other"

	ChannelSourcePhone ChannelSource = "Phone"

	ChannelSourceChat ChannelSource = "Chat"
)

type PinnedAction string

const (
	PinnedActionNone PinnedAction = "None"

	PinnedActionTop PinnedAction = "Top"

	PinnedActionBottom PinnedAction = "Bottom"
)

type RecordActionType string

const (
	RecordActionTypeFlow RecordActionType = "Flow"

	RecordActionTypeQuickAction RecordActionType = "QuickAction"

	RecordActionTypeOmniscript RecordActionType = "Omniscript"
)

type ComponentName string

const (
	ComponentNameActionsAndRecommendations ComponentName = "ActionsAndRecommendations"

	ComponentNameActionLauncher ComponentName = "ActionLauncher"
)

type ReportAggregateDatatype string

const (
	ReportAggregateDatatypeCurrency ReportAggregateDatatype = "currency"

	ReportAggregateDatatypePercent ReportAggregateDatatype = "percent"

	ReportAggregateDatatypeNumber ReportAggregateDatatype = "number"
)

type ReportBucketFieldType string

const (
	ReportBucketFieldTypeText ReportBucketFieldType = "text"

	ReportBucketFieldTypeNumber ReportBucketFieldType = "number"

	ReportBucketFieldTypePicklist ReportBucketFieldType = "picklist"
)

type ReportFormulaNullTreatment string

const (
	ReportFormulaNullTreatmentN ReportFormulaNullTreatment = "n"

	ReportFormulaNullTreatmentZ ReportFormulaNullTreatment = "z"
)

type ChartType string

const (
	ChartTypeNone ChartType = "None"

	ChartTypeScatter ChartType = "Scatter"

	ChartTypeScatterGrouped ChartType = "ScatterGrouped"

	ChartTypeBubble ChartType = "Bubble"

	ChartTypeBubbleGrouped ChartType = "BubbleGrouped"

	ChartTypeHorizontalBar ChartType = "HorizontalBar"

	ChartTypeHorizontalBarGrouped ChartType = "HorizontalBarGrouped"

	ChartTypeHorizontalBarStacked ChartType = "HorizontalBarStacked"

	ChartTypeHorizontalBarStackedTo100 ChartType = "HorizontalBarStackedTo100"

	ChartTypeVerticalColumn ChartType = "VerticalColumn"

	ChartTypeVerticalColumnGrouped ChartType = "VerticalColumnGrouped"

	ChartTypeVerticalColumnStacked ChartType = "VerticalColumnStacked"

	ChartTypeVerticalColumnStackedTo100 ChartType = "VerticalColumnStackedTo100"

	ChartTypeLine ChartType = "Line"

	ChartTypeLineGrouped ChartType = "LineGrouped"

	ChartTypeLineCumulative ChartType = "LineCumulative"

	ChartTypeLineCumulativeGrouped ChartType = "LineCumulativeGrouped"

	ChartTypePie ChartType = "Pie"

	ChartTypeDonut ChartType = "Donut"

	ChartTypeFunnel ChartType = "Funnel"

	ChartTypeVerticalColumnLine ChartType = "VerticalColumnLine"

	ChartTypeVerticalColumnGroupedLine ChartType = "VerticalColumnGroupedLine"

	ChartTypeVerticalColumnStackedLine ChartType = "VerticalColumnStackedLine"

	ChartTypePlugin ChartType = "Plugin"
)

type ChartPosition string

const (
	ChartPositionCHART_TOP ChartPosition = "CHART_TOP"

	ChartPositionCHART_BOTTOM ChartPosition = "CHART_BOTTOM"
)

type ReportChartSize string

const (
	ReportChartSizeTiny ReportChartSize = "Tiny"

	ReportChartSizeSmall ReportChartSize = "Small"

	ReportChartSizeMedium ReportChartSize = "Medium"

	ReportChartSizeLarge ReportChartSize = "Large"

	ReportChartSizeHuge ReportChartSize = "Huge"
)

type ObjectFilterOperator string

const (
	ObjectFilterOperatorWith ObjectFilterOperator = "with"

	ObjectFilterOperatorWithout ObjectFilterOperator = "without"
)

type CurrencyIsoCode string

const (
	CurrencyIsoCodeADP CurrencyIsoCode = "ADP"

	CurrencyIsoCodeAED CurrencyIsoCode = "AED"

	CurrencyIsoCodeAFA CurrencyIsoCode = "AFA"

	CurrencyIsoCodeAFN CurrencyIsoCode = "AFN"

	CurrencyIsoCodeALL CurrencyIsoCode = "ALL"

	CurrencyIsoCodeAMD CurrencyIsoCode = "AMD"

	CurrencyIsoCodeANG CurrencyIsoCode = "ANG"

	CurrencyIsoCodeAOA CurrencyIsoCode = "AOA"

	CurrencyIsoCodeARS CurrencyIsoCode = "ARS"

	CurrencyIsoCodeATS CurrencyIsoCode = "ATS"

	CurrencyIsoCodeAUD CurrencyIsoCode = "AUD"

	CurrencyIsoCodeXAV CurrencyIsoCode = "XAV"

	CurrencyIsoCodeAWG CurrencyIsoCode = "AWG"

	CurrencyIsoCodeAZM CurrencyIsoCode = "AZM"

	CurrencyIsoCodeAZN CurrencyIsoCode = "AZN"

	CurrencyIsoCodeBAM CurrencyIsoCode = "BAM"

	CurrencyIsoCodeBBD CurrencyIsoCode = "BBD"

	CurrencyIsoCodeBDT CurrencyIsoCode = "BDT"

	CurrencyIsoCodeBEF CurrencyIsoCode = "BEF"

	CurrencyIsoCodeBGL CurrencyIsoCode = "BGL"

	CurrencyIsoCodeBGN CurrencyIsoCode = "BGN"

	CurrencyIsoCodeBHD CurrencyIsoCode = "BHD"

	CurrencyIsoCodeBIF CurrencyIsoCode = "BIF"

	CurrencyIsoCodeBMD CurrencyIsoCode = "BMD"

	CurrencyIsoCodeBND CurrencyIsoCode = "BND"

	CurrencyIsoCodeBOB CurrencyIsoCode = "BOB"

	CurrencyIsoCodeBOV CurrencyIsoCode = "BOV"

	CurrencyIsoCodeBRB CurrencyIsoCode = "BRB"

	CurrencyIsoCodeBRL CurrencyIsoCode = "BRL"

	CurrencyIsoCodeBSD CurrencyIsoCode = "BSD"

	CurrencyIsoCodeBTN CurrencyIsoCode = "BTN"

	CurrencyIsoCodeBWP CurrencyIsoCode = "BWP"

	CurrencyIsoCodeBYB CurrencyIsoCode = "BYB"

	CurrencyIsoCodeBYN CurrencyIsoCode = "BYN"

	CurrencyIsoCodeBYR CurrencyIsoCode = "BYR"

	CurrencyIsoCodeBZD CurrencyIsoCode = "BZD"

	CurrencyIsoCodeCAD CurrencyIsoCode = "CAD"

	CurrencyIsoCodeCDF CurrencyIsoCode = "CDF"

	CurrencyIsoCodeCHF CurrencyIsoCode = "CHF"

	CurrencyIsoCodeCLF CurrencyIsoCode = "CLF"

	CurrencyIsoCodeCLP CurrencyIsoCode = "CLP"

	CurrencyIsoCodeCNH CurrencyIsoCode = "CNH"

	CurrencyIsoCodeCNY CurrencyIsoCode = "CNY"

	CurrencyIsoCodeCOP CurrencyIsoCode = "COP"

	CurrencyIsoCodeCRC CurrencyIsoCode = "CRC"

	CurrencyIsoCodeCSD CurrencyIsoCode = "CSD"

	CurrencyIsoCodeCUC CurrencyIsoCode = "CUC"

	CurrencyIsoCodeCUP CurrencyIsoCode = "CUP"

	CurrencyIsoCodeCVE CurrencyIsoCode = "CVE"

	CurrencyIsoCodeCYP CurrencyIsoCode = "CYP"

	CurrencyIsoCodeCZK CurrencyIsoCode = "CZK"

	CurrencyIsoCodeDEM CurrencyIsoCode = "DEM"

	CurrencyIsoCodeDJF CurrencyIsoCode = "DJF"

	CurrencyIsoCodeDKK CurrencyIsoCode = "DKK"

	CurrencyIsoCodeDOP CurrencyIsoCode = "DOP"

	CurrencyIsoCodeDZD CurrencyIsoCode = "DZD"

	CurrencyIsoCodeECS CurrencyIsoCode = "ECS"

	CurrencyIsoCodeEEK CurrencyIsoCode = "EEK"

	CurrencyIsoCodeEGP CurrencyIsoCode = "EGP"

	CurrencyIsoCodeERN CurrencyIsoCode = "ERN"

	CurrencyIsoCodeESP CurrencyIsoCode = "ESP"

	CurrencyIsoCodeETB CurrencyIsoCode = "ETB"

	CurrencyIsoCodeEUR CurrencyIsoCode = "EUR"

	CurrencyIsoCodeFIM CurrencyIsoCode = "FIM"

	CurrencyIsoCodeFJD CurrencyIsoCode = "FJD"

	CurrencyIsoCodeFKP CurrencyIsoCode = "FKP"

	CurrencyIsoCodeXFL CurrencyIsoCode = "XFL"

	CurrencyIsoCodeFRF CurrencyIsoCode = "FRF"

	CurrencyIsoCodeGBP CurrencyIsoCode = "GBP"

	CurrencyIsoCodeGEL CurrencyIsoCode = "GEL"

	CurrencyIsoCodeGHC CurrencyIsoCode = "GHC"

	CurrencyIsoCodeGHS CurrencyIsoCode = "GHS"

	CurrencyIsoCodeGIP CurrencyIsoCode = "GIP"

	CurrencyIsoCodeGMD CurrencyIsoCode = "GMD"

	CurrencyIsoCodeGNF CurrencyIsoCode = "GNF"

	CurrencyIsoCodeGRD CurrencyIsoCode = "GRD"

	CurrencyIsoCodeGTQ CurrencyIsoCode = "GTQ"

	CurrencyIsoCodeGWP CurrencyIsoCode = "GWP"

	CurrencyIsoCodeGYD CurrencyIsoCode = "GYD"

	CurrencyIsoCodeHKD CurrencyIsoCode = "HKD"

	CurrencyIsoCodeHNL CurrencyIsoCode = "HNL"

	CurrencyIsoCodeHRD CurrencyIsoCode = "HRD"

	CurrencyIsoCodeHRK CurrencyIsoCode = "HRK"

	CurrencyIsoCodeHTG CurrencyIsoCode = "HTG"

	CurrencyIsoCodeHUF CurrencyIsoCode = "HUF"

	CurrencyIsoCodeIDR CurrencyIsoCode = "IDR"

	CurrencyIsoCodeIEP CurrencyIsoCode = "IEP"

	CurrencyIsoCodeILS CurrencyIsoCode = "ILS"

	CurrencyIsoCodeINR CurrencyIsoCode = "INR"

	CurrencyIsoCodeIQD CurrencyIsoCode = "IQD"

	CurrencyIsoCodeIRR CurrencyIsoCode = "IRR"

	CurrencyIsoCodeISK CurrencyIsoCode = "ISK"

	CurrencyIsoCodeITL CurrencyIsoCode = "ITL"

	CurrencyIsoCodeJMD CurrencyIsoCode = "JMD"

	CurrencyIsoCodeJOD CurrencyIsoCode = "JOD"

	CurrencyIsoCodeJPY CurrencyIsoCode = "JPY"

	CurrencyIsoCodeKES CurrencyIsoCode = "KES"

	CurrencyIsoCodeKGS CurrencyIsoCode = "KGS"

	CurrencyIsoCodeKHR CurrencyIsoCode = "KHR"

	CurrencyIsoCodeKMF CurrencyIsoCode = "KMF"

	CurrencyIsoCodeKPW CurrencyIsoCode = "KPW"

	CurrencyIsoCodeKRW CurrencyIsoCode = "KRW"

	CurrencyIsoCodeKWD CurrencyIsoCode = "KWD"

	CurrencyIsoCodeKYD CurrencyIsoCode = "KYD"

	CurrencyIsoCodeKZT CurrencyIsoCode = "KZT"

	CurrencyIsoCodeLAK CurrencyIsoCode = "LAK"

	CurrencyIsoCodeLBP CurrencyIsoCode = "LBP"

	CurrencyIsoCodeLKR CurrencyIsoCode = "LKR"

	CurrencyIsoCodeLRD CurrencyIsoCode = "LRD"

	CurrencyIsoCodeLSL CurrencyIsoCode = "LSL"

	CurrencyIsoCodeLTL CurrencyIsoCode = "LTL"

	CurrencyIsoCodeLUF CurrencyIsoCode = "LUF"

	CurrencyIsoCodeLVL CurrencyIsoCode = "LVL"

	CurrencyIsoCodeLYD CurrencyIsoCode = "LYD"

	CurrencyIsoCodeMAD CurrencyIsoCode = "MAD"

	CurrencyIsoCodeXMA CurrencyIsoCode = "XMA"

	CurrencyIsoCodeMDL CurrencyIsoCode = "MDL"

	CurrencyIsoCodeMGA CurrencyIsoCode = "MGA"

	CurrencyIsoCodeMGF CurrencyIsoCode = "MGF"

	CurrencyIsoCodeMKD CurrencyIsoCode = "MKD"

	CurrencyIsoCodeMMK CurrencyIsoCode = "MMK"

	CurrencyIsoCodeMNT CurrencyIsoCode = "MNT"

	CurrencyIsoCodeMOP CurrencyIsoCode = "MOP"

	CurrencyIsoCodeMRO CurrencyIsoCode = "MRO"

	CurrencyIsoCodeMRU CurrencyIsoCode = "MRU"

	CurrencyIsoCodeMTL CurrencyIsoCode = "MTL"

	CurrencyIsoCodeMUR CurrencyIsoCode = "MUR"

	CurrencyIsoCodeMVR CurrencyIsoCode = "MVR"

	CurrencyIsoCodeMWK CurrencyIsoCode = "MWK"

	CurrencyIsoCodeMXN CurrencyIsoCode = "MXN"

	CurrencyIsoCodeMXV CurrencyIsoCode = "MXV"

	CurrencyIsoCodeMYR CurrencyIsoCode = "MYR"

	CurrencyIsoCodeMZM CurrencyIsoCode = "MZM"

	CurrencyIsoCodeMZN CurrencyIsoCode = "MZN"

	CurrencyIsoCodeNAD CurrencyIsoCode = "NAD"

	CurrencyIsoCodeNGN CurrencyIsoCode = "NGN"

	CurrencyIsoCodeNIO CurrencyIsoCode = "NIO"

	CurrencyIsoCodeNLG CurrencyIsoCode = "NLG"

	CurrencyIsoCodeNOK CurrencyIsoCode = "NOK"

	CurrencyIsoCodeNPR CurrencyIsoCode = "NPR"

	CurrencyIsoCodeNZD CurrencyIsoCode = "NZD"

	CurrencyIsoCodeOMR CurrencyIsoCode = "OMR"

	CurrencyIsoCodePAB CurrencyIsoCode = "PAB"

	CurrencyIsoCodeXPA CurrencyIsoCode = "XPA"

	CurrencyIsoCodePEN CurrencyIsoCode = "PEN"

	CurrencyIsoCodePGK CurrencyIsoCode = "PGK"

	CurrencyIsoCodePHP CurrencyIsoCode = "PHP"

	CurrencyIsoCodePKR CurrencyIsoCode = "PKR"

	CurrencyIsoCodePLN CurrencyIsoCode = "PLN"

	CurrencyIsoCodePTE CurrencyIsoCode = "PTE"

	CurrencyIsoCodePYG CurrencyIsoCode = "PYG"

	CurrencyIsoCodeQAR CurrencyIsoCode = "QAR"

	CurrencyIsoCodeRMB CurrencyIsoCode = "RMB"

	CurrencyIsoCodeROL CurrencyIsoCode = "ROL"

	CurrencyIsoCodeRON CurrencyIsoCode = "RON"

	CurrencyIsoCodeRSD CurrencyIsoCode = "RSD"

	CurrencyIsoCodeRUB CurrencyIsoCode = "RUB"

	CurrencyIsoCodeRUR CurrencyIsoCode = "RUR"

	CurrencyIsoCodeRWF CurrencyIsoCode = "RWF"

	CurrencyIsoCodeSAR CurrencyIsoCode = "SAR"

	CurrencyIsoCodeSBD CurrencyIsoCode = "SBD"

	CurrencyIsoCodeSCR CurrencyIsoCode = "SCR"

	CurrencyIsoCodeSDD CurrencyIsoCode = "SDD"

	CurrencyIsoCodeSDG CurrencyIsoCode = "SDG"

	CurrencyIsoCodeSEK CurrencyIsoCode = "SEK"

	CurrencyIsoCodeSGD CurrencyIsoCode = "SGD"

	CurrencyIsoCodeSHP CurrencyIsoCode = "SHP"

	CurrencyIsoCodeSIT CurrencyIsoCode = "SIT"

	CurrencyIsoCodeSKK CurrencyIsoCode = "SKK"

	CurrencyIsoCodeSLE CurrencyIsoCode = "SLE"

	CurrencyIsoCodeSLL CurrencyIsoCode = "SLL"

	CurrencyIsoCodeXSO CurrencyIsoCode = "XSO"

	CurrencyIsoCodeSOS CurrencyIsoCode = "SOS"

	CurrencyIsoCodeSRD CurrencyIsoCode = "SRD"

	CurrencyIsoCodeSRG CurrencyIsoCode = "SRG"

	CurrencyIsoCodeSSP CurrencyIsoCode = "SSP"

	CurrencyIsoCodeSTD CurrencyIsoCode = "STD"

	CurrencyIsoCodeSTN CurrencyIsoCode = "STN"

	CurrencyIsoCodeSUR CurrencyIsoCode = "SUR"

	CurrencyIsoCodeSVC CurrencyIsoCode = "SVC"

	CurrencyIsoCodeSYP CurrencyIsoCode = "SYP"

	CurrencyIsoCodeSZL CurrencyIsoCode = "SZL"

	CurrencyIsoCodeTHB CurrencyIsoCode = "THB"

	CurrencyIsoCodeTJR CurrencyIsoCode = "TJR"

	CurrencyIsoCodeTJS CurrencyIsoCode = "TJS"

	CurrencyIsoCodeTMM CurrencyIsoCode = "TMM"

	CurrencyIsoCodeTMT CurrencyIsoCode = "TMT"

	CurrencyIsoCodeTND CurrencyIsoCode = "TND"

	CurrencyIsoCodeTOP CurrencyIsoCode = "TOP"

	CurrencyIsoCodeTPE CurrencyIsoCode = "TPE"

	CurrencyIsoCodeTRL CurrencyIsoCode = "TRL"

	CurrencyIsoCodeTRY CurrencyIsoCode = "TRY"

	CurrencyIsoCodeTTD CurrencyIsoCode = "TTD"

	CurrencyIsoCodeTWD CurrencyIsoCode = "TWD"

	CurrencyIsoCodeTZS CurrencyIsoCode = "TZS"

	CurrencyIsoCodeUAH CurrencyIsoCode = "UAH"

	CurrencyIsoCodeUGX CurrencyIsoCode = "UGX"

	CurrencyIsoCodeUSD CurrencyIsoCode = "USD"

	CurrencyIsoCodeUYU CurrencyIsoCode = "UYU"

	CurrencyIsoCodeUZS CurrencyIsoCode = "UZS"

	CurrencyIsoCodeVEB CurrencyIsoCode = "VEB"

	CurrencyIsoCodeVEF CurrencyIsoCode = "VEF"

	CurrencyIsoCodeVES CurrencyIsoCode = "VES"

	CurrencyIsoCodeVND CurrencyIsoCode = "VND"

	CurrencyIsoCodeVUV CurrencyIsoCode = "VUV"

	CurrencyIsoCodeWST CurrencyIsoCode = "WST"

	CurrencyIsoCodeXAF CurrencyIsoCode = "XAF"

	CurrencyIsoCodeXCD CurrencyIsoCode = "XCD"

	CurrencyIsoCodeXOF CurrencyIsoCode = "XOF"

	CurrencyIsoCodeXPF CurrencyIsoCode = "XPF"

	CurrencyIsoCodeYER CurrencyIsoCode = "YER"

	CurrencyIsoCodeYUM CurrencyIsoCode = "YUM"

	CurrencyIsoCodeZAR CurrencyIsoCode = "ZAR"

	CurrencyIsoCodeZMK CurrencyIsoCode = "ZMK"

	CurrencyIsoCodeZMW CurrencyIsoCode = "ZMW"

	CurrencyIsoCodeZWD CurrencyIsoCode = "ZWD"

	CurrencyIsoCodeZWL CurrencyIsoCode = "ZWL"
)

type DataCategoryFilterOperation string

const (
	DataCategoryFilterOperationAbove DataCategoryFilterOperation = "above"

	DataCategoryFilterOperationBelow DataCategoryFilterOperation = "below"

	DataCategoryFilterOperationAt DataCategoryFilterOperation = "at"

	DataCategoryFilterOperationAboveOrBelow DataCategoryFilterOperation = "aboveOrBelow"
)

type ReportFormat string

const (
	ReportFormatMultiBlock ReportFormat = "MultiBlock"

	ReportFormatMatrix ReportFormat = "Matrix"

	ReportFormatSummary ReportFormat = "Summary"

	ReportFormatTabular ReportFormat = "Tabular"
)

type ReportAggrType string

const (
	ReportAggrTypeSum ReportAggrType = "Sum"

	ReportAggrTypeAverage ReportAggrType = "Average"

	ReportAggrTypeMaximum ReportAggrType = "Maximum"

	ReportAggrTypeMinimum ReportAggrType = "Minimum"

	ReportAggrTypeUnique ReportAggrType = "Unique"

	ReportAggrTypeRowCount ReportAggrType = "RowCount"

	ReportAggrTypeMedian ReportAggrType = "Median"
)

type UserDateGranularity string

const (
	UserDateGranularityNone UserDateGranularity = "None"

	UserDateGranularityDay UserDateGranularity = "Day"

	UserDateGranularityWeek UserDateGranularity = "Week"

	UserDateGranularityMonth UserDateGranularity = "Month"

	UserDateGranularityQuarter UserDateGranularity = "Quarter"

	UserDateGranularityYear UserDateGranularity = "Year"

	UserDateGranularityFiscalQuarter UserDateGranularity = "FiscalQuarter"

	UserDateGranularityFiscalYear UserDateGranularity = "FiscalYear"

	UserDateGranularityMonthInYear UserDateGranularity = "MonthInYear"

	UserDateGranularityDayInMonth UserDateGranularity = "DayInMonth"

	UserDateGranularityFiscalPeriod UserDateGranularity = "FiscalPeriod"

	UserDateGranularityFiscalWeek UserDateGranularity = "FiscalWeek"
)

type ReportSortType string

const (
	ReportSortTypeColumn ReportSortType = "Column"

	ReportSortTypeAggregate ReportSortType = "Aggregate"

	ReportSortTypeCustomSummaryFormula ReportSortType = "CustomSummaryFormula"
)

type UserDateInterval string

const (
	UserDateIntervalINTERVAL_CURRENT UserDateInterval = "INTERVAL_CURRENT"

	UserDateIntervalINTERVAL_CURNEXT1 UserDateInterval = "INTERVAL_CURNEXT1"

	UserDateIntervalINTERVAL_CURPREV1 UserDateInterval = "INTERVAL_CURPREV1"

	UserDateIntervalINTERVAL_NEXT1 UserDateInterval = "INTERVAL_NEXT1"

	UserDateIntervalINTERVAL_PREV1 UserDateInterval = "INTERVAL_PREV1"

	UserDateIntervalINTERVAL_CURNEXT3 UserDateInterval = "INTERVAL_CURNEXT3"

	UserDateIntervalINTERVAL_CURFY UserDateInterval = "INTERVAL_CURFY"

	UserDateIntervalINTERVAL_PREVFY UserDateInterval = "INTERVAL_PREVFY"

	UserDateIntervalINTERVAL_PREV2FY UserDateInterval = "INTERVAL_PREV2FY"

	UserDateIntervalINTERVAL_AGO2FY UserDateInterval = "INTERVAL_AGO2FY"

	UserDateIntervalINTERVAL_NEXTFY UserDateInterval = "INTERVAL_NEXTFY"

	UserDateIntervalINTERVAL_PREVCURFY UserDateInterval = "INTERVAL_PREVCURFY"

	UserDateIntervalINTERVAL_PREVCUR2FY UserDateInterval = "INTERVAL_PREVCUR2FY"

	UserDateIntervalINTERVAL_CURNEXTFY UserDateInterval = "INTERVAL_CURNEXTFY"

	UserDateIntervalINTERVAL_CUSTOM UserDateInterval = "INTERVAL_CUSTOM"

	UserDateIntervalINTERVAL_YESTERDAY UserDateInterval = "INTERVAL_YESTERDAY"

	UserDateIntervalINTERVAL_TODAY UserDateInterval = "INTERVAL_TODAY"

	UserDateIntervalINTERVAL_TOMORROW UserDateInterval = "INTERVAL_TOMORROW"

	UserDateIntervalINTERVAL_LASTWEEK UserDateInterval = "INTERVAL_LASTWEEK"

	UserDateIntervalINTERVAL_THISWEEK UserDateInterval = "INTERVAL_THISWEEK"

	UserDateIntervalINTERVAL_NEXTWEEK UserDateInterval = "INTERVAL_NEXTWEEK"

	UserDateIntervalINTERVAL_LASTMONTH UserDateInterval = "INTERVAL_LASTMONTH"

	UserDateIntervalINTERVAL_THISMONTH UserDateInterval = "INTERVAL_THISMONTH"

	UserDateIntervalINTERVAL_NEXTMONTH UserDateInterval = "INTERVAL_NEXTMONTH"

	UserDateIntervalINTERVAL_LASTTHISMONTH UserDateInterval = "INTERVAL_LASTTHISMONTH"

	UserDateIntervalINTERVAL_THISNEXTMONTH UserDateInterval = "INTERVAL_THISNEXTMONTH"

	UserDateIntervalINTERVAL_CURRENTQ UserDateInterval = "INTERVAL_CURRENTQ"

	UserDateIntervalINTERVAL_CURNEXTQ UserDateInterval = "INTERVAL_CURNEXTQ"

	UserDateIntervalINTERVAL_CURPREVQ UserDateInterval = "INTERVAL_CURPREVQ"

	UserDateIntervalINTERVAL_NEXTQ UserDateInterval = "INTERVAL_NEXTQ"

	UserDateIntervalINTERVAL_PREVQ UserDateInterval = "INTERVAL_PREVQ"

	UserDateIntervalINTERVAL_CURNEXT3Q UserDateInterval = "INTERVAL_CURNEXT3Q"

	UserDateIntervalINTERVAL_CURY UserDateInterval = "INTERVAL_CURY"

	UserDateIntervalINTERVAL_PREVY UserDateInterval = "INTERVAL_PREVY"

	UserDateIntervalINTERVAL_PREV2Y UserDateInterval = "INTERVAL_PREV2Y"

	UserDateIntervalINTERVAL_AGO2Y UserDateInterval = "INTERVAL_AGO2Y"

	UserDateIntervalINTERVAL_NEXTY UserDateInterval = "INTERVAL_NEXTY"

	UserDateIntervalINTERVAL_PREVCURY UserDateInterval = "INTERVAL_PREVCURY"

	UserDateIntervalINTERVAL_PREVCUR2Y UserDateInterval = "INTERVAL_PREVCUR2Y"

	UserDateIntervalINTERVAL_CURNEXTY UserDateInterval = "INTERVAL_CURNEXTY"

	UserDateIntervalINTERVAL_LAST7 UserDateInterval = "INTERVAL_LAST7"

	UserDateIntervalINTERVAL_LAST30 UserDateInterval = "INTERVAL_LAST30"

	UserDateIntervalINTERVAL_LAST60 UserDateInterval = "INTERVAL_LAST60"

	UserDateIntervalINTERVAL_LAST90 UserDateInterval = "INTERVAL_LAST90"

	UserDateIntervalINTERVAL_LAST120 UserDateInterval = "INTERVAL_LAST120"

	UserDateIntervalINTERVAL_NEXT7 UserDateInterval = "INTERVAL_NEXT7"

	UserDateIntervalINTERVAL_NEXT30 UserDateInterval = "INTERVAL_NEXT30"

	UserDateIntervalINTERVAL_NEXT60 UserDateInterval = "INTERVAL_NEXT60"

	UserDateIntervalINTERVAL_NEXT90 UserDateInterval = "INTERVAL_NEXT90"

	UserDateIntervalINTERVAL_NEXT120 UserDateInterval = "INTERVAL_NEXT120"

	UserDateIntervalLAST_FISCALWEEK UserDateInterval = "LAST_FISCALWEEK"

	UserDateIntervalTHIS_FISCALWEEK UserDateInterval = "THIS_FISCALWEEK"

	UserDateIntervalNEXT_FISCALWEEK UserDateInterval = "NEXT_FISCALWEEK"

	UserDateIntervalLAST_FISCALPERIOD UserDateInterval = "LAST_FISCALPERIOD"

	UserDateIntervalTHIS_FISCALPERIOD UserDateInterval = "THIS_FISCALPERIOD"

	UserDateIntervalNEXT_FISCALPERIOD UserDateInterval = "NEXT_FISCALPERIOD"

	UserDateIntervalLASTTHIS_FISCALPERIOD UserDateInterval = "LASTTHIS_FISCALPERIOD"

	UserDateIntervalTHISNEXT_FISCALPERIOD UserDateInterval = "THISNEXT_FISCALPERIOD"

	UserDateIntervalCURRENT_ENTITLEMENT_PERIOD UserDateInterval = "CURRENT_ENTITLEMENT_PERIOD"

	UserDateIntervalPREVIOUS_ENTITLEMENT_PERIOD UserDateInterval = "PREVIOUS_ENTITLEMENT_PERIOD"

	UserDateIntervalPREVIOUS_TWO_ENTITLEMENT_PERIODS UserDateInterval = "PREVIOUS_TWO_ENTITLEMENT_PERIODS"

	UserDateIntervalTWO_ENTITLEMENT_PERIODS_AGO UserDateInterval = "TWO_ENTITLEMENT_PERIODS_AGO"

	UserDateIntervalCURRENT_AND_PREVIOUS_ENTITLEMENT_PERIOD UserDateInterval = "CURRENT_AND_PREVIOUS_ENTITLEMENT_PERIOD"

	UserDateIntervalCURRENT_AND_PREVIOUS_TWO_ENTITLEMENT_PERIODS UserDateInterval = "CURRENT_AND_PREVIOUS_TWO_ENTITLEMENT_PERIODS"
)

type ReportTypeCategory string

const (
	ReportTypeCategoryAccounts ReportTypeCategory = "accounts"

	ReportTypeCategoryOpportunities ReportTypeCategory = "opportunities"

	ReportTypeCategoryForecasts ReportTypeCategory = "forecasts"

	ReportTypeCategoryCases ReportTypeCategory = "cases"

	ReportTypeCategoryLeads ReportTypeCategory = "leads"

	ReportTypeCategoryCampaigns ReportTypeCategory = "campaigns"

	ReportTypeCategoryActivities ReportTypeCategory = "activities"

	ReportTypeCategoryBusop ReportTypeCategory = "busop"

	ReportTypeCategoryProducts ReportTypeCategory = "products"

	ReportTypeCategoryAdmin ReportTypeCategory = "admin"

	ReportTypeCategoryTerritory ReportTypeCategory = "territory"

	ReportTypeCategoryOther ReportTypeCategory = "other"

	ReportTypeCategoryContent ReportTypeCategory = "content"

	ReportTypeCategoryUsage_entitlement ReportTypeCategory = "usage_entitlement"

	ReportTypeCategoryWdc ReportTypeCategory = "wdc"

	ReportTypeCategoryCalibration ReportTypeCategory = "calibration"

	ReportTypeCategoryTerritory2 ReportTypeCategory = "territory2"

	ReportTypeCategoryQuotes ReportTypeCategory = "quotes"

	ReportTypeCategoryIndividual ReportTypeCategory = "individual"

	ReportTypeCategoryEmployee ReportTypeCategory = "employee"

	ReportTypeCategoryData_cloud ReportTypeCategory = "data_cloud"
)

type SamlIdentityLocationType string

const (
	SamlIdentityLocationTypeSubjectNameId SamlIdentityLocationType = "SubjectNameId"

	SamlIdentityLocationTypeAttribute SamlIdentityLocationType = "Attribute"
)

type SamlIdentityType string

const (
	SamlIdentityTypeUsername SamlIdentityType = "Username"

	SamlIdentityTypeFederationId SamlIdentityType = "FederationId"

	SamlIdentityTypeUserId SamlIdentityType = "UserId"
)

type SamlType string

const (
	SamlTypeSAML1_1 SamlType = "SAML1_1"

	SamlTypeSAML2_0 SamlType = "SAML2_0"
)

type SamlSpSLOBinding string

const (
	SamlSpSLOBindingRedirectBinding SamlSpSLOBinding = "RedirectBinding"

	SamlSpSLOBindingPostBinding SamlSpSLOBinding = "PostBinding"
)

type Complexity string

const (
	ComplexityNoRestriction Complexity = "NoRestriction"

	ComplexityAlphaNumeric Complexity = "AlphaNumeric"

	ComplexitySpecialCharacters Complexity = "SpecialCharacters"

	ComplexityUpperLowerCaseNumeric Complexity = "UpperLowerCaseNumeric"

	ComplexityUpperLowerCaseNumericSpecialCharacters Complexity = "UpperLowerCaseNumericSpecialCharacters"

	ComplexityAny3UpperLowerCaseNumericSpecialCharacters Complexity = "Any3UpperLowerCaseNumericSpecialCharacters"
)

type Expiration string

const (
	ExpirationThirtyDays Expiration = "ThirtyDays"

	ExpirationSixtyDays Expiration = "SixtyDays"

	ExpirationNinetyDays Expiration = "NinetyDays"

	ExpirationSixMonths Expiration = "SixMonths"

	ExpirationOneYear Expiration = "OneYear"

	ExpirationNever Expiration = "Never"
)

type LockoutInterval string

const (
	LockoutIntervalFifteenMinutes LockoutInterval = "FifteenMinutes"

	LockoutIntervalThirtyMinutes LockoutInterval = "ThirtyMinutes"

	LockoutIntervalSixtyMinutes LockoutInterval = "SixtyMinutes"

	LockoutIntervalForever LockoutInterval = "Forever"
)

type MaxLoginAttempts string

const (
	MaxLoginAttemptsThreeAttempts MaxLoginAttempts = "ThreeAttempts"

	MaxLoginAttemptsFiveAttempts MaxLoginAttempts = "FiveAttempts"

	MaxLoginAttemptsTenAttempts MaxLoginAttempts = "TenAttempts"

	MaxLoginAttemptsNoLimit MaxLoginAttempts = "NoLimit"
)

type QuestionRestriction string

const (
	QuestionRestrictionNone QuestionRestriction = "None"

	QuestionRestrictionDoesNotContainPassword QuestionRestriction = "DoesNotContainPassword"
)

type SessionTimeout string

const (
	SessionTimeoutTwentyFourHours SessionTimeout = "TwentyFourHours"

	SessionTimeoutTwelveHours SessionTimeout = "TwelveHours"

	SessionTimeoutEightHours SessionTimeout = "EightHours"

	SessionTimeoutFourHours SessionTimeout = "FourHours"

	SessionTimeoutTwoHours SessionTimeout = "TwoHours"

	SessionTimeoutNinetyMinutes SessionTimeout = "NinetyMinutes"

	SessionTimeoutSixtyMinutes SessionTimeout = "SixtyMinutes"

	SessionTimeoutThirtyMinutes SessionTimeout = "ThirtyMinutes"

	SessionTimeoutFifteenMinutes SessionTimeout = "FifteenMinutes"
)

type ApplicationSourceType string

const (
	ApplicationSourceTypeREPLY_RECOMMENDATION ApplicationSourceType = "REPLY_RECOMMENDATION"

	ApplicationSourceTypeARTICLE_RECOMMENDATION ApplicationSourceType = "ARTICLE_RECOMMENDATION"

	ApplicationSourceTypeUTTERANCE_RECOMMENDATION ApplicationSourceType = "UTTERANCE_RECOMMENDATION"

	ApplicationSourceTypeFAQ ApplicationSourceType = "FAQ"

	ApplicationSourceTypeEAR_FOR_CONVERSATION ApplicationSourceType = "EAR_FOR_CONVERSATION"

	ApplicationSourceTypeUSE_CASE_EXPLORER ApplicationSourceType = "USE_CASE_EXPLORER"

	ApplicationSourceTypeEAR_FOR_VOICE ApplicationSourceType = "EAR_FOR_VOICE"
)

type ServiceAISetupDefStatus string

const (
	ServiceAISetupDefStatusFIELDS_SELECTED ServiceAISetupDefStatus = "FIELDS_SELECTED"

	ServiceAISetupDefStatusTRAINING ServiceAISetupDefStatus = "TRAINING"

	ServiceAISetupDefStatusREADY_TO_ACTIVATE ServiceAISetupDefStatus = "READY_TO_ACTIVATE"

	ServiceAISetupDefStatusSERVING ServiceAISetupDefStatus = "SERVING"

	ServiceAISetupDefStatusRETIRED ServiceAISetupDefStatus = "RETIRED"

	ServiceAISetupDefStatusARCHIVED ServiceAISetupDefStatus = "ARCHIVED"

	ServiceAISetupDefStatusREADY_FOR_REVIEW ServiceAISetupDefStatus = "READY_FOR_REVIEW"

	ServiceAISetupDefStatusTRAINING_FAILURE ServiceAISetupDefStatus = "TRAINING_FAILURE"
)

type ServiceAISetupFieldType string

const (
	ServiceAISetupFieldTypeCASE_DESC ServiceAISetupFieldType = "CASE_DESC"

	ServiceAISetupFieldTypeCASE_SUBJ ServiceAISetupFieldType = "CASE_SUBJ"

	ServiceAISetupFieldTypeARTICLE_TITLE ServiceAISetupFieldType = "ARTICLE_TITLE"

	ServiceAISetupFieldTypeARTICLE_CONTENT ServiceAISetupFieldType = "ARTICLE_CONTENT"

	ServiceAISetupFieldTypeARTICLE_SUMMARY ServiceAISetupFieldType = "ARTICLE_SUMMARY"

	ServiceAISetupFieldTypeARTICLE_ANSWER ServiceAISetupFieldType = "ARTICLE_ANSWER"

	ServiceAISetupFieldTypeARTICLE_QUESTION ServiceAISetupFieldType = "ARTICLE_QUESTION"
)

type CaseSubjectOption string

const (
	CaseSubjectOptionSocialPostSource CaseSubjectOption = "SocialPostSource"

	CaseSubjectOptionSocialPostContent CaseSubjectOption = "SocialPostContent"

	CaseSubjectOptionBuildCustom CaseSubjectOption = "BuildCustom"
)

type PropertyDisplayType string

const (
	PropertyDisplayTypeLookup PropertyDisplayType = "Lookup"

	PropertyDisplayTypePicklist PropertyDisplayType = "Picklist"

	PropertyDisplayTypeText PropertyDisplayType = "Text"

	PropertyDisplayTypeCheckbox PropertyDisplayType = "Checkbox"

	PropertyDisplayTypeNumber PropertyDisplayType = "Number"

	PropertyDisplayTypeQueue PropertyDisplayType = "Queue"

	PropertyDisplayTypeDate PropertyDisplayType = "Date"

	PropertyDisplayTypeDateTime PropertyDisplayType = "DateTime"
)

type TimeSheetFrequency string

const (
	TimeSheetFrequencyDaily TimeSheetFrequency = "Daily"

	TimeSheetFrequencyWeekly TimeSheetFrequency = "Weekly"

	TimeSheetFrequencyEveryTwoWeeks TimeSheetFrequency = "EveryTwoWeeks"

	TimeSheetFrequencyTwiceAMonth TimeSheetFrequency = "TwiceAMonth"

	TimeSheetFrequencyMonthly TimeSheetFrequency = "Monthly"
)

type DaysOfWeek string

const (
	DaysOfWeekSunday DaysOfWeek = "Sunday"

	DaysOfWeekMonday DaysOfWeek = "Monday"

	DaysOfWeekTuesday DaysOfWeek = "Tuesday"

	DaysOfWeekWednesday DaysOfWeek = "Wednesday"

	DaysOfWeekThursday DaysOfWeek = "Thursday"

	DaysOfWeekFriday DaysOfWeek = "Friday"

	DaysOfWeekSaturday DaysOfWeek = "Saturday"
)

type TransactionSecurityEventName string

const (
	TransactionSecurityEventNameReportEvent TransactionSecurityEventName = "ReportEvent"

	TransactionSecurityEventNameApiEvent TransactionSecurityEventName = "ApiEvent"

	TransactionSecurityEventNameAdminSetupEvent TransactionSecurityEventName = "AdminSetupEvent"

	TransactionSecurityEventNameLoginEvent TransactionSecurityEventName = "LoginEvent"

	TransactionSecurityEventNameListViewEvent TransactionSecurityEventName = "ListViewEvent"

	TransactionSecurityEventNameCredentialStuffingEventStore TransactionSecurityEventName = "CredentialStuffingEventStore"

	TransactionSecurityEventNameReportAnomalyEventStore TransactionSecurityEventName = "ReportAnomalyEventStore"

	TransactionSecurityEventNameSessionHijackingEventStore TransactionSecurityEventName = "SessionHijackingEventStore"

	TransactionSecurityEventNameApiAnomalyEventStore TransactionSecurityEventName = "ApiAnomalyEventStore"

	TransactionSecurityEventNameBulkApiResultEventStore TransactionSecurityEventName = "BulkApiResultEventStore"

	TransactionSecurityEventNamePermissionSetEventStore TransactionSecurityEventName = "PermissionSetEventStore"

	TransactionSecurityEventNameFileEventStore TransactionSecurityEventName = "FileEventStore"
)

type MonitoredEvents string

const (
	MonitoredEventsAuditTrail MonitoredEvents = "AuditTrail"

	MonitoredEventsLogin MonitoredEvents = "Login"

	MonitoredEventsEntity MonitoredEvents = "Entity"

	MonitoredEventsDataExport MonitoredEvents = "DataExport"

	MonitoredEventsAccessResource MonitoredEvents = "AccessResource"
)

type TxnSecurityPolicyType string

const (
	TxnSecurityPolicyTypeCustomApexPolicy TxnSecurityPolicyType = "CustomApexPolicy"

	TxnSecurityPolicyTypeCustomConditionBuilderPolicy TxnSecurityPolicyType = "CustomConditionBuilderPolicy"
)

type ObjectRelationshipType string

const (
	ObjectRelationshipTypeDirect ObjectRelationshipType = "Direct"

	ObjectRelationshipTypeIndirect ObjectRelationshipType = "Indirect"

	ObjectRelationshipTypeSelf ObjectRelationshipType = "Self"

	ObjectRelationshipTypeInverseDirect ObjectRelationshipType = "InverseDirect"
)

type NetworkUserType string

const (
	NetworkUserTypeInternal NetworkUserType = "Internal"

	NetworkUserTypeCustomer NetworkUserType = "Customer"

	NetworkUserTypePartner NetworkUserType = "Partner"
)

type CountryIsoCode string

const (
	CountryIsoCodeAD CountryIsoCode = "AD"

	CountryIsoCodeAE CountryIsoCode = "AE"

	CountryIsoCodeAF CountryIsoCode = "AF"

	CountryIsoCodeAG CountryIsoCode = "AG"

	CountryIsoCodeAI CountryIsoCode = "AI"

	CountryIsoCodeAL CountryIsoCode = "AL"

	CountryIsoCodeAM CountryIsoCode = "AM"

	CountryIsoCodeAO CountryIsoCode = "AO"

	CountryIsoCodeAQ CountryIsoCode = "AQ"

	CountryIsoCodeAR CountryIsoCode = "AR"

	CountryIsoCodeAT CountryIsoCode = "AT"

	CountryIsoCodeAU CountryIsoCode = "AU"

	CountryIsoCodeAW CountryIsoCode = "AW"

	CountryIsoCodeAX CountryIsoCode = "AX"

	CountryIsoCodeAZ CountryIsoCode = "AZ"

	CountryIsoCodeBA CountryIsoCode = "BA"

	CountryIsoCodeBB CountryIsoCode = "BB"

	CountryIsoCodeBD CountryIsoCode = "BD"

	CountryIsoCodeBE CountryIsoCode = "BE"

	CountryIsoCodeBF CountryIsoCode = "BF"

	CountryIsoCodeBG CountryIsoCode = "BG"

	CountryIsoCodeBH CountryIsoCode = "BH"

	CountryIsoCodeBI CountryIsoCode = "BI"

	CountryIsoCodeBJ CountryIsoCode = "BJ"

	CountryIsoCodeBL CountryIsoCode = "BL"

	CountryIsoCodeBM CountryIsoCode = "BM"

	CountryIsoCodeBN CountryIsoCode = "BN"

	CountryIsoCodeBO CountryIsoCode = "BO"

	CountryIsoCodeBQ CountryIsoCode = "BQ"

	CountryIsoCodeBR CountryIsoCode = "BR"

	CountryIsoCodeBS CountryIsoCode = "BS"

	CountryIsoCodeBT CountryIsoCode = "BT"

	CountryIsoCodeBV CountryIsoCode = "BV"

	CountryIsoCodeBW CountryIsoCode = "BW"

	CountryIsoCodeBY CountryIsoCode = "BY"

	CountryIsoCodeBZ CountryIsoCode = "BZ"

	CountryIsoCodeCA CountryIsoCode = "CA"

	CountryIsoCodeCC CountryIsoCode = "CC"

	CountryIsoCodeCD CountryIsoCode = "CD"

	CountryIsoCodeCF CountryIsoCode = "CF"

	CountryIsoCodeCG CountryIsoCode = "CG"

	CountryIsoCodeCH CountryIsoCode = "CH"

	CountryIsoCodeCI CountryIsoCode = "CI"

	CountryIsoCodeCK CountryIsoCode = "CK"

	CountryIsoCodeCL CountryIsoCode = "CL"

	CountryIsoCodeCM CountryIsoCode = "CM"

	CountryIsoCodeCN CountryIsoCode = "CN"

	CountryIsoCodeCO CountryIsoCode = "CO"

	CountryIsoCodeCR CountryIsoCode = "CR"

	CountryIsoCodeCV CountryIsoCode = "CV"

	CountryIsoCodeCW CountryIsoCode = "CW"

	CountryIsoCodeCX CountryIsoCode = "CX"

	CountryIsoCodeCY CountryIsoCode = "CY"

	CountryIsoCodeCZ CountryIsoCode = "CZ"

	CountryIsoCodeDE CountryIsoCode = "DE"

	CountryIsoCodeDJ CountryIsoCode = "DJ"

	CountryIsoCodeDK CountryIsoCode = "DK"

	CountryIsoCodeDM CountryIsoCode = "DM"

	CountryIsoCodeDO CountryIsoCode = "DO"

	CountryIsoCodeDZ CountryIsoCode = "DZ"

	CountryIsoCodeEC CountryIsoCode = "EC"

	CountryIsoCodeEE CountryIsoCode = "EE"

	CountryIsoCodeEG CountryIsoCode = "EG"

	CountryIsoCodeEH CountryIsoCode = "EH"

	CountryIsoCodeER CountryIsoCode = "ER"

	CountryIsoCodeES CountryIsoCode = "ES"

	CountryIsoCodeET CountryIsoCode = "ET"

	CountryIsoCodeFI CountryIsoCode = "FI"

	CountryIsoCodeFJ CountryIsoCode = "FJ"

	CountryIsoCodeFK CountryIsoCode = "FK"

	CountryIsoCodeFO CountryIsoCode = "FO"

	CountryIsoCodeFR CountryIsoCode = "FR"

	CountryIsoCodeGA CountryIsoCode = "GA"

	CountryIsoCodeGB CountryIsoCode = "GB"

	CountryIsoCodeGD CountryIsoCode = "GD"

	CountryIsoCodeGE CountryIsoCode = "GE"

	CountryIsoCodeGF CountryIsoCode = "GF"

	CountryIsoCodeGG CountryIsoCode = "GG"

	CountryIsoCodeGH CountryIsoCode = "GH"

	CountryIsoCodeGI CountryIsoCode = "GI"

	CountryIsoCodeGL CountryIsoCode = "GL"

	CountryIsoCodeGM CountryIsoCode = "GM"

	CountryIsoCodeGN CountryIsoCode = "GN"

	CountryIsoCodeGP CountryIsoCode = "GP"

	CountryIsoCodeGQ CountryIsoCode = "GQ"

	CountryIsoCodeGR CountryIsoCode = "GR"

	CountryIsoCodeGS CountryIsoCode = "GS"

	CountryIsoCodeGT CountryIsoCode = "GT"

	CountryIsoCodeGW CountryIsoCode = "GW"

	CountryIsoCodeGY CountryIsoCode = "GY"

	CountryIsoCodeHM CountryIsoCode = "HM"

	CountryIsoCodeHN CountryIsoCode = "HN"

	CountryIsoCodeHR CountryIsoCode = "HR"

	CountryIsoCodeHT CountryIsoCode = "HT"

	CountryIsoCodeHU CountryIsoCode = "HU"

	CountryIsoCodeID CountryIsoCode = "ID"

	CountryIsoCodeIE CountryIsoCode = "IE"

	CountryIsoCodeIL CountryIsoCode = "IL"

	CountryIsoCodeIM CountryIsoCode = "IM"

	CountryIsoCodeIN CountryIsoCode = "IN"

	CountryIsoCodeIO CountryIsoCode = "IO"

	CountryIsoCodeIQ CountryIsoCode = "IQ"

	CountryIsoCodeIS CountryIsoCode = "IS"

	CountryIsoCodeIT CountryIsoCode = "IT"

	CountryIsoCodeJE CountryIsoCode = "JE"

	CountryIsoCodeJM CountryIsoCode = "JM"

	CountryIsoCodeJO CountryIsoCode = "JO"

	CountryIsoCodeJP CountryIsoCode = "JP"

	CountryIsoCodeKE CountryIsoCode = "KE"

	CountryIsoCodeKG CountryIsoCode = "KG"

	CountryIsoCodeKH CountryIsoCode = "KH"

	CountryIsoCodeKI CountryIsoCode = "KI"

	CountryIsoCodeKM CountryIsoCode = "KM"

	CountryIsoCodeKN CountryIsoCode = "KN"

	CountryIsoCodeKR CountryIsoCode = "KR"

	CountryIsoCodeKW CountryIsoCode = "KW"

	CountryIsoCodeKY CountryIsoCode = "KY"

	CountryIsoCodeKZ CountryIsoCode = "KZ"

	CountryIsoCodeLA CountryIsoCode = "LA"

	CountryIsoCodeLB CountryIsoCode = "LB"

	CountryIsoCodeLC CountryIsoCode = "LC"

	CountryIsoCodeLI CountryIsoCode = "LI"

	CountryIsoCodeLK CountryIsoCode = "LK"

	CountryIsoCodeLR CountryIsoCode = "LR"

	CountryIsoCodeLS CountryIsoCode = "LS"

	CountryIsoCodeLT CountryIsoCode = "LT"

	CountryIsoCodeLU CountryIsoCode = "LU"

	CountryIsoCodeLV CountryIsoCode = "LV"

	CountryIsoCodeLY CountryIsoCode = "LY"

	CountryIsoCodeMA CountryIsoCode = "MA"

	CountryIsoCodeMC CountryIsoCode = "MC"

	CountryIsoCodeMD CountryIsoCode = "MD"

	CountryIsoCodeME CountryIsoCode = "ME"

	CountryIsoCodeMF CountryIsoCode = "MF"

	CountryIsoCodeMG CountryIsoCode = "MG"

	CountryIsoCodeMK CountryIsoCode = "MK"

	CountryIsoCodeML CountryIsoCode = "ML"

	CountryIsoCodeMM CountryIsoCode = "MM"

	CountryIsoCodeMN CountryIsoCode = "MN"

	CountryIsoCodeMO CountryIsoCode = "MO"

	CountryIsoCodeMQ CountryIsoCode = "MQ"

	CountryIsoCodeMR CountryIsoCode = "MR"

	CountryIsoCodeMS CountryIsoCode = "MS"

	CountryIsoCodeMT CountryIsoCode = "MT"

	CountryIsoCodeMU CountryIsoCode = "MU"

	CountryIsoCodeMV CountryIsoCode = "MV"

	CountryIsoCodeMW CountryIsoCode = "MW"

	CountryIsoCodeMX CountryIsoCode = "MX"

	CountryIsoCodeMY CountryIsoCode = "MY"

	CountryIsoCodeMZ CountryIsoCode = "MZ"

	CountryIsoCodeNA CountryIsoCode = "NA"

	CountryIsoCodeNC CountryIsoCode = "NC"

	CountryIsoCodeNE CountryIsoCode = "NE"

	CountryIsoCodeNF CountryIsoCode = "NF"

	CountryIsoCodeNG CountryIsoCode = "NG"

	CountryIsoCodeNI CountryIsoCode = "NI"

	CountryIsoCodeNL CountryIsoCode = "NL"

	CountryIsoCodeNO CountryIsoCode = "NO"

	CountryIsoCodeNP CountryIsoCode = "NP"

	CountryIsoCodeNR CountryIsoCode = "NR"

	CountryIsoCodeNU CountryIsoCode = "NU"

	CountryIsoCodeNZ CountryIsoCode = "NZ"

	CountryIsoCodeOM CountryIsoCode = "OM"

	CountryIsoCodePA CountryIsoCode = "PA"

	CountryIsoCodePE CountryIsoCode = "PE"

	CountryIsoCodePF CountryIsoCode = "PF"

	CountryIsoCodePG CountryIsoCode = "PG"

	CountryIsoCodePH CountryIsoCode = "PH"

	CountryIsoCodePK CountryIsoCode = "PK"

	CountryIsoCodePL CountryIsoCode = "PL"

	CountryIsoCodePM CountryIsoCode = "PM"

	CountryIsoCodePN CountryIsoCode = "PN"

	CountryIsoCodePS CountryIsoCode = "PS"

	CountryIsoCodePT CountryIsoCode = "PT"

	CountryIsoCodePY CountryIsoCode = "PY"

	CountryIsoCodeQA CountryIsoCode = "QA"

	CountryIsoCodeRE CountryIsoCode = "RE"

	CountryIsoCodeRO CountryIsoCode = "RO"

	CountryIsoCodeRS CountryIsoCode = "RS"

	CountryIsoCodeRU CountryIsoCode = "RU"

	CountryIsoCodeRW CountryIsoCode = "RW"

	CountryIsoCodeSA CountryIsoCode = "SA"

	CountryIsoCodeSB CountryIsoCode = "SB"

	CountryIsoCodeSC CountryIsoCode = "SC"

	CountryIsoCodeSE CountryIsoCode = "SE"

	CountryIsoCodeSG CountryIsoCode = "SG"

	CountryIsoCodeSH CountryIsoCode = "SH"

	CountryIsoCodeSI CountryIsoCode = "SI"

	CountryIsoCodeSJ CountryIsoCode = "SJ"

	CountryIsoCodeSK CountryIsoCode = "SK"

	CountryIsoCodeSL CountryIsoCode = "SL"

	CountryIsoCodeSM CountryIsoCode = "SM"

	CountryIsoCodeSN CountryIsoCode = "SN"

	CountryIsoCodeSO CountryIsoCode = "SO"

	CountryIsoCodeSR CountryIsoCode = "SR"

	CountryIsoCodeSS CountryIsoCode = "SS"

	CountryIsoCodeST CountryIsoCode = "ST"

	CountryIsoCodeSV CountryIsoCode = "SV"

	CountryIsoCodeSX CountryIsoCode = "SX"

	CountryIsoCodeSZ CountryIsoCode = "SZ"

	CountryIsoCodeTC CountryIsoCode = "TC"

	CountryIsoCodeTD CountryIsoCode = "TD"

	CountryIsoCodeTF CountryIsoCode = "TF"

	CountryIsoCodeTG CountryIsoCode = "TG"

	CountryIsoCodeTH CountryIsoCode = "TH"

	CountryIsoCodeTJ CountryIsoCode = "TJ"

	CountryIsoCodeTK CountryIsoCode = "TK"

	CountryIsoCodeTL CountryIsoCode = "TL"

	CountryIsoCodeTM CountryIsoCode = "TM"

	CountryIsoCodeTN CountryIsoCode = "TN"

	CountryIsoCodeTO CountryIsoCode = "TO"

	CountryIsoCodeTR CountryIsoCode = "TR"

	CountryIsoCodeTT CountryIsoCode = "TT"

	CountryIsoCodeTV CountryIsoCode = "TV"

	CountryIsoCodeTW CountryIsoCode = "TW"

	CountryIsoCodeTZ CountryIsoCode = "TZ"

	CountryIsoCodeUA CountryIsoCode = "UA"

	CountryIsoCodeUG CountryIsoCode = "UG"

	CountryIsoCodeUS CountryIsoCode = "US"

	CountryIsoCodeUY CountryIsoCode = "UY"

	CountryIsoCodeUZ CountryIsoCode = "UZ"

	CountryIsoCodeVA CountryIsoCode = "VA"

	CountryIsoCodeVC CountryIsoCode = "VC"

	CountryIsoCodeVE CountryIsoCode = "VE"

	CountryIsoCodeVG CountryIsoCode = "VG"

	CountryIsoCodeVN CountryIsoCode = "VN"

	CountryIsoCodeVU CountryIsoCode = "VU"

	CountryIsoCodeWF CountryIsoCode = "WF"

	CountryIsoCodeWS CountryIsoCode = "WS"

	CountryIsoCodeXK CountryIsoCode = "XK"

	CountryIsoCodeYE CountryIsoCode = "YE"

	CountryIsoCodeYT CountryIsoCode = "YT"

	CountryIsoCodeZA CountryIsoCode = "ZA"

	CountryIsoCodeZM CountryIsoCode = "ZM"

	CountryIsoCodeZW CountryIsoCode = "ZW"
)

type TaxLocaleType string

const (
	TaxLocaleTypeNet TaxLocaleType = "Net"

	TaxLocaleTypeGross TaxLocaleType = "Gross"
)

type OrderLifeCycleType string

const (
	OrderLifeCycleTypeMANAGED OrderLifeCycleType = "MANAGED"

	OrderLifeCycleTypeUNMANAGED OrderLifeCycleType = "UNMANAGED"
)

type PricingStrategy string

const (
	PricingStrategyLowestPrice PricingStrategy = "LowestPrice"

	PricingStrategyPriority PricingStrategy = "Priority"
)

type ProductGrouping string

const (
	ProductGroupingVariationParent ProductGrouping = "VariationParent"

	ProductGroupingNoGrouping ProductGrouping = "NoGrouping"
)

type WebStoreType string

const (
	WebStoreTypeB2B WebStoreType = "B2B"

	WebStoreTypeB2C WebStoreType = "B2C"

	WebStoreTypeB2CE WebStoreType = "B2CE"
)

type LookupValueType string

const (
	LookupValueTypeUser LookupValueType = "User"

	LookupValueTypeQueue LookupValueType = "Queue"

	LookupValueTypeRecordType LookupValueType = "RecordType"
)

type FieldUpdateOperation string

const (
	FieldUpdateOperationFormula FieldUpdateOperation = "Formula"

	FieldUpdateOperationLiteral FieldUpdateOperation = "Literal"

	FieldUpdateOperationNull FieldUpdateOperation = "Null"

	FieldUpdateOperationNextValue FieldUpdateOperation = "NextValue"

	FieldUpdateOperationPreviousValue FieldUpdateOperation = "PreviousValue"

	FieldUpdateOperationLookupValue FieldUpdateOperation = "LookupValue"
)

type KnowledgeWorkflowAction string

const (
	KnowledgeWorkflowActionPublishAsNew KnowledgeWorkflowAction = "PublishAsNew"

	KnowledgeWorkflowActionPublish KnowledgeWorkflowAction = "Publish"
)

type SendAction string

const (
	SendActionSend SendAction = "Send"
)

type ActionTaskAssignedToTypes string

const (
	ActionTaskAssignedToTypesUser ActionTaskAssignedToTypes = "user"

	ActionTaskAssignedToTypesRole ActionTaskAssignedToTypes = "role"

	ActionTaskAssignedToTypesOpportunityTeam ActionTaskAssignedToTypes = "opportunityTeam"

	ActionTaskAssignedToTypesAccountTeam ActionTaskAssignedToTypes = "accountTeam"

	ActionTaskAssignedToTypesOwner ActionTaskAssignedToTypes = "owner"

	ActionTaskAssignedToTypesAccountOwner ActionTaskAssignedToTypes = "accountOwner"

	ActionTaskAssignedToTypesCreator ActionTaskAssignedToTypes = "creator"

	ActionTaskAssignedToTypesAccountCreator ActionTaskAssignedToTypes = "accountCreator"

	ActionTaskAssignedToTypesPartnerUser ActionTaskAssignedToTypes = "partnerUser"

	ActionTaskAssignedToTypesPortalRole ActionTaskAssignedToTypes = "portalRole"
)

type ActionEmailRecipientTypes string

const (
	ActionEmailRecipientTypesGroup ActionEmailRecipientTypes = "group"

	ActionEmailRecipientTypesRole ActionEmailRecipientTypes = "role"

	ActionEmailRecipientTypesUser ActionEmailRecipientTypes = "user"

	ActionEmailRecipientTypesOpportunityTeam ActionEmailRecipientTypes = "opportunityTeam"

	ActionEmailRecipientTypesAccountTeam ActionEmailRecipientTypes = "accountTeam"

	ActionEmailRecipientTypesRoleSubordinates ActionEmailRecipientTypes = "roleSubordinates"

	ActionEmailRecipientTypesOwner ActionEmailRecipientTypes = "owner"

	ActionEmailRecipientTypesCreator ActionEmailRecipientTypes = "creator"

	ActionEmailRecipientTypesPartnerUser ActionEmailRecipientTypes = "partnerUser"

	ActionEmailRecipientTypesAccountOwner ActionEmailRecipientTypes = "accountOwner"

	ActionEmailRecipientTypesCustomerPortalUser ActionEmailRecipientTypes = "customerPortalUser"

	ActionEmailRecipientTypesPortalRole ActionEmailRecipientTypes = "portalRole"

	ActionEmailRecipientTypesPortalRoleSubordinates ActionEmailRecipientTypes = "portalRoleSubordinates"

	ActionEmailRecipientTypesContactLookup ActionEmailRecipientTypes = "contactLookup"

	ActionEmailRecipientTypesUserLookup ActionEmailRecipientTypes = "userLookup"

	ActionEmailRecipientTypesRoleSubordinatesInternal ActionEmailRecipientTypes = "roleSubordinatesInternal"

	ActionEmailRecipientTypesEmail ActionEmailRecipientTypes = "email"

	ActionEmailRecipientTypesCaseTeam ActionEmailRecipientTypes = "caseTeam"

	ActionEmailRecipientTypesCampaignMemberDerivedOwner ActionEmailRecipientTypes = "campaignMemberDerivedOwner"
)

type ActionEmailSenderType string

const (
	ActionEmailSenderTypeCurrentUser ActionEmailSenderType = "CurrentUser"

	ActionEmailSenderTypeOrgWideEmailAddress ActionEmailSenderType = "OrgWideEmailAddress"

	ActionEmailSenderTypeDefaultWorkflowUser ActionEmailSenderType = "DefaultWorkflowUser"
)

type WorkflowTriggerTypes string

const (
	WorkflowTriggerTypesOnCreateOnly WorkflowTriggerTypes = "onCreateOnly"

	WorkflowTriggerTypesOnCreateOrTriggeringUpdate WorkflowTriggerTypes = "onCreateOrTriggeringUpdate"

	WorkflowTriggerTypesOnAllChanges WorkflowTriggerTypes = "onAllChanges"

	WorkflowTriggerTypesOnRecursiveUpdate WorkflowTriggerTypes = "OnRecursiveUpdate"
)

type WorkflowTimeUnits string

const (
	WorkflowTimeUnitsHours WorkflowTimeUnits = "Hours"

	WorkflowTimeUnitsDays WorkflowTimeUnits = "Days"
)

type ExtendedErrorCode string

const (

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, actionCallName, parameterName
	ExtendedErrorCodeACTIONCALL_DUPLICATE_INPUT_PARAM ExtendedErrorCode = "ACTIONCALL_DUPLICATE_INPUT_PARAM"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, actionCallName, parameterName
	ExtendedErrorCodeACTIONCALL_DUPLICATE_OUTPUT_PARAM ExtendedErrorCode = "ACTIONCALL_DUPLICATE_OUTPUT_PARAM"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, cause
	ExtendedErrorCodeACTIONCALL_INPUT_VALIDATION_FAILED ExtendedErrorCode = "ACTIONCALL_INPUT_VALIDATION_FAILED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, actionCallName, parameterName
	ExtendedErrorCodeACTIONCALL_INVALID_INPUT_PARAM_NAME ExtendedErrorCode = "ACTIONCALL_INVALID_INPUT_PARAM_NAME"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeACTIONCALL_MISSING_NAME ExtendedErrorCode = "ACTIONCALL_MISSING_NAME"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, actionCallName, parameterName
	ExtendedErrorCodeACTIONCALL_MISSING_REQUIRED_PARAM ExtendedErrorCode = "ACTIONCALL_MISSING_REQUIRED_PARAM"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, actionCallName
	ExtendedErrorCodeACTIONCALL_MISSING_REQUIRED_TYPE ExtendedErrorCode = "ACTIONCALL_MISSING_REQUIRED_TYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeACTIONCALL_NOT_FOUND_WITH_NAME_AND_TYPE ExtendedErrorCode = "ACTIONCALL_NOT_FOUND_WITH_NAME_AND_TYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, processType
	ExtendedErrorCodeACTIONCALL_NOT_SUPPORTED_FOR_PROCESSTYPE ExtendedErrorCode = "ACTIONCALL_NOT_SUPPORTED_FOR_PROCESSTYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, triggerType
	ExtendedErrorCodeACTIONCALL_NOT_SUPPORTED_FOR_TRIGGERTYPE ExtendedErrorCode = "ACTIONCALL_NOT_SUPPORTED_FOR_TRIGGERTYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, actionCallName
	ExtendedErrorCodeACTIONCALL_TRANSACTION_MODEL_NOT_ALLOWED ExtendedErrorCode = "ACTIONCALL_TRANSACTION_MODEL_NOT_ALLOWED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, processType
	ExtendedErrorCodeACTIONCALL_TRANSACTION_MODEL_NOT_SUPPORTED ExtendedErrorCode = "ACTIONCALL_TRANSACTION_MODEL_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, actionObjectType, flowObjectType
	ExtendedErrorCodeACTIONCALL_TRIGGERING_RECORD_MISMATCHED_OBJECTTYPE ExtendedErrorCode = "ACTIONCALL_TRIGGERING_RECORD_MISMATCHED_OBJECTTYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, objectName
	ExtendedErrorCodeACTION_CALL_INPUT_SETUPREFTYPE_REQUIRES_SETUPREFVALUE ExtendedErrorCode = "ACTION_CALL_INPUT_SETUPREFTYPE_REQUIRES_SETUPREFVALUE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, cause
	ExtendedErrorCodeACTION_CALL_INVALID_CONFIGURATION ExtendedErrorCode = "ACTION_CALL_INVALID_CONFIGURATION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, actionCallName, parameterName
	ExtendedErrorCodeACTION_CALL_INVALID_INPUT_PARAM ExtendedErrorCode = "ACTION_CALL_INVALID_INPUT_PARAM"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, actionCallName, parameterName
	ExtendedErrorCodeACTION_CALL_INVALID_OUTPUT_PARAM ExtendedErrorCode = "ACTION_CALL_INVALID_OUTPUT_PARAM"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, objectName
	ExtendedErrorCodeACTION_INPUT_PARAMETER_REQUIRES_ID_TYPE_FOR_SETUP_REFERENCE ExtendedErrorCode = "ACTION_INPUT_PARAMETER_REQUIRES_ID_TYPE_FOR_SETUP_REFERENCE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, objectName
	ExtendedErrorCodeACTION_INPUT_PARAMETER_TYPE_AND_SETUP_REFERENCE_TYPE_DO_NOT_MATCH ExtendedErrorCode = "ACTION_INPUT_PARAMETER_TYPE_AND_SETUP_REFERENCE_TYPE_DO_NOT_MATCH"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeACTION_TYPE_REQUIRED_FOR_STEP ExtendedErrorCode = "ACTION_TYPE_REQUIRED_FOR_STEP"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeADDING_ATTACHMENT_QUESTIONS_ADDITION_TO_EXISTING_SURVEY ExtendedErrorCode = "ADDING_ATTACHMENT_QUESTIONS_ADDITION_TO_EXISTING_SURVEY"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, apexClassName, parameterName
	ExtendedErrorCodeAPEXCALLOUT_INPUT_DUPLICATE ExtendedErrorCode = "APEXCALLOUT_INPUT_DUPLICATE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, apexClassName, parameterName
	ExtendedErrorCodeAPEXCALLOUT_INPUT_INCOMPATIBLE_DATATYPE ExtendedErrorCode = "APEXCALLOUT_INPUT_INCOMPATIBLE_DATATYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, apexClassName
	ExtendedErrorCodeAPEXCALLOUT_INVALID ExtendedErrorCode = "APEXCALLOUT_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, apexClassName
	ExtendedErrorCodeAPEXCALLOUT_MISSING_CLASSNAME ExtendedErrorCode = "APEXCALLOUT_MISSING_CLASSNAME"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, apexClassName
	ExtendedErrorCodeAPEXCALLOUT_NOT_FOUND ExtendedErrorCode = "APEXCALLOUT_NOT_FOUND"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, apexClassName, parameterName
	ExtendedErrorCodeAPEXCALLOUT_OUTPUT_INCOMPATIBLE_DATATYPE ExtendedErrorCode = "APEXCALLOUT_OUTPUT_INCOMPATIBLE_DATATYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, apexClassName, parameterName
	ExtendedErrorCodeAPEXCALLOUT_OUTPUT_INVALID ExtendedErrorCode = "APEXCALLOUT_OUTPUT_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, apexClassName, parameterName
	ExtendedErrorCodeAPEXCALLOUT_REQUIRED_INPUT_MISSING ExtendedErrorCode = "APEXCALLOUT_REQUIRED_INPUT_MISSING"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, apexClassName, parentScreenFieldName
	ExtendedErrorCodeAPEXCLASS_MISSING_INTERFACE ExtendedErrorCode = "APEXCLASS_MISSING_INTERFACE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, apexClass
	ExtendedErrorCodeAPEX_CLASS_VARIABLE_NOT_FOUND ExtendedErrorCode = "APEX_CLASS_VARIABLE_NOT_FOUND"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeASSIGNEE_AUTOPROC ExtendedErrorCode = "ASSIGNEE_AUTOPROC"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeASSIGNEE_USER_USERNAME ExtendedErrorCode = "ASSIGNEE_USER_USERNAME"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, assignmentName, operatorName, elementName
	ExtendedErrorCodeASSIGNMENTITEM_ELEMENT_MISSING_DATATYPE ExtendedErrorCode = "ASSIGNMENTITEM_ELEMENT_MISSING_DATATYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, assignmentName, elementType
	ExtendedErrorCodeASSIGNMENTITEM_ELEMENT_NOT_SUPPORTED ExtendedErrorCode = "ASSIGNMENTITEM_ELEMENT_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldValue, dataType, incompatibleDataType
	ExtendedErrorCodeASSIGNMENTITEM_FIELD_INVALID_DATATYPE ExtendedErrorCode = "ASSIGNMENTITEM_FIELD_INVALID_DATATYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, acceptedDataType, dataType, fieldValue
	ExtendedErrorCodeASSIGNMENTITEM_FIELD_INVALID_DATATYPE_WITH_ELEMENT ExtendedErrorCode = "ASSIGNMENTITEM_FIELD_INVALID_DATATYPE_WITH_ELEMENT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, assignmentName, operatorName, leftElementName, leftElementType, rightElementName, rightElementType
	ExtendedErrorCodeASSIGNMENTITEM_INCOMPATIBLE_DATATYPES ExtendedErrorCode = "ASSIGNMENTITEM_INCOMPATIBLE_DATATYPES"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, assignmentName
	ExtendedErrorCodeASSIGNMENTITEM_INVALID_ASSIGNTOREFERENCE ExtendedErrorCode = "ASSIGNMENTITEM_INVALID_ASSIGNTOREFERENCE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, assignmentName, operatorName, leftElementName, rightElementName
	ExtendedErrorCodeASSIGNMENTITEM_INVALID_COLLECTION ExtendedErrorCode = "ASSIGNMENTITEM_INVALID_COLLECTION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, dataType, incompatibleDataType
	ExtendedErrorCodeASSIGNMENTITEM_INVALID_DATATYPE_IN_ELEMENT ExtendedErrorCode = "ASSIGNMENTITEM_INVALID_DATATYPE_IN_ELEMENT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, assignmentName
	ExtendedErrorCodeASSIGNMENTITEM_INVALID_ELEMENTREFERENCE ExtendedErrorCode = "ASSIGNMENTITEM_INVALID_ELEMENTREFERENCE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName, operatorName
	ExtendedErrorCodeASSIGNMENTITEM_INVALID_MERGE_FIELD ExtendedErrorCode = "ASSIGNMENTITEM_INVALID_MERGE_FIELD"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, assignmentName
	ExtendedErrorCodeASSIGNMENTITEM_INVALID_OPERATOR ExtendedErrorCode = "ASSIGNMENTITEM_INVALID_OPERATOR"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName, operatorName
	ExtendedErrorCodeASSIGNMENTITEM_INVALID_REFERENCE ExtendedErrorCode = "ASSIGNMENTITEM_INVALID_REFERENCE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, assignmentName
	ExtendedErrorCodeASSIGNMENTITEM_INVALID_VALUE ExtendedErrorCode = "ASSIGNMENTITEM_INVALID_VALUE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, assignmentName, operatorName, dataType, elementName
	ExtendedErrorCodeASSIGNMENTITEM_LEFT_DATATYPE_INVALID_FOR_OPERATOR ExtendedErrorCode = "ASSIGNMENTITEM_LEFT_DATATYPE_INVALID_FOR_OPERATOR"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, assignmentName
	ExtendedErrorCodeASSIGNMENTITEM_MODIFIES_NONVARIABLE ExtendedErrorCode = "ASSIGNMENTITEM_MODIFIES_NONVARIABLE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName, operatorName
	ExtendedErrorCodeASSIGNMENTITEM_NONEXISTENT_REFERENCE ExtendedErrorCode = "ASSIGNMENTITEM_NONEXISTENT_REFERENCE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, assignmentName
	ExtendedErrorCodeASSIGNMENTITEM_REQUIRED ExtendedErrorCode = "ASSIGNMENTITEM_REQUIRED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeASSIGNMENTITEM_RIGHT_DATATYPE_INVALID_FOR_OPERATOR ExtendedErrorCode = "ASSIGNMENTITEM_RIGHT_DATATYPE_INVALID_FOR_OPERATOR"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, choiceLookupName
	ExtendedErrorCodeAUTOLAUNCHED_CHOICELOOKUP_NOT_SUPPORTED ExtendedErrorCode = "AUTOLAUNCHED_CHOICELOOKUP_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, choiceName
	ExtendedErrorCodeAUTOLAUNCHED_CHOICE_NOT_SUPPORTED ExtendedErrorCode = "AUTOLAUNCHED_CHOICE_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeAUTOLAUNCHED_SCREEN_NOT_SUPPORTED ExtendedErrorCode = "AUTOLAUNCHED_SCREEN_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeAUTOLAUNCHED_STEP_NOT_SUPPORTED ExtendedErrorCode = "AUTOLAUNCHED_STEP_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, subflowType
	ExtendedErrorCodeAUTOLAUNCHED_SUBFLOW_INCOMPATIBLE_FLOWTYPE ExtendedErrorCode = "AUTOLAUNCHED_SUBFLOW_INCOMPATIBLE_FLOWTYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeAUTOLAUNCHED_WAIT_NOT_SUPPORTED ExtendedErrorCode = "AUTOLAUNCHED_WAIT_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, objectName
	ExtendedErrorCodeBEFORE_SAVE_FLOW_RECORD_UPDATE_CANNOT_HAVE_FAULT_CONNECTOR ExtendedErrorCode = "BEFORE_SAVE_FLOW_RECORD_UPDATE_CANNOT_HAVE_FAULT_CONNECTOR"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, objectName
	ExtendedErrorCodeBEFORE_SAVE_FLOW_RECORD_UPDATE_INVALID_REFERENCE ExtendedErrorCode = "BEFORE_SAVE_FLOW_RECORD_UPDATE_INVALID_REFERENCE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, objectName
	ExtendedErrorCodeBEFORE_SAVE_FLOW_RECORD_UPDATE_RELATED_RECORD_REQUIRES_INPUTASSIGNMENTS ExtendedErrorCode = "BEFORE_SAVE_FLOW_RECORD_UPDATE_RELATED_RECORD_REQUIRES_INPUTASSIGNMENTS"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, objectName
	ExtendedErrorCodeBEFORE_SAVE_FLOW_RECORD_UPDATE_REQUIRES_INPUTASSIGNMENTS ExtendedErrorCode = "BEFORE_SAVE_FLOW_RECORD_UPDATE_REQUIRES_INPUTASSIGNMENTS"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, processType
	ExtendedErrorCodeBOTH_START_NODE_AND_REFERENCE_FOUND ExtendedErrorCode = "BOTH_START_NODE_AND_REFERENCE_FOUND"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, screenFieldName
	ExtendedErrorCodeCHOICEFIELD_DEFAULT_CHOICE_NOT_FOUND ExtendedErrorCode = "CHOICEFIELD_DEFAULT_CHOICE_NOT_FOUND"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, questionName
	ExtendedErrorCodeCHOICEFIELD_MISSING_CHOICE ExtendedErrorCode = "CHOICEFIELD_MISSING_CHOICE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, choiceName, parentScreenFieldName
	ExtendedErrorCodeCHOICELOOKUP_DATATYPE_INCOMPATIBLE_WITH_CHOICEFIELD ExtendedErrorCode = "CHOICELOOKUP_DATATYPE_INCOMPATIBLE_WITH_CHOICEFIELD"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, choiceName, parentScreenFieldName
	ExtendedErrorCodeCHOICE_DATATYPE_INCOMPATIBLE_WITH_CHOICEFIELD ExtendedErrorCode = "CHOICE_DATATYPE_INCOMPATIBLE_WITH_CHOICEFIELD"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, choiceName
	ExtendedErrorCodeCHOICE_LOOKUP_COLLECTION_REFERENCE_NULL ExtendedErrorCode = "CHOICE_LOOKUP_COLLECTION_REFERENCE_NULL"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, choiceName
	ExtendedErrorCodeCHOICE_LOOKUP_INVALID_COLLECTION_REFERENCE ExtendedErrorCode = "CHOICE_LOOKUP_INVALID_COLLECTION_REFERENCE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, screenFieldName
	ExtendedErrorCodeCHOICE_NOT_SUPPORTED_FOR_SCREENFIELDTYPE ExtendedErrorCode = "CHOICE_NOT_SUPPORTED_FOR_SCREENFIELDTYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, choiceName
	ExtendedErrorCodeCHOICE_USED_MULTIPLE_TIMES_IN_SAME_FIELD ExtendedErrorCode = "CHOICE_USED_MULTIPLE_TIMES_IN_SAME_FIELD"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeCOLLECTION_PROCESSOR_DUPLICATE_MAPITEM ExtendedErrorCode = "COLLECTION_PROCESSOR_DUPLICATE_MAPITEM"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeCOLLECTION_PROCESSOR_INVALID_COLLECTION_REFERENCE ExtendedErrorCode = "COLLECTION_PROCESSOR_INVALID_COLLECTION_REFERENCE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeCOLLECTION_PROCESSOR_INVALID_CONFIGURATION ExtendedErrorCode = "COLLECTION_PROCESSOR_INVALID_CONFIGURATION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeCOLLECTION_PROCESSOR_INVALID_OUTPUTSOBJECTTYPE ExtendedErrorCode = "COLLECTION_PROCESSOR_INVALID_OUTPUTSOBJECTTYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeCOLLECTION_PROCESSOR_MAX_SORT_FIELDS_LIMIT_EXCEEDED ExtendedErrorCode = "COLLECTION_PROCESSOR_MAX_SORT_FIELDS_LIMIT_EXCEEDED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeCOLLECTION_PROCESSOR_MISMATCHED_OBJECTTYPE ExtendedErrorCode = "COLLECTION_PROCESSOR_MISMATCHED_OBJECTTYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeCOLLECTION_PROCESSOR_MISSING_MAP ExtendedErrorCode = "COLLECTION_PROCESSOR_MISSING_MAP"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeCOLLECTION_PROCESSOR_MISSING_OUTPUTSOBJECTTYPE ExtendedErrorCode = "COLLECTION_PROCESSOR_MISSING_OUTPUTSOBJECTTYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeCOLLECTION_PROCESSOR_MISSING_PARAMETER ExtendedErrorCode = "COLLECTION_PROCESSOR_MISSING_PARAMETER"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeCOLLECTION_PROCESSOR_MISSING_SORT ExtendedErrorCode = "COLLECTION_PROCESSOR_MISSING_SORT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeCOLLECTION_PROCESSOR_NOT_SUPPORTED_FOR_API_VERSION ExtendedErrorCode = "COLLECTION_PROCESSOR_NOT_SUPPORTED_FOR_API_VERSION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeCOLLECTION_PROCESSOR_REQUIRES_PERM ExtendedErrorCode = "COLLECTION_PROCESSOR_REQUIRES_PERM"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeCOLLECTION_PROCESSOR_SORT_FIELD_INVALID_FOR_OBJECT ExtendedErrorCode = "COLLECTION_PROCESSOR_SORT_FIELD_INVALID_FOR_OBJECT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeCOLLECTION_PROCESSOR_TYPE_NOT_SUPPORTED ExtendedErrorCode = "COLLECTION_PROCESSOR_TYPE_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeCOLLECTION_PROCESSOR_VARIABLE_NULL ExtendedErrorCode = "COLLECTION_PROCESSOR_VARIABLE_NULL"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, environment
	ExtendedErrorCodeCONDITIONAL_SCREENFIELD_VISIBILITY_NOT_SUPPORTED_FOR_ENVIRONMENT ExtendedErrorCode = "CONDITIONAL_SCREENFIELD_VISIBILITY_NOT_SUPPORTED_FOR_ENVIRONMENT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeCONDITION_BUILDER_MISSING_FLOW_VARIABLE ExtendedErrorCode = "CONDITION_BUILDER_MISSING_FLOW_VARIABLE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeCONDITION_BUILDER_MISSING_REQUIRED_PERMISSIONS ExtendedErrorCode = "CONDITION_BUILDER_MISSING_REQUIRED_PERMISSIONS"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeCONDITION_BUILDER_UNSUPPORTED_FLOW_VARIABLE ExtendedErrorCode = "CONDITION_BUILDER_UNSUPPORTED_FLOW_VARIABLE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementReference, operatorName, ruleName, screenFieldName
	ExtendedErrorCodeCONDITION_INVALID_LEFTOPERAND ExtendedErrorCode = "CONDITION_INVALID_LEFTOPERAND"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, characterLimit
	ExtendedErrorCodeCONDITION_LOGIC_EXCEEDS_LIMIT ExtendedErrorCode = "CONDITION_LOGIC_EXCEEDS_LIMIT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeCONDITION_LOGIC_INVALID ExtendedErrorCode = "CONDITION_LOGIC_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeCONDITION_LOGIC_MISSING ExtendedErrorCode = "CONDITION_LOGIC_MISSING"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, elementReference, operatorName, ruleName, screenFieldName
	ExtendedErrorCodeCONDITION_MISSING_DATATYPE ExtendedErrorCode = "CONDITION_MISSING_DATATYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, ruleName
	ExtendedErrorCodeCONDITION_MISSING_OPERATOR ExtendedErrorCode = "CONDITION_MISSING_OPERATOR"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, elementReference, operatorName, ruleName, screenFieldName, elementReferenceOrValue
	ExtendedErrorCodeCONDITION_OPERAND_DATATYPES_INCOMPATIBLE ExtendedErrorCode = "CONDITION_OPERAND_DATATYPES_INCOMPATIBLE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, elementReference, ruleName, screenFieldName
	ExtendedErrorCodeCONDITION_OPERAND_INCOMPATIBLE_WITH_ELEMENT ExtendedErrorCode = "CONDITION_OPERAND_INCOMPATIBLE_WITH_ELEMENT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, elementReference, operatorName, ruleName, screenFieldName
	ExtendedErrorCodeCONDITION_OPERATOR_INCOMPATIBLE ExtendedErrorCode = "CONDITION_OPERATOR_INCOMPATIBLE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, elementReference, ruleName, screenFieldName
	ExtendedErrorCodeCONDITION_REFERENCED_ELEMENT_NOT_FOUND ExtendedErrorCode = "CONDITION_REFERENCED_ELEMENT_NOT_FOUND"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, elementReference, elementReferenceOrValue, operatorName, ruleName, screenFieldName
	ExtendedErrorCodeCONDITION_RIGHTOPERAND_NULL ExtendedErrorCode = "CONDITION_RIGHTOPERAND_NULL"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeCONDITION_TRAVERSAL_TOO_DEEP ExtendedErrorCode = "CONDITION_TRAVERSAL_TOO_DEEP"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeCONNECTOR_MISSING_TARGET ExtendedErrorCode = "CONNECTOR_MISSING_TARGET"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, constantName
	ExtendedErrorCodeCONSTANT_INCLUDES_REFERENCES ExtendedErrorCode = "CONSTANT_INCLUDES_REFERENCES"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeCONTENT_KEY_OR_ID_NOT_FOUND ExtendedErrorCode = "CONTENT_KEY_OR_ID_NOT_FOUND"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeCUSTOMEVENTS_NOT_ENABLED ExtendedErrorCode = "CUSTOMEVENTS_NOT_ENABLED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeCUSTOMEVENT_MISSING_PROCESSMETADATAVALUES ExtendedErrorCode = "CUSTOMEVENT_MISSING_PROCESSMETADATAVALUES"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, objectType
	ExtendedErrorCodeCUSTOMEVENT_OBJECTTYPE_NOT_FOUND ExtendedErrorCode = "CUSTOMEVENT_OBJECTTYPE_NOT_FOUND"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, objectType
	ExtendedErrorCodeCUSTOMEVENT_OBJECTTYPE_NOT_SUPPORTED ExtendedErrorCode = "CUSTOMEVENT_OBJECTTYPE_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, metadataValue
	ExtendedErrorCodeCUSTOMEVENT_PROCESSMETADATAVALUES_MISSING_NAME ExtendedErrorCode = "CUSTOMEVENT_PROCESSMETADATAVALUES_MISSING_NAME"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, metadataValue
	ExtendedErrorCodeCUSTOMEVENT_PROCESSMETADATAVALUES_MORE_THAN_ONE_NAME ExtendedErrorCode = "CUSTOMEVENT_PROCESSMETADATAVALUES_MORE_THAN_ONE_NAME"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, dataType
	ExtendedErrorCodeDATATYPE_INVALID ExtendedErrorCode = "DATATYPE_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeDATATYPE_MISSING ExtendedErrorCode = "DATATYPE_MISSING"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, processType, dataType, elementType
	ExtendedErrorCodeDATA_TYPE_NOT_SUPPORTED_FOR_PROCESSTYPE ExtendedErrorCode = "DATA_TYPE_NOT_SUPPORTED_FOR_PROCESSTYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, flowDecision
	ExtendedErrorCodeDECISION_DEFAULT_CONNECTOR_MISSING_LABEL ExtendedErrorCode = "DECISION_DEFAULT_CONNECTOR_MISSING_LABEL"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, flowDecision
	ExtendedErrorCodeDECISION_MISSING_OUTCOME ExtendedErrorCode = "DECISION_MISSING_OUTCOME"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeDETERMINATION_FLOW_ACTION_TYPE_REQUIRED ExtendedErrorCode = "DETERMINATION_FLOW_ACTION_TYPE_REQUIRED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeDYNAMIC_TYPE_MAPPING_MISSING ExtendedErrorCode = "DYNAMIC_TYPE_MAPPING_MISSING"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeEITHER_CONDITIONS_OR_ACTION_NOT_SUPPORTED ExtendedErrorCode = "EITHER_CONDITIONS_OR_ACTION_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeELEMENT_CONNECTS_TO_SELF ExtendedErrorCode = "ELEMENT_CONNECTS_TO_SELF"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, coordinateLimit, coordinateName
	ExtendedErrorCodeELEMENT_COORDINATES_INVALID ExtendedErrorCode = "ELEMENT_COORDINATES_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeELEMENT_INVALID_CONNECTOR ExtendedErrorCode = "ELEMENT_INVALID_CONNECTOR"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeELEMENT_INVALID_REFERENCE ExtendedErrorCode = "ELEMENT_INVALID_REFERENCE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, conflictingField, conflictingFieldValue, reference
	ExtendedErrorCodeELEMENT_INVALID_REFERENCE_FOR_CONFLICTING_FIELD_VALUE ExtendedErrorCode = "ELEMENT_INVALID_REFERENCE_FOR_CONFLICTING_FIELD_VALUE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeELEMENT_MISSING_CONNECTOR ExtendedErrorCode = "ELEMENT_MISSING_CONNECTOR"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, characterLimit, elementName
	ExtendedErrorCodeELEMENT_MISSING_LABEL ExtendedErrorCode = "ELEMENT_MISSING_LABEL"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, characterLimit
	ExtendedErrorCodeELEMENT_MISSING_NAME ExtendedErrorCode = "ELEMENT_MISSING_NAME"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeELEMENT_MISSING_REFERENCE ExtendedErrorCode = "ELEMENT_MISSING_REFERENCE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeELEMENT_MORE_THAN_ONE_FIELD ExtendedErrorCode = "ELEMENT_MORE_THAN_ONE_FIELD"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeELEMENT_NAME_INVALID ExtendedErrorCode = "ELEMENT_NAME_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeELEMENT_NEVER_USED ExtendedErrorCode = "ELEMENT_NEVER_USED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementType, subflowName, triggerType
	ExtendedErrorCodeELEMENT_NOT_SUPPORTED_IN_SUBFLOW_FOR_TRIGGER_TYPE ExtendedErrorCode = "ELEMENT_NOT_SUPPORTED_IN_SUBFLOW_FOR_TRIGGER_TYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeELEMENT_SCALE_SMALLER_THAN_DEFAULTVALUE ExtendedErrorCode = "ELEMENT_SCALE_SMALLER_THAN_DEFAULTVALUE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, elementSubtype
	ExtendedErrorCodeELEMENT_SUBTYPE_NOT_SUPPORTED_FOR_ELEMENTTYPE ExtendedErrorCode = "ELEMENT_SUBTYPE_NOT_SUPPORTED_FOR_ELEMENTTYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, processType, elementSubtype
	ExtendedErrorCodeELEMENT_SUBTYPE_NOT_SUPPORTED_FOR_PROCESSTYPE ExtendedErrorCode = "ELEMENT_SUBTYPE_NOT_SUPPORTED_FOR_PROCESSTYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, environment, elementType
	ExtendedErrorCodeELEMENT_TYPE_NOT_SUPPORTED_FOR_ENVIRONMENT ExtendedErrorCode = "ELEMENT_TYPE_NOT_SUPPORTED_FOR_ENVIRONMENT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeENTRY_CONDITION_CONFLICTING_FILTERS ExtendedErrorCode = "ENTRY_CONDITION_CONFLICTING_FILTERS"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, environment
	ExtendedErrorCodeENVIRONMENTS_VALUE_CHANGED ExtendedErrorCode = "ENVIRONMENTS_VALUE_CHANGED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, environment
	ExtendedErrorCodeENVIRONMENT_PERMISSION_REQUIRED ExtendedErrorCode = "ENVIRONMENT_PERMISSION_REQUIRED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, objectName
	ExtendedErrorCodeEXTERNAL_OBJECTS_NOT_SUPPORTED ExtendedErrorCode = "EXTERNAL_OBJECTS_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldReference
	ExtendedErrorCodeEXTERNAL_OBJECT_FIELDS_NOT_SUPPORTED ExtendedErrorCode = "EXTERNAL_OBJECT_FIELDS_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, subflowType
	ExtendedErrorCodeEX_AUTOLAUNCHED_SUBFLOW_INCOMPATIBLE_FLOWTYPE ExtendedErrorCode = "EX_AUTOLAUNCHED_SUBFLOW_INCOMPATIBLE_FLOWTYPE"

	// Errors with this extended error code have the following properties:
	ExtendedErrorCodeFEATURE_DISABLED ExtendedErrorCode = "FEATURE_DISABLED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName, elementName
	ExtendedErrorCodeFIELDASSIGNMENT_FIELD_INCOMPATIBLE_DATATYPE ExtendedErrorCode = "FIELDASSIGNMENT_FIELD_INCOMPATIBLE_DATATYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName, elementName, assignmentName
	ExtendedErrorCodeFIELDASSIGNMENT_INVALID_DATATYPE ExtendedErrorCode = "FIELDASSIGNMENT_INVALID_DATATYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName, elementName, elementType
	ExtendedErrorCodeFIELDASSIGNMENT_INVALID_ELEMENT ExtendedErrorCode = "FIELDASSIGNMENT_INVALID_ELEMENT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName, parameterName
	ExtendedErrorCodeFIELDASSIGNMENT_INVALID_REFERENCE ExtendedErrorCode = "FIELDASSIGNMENT_INVALID_REFERENCE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName
	ExtendedErrorCodeFIELDASSIGNMENT_MULTIPLE_REFERENCES_SAME_FIELD ExtendedErrorCode = "FIELDASSIGNMENT_MULTIPLE_REFERENCES_SAME_FIELD"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName, dataType
	ExtendedErrorCodeFIELDASSIGNMENT_PICKLISTFIELD_INCOMPATIBLE_DATATYPE ExtendedErrorCode = "FIELDASSIGNMENT_PICKLISTFIELD_INCOMPATIBLE_DATATYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName, elementName, elementType
	ExtendedErrorCodeFIELDASSIGNMENT_REFERENCED_ELEMENT_MISSING_DATATYPE ExtendedErrorCode = "FIELDASSIGNMENT_REFERENCED_ELEMENT_MISSING_DATATYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeFIELDSERVICE_UNSUPPORTED_FIELD_TYPE ExtendedErrorCode = "FIELDSERVICE_UNSUPPORTED_FIELD_TYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName, parameterName
	ExtendedErrorCodeFIELD_INVALID_VALUE ExtendedErrorCode = "FIELD_INVALID_VALUE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, objectName, fieldName
	ExtendedErrorCodeFIELD_NOT_FOUND ExtendedErrorCode = "FIELD_NOT_FOUND"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldRelationshipName
	ExtendedErrorCodeFIELD_RELATIONSHIP_NOT_SUPPORTED ExtendedErrorCode = "FIELD_RELATIONSHIP_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeFIELD_TYPE_NOT_SUPPORTED_AS_CHILD_OF_SCREENFIELD_REGION_OR_REGIONCONTAINER ExtendedErrorCode = "FIELD_TYPE_NOT_SUPPORTED_AS_CHILD_OF_SCREENFIELD_REGION_OR_REGIONCONTAINER"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeFIELD_TYPE_NOT_SUPPORTED_AS_PARENT ExtendedErrorCode = "FIELD_TYPE_NOT_SUPPORTED_AS_PARENT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, processType
	ExtendedErrorCodeFIELD_VALUE_REQUIRES_PERM ExtendedErrorCode = "FIELD_VALUE_REQUIRES_PERM"

	// Errors with this extended error code have the following properties: componentName, propertyName, propertyType, errorCode, invalidTokens
	ExtendedErrorCodeFLEXIPAGE_COMPONENT_ATTRIBUTE_EXPRESSION_EXCEPTION ExtendedErrorCode = "FLEXIPAGE_COMPONENT_ATTRIBUTE_EXPRESSION_EXCEPTION"

	// Errors with this extended error code have the following properties: componentName, propertyName, propertyType, errorIdentifier, errorParams
	ExtendedErrorCodeFLEXIPAGE_COMPONENT_ATTRIBUTE_GENERIC_EXCEPTION ExtendedErrorCode = "FLEXIPAGE_COMPONENT_ATTRIBUTE_GENERIC_EXCEPTION"

	// Errors with this extended error code have the following properties: componentName, propertyName, propertyType
	ExtendedErrorCodeFLEXIPAGE_COMPONENT_ATTRIBUTE_MISSING_REQUIRED ExtendedErrorCode = "FLEXIPAGE_COMPONENT_ATTRIBUTE_MISSING_REQUIRED"

	// Errors with this extended error code have the following properties: componentName, propertyName, propertyType, maxLength
	ExtendedErrorCodeFLEXIPAGE_COMPONENT_ATTRIBUTE_TOO_LONG ExtendedErrorCode = "FLEXIPAGE_COMPONENT_ATTRIBUTE_TOO_LONG"

	// Errors with this extended error code have the following properties: componentName
	ExtendedErrorCodeFLEXIPAGE_COMPONENT_CUSTOM_VALIDATION_EXCEPTION ExtendedErrorCode = "FLEXIPAGE_COMPONENT_CUSTOM_VALIDATION_EXCEPTION"

	// Errors with this extended error code have the following properties: componentName
	ExtendedErrorCodeFLEXIPAGE_COMPONENT_DESIGN_EXCEPTION ExtendedErrorCode = "FLEXIPAGE_COMPONENT_DESIGN_EXCEPTION"

	// Errors with this extended error code have the following properties: eventName, sourceName, targetName
	ExtendedErrorCodeFLEXIPAGE_COMPONENT_EVENT_DUPLICATE_TARGET_EXCEPTION ExtendedErrorCode = "FLEXIPAGE_COMPONENT_EVENT_DUPLICATE_TARGET_EXCEPTION"

	// Errors with this extended error code have the following properties: eventName, sourceName, targetName
	ExtendedErrorCodeFLEXIPAGE_COMPONENT_EVENT_EMPTY_TARGET_MAPPING_EXCEPTION ExtendedErrorCode = "FLEXIPAGE_COMPONENT_EVENT_EMPTY_TARGET_MAPPING_EXCEPTION"

	// Errors with this extended error code have the following properties: eventName, sourceName, targetName
	ExtendedErrorCodeFLEXIPAGE_COMPONENT_EVENT_INVALID_FORMFACTOR_EXCEPTION ExtendedErrorCode = "FLEXIPAGE_COMPONENT_EVENT_INVALID_FORMFACTOR_EXCEPTION"

	// Errors with this extended error code have the following properties: eventName, sourceName, targetName
	ExtendedErrorCodeFLEXIPAGE_COMPONENT_EVENT_INVALID_SERVICE_EXCEPTION ExtendedErrorCode = "FLEXIPAGE_COMPONENT_EVENT_INVALID_SERVICE_EXCEPTION"

	// Errors with this extended error code have the following properties: eventName, sourceName
	ExtendedErrorCodeFLEXIPAGE_COMPONENT_EVENT_SOURCE_EXCEPTION ExtendedErrorCode = "FLEXIPAGE_COMPONENT_EVENT_SOURCE_EXCEPTION"

	// Errors with this extended error code have the following properties: componentCount, maxComponentLimit
	ExtendedErrorCodeFLEXIPAGE_COMPONENT_MAX_LIMIT_EXCEPTION ExtendedErrorCode = "FLEXIPAGE_COMPONENT_MAX_LIMIT_EXCEPTION"

	// Errors with this extended error code have the following properties: componentName, criterionIndex
	ExtendedErrorCodeFLEXIPAGE_COMPONENT_RULE_VALIDATION_EXCEPTION ExtendedErrorCode = "FLEXIPAGE_COMPONENT_RULE_VALIDATION_EXCEPTION"

	// Errors with this extended error code have the following properties: componentName, propertyName, propertyType
	ExtendedErrorCodeFLEXIPAGE_DUPLICATE_PROPERTY_COMPONENT_EXCEPTION ExtendedErrorCode = "FLEXIPAGE_DUPLICATE_PROPERTY_COMPONENT_EXCEPTION"

	// Errors with this extended error code have the following properties: eventName, propertyName, propertyType, sourceName, targetName, errorIdentifier, errorParams
	ExtendedErrorCodeFLEXIPAGE_EVENT_ATTRIBUTE_GENERIC_EXCEPTION ExtendedErrorCode = "FLEXIPAGE_EVENT_ATTRIBUTE_GENERIC_EXCEPTION"

	// Errors with this extended error code have the following properties: regionName
	ExtendedErrorCodeFLEXIPAGE_INVALID_ITEM_INSTANCE_TYPE_EXCEPTION ExtendedErrorCode = "FLEXIPAGE_INVALID_ITEM_INSTANCE_TYPE_EXCEPTION"

	// Errors with this extended error code have the following properties: componentName, propertyName, propertyType
	ExtendedErrorCodeFLEXIPAGE_INVALID_PROPERTY_TYPE_COMPONENT_EXCEPTION ExtendedErrorCode = "FLEXIPAGE_INVALID_PROPERTY_TYPE_COMPONENT_EXCEPTION"

	// Errors with this extended error code have the following properties: eventName, propertyName, propertyType, sourceName, targetName
	ExtendedErrorCodeFLEXIPAGE_INVALID_PROPERTY_TYPE_EVENT_TARGET_EXCEPTION ExtendedErrorCode = "FLEXIPAGE_INVALID_PROPERTY_TYPE_EVENT_TARGET_EXCEPTION"

	// Errors with this extended error code have the following properties: instanceName, pageType, templateName
	ExtendedErrorCodeFLEXIPAGE_ITEM_INSTANCE_CUSTOM_VALIDATION_EXCEPTION ExtendedErrorCode = "FLEXIPAGE_ITEM_INSTANCE_CUSTOM_VALIDATION_EXCEPTION"

	// Errors with this extended error code have the following properties: maxInteractionLimit
	ExtendedErrorCodeFLEXIPAGE_MAX_INTERACTIONS_EXCEPTION ExtendedErrorCode = "FLEXIPAGE_MAX_INTERACTIONS_EXCEPTION"

	// Errors with this extended error code have the following properties: componentName, propertyName, propertyType, invalidValue
	ExtendedErrorCodeFLEXIPAGE_PICKLIST_INVALID_VALUE_EXCEPTION ExtendedErrorCode = "FLEXIPAGE_PICKLIST_INVALID_VALUE_EXCEPTION"

	// Errors with this extended error code have the following properties: componentName, externalAppVersion, priorComponentName
	ExtendedErrorCodeFLEXIPAGE_RENAMED_COMPONENT_VALIDATION_EXCEPTION ExtendedErrorCode = "FLEXIPAGE_RENAMED_COMPONENT_VALIDATION_EXCEPTION"

	// Errors with this extended error code have the following properties: newTemplate, oldTemplate
	ExtendedErrorCodeFLEXIPAGE_TEMPLATE_INVALID_SWITCH ExtendedErrorCode = "FLEXIPAGE_TEMPLATE_INVALID_SWITCH"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, flowName, existingOverrideName
	ExtendedErrorCodeFLOW_ALREADY_OVERRIDDEN ExtendedErrorCode = "FLOW_ALREADY_OVERRIDDEN"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeFLOW_COMPLEX_VALUE_COLLECTION_TYPE_EXPECTED ExtendedErrorCode = "FLOW_COMPLEX_VALUE_COLLECTION_TYPE_EXPECTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName
	ExtendedErrorCodeFLOW_COMPLEX_VALUE_INVALID_JSON ExtendedErrorCode = "FLOW_COMPLEX_VALUE_INVALID_JSON"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName
	ExtendedErrorCodeFLOW_COMPLEX_VALUE_INVALID_MERGE_FIELD ExtendedErrorCode = "FLOW_COMPLEX_VALUE_INVALID_MERGE_FIELD"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeFLOW_COMPLEX_VALUE_NOT_SUPPORTED ExtendedErrorCode = "FLOW_COMPLEX_VALUE_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeFLOW_COMPLEX_VALUE_SCALAR_TYPE_EXPECTED ExtendedErrorCode = "FLOW_COMPLEX_VALUE_SCALAR_TYPE_EXPECTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, flowName, triggerType
	ExtendedErrorCodeFLOW_CONTEXT_RECORD_ASSIGNMENT_VARIABLE_INVALID ExtendedErrorCode = "FLOW_CONTEXT_RECORD_ASSIGNMENT_VARIABLE_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeFLOW_CUSTOM_ERROR_COMPOUND_FIELD_NOT_SUPPORTED ExtendedErrorCode = "FLOW_CUSTOM_ERROR_COMPOUND_FIELD_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeFLOW_CUSTOM_ERROR_EMPTY_MESSAGES_LIST ExtendedErrorCode = "FLOW_CUSTOM_ERROR_EMPTY_MESSAGES_LIST"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeFLOW_CUSTOM_ERROR_INVALID_OR_INCOMPLETE_FIELD ExtendedErrorCode = "FLOW_CUSTOM_ERROR_INVALID_OR_INCOMPLETE_FIELD"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeFLOW_CUSTOM_ERROR_MULTIPLE_ERRORS_ON_FIELD ExtendedErrorCode = "FLOW_CUSTOM_ERROR_MULTIPLE_ERRORS_ON_FIELD"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeFLOW_CUSTOM_ERROR_MULTIPLE_PAGE_ERRORS_EXCEPTION ExtendedErrorCode = "FLOW_CUSTOM_ERROR_MULTIPLE_PAGE_ERRORS_EXCEPTION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeFLOW_CUSTOM_ERROR_NO_FIELD_SELECTION_FOR_FIELD_ERROR ExtendedErrorCode = "FLOW_CUSTOM_ERROR_NO_FIELD_SELECTION_FOR_FIELD_ERROR"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeFLOW_ELEMENT_SCALE_LESS_THAN_ZERO ExtendedErrorCode = "FLOW_ELEMENT_SCALE_LESS_THAN_ZERO"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeFLOW_FORMULA_FIELD_MISSING ExtendedErrorCode = "FLOW_FORMULA_FIELD_MISSING"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeFLOW_FORMULA_NOT_SUPPORTED ExtendedErrorCode = "FLOW_FORMULA_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_IMMEDIATE_PATH_INCOMPATIBLE_WITH_EXTERNAL_CALLOUTS ExtendedErrorCode = "FLOW_IMMEDIATE_PATH_INCOMPATIBLE_WITH_EXTERNAL_CALLOUTS"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, objectName
	ExtendedErrorCodeFLOW_IMMEDIATE_PATH_INCOMPATIBLE_WITH_EXTERNAL_OBJECTS ExtendedErrorCode = "FLOW_IMMEDIATE_PATH_INCOMPATIBLE_WITH_EXTERNAL_OBJECTS"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeFLOW_INCLUDES_STEP ExtendedErrorCode = "FLOW_INCLUDES_STEP"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName
	ExtendedErrorCodeFLOW_INPUTPARAM_MISMATCHED_APEX_CLASS ExtendedErrorCode = "FLOW_INPUTPARAM_MISMATCHED_APEX_CLASS"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_INTERVIEW_BULK_EXECUTION ExtendedErrorCode = "FLOW_INTERVIEW_BULK_EXECUTION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_INTERVIEW_HANDLED_ERROR ExtendedErrorCode = "FLOW_INTERVIEW_HANDLED_ERROR"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_INTERVIEW_INPUT_VALIDATION ExtendedErrorCode = "FLOW_INTERVIEW_INPUT_VALIDATION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_INTERVIEW_INTERACTION_NOT_FOUND ExtendedErrorCode = "FLOW_INTERVIEW_INTERACTION_NOT_FOUND"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_INTERVIEW_INVALID_CHOICE_USER_INPUT ExtendedErrorCode = "FLOW_INTERVIEW_INVALID_CHOICE_USER_INPUT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_INTERVIEW_INVALID_FIELD_VALUE ExtendedErrorCode = "FLOW_INTERVIEW_INVALID_FIELD_VALUE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_INTERVIEW_INVALID_START_REQUEST ExtendedErrorCode = "FLOW_INTERVIEW_INVALID_START_REQUEST"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_INTERVIEW_LIMIT_EXCEEDED ExtendedErrorCode = "FLOW_INTERVIEW_LIMIT_EXCEEDED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_INTERVIEW_MISSING_CHOICE_FOR_REQUIRED_CHOICE_FIELD ExtendedErrorCode = "FLOW_INTERVIEW_MISSING_CHOICE_FOR_REQUIRED_CHOICE_FIELD"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_INTERVIEW_MISSING_VALUE_FOR_REQUIRED_INPUT_FIELD ExtendedErrorCode = "FLOW_INTERVIEW_MISSING_VALUE_FOR_REQUIRED_INPUT_FIELD"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_INTERVIEW_NAVIGATE ExtendedErrorCode = "FLOW_INTERVIEW_NAVIGATE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_INTERVIEW_RANGE_VALIDATION ExtendedErrorCode = "FLOW_INTERVIEW_RANGE_VALIDATION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_INTERVIEW_REGEX_VALIDATION ExtendedErrorCode = "FLOW_INTERVIEW_REGEX_VALIDATION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_INTERVIEW_RESUME_INTERVIEW ExtendedErrorCode = "FLOW_INTERVIEW_RESUME_INTERVIEW"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_INTERVIEW_SAVE_RESULT ExtendedErrorCode = "FLOW_INTERVIEW_SAVE_RESULT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_INTERVIEW_SET_CHOICE_SELECTED ExtendedErrorCode = "FLOW_INTERVIEW_SET_CHOICE_SELECTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_INTERVIEW_START_INTERVIEW ExtendedErrorCode = "FLOW_INTERVIEW_START_INTERVIEW"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_INTERVIEW_TYPE_CONVERSION ExtendedErrorCode = "FLOW_INTERVIEW_TYPE_CONVERSION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, maxDevNameLength
	ExtendedErrorCodeFLOW_INVALID_NAME ExtendedErrorCode = "FLOW_INVALID_NAME"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, flowName
	ExtendedErrorCodeFLOW_NAME_USED_IN_OTHER_CLIENT ExtendedErrorCode = "FLOW_NAME_USED_IN_OTHER_CLIENT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_OVERRIDABLE_CANNOT_BE_OVERRIDE ExtendedErrorCode = "FLOW_OVERRIDABLE_CANNOT_BE_OVERRIDE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_OVERRIDABLE_CANNOT_BE_TEMPLATE ExtendedErrorCode = "FLOW_OVERRIDABLE_CANNOT_BE_TEMPLATE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, flowName
	ExtendedErrorCodeFLOW_OVERRIDDEN_FLOW_INVALID_REFERENCE ExtendedErrorCode = "FLOW_OVERRIDDEN_FLOW_INVALID_REFERENCE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, flowName
	ExtendedErrorCodeFLOW_OVERRIDE_EXTRA_VARIABLE ExtendedErrorCode = "FLOW_OVERRIDE_EXTRA_VARIABLE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, overrideFlowName
	ExtendedErrorCodeFLOW_OVERRIDE_INCOMPATIBLE_PROCESS_TYPE ExtendedErrorCode = "FLOW_OVERRIDE_INCOMPATIBLE_PROCESS_TYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, flowName
	ExtendedErrorCodeFLOW_OVERRIDE_INCOMPATIBLE_TYPE ExtendedErrorCode = "FLOW_OVERRIDE_INCOMPATIBLE_TYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, flowName
	ExtendedErrorCodeFLOW_OVERRIDE_INCOMPATIBLE_VARIABLE ExtendedErrorCode = "FLOW_OVERRIDE_INCOMPATIBLE_VARIABLE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_RECORD_PRIOR_AUTOLAUNCH_UPDATE_ONLY ExtendedErrorCode = "FLOW_RECORD_PRIOR_AUTOLAUNCH_UPDATE_ONLY"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_RECORD_PRIOR_INVALID_IN_RECORD_CREATE ExtendedErrorCode = "FLOW_RECORD_PRIOR_INVALID_IN_RECORD_CREATE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_RECORD_PRIOR_INVALID_IN_RECORD_DELETE ExtendedErrorCode = "FLOW_RECORD_PRIOR_INVALID_IN_RECORD_DELETE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_RECORD_PRIOR_INVALID_IN_RECORD_UPDATE ExtendedErrorCode = "FLOW_RECORD_PRIOR_INVALID_IN_RECORD_UPDATE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_RECORD_PRIOR_READ_ONLY ExtendedErrorCode = "FLOW_RECORD_PRIOR_READ_ONLY"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_REFERENCES_APEX_CLASS_NOT_IN_SAME_PACKAGE ExtendedErrorCode = "FLOW_REFERENCES_APEX_CLASS_NOT_IN_SAME_PACKAGE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, environment
	ExtendedErrorCodeFLOW_RESOURCE_NOT_SUPPORTED_FOR_ENVIRONMENT ExtendedErrorCode = "FLOW_RESOURCE_NOT_SUPPORTED_FOR_ENVIRONMENT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_RULE_REQUIRE_RECORD_CHANGED_NEVER_CHECKED_FOR_RECORD_PRIOR ExtendedErrorCode = "FLOW_RULE_REQUIRE_RECORD_CHANGED_NEVER_CHECKED_FOR_RECORD_PRIOR"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeFLOW_SCHEDULED_PATH_ALLOWED_ONE_ASYNCAFTERCOMMIT_PATH ExtendedErrorCode = "FLOW_SCHEDULED_PATH_ALLOWED_ONE_ASYNCAFTERCOMMIT_PATH"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeFLOW_SCHEDULED_PATH_ASYNCAFTERCOMMIT_REQUIRES_RECORD_CHANGED_OR_ISCHANGED ExtendedErrorCode = "FLOW_SCHEDULED_PATH_ASYNCAFTERCOMMIT_REQUIRES_RECORD_CHANGED_OR_ISCHANGED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeFLOW_SCHEDULED_PATH_CANNOT_USE_IS_CHANGED ExtendedErrorCode = "FLOW_SCHEDULED_PATH_CANNOT_USE_IS_CHANGED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName, objectName
	ExtendedErrorCodeFLOW_SCHEDULED_PATH_INCOMPATIBLE_TIME_SOURCE ExtendedErrorCode = "FLOW_SCHEDULED_PATH_INCOMPATIBLE_TIME_SOURCE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, ruleName
	ExtendedErrorCodeFLOW_SCHEDULED_PATH_INCOMPATIBLE_WHEN_DECISION_REQUIRES_RECORD_CHANGED ExtendedErrorCode = "FLOW_SCHEDULED_PATH_INCOMPATIBLE_WHEN_DECISION_REQUIRES_RECORD_CHANGED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeFLOW_SCHEDULED_PATH_INCOMPATIBLE_WITH_FLOW_TRIGGER_TYPE ExtendedErrorCode = "FLOW_SCHEDULED_PATH_INCOMPATIBLE_WITH_FLOW_TRIGGER_TYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, elementType, pathName
	ExtendedErrorCodeFLOW_SCHEDULED_PATH_INCOMPATIBLE_WITH_RECORD_PRIOR ExtendedErrorCode = "FLOW_SCHEDULED_PATH_INCOMPATIBLE_WITH_RECORD_PRIOR"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_SCHEDULED_PATH_INVALID_BATCH_SIZE ExtendedErrorCode = "FLOW_SCHEDULED_PATH_INVALID_BATCH_SIZE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeFLOW_SCHEDULED_PATH_INVALID_OFFSET ExtendedErrorCode = "FLOW_SCHEDULED_PATH_INVALID_OFFSET"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeFLOW_SCHEDULED_PATH_REQUIRED_FIELDS_MISSING ExtendedErrorCode = "FLOW_SCHEDULED_PATH_REQUIRED_FIELDS_MISSING"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeFLOW_SCHEDULED_PATH_REQUIRES_DEFAULT_WORKFLOW_USER ExtendedErrorCode = "FLOW_SCHEDULED_PATH_REQUIRES_DEFAULT_WORKFLOW_USER"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeFLOW_SCHEDULED_PATH_REQUIRES_RECORD_CHANGED_TO_MEET_CRITERIA ExtendedErrorCode = "FLOW_SCHEDULED_PATH_REQUIRES_RECORD_CHANGED_TO_MEET_CRITERIA"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, processType, flowStartFrequency, flowTriggerType
	ExtendedErrorCodeFLOW_SCHEDULE_INFORMATION_INCOMPLETE ExtendedErrorCode = "FLOW_SCHEDULE_INFORMATION_INCOMPLETE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, variableName
	ExtendedErrorCodeFLOW_SOBJECT_VARIABLE_NOT_PERSISTED ExtendedErrorCode = "FLOW_SOBJECT_VARIABLE_NOT_PERSISTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, flowName
	ExtendedErrorCodeFLOW_SOURCE_TEMPLATE_INVALID_REFERENCE ExtendedErrorCode = "FLOW_SOURCE_TEMPLATE_INVALID_REFERENCE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, stageName
	ExtendedErrorCodeFLOW_STAGE_INCLUDES_REFERENCES ExtendedErrorCode = "FLOW_STAGE_INCLUDES_REFERENCES"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, stageName, stageOrder, stageWithSameOrder
	ExtendedErrorCodeFLOW_STAGE_ORDER_DUPLICATE ExtendedErrorCode = "FLOW_STAGE_ORDER_DUPLICATE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, stageName, invalidStageOrder, maxOrder, minOrder
	ExtendedErrorCodeFLOW_STAGE_ORDER_OUT_OF_RANGE ExtendedErrorCode = "FLOW_STAGE_ORDER_OUT_OF_RANGE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, processType, systemVariable, triggerType
	ExtendedErrorCodeFLOW_SYSTEM_VARIABLE_NOT_SUPPORTED_FOR_TRIGGERTYPE ExtendedErrorCode = "FLOW_SYSTEM_VARIABLE_NOT_SUPPORTED_FOR_TRIGGERTYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName
	ExtendedErrorCodeFLOW_TEST_API_NAME_DUPLICATED ExtendedErrorCode = "FLOW_TEST_API_NAME_DUPLICATED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName
	ExtendedErrorCodeFLOW_TEST_ASSERTION_MISSING ExtendedErrorCode = "FLOW_TEST_ASSERTION_MISSING"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName
	ExtendedErrorCodeFLOW_TEST_ASSERTION_NOT_SUPPORTED ExtendedErrorCode = "FLOW_TEST_ASSERTION_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName, leftReference, oprOrRHS
	ExtendedErrorCodeFLOW_TEST_CONDITION_INCOMPATIBLE ExtendedErrorCode = "FLOW_TEST_CONDITION_INCOMPATIBLE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName, leftReference, oprOrRHS
	ExtendedErrorCodeFLOW_TEST_CONDITION_INVALID_DATATYPE_MAPPING ExtendedErrorCode = "FLOW_TEST_CONDITION_INVALID_DATATYPE_MAPPING"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName
	ExtendedErrorCodeFLOW_TEST_CONDITION_LIMIT ExtendedErrorCode = "FLOW_TEST_CONDITION_LIMIT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName, testPoint
	ExtendedErrorCodeFLOW_TEST_CONDITION_NOT_SUPPORTED ExtendedErrorCode = "FLOW_TEST_CONDITION_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName, actualDataType, expectedDataType, lhsReference, rightReference
	ExtendedErrorCodeFLOW_TEST_DATATYPE_INVALID ExtendedErrorCode = "FLOW_TEST_DATATYPE_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName
	ExtendedErrorCodeFLOW_TEST_FLOW_INVALID ExtendedErrorCode = "FLOW_TEST_FLOW_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, flowName
	ExtendedErrorCodeFLOW_TEST_IMMEDIATE_PATH_MISSING ExtendedErrorCode = "FLOW_TEST_IMMEDIATE_PATH_MISSING"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName, flowName, testPoint
	ExtendedErrorCodeFLOW_TEST_MERGE_FIELD_INVALID ExtendedErrorCode = "FLOW_TEST_MERGE_FIELD_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, rightReference, testPoint
	ExtendedErrorCodeFLOW_TEST_MERGE_FIELD_NOT_SUPPORTED ExtendedErrorCode = "FLOW_TEST_MERGE_FIELD_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName, operatorName
	ExtendedErrorCodeFLOW_TEST_OPERATOR_INVALID ExtendedErrorCode = "FLOW_TEST_OPERATOR_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName, testPoint, type
	ExtendedErrorCodeFLOW_TEST_PARAMETER_DUPLICATED ExtendedErrorCode = "FLOW_TEST_PARAMETER_DUPLICATED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName, testPoint, type
	ExtendedErrorCodeFLOW_TEST_PARAMETER_INCOMPATIBLE ExtendedErrorCode = "FLOW_TEST_PARAMETER_INCOMPATIBLE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName, rightReference
	ExtendedErrorCodeFLOW_TEST_PARAMETER_INVALID ExtendedErrorCode = "FLOW_TEST_PARAMETER_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName, testPoint
	ExtendedErrorCodeFLOW_TEST_PARAMETER_LEFTVALUEREFERENCE_INVALID ExtendedErrorCode = "FLOW_TEST_PARAMETER_LEFTVALUEREFERENCE_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, testPoint, type
	ExtendedErrorCodeFLOW_TEST_PARAMETER_MISSING ExtendedErrorCode = "FLOW_TEST_PARAMETER_MISSING"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName
	ExtendedErrorCodeFLOW_TEST_PARAMETER_NOT_SUPPORTED ExtendedErrorCode = "FLOW_TEST_PARAMETER_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName, testPoint
	ExtendedErrorCodeFLOW_TEST_PARAMETER_TYPE_INVALID ExtendedErrorCode = "FLOW_TEST_PARAMETER_TYPE_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName, scheduledPath, testPoint
	ExtendedErrorCodeFLOW_TEST_PARAMETER_VALUE_INVALID ExtendedErrorCode = "FLOW_TEST_PARAMETER_VALUE_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName, testPoint
	ExtendedErrorCodeFLOW_TEST_PARAMETER_VALUE_MISSING ExtendedErrorCode = "FLOW_TEST_PARAMETER_VALUE_MISSING"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName
	ExtendedErrorCodeFLOW_TEST_PARAMS_REQUIRED ExtendedErrorCode = "FLOW_TEST_PARAMS_REQUIRED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName
	ExtendedErrorCodeFLOW_TEST_POINTS_DUPLICATED ExtendedErrorCode = "FLOW_TEST_POINTS_DUPLICATED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName, testName
	ExtendedErrorCodeFLOW_TEST_POINT_MISSING ExtendedErrorCode = "FLOW_TEST_POINT_MISSING"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName
	ExtendedErrorCodeFLOW_TEST_POINT_NOT_SUPPORTED ExtendedErrorCode = "FLOW_TEST_POINT_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, processType
	ExtendedErrorCodeFLOW_TEST_PROCESSTYPE_INVALID ExtendedErrorCode = "FLOW_TEST_PROCESSTYPE_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementType, leftReference
	ExtendedErrorCodeFLOW_TEST_RIGHTVALUE_INVALID ExtendedErrorCode = "FLOW_TEST_RIGHTVALUE_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeFLOW_TRANSFORM_APEX_CLASS_INCOMPATIBLE ExtendedErrorCode = "FLOW_TRANSFORM_APEX_CLASS_INCOMPATIBLE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeFLOW_TRANSFORM_API_VERSION_NOT_SUPPORTED ExtendedErrorCode = "FLOW_TRANSFORM_API_VERSION_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeFLOW_TRANSFORM_ELEMENT_REFERENCE_INVALID ExtendedErrorCode = "FLOW_TRANSFORM_ELEMENT_REFERENCE_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_TRANSFORM_ELEMENT_REFERENCE_TYPE_INCOMPATIBLE ExtendedErrorCode = "FLOW_TRANSFORM_ELEMENT_REFERENCE_TYPE_INCOMPATIBLE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeFLOW_TRANSFORM_FMLA_COLL_MULT_RSRC ExtendedErrorCode = "FLOW_TRANSFORM_FMLA_COLL_MULT_RSRC"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_TRANSFORM_MAP_COLL_MISSING ExtendedErrorCode = "FLOW_TRANSFORM_MAP_COLL_MISSING"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_TRANSFORM_MAP_COLL_MULT_SOURCE ExtendedErrorCode = "FLOW_TRANSFORM_MAP_COLL_MULT_SOURCE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_TRANSFORM_MAP_COLL_NUM_OF_REF ExtendedErrorCode = "FLOW_TRANSFORM_MAP_COLL_NUM_OF_REF"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_TRANSFORM_MAP_COLL_RELA_RECORDS ExtendedErrorCode = "FLOW_TRANSFORM_MAP_COLL_RELA_RECORDS"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_TRANSFORM_MAP_COL_PRIMITIVE_INCOMPA ExtendedErrorCode = "FLOW_TRANSFORM_MAP_COL_PRIMITIVE_INCOMPA"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeFLOW_TRANSFORM_MAP_MULTIPLE_RESOURCES ExtendedErrorCode = "FLOW_TRANSFORM_MAP_MULTIPLE_RESOURCES"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_TRANSFORM_MAP_RSRC_TYPE_NOT_SUPPORTED ExtendedErrorCode = "FLOW_TRANSFORM_MAP_RSRC_TYPE_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_TRANSFORM_OUTPUT_FIELD_API_NAME_INVALID ExtendedErrorCode = "FLOW_TRANSFORM_OUTPUT_FIELD_API_NAME_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeFLOW_TRANSFORM_TYPE_NOT_SUPPORTED ExtendedErrorCode = "FLOW_TRANSFORM_TYPE_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeFLOW_TRANSFORM_VALUES_MISSING ExtendedErrorCode = "FLOW_TRANSFORM_VALUES_MISSING"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_TRANSFORM_VALUE_INVALID ExtendedErrorCode = "FLOW_TRANSFORM_VALUE_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName
	ExtendedErrorCodeFLOW_TRIGGER_DERIVED_FIELD_NOT_SUPPORTED ExtendedErrorCode = "FLOW_TRIGGER_DERIVED_FIELD_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFLOW_TRIGGER_ORDER_OUT_OF_BOUNDS ExtendedErrorCode = "FLOW_TRIGGER_ORDER_OUT_OF_BOUNDS"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, flowTriggerType, recordTriggerType
	ExtendedErrorCodeFLOW_TRIGGER_TYPE_INCOMPATIBLE_WITH_RECORD_TRIGGER_TYPE ExtendedErrorCode = "FLOW_TRIGGER_TYPE_INCOMPATIBLE_WITH_RECORD_TRIGGER_TYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, formulaExpression
	ExtendedErrorCodeFORMULA_CMT_LIMIT_EXCEEDED ExtendedErrorCode = "FORMULA_CMT_LIMIT_EXCEEDED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, formulaExpression
	ExtendedErrorCodeFORMULA_EXPRESSION_INVALID ExtendedErrorCode = "FORMULA_EXPRESSION_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeFORM_NOT_REFERENCED_BY_LANDING_PAGE ExtendedErrorCode = "FORM_NOT_REFERENCED_BY_LANDING_PAGE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, processType, systemVariable
	ExtendedErrorCodeGLOBAL_VARIABLE_NOT_SUPPORTED_FOR_PROCESSTYPE ExtendedErrorCode = "GLOBAL_VARIABLE_NOT_SUPPORTED_FOR_PROCESSTYPE"

	// Errors with this extended error code have the following properties: currentRequestHttpMethod, supportedHttpMethods
	ExtendedErrorCodeHTTP_METHOD_NOT_SUPPORTED ExtendedErrorCode = "HTTP_METHOD_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeINCONSISTENT_ACTION_VERSIONS ExtendedErrorCode = "INCONSISTENT_ACTION_VERSIONS"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeINCONSISTENT_DYNAMIC_TYPE_MAPPING ExtendedErrorCode = "INCONSISTENT_DYNAMIC_TYPE_MAPPING"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, extensionName, parameterName
	ExtendedErrorCodeINCONSISTENT_VALUE_FOR_DYNAMIC_VALUE_FIELD ExtendedErrorCode = "INCONSISTENT_VALUE_FOR_DYNAMIC_VALUE_FIELD"

	// Errors with this extended error code have the following properties:
	ExtendedErrorCodeINDIVIDUAL_CONTACT_POINT_NOT_FOUND ExtendedErrorCode = "INDIVIDUAL_CONTACT_POINT_NOT_FOUND"

	// Errors with this extended error code have the following properties:
	ExtendedErrorCodeINDIVIDUAL_NOT_FOUND ExtendedErrorCode = "INDIVIDUAL_NOT_FOUND"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName
	ExtendedErrorCodeINPUTPARAM_CONFIGURATION_NOT_FOUND ExtendedErrorCode = "INPUTPARAM_CONFIGURATION_NOT_FOUND"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName
	ExtendedErrorCodeINPUTPARAM_INCOMPATIBLE_CONFIGURATION_ONLY ExtendedErrorCode = "INPUTPARAM_INCOMPATIBLE_CONFIGURATION_ONLY"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName
	ExtendedErrorCodeINPUTPARAM_INCOMPATIBLE_DATATYPE ExtendedErrorCode = "INPUTPARAM_INCOMPATIBLE_DATATYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName
	ExtendedErrorCodeINPUTPARAM_INCOMPATIBLE_WITH_COLLECTION_VARIABLE ExtendedErrorCode = "INPUTPARAM_INCOMPATIBLE_WITH_COLLECTION_VARIABLE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName
	ExtendedErrorCodeINPUTPARAM_INCOMPATIBLE_WITH_NONCOLLECTION_VARIABLE ExtendedErrorCode = "INPUTPARAM_INCOMPATIBLE_WITH_NONCOLLECTION_VARIABLE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName
	ExtendedErrorCodeINPUTPARAM_MISMATCHED_OBJECTTYPE ExtendedErrorCode = "INPUTPARAM_MISMATCHED_OBJECTTYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeINPUTVARIABLE_COLLECTION_NOT_SUPPORTED_FOR_DYNAMIC_ACTION ExtendedErrorCode = "INPUTVARIABLE_COLLECTION_NOT_SUPPORTED_FOR_DYNAMIC_ACTION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, environment
	ExtendedErrorCodeINPUTVARIABLE_COLLECTION_NOT_SUPPORTED_FOR_ENVIRONMENT ExtendedErrorCode = "INPUTVARIABLE_COLLECTION_NOT_SUPPORTED_FOR_ENVIRONMENT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeINPUTVARIABLE_DATATYPE_NOT_SUPPORTED_FOR_DYNAMIC_ACTION ExtendedErrorCode = "INPUTVARIABLE_DATATYPE_NOT_SUPPORTED_FOR_DYNAMIC_ACTION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, environment
	ExtendedErrorCodeINPUTVARIABLE_DATATYPE_NOT_SUPPORTED_FOR_ENVIRONMENT ExtendedErrorCode = "INPUTVARIABLE_DATATYPE_NOT_SUPPORTED_FOR_ENVIRONMENT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeINVALID_ACTION_TYPE_FOR_STEP ExtendedErrorCode = "INVALID_ACTION_TYPE_FOR_STEP"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeINVALID_ASSIGNEE ExtendedErrorCode = "INVALID_ASSIGNEE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeINVALID_CONTENT_TYPE ExtendedErrorCode = "INVALID_CONTENT_TYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, actionCallName, parameterName
	ExtendedErrorCodeINVALID_EMAIL_ADDRESS ExtendedErrorCode = "INVALID_EMAIL_ADDRESS"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, environments
	ExtendedErrorCodeINVALID_ENVIRONMENTS_VALUE ExtendedErrorCode = "INVALID_ENVIRONMENTS_VALUE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeINVALID_FLOW ExtendedErrorCode = "INVALID_FLOW"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeINVALID_FLOW_INTERVIEW ExtendedErrorCode = "INVALID_FLOW_INTERVIEW"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, processType, environment
	ExtendedErrorCodeINVALID_PROCESSTYPE_ENVIRONMENT_COMBINATION ExtendedErrorCode = "INVALID_PROCESSTYPE_ENVIRONMENT_COMBINATION"

	// Errors with this extended error code have the following properties: message
	ExtendedErrorCodeINVALID_QUERY_LOCATOR_FORMAT ExtendedErrorCode = "INVALID_QUERY_LOCATOR_FORMAT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeINVALID_REGEX_IN_SURVEY_QUESTIONS ExtendedErrorCode = "INVALID_REGEX_IN_SURVEY_QUESTIONS"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeINVALID_SEGMENT_STATUS_FOR_ACTIVATION ExtendedErrorCode = "INVALID_SEGMENT_STATUS_FOR_ACTIVATION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, actionCallName, parameterName
	ExtendedErrorCodeINVALID_SENDER_TYPE ExtendedErrorCode = "INVALID_SENDER_TYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, objectName
	ExtendedErrorCodeINVALID_SETUP_REFERENCE_TYPE ExtendedErrorCode = "INVALID_SETUP_REFERENCE_TYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, surveyName
	ExtendedErrorCodeINVALID_SURVEY_VARIABLE_NAME_OR_TYPE ExtendedErrorCode = "INVALID_SURVEY_VARIABLE_NAME_OR_TYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, environment
	ExtendedErrorCodeINVALID_TIME_ZONE ExtendedErrorCode = "INVALID_TIME_ZONE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, environment, actionType
	ExtendedErrorCodeINVOCABLE_ACTION_TYPE_NOT_SUPPORTED_FOR_ENVIRONMENT ExtendedErrorCode = "INVOCABLE_ACTION_TYPE_NOT_SUPPORTED_FOR_ENVIRONMENT"

	// Errors with this extended error code have the following properties: message, querySize, requestedLocation
	ExtendedErrorCodeLOCATOR_LOCATION_EXCEEDS_SIZE ExtendedErrorCode = "LOCATOR_LOCATION_EXCEEDS_SIZE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeLOOP_ASSIGNNEXTVALUETO_MISMATCHED_APEXCLASSTYPE ExtendedErrorCode = "LOOP_ASSIGNNEXTVALUETO_MISMATCHED_APEXCLASSTYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeLOOP_ASSIGNNEXTVALUETO_MISMATCHED_DATATYPE ExtendedErrorCode = "LOOP_ASSIGNNEXTVALUETO_MISMATCHED_DATATYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeLOOP_ASSIGNNEXTVALUETO_MISMATCHED_OBJECTTYPE ExtendedErrorCode = "LOOP_ASSIGNNEXTVALUETO_MISMATCHED_OBJECTTYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeLOOP_ASSIGNNEXTVALUETO_MISSING ExtendedErrorCode = "LOOP_ASSIGNNEXTVALUETO_MISSING"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeLOOP_ASSIGNNEXTVALUETO_MISSING_VARIABLE ExtendedErrorCode = "LOOP_ASSIGNNEXTVALUETO_MISSING_VARIABLE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldRelationshipName
	ExtendedErrorCodeLOOP_ASSIGNNEXTVALUETO_REFERENCE_NOT_FOUND ExtendedErrorCode = "LOOP_ASSIGNNEXTVALUETO_REFERENCE_NOT_FOUND"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeLOOP_COLLECTION_ELEMENT_NOT_FOUND ExtendedErrorCode = "LOOP_COLLECTION_ELEMENT_NOT_FOUND"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeLOOP_COLLECTION_NOT_FOUND ExtendedErrorCode = "LOOP_COLLECTION_NOT_FOUND"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName
	ExtendedErrorCodeLOOP_COLLECTION_NOT_SUPPORTED_FOR_FIELD ExtendedErrorCode = "LOOP_COLLECTION_NOT_SUPPORTED_FOR_FIELD"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeLOOP_MISSING_COLLECTION ExtendedErrorCode = "LOOP_MISSING_COLLECTION"

	// Errors with this extended error code have the following properties: input, limit
	ExtendedErrorCodeMAX_CHILD_TYPES ExtendedErrorCode = "MAX_CHILD_TYPES"

	// Errors with this extended error code have the following properties: input, limit
	ExtendedErrorCodeMAX_EXTERNAL_REFERENCES_IN_QUERY ExtendedErrorCode = "MAX_EXTERNAL_REFERENCES_IN_QUERY"

	// Errors with this extended error code have the following properties: input, limit
	ExtendedErrorCodeMAX_STATEMENT_SIZE ExtendedErrorCode = "MAX_STATEMENT_SIZE"

	// Errors with this extended error code have the following properties:
	ExtendedErrorCodeMESSAGING_API_ENTITLEMENT_REACHED ExtendedErrorCode = "MESSAGING_API_ENTITLEMENT_REACHED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeMISSING_ASSIGNEE ExtendedErrorCode = "MISSING_ASSIGNEE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeMISSING_ASSIGNEE_TYPE ExtendedErrorCode = "MISSING_ASSIGNEE_TYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeMISSING_EMAIL_RECIPIENTS ExtendedErrorCode = "MISSING_EMAIL_RECIPIENTS"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeMULTIPLE_ASSIGNEES_NOT_ALLOWED ExtendedErrorCode = "MULTIPLE_ASSIGNEES_NOT_ALLOWED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeNON_EXPOSED_COMPONENT_IN_FLOW ExtendedErrorCode = "NON_EXPOSED_COMPONENT_IN_FLOW"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeNON_GLOBAL_COMPONENT_IN_EXPORTED_FLOW ExtendedErrorCode = "NON_GLOBAL_COMPONENT_IN_EXPORTED_FLOW"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName
	ExtendedErrorCodeNUMBER_OF_SCREENFIELD_REGIONS_EXCEEDS_LIMIT ExtendedErrorCode = "NUMBER_OF_SCREENFIELD_REGIONS_EXCEEDS_LIMIT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, objectType
	ExtendedErrorCodeOBJECTTYPE_INVALID ExtendedErrorCode = "OBJECTTYPE_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, objectName
	ExtendedErrorCodeOBJECT_CANNOT_BE_CREATED ExtendedErrorCode = "OBJECT_CANNOT_BE_CREATED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, objectName
	ExtendedErrorCodeOBJECT_CANNOT_BE_DELETED ExtendedErrorCode = "OBJECT_CANNOT_BE_DELETED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, objectName
	ExtendedErrorCodeOBJECT_CANNOT_BE_QUERIED ExtendedErrorCode = "OBJECT_CANNOT_BE_QUERIED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, objectName
	ExtendedErrorCodeOBJECT_CANNOT_BE_UPDATED ExtendedErrorCode = "OBJECT_CANNOT_BE_UPDATED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName
	ExtendedErrorCodeOBJECT_ENCRYPTED_FIELDS_NOT_SUPPORTED ExtendedErrorCode = "OBJECT_ENCRYPTED_FIELDS_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, objectName
	ExtendedErrorCodeOBJECT_NOT_FOUND ExtendedErrorCode = "OBJECT_NOT_FOUND"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, processType
	ExtendedErrorCodeOBJECT_TYPE_DOES_NOT_EXIST ExtendedErrorCode = "OBJECT_TYPE_DOES_NOT_EXIST"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeOBJECT_TYPE_NOT_CDC_ENABLED ExtendedErrorCode = "OBJECT_TYPE_NOT_CDC_ENABLED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeORCHESTRATION_REQUIRESASYNCPROCESSING_NOT_SUPPORTED ExtendedErrorCode = "ORCHESTRATION_REQUIRESASYNCPROCESSING_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeORCHESTRATION_REQUIRESASYNCPROCESSING_REQUIRED ExtendedErrorCode = "ORCHESTRATION_REQUIRESASYNCPROCESSING_REQUIRED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, orgWideEmailAddress
	ExtendedErrorCodeORG_WIDE_EMAIL_INVALID ExtendedErrorCode = "ORG_WIDE_EMAIL_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeORG_WIDE_EMAIL_NOT_USED ExtendedErrorCode = "ORG_WIDE_EMAIL_NOT_USED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName
	ExtendedErrorCodeOUTPUTPARAM_ASSIGNTOREFERENCE_INVALID ExtendedErrorCode = "OUTPUTPARAM_ASSIGNTOREFERENCE_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName
	ExtendedErrorCodeOUTPUTPARAM_ASSIGNTOREFERENCE_NOTFOUND ExtendedErrorCode = "OUTPUTPARAM_ASSIGNTOREFERENCE_NOTFOUND"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName
	ExtendedErrorCodeOUTPUTPARAM_INCOMPATIBLE_DATATYPE ExtendedErrorCode = "OUTPUTPARAM_INCOMPATIBLE_DATATYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName
	ExtendedErrorCodeOUTPUTPARAM_MISMATCHED_OBJECTTYPE ExtendedErrorCode = "OUTPUTPARAM_MISMATCHED_OBJECTTYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName
	ExtendedErrorCodeOUTPUTPARAM_MISMATCHED_WITH_COLLECTION_VARIABLE ExtendedErrorCode = "OUTPUTPARAM_MISMATCHED_WITH_COLLECTION_VARIABLE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName
	ExtendedErrorCodeOUTPUTPARAM_MISSING_ASSIGNTOREFERENCE ExtendedErrorCode = "OUTPUTPARAM_MISSING_ASSIGNTOREFERENCE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName
	ExtendedErrorCodeOUTPUTPARAM_MISTMATCHED_WITH_NONCOLLECTION_VARIABLE ExtendedErrorCode = "OUTPUTPARAM_MISTMATCHED_WITH_NONCOLLECTION_VARIABLE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName
	ExtendedErrorCodePARAM_DATATYPE_NOT_SUPPORTED ExtendedErrorCode = "PARAM_DATATYPE_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, processType
	ExtendedErrorCodePAST_SCHEDULE_FLOW_WILL_NOT_RUN ExtendedErrorCode = "PAST_SCHEDULE_FLOW_WILL_NOT_RUN"

	// Errors with this extended error code have the following properties: currentLowerBound, currentUpperBound, errorScenario, nextLowerBound, nextUpperBound
	ExtendedErrorCodePRICE_ADJUSTMENT_TIER_VALIDATION_ERROR ExtendedErrorCode = "PRICE_ADJUSTMENT_TIER_VALIDATION_ERROR"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, processType, metadataValue
	ExtendedErrorCodePROCESSMETADATAVALUES_NOT_SUPPORTED_FOR_PROCESSTYPE ExtendedErrorCode = "PROCESSMETADATAVALUES_NOT_SUPPORTED_FOR_PROCESSTYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, metadataValue
	ExtendedErrorCodePROCESSMETADATAVALUE_NONEXISTENT_ELEMENT ExtendedErrorCode = "PROCESSMETADATAVALUE_NONEXISTENT_ELEMENT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, processType, fieldType
	ExtendedErrorCodePROCESSTYPE_COMPONENTTYPE_NOT_SUPPORTED ExtendedErrorCode = "PROCESSTYPE_COMPONENTTYPE_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, processType, attributeSet, elementType
	ExtendedErrorCodePROCESSTYPE_ELEMENT_CONFIG_NOT_SUPPORTED ExtendedErrorCode = "PROCESSTYPE_ELEMENT_CONFIG_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, processType, elementType
	ExtendedErrorCodePROCESSTYPE_ELEMENT_NOT_SUPPORTED ExtendedErrorCode = "PROCESSTYPE_ELEMENT_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodePROCESSTYPE_EVALUATIONFLOW_REQUIRED ExtendedErrorCode = "PROCESSTYPE_EVALUATIONFLOW_REQUIRED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, processType
	ExtendedErrorCodePROCESSTYPE_NOT_SUPPORTED ExtendedErrorCode = "PROCESSTYPE_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, processType, fieldType
	ExtendedErrorCodePROCESSTYPE_SCREEN_FIELDTYPE_NOT_SUPPORTED ExtendedErrorCode = "PROCESSTYPE_SCREEN_FIELDTYPE_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, processType, attribute, elementType
	ExtendedErrorCodePROCESS_TYPE_ELEMENT_ATTRIBUTE_REQUIRED ExtendedErrorCode = "PROCESS_TYPE_ELEMENT_ATTRIBUTE_REQUIRED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, currentProcessType, flowName, incompatibleProcessType
	ExtendedErrorCodePROCESS_TYPE_INCOMPATIBLE ExtendedErrorCode = "PROCESS_TYPE_INCOMPATIBLE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, processType
	ExtendedErrorCodePROMPT_FLOW_CONTAINS_INVALID_VARIABLE ExtendedErrorCode = "PROMPT_FLOW_CONTAINS_INVALID_VARIABLE"

	// Errors with this extended error code have the following properties: message
	ExtendedErrorCodeQUERY_LOCATOR_EXPIRED ExtendedErrorCode = "QUERY_LOCATOR_EXPIRED"

	// Errors with this extended error code have the following properties:
	ExtendedErrorCodeQUERY_LOCATOR_NOT_FOUND ExtendedErrorCode = "QUERY_LOCATOR_NOT_FOUND"

	// Errors with this extended error code have the following properties: errorArguments, errorCode
	ExtendedErrorCodeRECOMMENDATION_STRATEGY_EXCEPTION ExtendedErrorCode = "RECOMMENDATION_STRATEGY_EXCEPTION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName
	ExtendedErrorCodeRECORDFILTER_ENCRYPTED_FIELDS_NOT_SUPPORTED ExtendedErrorCode = "RECORDFILTER_ENCRYPTED_FIELDS_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName, objectName
	ExtendedErrorCodeRECORDFILTER_GEOLOCATION_FIELDS_NOT_SUPPORTED ExtendedErrorCode = "RECORDFILTER_GEOLOCATION_FIELDS_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName, elementName, elementType, operatorName
	ExtendedErrorCodeRECORDFILTER_INVALID_DATATYPE ExtendedErrorCode = "RECORDFILTER_INVALID_DATATYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName, assignmentName, elementName, elementType
	ExtendedErrorCodeRECORDFILTER_INVALID_ELEMENT ExtendedErrorCode = "RECORDFILTER_INVALID_ELEMENT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName, operatorName
	ExtendedErrorCodeRECORDFILTER_INVALID_OPERATOR ExtendedErrorCode = "RECORDFILTER_INVALID_OPERATOR"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName, operatorName
	ExtendedErrorCodeRECORDFILTER_INVALID_REFERENCE ExtendedErrorCode = "RECORDFILTER_INVALID_REFERENCE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName, elementName, elementType, operatorName
	ExtendedErrorCodeRECORDFILTER_MISSING_DATATYPE ExtendedErrorCode = "RECORDFILTER_MISSING_DATATYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName
	ExtendedErrorCodeRECORDFILTER_MULTIPLE_QUERIES_SAME_FIELD ExtendedErrorCode = "RECORDFILTER_MULTIPLE_QUERIES_SAME_FIELD"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName
	ExtendedErrorCodeRECORDFILTER_NON_PRIMITIVE ExtendedErrorCode = "RECORDFILTER_NON_PRIMITIVE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeRECORDLOOKUP_IDASSIGNMENT_VARIABLE_INCOMPATIBLE_DATATYPE ExtendedErrorCode = "RECORDLOOKUP_IDASSIGNMENT_VARIABLE_INCOMPATIBLE_DATATYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeRECORDLOOKUP_IDASSIGNMENT_VARIABLE_NOT_FOUND ExtendedErrorCode = "RECORDLOOKUP_IDASSIGNMENT_VARIABLE_NOT_FOUND"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, objectName
	ExtendedErrorCodeRECORDUPDATE_MISSING_FILTERS ExtendedErrorCode = "RECORDUPDATE_MISSING_FILTERS"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeRECORD_CHANGE_LISTENER_CONDITIONS_NON_RECORD_GLOBAL_VARIABLE ExtendedErrorCode = "RECORD_CHANGE_LISTENER_CONDITIONS_NON_RECORD_GLOBAL_VARIABLE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeRECORD_CHANGE_LISTENER_CONDITIONS_NOT_SUPPORTED ExtendedErrorCode = "RECORD_CHANGE_LISTENER_CONDITIONS_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeRECORD_CHANGE_LISTENER_CONDITIONS_THRESHOLD_BREACHED ExtendedErrorCode = "RECORD_CHANGE_LISTENER_CONDITIONS_THRESHOLD_BREACHED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeRECORD_PRIOR_VALUE_REMAIN_SAME_BEFORE_TRIGGER ExtendedErrorCode = "RECORD_PRIOR_VALUE_REMAIN_SAME_BEFORE_TRIGGER"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, mergeFieldReference
	ExtendedErrorCodeREFERENCED_ELEMENT_NOT_FOUND ExtendedErrorCode = "REFERENCED_ELEMENT_NOT_FOUND"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, processType
	ExtendedErrorCodeREQUIRED_VARIABLE_INVALID ExtendedErrorCode = "REQUIRED_VARIABLE_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, processType
	ExtendedErrorCodeREQUIRED_VARIABLE_MISSING ExtendedErrorCode = "REQUIRED_VARIABLE_MISSING"

	// Errors with this extended error code have the following properties:
	ExtendedErrorCodeRESOURCE_NOT_SUPPORTED ExtendedErrorCode = "RESOURCE_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, ruleName
	ExtendedErrorCodeRULE_MISSING_CONDITION ExtendedErrorCode = "RULE_MISSING_CONDITION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeRULE_REQUIRE_RECORD_CHANGED_NEVER_CHECKED ExtendedErrorCode = "RULE_REQUIRE_RECORD_CHANGED_NEVER_CHECKED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeSCHEDULE_TRIGGERED_FLOW_REQUIRES_DEFAULT_WORKFLOW_USER ExtendedErrorCode = "SCHEDULE_TRIGGERED_FLOW_REQUIRES_DEFAULT_WORKFLOW_USER"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeSCREENACTION_NOT_SUPPORTED_IN_ORG ExtendedErrorCode = "SCREENACTION_NOT_SUPPORTED_IN_ORG"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName
	ExtendedErrorCodeSCREENCOMPONENT_CONTAINS_VISIBILITY_RULE ExtendedErrorCode = "SCREENCOMPONENT_CONTAINS_VISIBILITY_RULE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName
	ExtendedErrorCodeSCREENFIELD_API_VERSION_NOT_SUPPORTED ExtendedErrorCode = "SCREENFIELD_API_VERSION_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName
	ExtendedErrorCodeSCREENFIELD_BOOLEAN_ISREQUIRED_IS_FALSE ExtendedErrorCode = "SCREENFIELD_BOOLEAN_ISREQUIRED_IS_FALSE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeSCREENFIELD_CANNOT_HAVE_BOTH_DEFAULTVALUE_AND_DEFAULTSELECTEDCHOICEREFERENCE ExtendedErrorCode = "SCREENFIELD_CANNOT_HAVE_BOTH_DEFAULTVALUE_AND_DEFAULTSELECTEDCHOICEREFERENCE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeSCREENFIELD_DEFAULTVALUE_NOT_SUPPORTED ExtendedErrorCode = "SCREENFIELD_DEFAULTVALUE_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, extensionName, parameterName
	ExtendedErrorCodeSCREENFIELD_EXTENSION_DUPLICATE_INPUT_PARAM ExtendedErrorCode = "SCREENFIELD_EXTENSION_DUPLICATE_INPUT_PARAM"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, extensionName, parameterName
	ExtendedErrorCodeSCREENFIELD_EXTENSION_DUPLICATE_OUTPUT_PARAM ExtendedErrorCode = "SCREENFIELD_EXTENSION_DUPLICATE_OUTPUT_PARAM"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, extensionName
	ExtendedErrorCodeSCREENFIELD_EXTENSION_IMPLEMENTATION_INVALID ExtendedErrorCode = "SCREENFIELD_EXTENSION_IMPLEMENTATION_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, extensionName, parameterName
	ExtendedErrorCodeSCREENFIELD_EXTENSION_INPUT_ATTRIBUTE_INVALID ExtendedErrorCode = "SCREENFIELD_EXTENSION_INPUT_ATTRIBUTE_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, extensionName
	ExtendedErrorCodeSCREENFIELD_EXTENSION_NAME_INVALID ExtendedErrorCode = "SCREENFIELD_EXTENSION_NAME_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, fieldType
	ExtendedErrorCodeSCREENFIELD_EXTENSION_NAME_MISSING ExtendedErrorCode = "SCREENFIELD_EXTENSION_NAME_MISSING"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, fieldType
	ExtendedErrorCodeSCREENFIELD_EXTENSION_NAME_NOT_SUPPORTED ExtendedErrorCode = "SCREENFIELD_EXTENSION_NAME_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, extensionName, parameterName
	ExtendedErrorCodeSCREENFIELD_EXTENSION_OUTPUT_ATTRIBUTE_INVALID ExtendedErrorCode = "SCREENFIELD_EXTENSION_OUTPUT_ATTRIBUTE_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, extensionName, parameterName
	ExtendedErrorCodeSCREENFIELD_EXTENSION_REQUIRED_INPUT_MISSING ExtendedErrorCode = "SCREENFIELD_EXTENSION_REQUIRED_INPUT_MISSING"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, fieldType
	ExtendedErrorCodeSCREENFIELD_INPUTS_NOT_SUPPORTED ExtendedErrorCode = "SCREENFIELD_INPUTS_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, fieldType
	ExtendedErrorCodeSCREENFIELD_INPUTS_ON_NEXT_NAV_TO_ASSOC_SCRN_NOT_SUPPORTED ExtendedErrorCode = "SCREENFIELD_INPUTS_ON_NEXT_NAV_TO_ASSOC_SCRN_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, dataType, fieldType
	ExtendedErrorCodeSCREENFIELD_INVALID_DATATYPE ExtendedErrorCode = "SCREENFIELD_INVALID_DATATYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, choiceName
	ExtendedErrorCodeSCREENFIELD_MULTISELECTCHOICE_SEMICOLON_NOT_SUPPORTED ExtendedErrorCode = "SCREENFIELD_MULTISELECTCHOICE_SEMICOLON_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName, objectFieldReference
	ExtendedErrorCodeSCREENFIELD_OBJECTFIELDREFERENCE_INVALID_FORMAT ExtendedErrorCode = "SCREENFIELD_OBJECTFIELDREFERENCE_INVALID_FORMAT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeSCREENFIELD_OBJECTPROVIDED_CANNOT_HAVE_DEFAULTVALUE ExtendedErrorCode = "SCREENFIELD_OBJECTPROVIDED_CANNOT_HAVE_DEFAULTVALUE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeSCREENFIELD_OBJECTPROVIDED_CANNOT_HAVE_HELPTEXT ExtendedErrorCode = "SCREENFIELD_OBJECTPROVIDED_CANNOT_HAVE_HELPTEXT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, dataType, fieldType
	ExtendedErrorCodeSCREENFIELD_OBJECTPROVIDED_INVALID_DATATYPE ExtendedErrorCode = "SCREENFIELD_OBJECTPROVIDED_INVALID_DATATYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeSCREENFIELD_OBJECTPROVIDED_ISREQUIRED_NOT_SUPPORTED ExtendedErrorCode = "SCREENFIELD_OBJECTPROVIDED_ISREQUIRED_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName
	ExtendedErrorCodeSCREENFIELD_OBJECTPROVIDED_LIGHTNING_RUNTIME_DISABLED ExtendedErrorCode = "SCREENFIELD_OBJECTPROVIDED_LIGHTNING_RUNTIME_DISABLED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName
	ExtendedErrorCodeSCREENFIELD_OBJECTPROVIDED_MISSING_OBJECTFIELDREFERENCE ExtendedErrorCode = "SCREENFIELD_OBJECTPROVIDED_MISSING_OBJECTFIELDREFERENCE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, fieldType
	ExtendedErrorCodeSCREENFIELD_OUTPUTS_NOT_SUPPORTED ExtendedErrorCode = "SCREENFIELD_OUTPUTS_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName
	ExtendedErrorCodeSCREENFIELD_REGION_CONTAINS_DUPLICATE_INPUT_PARAMETER_VALUES ExtendedErrorCode = "SCREENFIELD_REGION_CONTAINS_DUPLICATE_INPUT_PARAMETER_VALUES"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName
	ExtendedErrorCodeSCREENFIELD_REGION_INPUT_PARAMETER_NOT_SUPPORTED ExtendedErrorCode = "SCREENFIELD_REGION_INPUT_PARAMETER_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeSCREENFIELD_REGION_MISSING_REQUIRED_PERMISSIONS ExtendedErrorCode = "SCREENFIELD_REGION_MISSING_REQUIRED_PERMISSIONS"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName
	ExtendedErrorCodeSCREENFIELD_REGION_NOT_IN_CONTAINER ExtendedErrorCode = "SCREENFIELD_REGION_NOT_IN_CONTAINER"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName
	ExtendedErrorCodeSCREENFIELD_REGION_REQUIRED_INPUT_PARAMETER_MISSING ExtendedErrorCode = "SCREENFIELD_REGION_REQUIRED_INPUT_PARAMETER_MISSING"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName
	ExtendedErrorCodeSCREENFIELD_REGION_WIDTH_SUM_EXCEEDS_LIMIT ExtendedErrorCode = "SCREENFIELD_REGION_WIDTH_SUM_EXCEEDS_LIMIT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName
	ExtendedErrorCodeSCREENFIELD_REGION_WIDTH_VALUE_INVALID ExtendedErrorCode = "SCREENFIELD_REGION_WIDTH_VALUE_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, fieldType
	ExtendedErrorCodeSCREENFIELD_TYPE_NOT_SUPPORTED ExtendedErrorCode = "SCREENFIELD_TYPE_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeSCREENFIELD_TYPE_NOT_SUPPORTED_FOR_API_VERSION ExtendedErrorCode = "SCREENFIELD_TYPE_NOT_SUPPORTED_FOR_API_VERSION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, environment, fieldType
	ExtendedErrorCodeSCREENFIELD_TYPE_NOT_SUPPORTED_FOR_ENVIRONMENT ExtendedErrorCode = "SCREENFIELD_TYPE_NOT_SUPPORTED_FOR_ENVIRONMENT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, choiceName
	ExtendedErrorCodeSCREENFIELD_USERINPUT_NOT_SUPPORTED_FOR_CHOICETYPE ExtendedErrorCode = "SCREENFIELD_USERINPUT_NOT_SUPPORTED_FOR_CHOICETYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeSCREENFIELD_VALIDATIONRULE_NOT_SUPPORTED ExtendedErrorCode = "SCREENFIELD_VALIDATIONRULE_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, environment
	ExtendedErrorCodeSCREENFIELD_VALIDATION_RULES_NOT_SUPPORTED_FOR_ENVIRONMENT ExtendedErrorCode = "SCREENFIELD_VALIDATION_RULES_NOT_SUPPORTED_FOR_ENVIRONMENT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeSCREENFOOTER_MERGEFIELD_NOT_SUPPORTED ExtendedErrorCode = "SCREENFOOTER_MERGEFIELD_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, screenRuleName, attributeName
	ExtendedErrorCodeSCREENRULE_ACTION_INVALID_ATTRIBUTE ExtendedErrorCode = "SCREENRULE_ACTION_INVALID_ATTRIBUTE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, screenRuleName, attributeName
	ExtendedErrorCodeSCREENRULE_ACTION_INVALID_ATTRIBUTE_FOR_API_VERSION ExtendedErrorCode = "SCREENRULE_ACTION_INVALID_ATTRIBUTE_FOR_API_VERSION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, screenRuleName, acceptedValues, actionValue
	ExtendedErrorCodeSCREENRULE_ACTION_INVALID_VALUE ExtendedErrorCode = "SCREENRULE_ACTION_INVALID_VALUE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, screenRuleName
	ExtendedErrorCodeSCREENRULE_ACTION_MISSING_ATTRIBUTE ExtendedErrorCode = "SCREENRULE_ACTION_MISSING_ATTRIBUTE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, screenRuleName
	ExtendedErrorCodeSCREENRULE_ACTION_MISSING_FIELDREFERENCE ExtendedErrorCode = "SCREENRULE_ACTION_MISSING_FIELDREFERENCE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, screenRuleName
	ExtendedErrorCodeSCREENRULE_ACTION_MISSING_VALUE ExtendedErrorCode = "SCREENRULE_ACTION_MISSING_VALUE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, screenRuleName, attributeName, fieldName
	ExtendedErrorCodeSCREENRULE_ATTRIBUTE_NOT_SUPPORTED_FOR_SCREENFIELD ExtendedErrorCode = "SCREENRULE_ATTRIBUTE_NOT_SUPPORTED_FOR_SCREENFIELD"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, screenRuleName, fieldValue
	ExtendedErrorCodeSCREENRULE_FIELD_NOT_FOUND_ON_SCREEN ExtendedErrorCode = "SCREENRULE_FIELD_NOT_FOUND_ON_SCREEN"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, screenRuleName
	ExtendedErrorCodeSCREENRULE_MISSING_ACTION ExtendedErrorCode = "SCREENRULE_MISSING_ACTION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeSCREENRULE_NOT_SUPPORTED_IN_ORG ExtendedErrorCode = "SCREENRULE_NOT_SUPPORTED_IN_ORG"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName
	ExtendedErrorCodeSCREENRULE_SCREENFIELD_NOT_VISIBLE ExtendedErrorCode = "SCREENRULE_SCREENFIELD_NOT_VISIBLE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeSCREENRULE_VISIBILITY_NOT_SUPPORTED_IN_ORG ExtendedErrorCode = "SCREENRULE_VISIBILITY_NOT_SUPPORTED_IN_ORG"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeSCREEN_ALLOWBACK_ALLOWFINISH_BOTH_FALSE ExtendedErrorCode = "SCREEN_ALLOWBACK_ALLOWFINISH_BOTH_FALSE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeSCREEN_CONTAINS_LIGHTNING_COMPONENT ExtendedErrorCode = "SCREEN_CONTAINS_LIGHTNING_COMPONENT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeSCREEN_CONTAINS_REGION_CONTAINER_COMPONENT ExtendedErrorCode = "SCREEN_CONTAINS_REGION_CONTAINER_COMPONENT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeSCREEN_FIELD_REGION_CONTAINER_TYPE_INVALID_VALUE ExtendedErrorCode = "SCREEN_FIELD_REGION_CONTAINER_TYPE_INVALID_VALUE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeSCREEN_FIELD_REGION_CONTAINER_TYPE_MISSING ExtendedErrorCode = "SCREEN_FIELD_REGION_CONTAINER_TYPE_MISSING"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeSCREEN_FIELD_SECTION_HEADER_INVALID_VALUE ExtendedErrorCode = "SCREEN_FIELD_SECTION_HEADER_INVALID_VALUE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeSCREEN_FIELD_SECTION_HEADER_MISSING ExtendedErrorCode = "SCREEN_FIELD_SECTION_HEADER_MISSING"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeSCREEN_MISSING_FOOTER_AND_LIGHTNING_COMPONENT ExtendedErrorCode = "SCREEN_MISSING_FOOTER_AND_LIGHTNING_COMPONENT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, characterLimit
	ExtendedErrorCodeSCREEN_MISSING_LABEL ExtendedErrorCode = "SCREEN_MISSING_LABEL"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, choiceName
	ExtendedErrorCodeSCREEN_MULTISELECTFIELD_DOESNT_SUPPORT_CHOICE_WITH_USERINPUT ExtendedErrorCode = "SCREEN_MULTISELECTFIELD_DOESNT_SUPPORT_CHOICE_WITH_USERINPUT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName
	ExtendedErrorCodeSCREEN_PAUSEDTEXT_NOT_SHOWN_WHEN_ALLOWPAUSE_IS_FALSE ExtendedErrorCode = "SCREEN_PAUSEDTEXT_NOT_SHOWN_WHEN_ALLOWPAUSE_IS_FALSE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName, requiredField
	ExtendedErrorCodeSETTING_FIELD_MAKES_OTHER_FIELD_REQUIRED ExtendedErrorCode = "SETTING_FIELD_MAKES_OTHER_FIELD_REQUIRED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName, otherFieldName
	ExtendedErrorCodeSETTING_FIELD_MAKES_OTHER_FIELD_UNSUPPORTED ExtendedErrorCode = "SETTING_FIELD_MAKES_OTHER_FIELD_UNSUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName, otherFieldName, value
	ExtendedErrorCodeSETTING_FIELD_VALUE_MAKES_OTHER_FIELD_UNSUPPORTED ExtendedErrorCode = "SETTING_FIELD_VALUE_MAKES_OTHER_FIELD_UNSUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName, fieldValue, otherFieldName, otherFieldValue
	ExtendedErrorCodeSETTING_FIELD_VALUE_MAKES_OTHER_FIELD_VALUE_UNSUPPORTED ExtendedErrorCode = "SETTING_FIELD_VALUE_MAKES_OTHER_FIELD_VALUE_UNSUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, objectName
	ExtendedErrorCodeSETUP_REFERENCE_ALLOWED_ONLY_IN_ACTION_INPUT ExtendedErrorCode = "SETUP_REFERENCE_ALLOWED_ONLY_IN_ACTION_INPUT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, objectName
	ExtendedErrorCodeSETUP_REFERENCE_TYPE_NOT_PACKAGEABLE ExtendedErrorCode = "SETUP_REFERENCE_TYPE_NOT_PACKAGEABLE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, objectName
	ExtendedErrorCodeSETUP_REFERENCE_VALUE_REQUIRES_DEVELOPER_NAMES ExtendedErrorCode = "SETUP_REFERENCE_VALUE_REQUIRES_DEVELOPER_NAMES"

	// Errors with this extended error code have the following properties: slackErrorCode
	ExtendedErrorCodeSLACK_API_EXCEPTION_EXTENSION ExtendedErrorCode = "SLACK_API_EXCEPTION_EXTENSION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName, fieldValue
	ExtendedErrorCodeSOBJECT_ELEMENT_INCOMPATIBLE_DATATYPE ExtendedErrorCode = "SOBJECT_ELEMENT_INCOMPATIBLE_DATATYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, objectType, sobjectName
	ExtendedErrorCodeSOBJECT_ELEMENT_MISMATCHED_OBJECTTYPE ExtendedErrorCode = "SOBJECT_ELEMENT_MISMATCHED_OBJECTTYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName, objectType
	ExtendedErrorCodeSORT_ENCRYPTED_FIELDS_NOT_SUPPORTED ExtendedErrorCode = "SORT_ENCRYPTED_FIELDS_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, sortOrder
	ExtendedErrorCodeSORT_FIELD_MISSING ExtendedErrorCode = "SORT_FIELD_MISSING"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName, objectName
	ExtendedErrorCodeSORT_FIELD_NOT_SUPPORTED ExtendedErrorCode = "SORT_FIELD_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName, objectName
	ExtendedErrorCodeSORT_GEOLOCATION_FIELDS_NOT_SUPPORTED ExtendedErrorCode = "SORT_GEOLOCATION_FIELDS_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, maxLimit
	ExtendedErrorCodeSORT_LIMIT_INVALID ExtendedErrorCode = "SORT_LIMIT_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName
	ExtendedErrorCodeSORT_ORDER_MISSING ExtendedErrorCode = "SORT_ORDER_MISSING"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName, fieldType, requiedField
	ExtendedErrorCodeSPECIFIC_FIELD_VALUE_MAKES_OTHER_FIELD_REQUIRED ExtendedErrorCode = "SPECIFIC_FIELD_VALUE_MAKES_OTHER_FIELD_REQUIRED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName
	ExtendedErrorCodeSPECIFIC_FIELD_VALUE_MAKES_OTHER_FIELD_VALUE_REQUIRED ExtendedErrorCode = "SPECIFIC_FIELD_VALUE_MAKES_OTHER_FIELD_VALUE_REQUIRED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName, parameterName
	ExtendedErrorCodeSTAGE_NAME_NOT_FULLY_QUALIFIED ExtendedErrorCode = "STAGE_NAME_NOT_FULLY_QUALIFIED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeSTART_ELEMENT_MISSING ExtendedErrorCode = "START_ELEMENT_MISSING"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, flowName
	ExtendedErrorCodeSUBFLOW_DESKTOP_DESIGNER_FLOWS_NOT_SUPPORTED ExtendedErrorCode = "SUBFLOW_DESKTOP_DESIGNER_FLOWS_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, flowName
	ExtendedErrorCodeSUBFLOW_DIFFERENT_RUNMODE ExtendedErrorCode = "SUBFLOW_DIFFERENT_RUNMODE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, subflowName
	ExtendedErrorCodeSUBFLOW_INPUT_MISSING_NAME ExtendedErrorCode = "SUBFLOW_INPUT_MISSING_NAME"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, inputVariableName
	ExtendedErrorCodeSUBFLOW_INPUT_MULTIPLE_ASSIGNMENTS_TO_ONE_VARIABLE ExtendedErrorCode = "SUBFLOW_INPUT_MULTIPLE_ASSIGNMENTS_TO_ONE_VARIABLE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, inputVariableName
	ExtendedErrorCodeSUBFLOW_INPUT_REFERENCES_FIELD_ON_SOBJECT_VARIABLE ExtendedErrorCode = "SUBFLOW_INPUT_REFERENCES_FIELD_ON_SOBJECT_VARIABLE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, subflowName, inputAssignmentNames
	ExtendedErrorCodeSUBFLOW_INPUT_VARIABLE_NOT_FOUND_IN_REFERENCEDFLOW ExtendedErrorCode = "SUBFLOW_INPUT_VARIABLE_NOT_FOUND_IN_REFERENCEDFLOW"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, subflowName, inputAssignmentNames
	ExtendedErrorCodeSUBFLOW_INPUT_VARIABLE_NO_INPUT_ACCESS ExtendedErrorCode = "SUBFLOW_INPUT_VARIABLE_NO_INPUT_ACCESS"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeSUBFLOW_INVALID_NAME ExtendedErrorCode = "SUBFLOW_INVALID_NAME"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, flowName
	ExtendedErrorCodeSUBFLOW_INVALID_REFERENCE ExtendedErrorCode = "SUBFLOW_INVALID_REFERENCE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parentFlowName
	ExtendedErrorCodeSUBFLOW_MASTER_FLOW_TYPE_NOT_AUTOLAUNCHED ExtendedErrorCode = "SUBFLOW_MASTER_FLOW_TYPE_NOT_AUTOLAUNCHED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeSUBFLOW_MISSING_NAME ExtendedErrorCode = "SUBFLOW_MISSING_NAME"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, subflowName, flowName
	ExtendedErrorCodeSUBFLOW_NO_ACTIVE_VERSION ExtendedErrorCode = "SUBFLOW_NO_ACTIVE_VERSION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, subflowName, flowVersion, outputParameterNames
	ExtendedErrorCodeSUBFLOW_OUTPUT_INCOMPATIBLE_DATATYPES ExtendedErrorCode = "SUBFLOW_OUTPUT_INCOMPATIBLE_DATATYPES"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, subflowName, flowVersion, outputParameterNames
	ExtendedErrorCodeSUBFLOW_OUTPUT_MISMATCHED_APEX_CLASS ExtendedErrorCode = "SUBFLOW_OUTPUT_MISMATCHED_APEX_CLASS"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, subflowName, flowVersion, outputParameterNames
	ExtendedErrorCodeSUBFLOW_OUTPUT_MISMATCHED_COLLECTIONTYPES ExtendedErrorCode = "SUBFLOW_OUTPUT_MISMATCHED_COLLECTIONTYPES"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, subflowName, flowVersion, outputParameterNames
	ExtendedErrorCodeSUBFLOW_OUTPUT_MISMATCHED_OBJECTS ExtendedErrorCode = "SUBFLOW_OUTPUT_MISMATCHED_OBJECTS"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, outputAssignment
	ExtendedErrorCodeSUBFLOW_OUTPUT_MISSING_ASSIGNTOREFERENCE ExtendedErrorCode = "SUBFLOW_OUTPUT_MISSING_ASSIGNTOREFERENCE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, subflowName
	ExtendedErrorCodeSUBFLOW_OUTPUT_MISSING_NAME ExtendedErrorCode = "SUBFLOW_OUTPUT_MISSING_NAME"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, outputVariableName
	ExtendedErrorCodeSUBFLOW_OUTPUT_MULTIPLE_ASSIGNMENTS_TO_ONE_VARIABLE ExtendedErrorCode = "SUBFLOW_OUTPUT_MULTIPLE_ASSIGNMENTS_TO_ONE_VARIABLE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, outputAssignment
	ExtendedErrorCodeSUBFLOW_OUTPUT_REFERENCES_FIELD_ON_SOBJECT_VARIABLE ExtendedErrorCode = "SUBFLOW_OUTPUT_REFERENCES_FIELD_ON_SOBJECT_VARIABLE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, subflowName, outputAssignmentName
	ExtendedErrorCodeSUBFLOW_OUTPUT_TARGET_DOES_NOT_EXIST_IN_MASTER_FLOW ExtendedErrorCode = "SUBFLOW_OUTPUT_TARGET_DOES_NOT_EXIST_IN_MASTER_FLOW"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, subflowName, variableName
	ExtendedErrorCodeSUBFLOW_OUTPUT_VARIABLE_NOT_FOUND_IN_MASTERFLOW ExtendedErrorCode = "SUBFLOW_OUTPUT_VARIABLE_NOT_FOUND_IN_MASTERFLOW"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, subflowName, flowVersion, outputParameterNames
	ExtendedErrorCodeSUBFLOW_OUTPUT_VARIABLE_NOT_FOUND_IN_REFERENCEDFLOW ExtendedErrorCode = "SUBFLOW_OUTPUT_VARIABLE_NOT_FOUND_IN_REFERENCEDFLOW"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, subflowName, variableName
	ExtendedErrorCodeSUBFLOW_OUTPUT_VARIABLE_NO_OUTPUT_ACCESS ExtendedErrorCode = "SUBFLOW_OUTPUT_VARIABLE_NO_OUTPUT_ACCESS"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, processType, subflowElementName, subflowName, subflowProcessType
	ExtendedErrorCodeSUBFLOW_PROCESSTYPE_NOT_SUPPORTED ExtendedErrorCode = "SUBFLOW_PROCESSTYPE_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, subflowName, flowName, processType
	ExtendedErrorCodeSUBFLOW_PROCESS_TYPE_INCOMPATIBLE ExtendedErrorCode = "SUBFLOW_PROCESS_TYPE_INCOMPATIBLE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeSUBFLOW_REFERENCES_MASTERFLOW ExtendedErrorCode = "SUBFLOW_REFERENCES_MASTERFLOW"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeSURVEY_ADVANCED_CONDITION_LOGIC_NOT_SUPPORTED ExtendedErrorCode = "SURVEY_ADVANCED_CONDITION_LOGIC_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, choiceName
	ExtendedErrorCodeSURVEY_CHOICE_NOT_REFERENCED_BY_A_QUESTION ExtendedErrorCode = "SURVEY_CHOICE_NOT_REFERENCED_BY_A_QUESTION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, choiceName
	ExtendedErrorCodeSURVEY_CHOICE_REFERENCED_BY_MULTIPLE_QUESTIONS ExtendedErrorCode = "SURVEY_CHOICE_REFERENCED_BY_MULTIPLE_QUESTIONS"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeSURVEY_ELEMENT_NEVER_REACHED ExtendedErrorCode = "SURVEY_ELEMENT_NEVER_REACHED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, surveyName
	ExtendedErrorCodeSURVEY_ENRICH_INVALID_CONFIGURATION ExtendedErrorCode = "SURVEY_ENRICH_INVALID_CONFIGURATION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, subflowName
	ExtendedErrorCodeSURVEY_INACTIVE_SUBFLOWS ExtendedErrorCode = "SURVEY_INACTIVE_SUBFLOWS"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeSURVEY_INVALID_ATTACHMENT_QUESTION_CONFIGURATION ExtendedErrorCode = "SURVEY_INVALID_ATTACHMENT_QUESTION_CONFIGURATION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeSURVEY_INVALID_CMT_CONFIGURED ExtendedErrorCode = "SURVEY_INVALID_CMT_CONFIGURED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeSURVEY_INVALID_CUSTOM_THANK_YOU_CONFIGURATION ExtendedErrorCode = "SURVEY_INVALID_CUSTOM_THANK_YOU_CONFIGURATION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeSURVEY_INVALID_LINK_TARGET_IN_QUESTION_LABEL ExtendedErrorCode = "SURVEY_INVALID_LINK_TARGET_IN_QUESTION_LABEL"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeSURVEY_INVALID_MATRIX_QUESTION_CONFIGURATION ExtendedErrorCode = "SURVEY_INVALID_MATRIX_QUESTION_CONFIGURATION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeSURVEY_INVALID_MERGE_FIELD_CONFIGURATION ExtendedErrorCode = "SURVEY_INVALID_MERGE_FIELD_CONFIGURATION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, surveyName
	ExtendedErrorCodeSURVEY_INVALID_OUTPUT_VARIABLE ExtendedErrorCode = "SURVEY_INVALID_OUTPUT_VARIABLE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, surveyName
	ExtendedErrorCodeSURVEY_MISSING_QUESTION_OR_SUBFLOW ExtendedErrorCode = "SURVEY_MISSING_QUESTION_OR_SUBFLOW"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, surveyName
	ExtendedErrorCodeSURVEY_MISSING_REQUIRED_VARIABLES ExtendedErrorCode = "SURVEY_MISSING_REQUIRED_VARIABLES"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, flowDecision
	ExtendedErrorCodeSURVEY_MULTIPLE_SCREENS_CANNOT_CONNECT_TO_SAME_DECISION ExtendedErrorCode = "SURVEY_MULTIPLE_SCREENS_CANNOT_CONNECT_TO_SAME_DECISION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, subflowName
	ExtendedErrorCodeSURVEY_NESTED_SUBFLOWS ExtendedErrorCode = "SURVEY_NESTED_SUBFLOWS"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, subflowName
	ExtendedErrorCodeSURVEY_NONSURVEY_SUBFLOWS ExtendedErrorCode = "SURVEY_NONSURVEY_SUBFLOWS"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementReference, operatorName, ruleName, screenFieldName
	ExtendedErrorCodeSURVEY_RULE_INVALID_LEFT_OPERAND ExtendedErrorCode = "SURVEY_RULE_INVALID_LEFT_OPERAND"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeSURVEY_RULE_INVALID_RIGHT_OPERAND ExtendedErrorCode = "SURVEY_RULE_INVALID_RIGHT_OPERAND"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeSURVEY_SAVE_ERROR ExtendedErrorCode = "SURVEY_SAVE_ERROR"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeSURVEY_SCREENFIELD_TYPE_NOT_SUPPORTED_FOR_QUESTION ExtendedErrorCode = "SURVEY_SCREENFIELD_TYPE_NOT_SUPPORTED_FOR_QUESTION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeSURVEY_START_ELEMENT_INVALID ExtendedErrorCode = "SURVEY_START_ELEMENT_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, surveyName
	ExtendedErrorCodeSURVEY_VARIABLE_ACCESS_INVALID ExtendedErrorCode = "SURVEY_VARIABLE_ACCESS_INVALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, processType
	ExtendedErrorCodeSYSTEM_MODE_NOT_ALLOWED ExtendedErrorCode = "SYSTEM_MODE_NOT_ALLOWED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeSYSTEM_VARIABLE_MISSING_FIELD_REFERENCE ExtendedErrorCode = "SYSTEM_VARIABLE_MISSING_FIELD_REFERENCE"

	// Errors with this extended error code have the following properties: message
	ExtendedErrorCodeTEMPORARY_QUERY_MORE_FAILURE ExtendedErrorCode = "TEMPORARY_QUERY_MORE_FAILURE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeTRIGGERED_FLOW_REDUNDANT_QUERY ExtendedErrorCode = "TRIGGERED_FLOW_REDUNDANT_QUERY"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, objectName
	ExtendedErrorCodeTRIGGERING_RECORD_UPDATE_REQUIRES_INPUTASSIGNMENTS ExtendedErrorCode = "TRIGGERING_RECORD_UPDATE_REQUIRES_INPUTASSIGNMENTS"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeTRIGGER_ORDER_NOT_SUPPORTED ExtendedErrorCode = "TRIGGER_ORDER_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, objectName, triggerType
	ExtendedErrorCodeTRIGGER_TYPE_CONTEXT_OBJECT_NOT_SUPPORTED ExtendedErrorCode = "TRIGGER_TYPE_CONTEXT_OBJECT_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementType, triggerType
	ExtendedErrorCodeTRIGGER_TYPE_ELEMENT_NOT_SUPPORTED ExtendedErrorCode = "TRIGGER_TYPE_ELEMENT_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, processType
	ExtendedErrorCodeTRIGGER_TYPE_INCOMPATIBLE_WITH_PROCESS_TYPE ExtendedErrorCode = "TRIGGER_TYPE_INCOMPATIBLE_WITH_PROCESS_TYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, subflowName, triggerType
	ExtendedErrorCodeTRIGGER_TYPE_NOT_ALLOWED_FOR_SUBFLOW ExtendedErrorCode = "TRIGGER_TYPE_NOT_ALLOWED_FOR_SUBFLOW"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeTYPE_MAPPING_DUPLICATED ExtendedErrorCode = "TYPE_MAPPING_DUPLICATED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeTYPE_MAPPING_NAME_MISSING ExtendedErrorCode = "TYPE_MAPPING_NAME_MISSING"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeTYPE_MAPPING_NOT_FOUND ExtendedErrorCode = "TYPE_MAPPING_NOT_FOUND"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeTYPE_MAPPING_NOT_SUPPORTED ExtendedErrorCode = "TYPE_MAPPING_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeTYPE_MAPPING_NOT_SUPPORTED_FOR_API_VERSION ExtendedErrorCode = "TYPE_MAPPING_NOT_SUPPORTED_FOR_API_VERSION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, processType
	ExtendedErrorCodeTYPE_MAPPING_NOT_SUPPORTED_FOR_PROCESS_TYPE ExtendedErrorCode = "TYPE_MAPPING_NOT_SUPPORTED_FOR_PROCESS_TYPE"

	// Errors with this extended error code have the following properties: message
	ExtendedErrorCodeUNAUTHORIZED_USER_FOR_CURSOR ExtendedErrorCode = "UNAUTHORIZED_USER_FOR_CURSOR"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeUNEXPECTED_ERROR ExtendedErrorCode = "UNEXPECTED_ERROR"

	// Errors with this extended error code have the following properties: field, message, parentResourceName, resourceName, resourceType, severity
	ExtendedErrorCodeVALIDATION_EXCEPTION ExtendedErrorCode = "VALIDATION_EXCEPTION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName, characterLimit
	ExtendedErrorCodeVALUE_CHAR_LIMIT_EXCEEDED ExtendedErrorCode = "VALUE_CHAR_LIMIT_EXCEEDED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName, datatype
	ExtendedErrorCodeVARIABLE_FIELD_NOT_SUPPORTED_FOR_DATATYPE ExtendedErrorCode = "VARIABLE_FIELD_NOT_SUPPORTED_FOR_DATATYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName, datatype
	ExtendedErrorCodeVARIABLE_FIELD_NOT_SUPPORTED_FOR_DATATYPE_AND_COLLECTION ExtendedErrorCode = "VARIABLE_FIELD_NOT_SUPPORTED_FOR_DATATYPE_AND_COLLECTION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, datatype, fieldName
	ExtendedErrorCodeVARIABLE_FIELD_REQUIRED_FOR_DATATYPE ExtendedErrorCode = "VARIABLE_FIELD_REQUIRED_FOR_DATATYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, processType, variableName
	ExtendedErrorCodeVARIABLE_NAME_IS_RESERVED_FOR_PROCESS_TYPE ExtendedErrorCode = "VARIABLE_NAME_IS_RESERVED_FOR_PROCESS_TYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeVARIABLE_SCALE_EXCEEDS_LIMIT ExtendedErrorCode = "VARIABLE_SCALE_EXCEEDS_LIMIT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeVARIABLE_SCALE_NEGATIVE_INTEGER ExtendedErrorCode = "VARIABLE_SCALE_NEGATIVE_INTEGER"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeVARIABLE_SCALE_NULL ExtendedErrorCode = "VARIABLE_SCALE_NULL"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, apiVersion
	ExtendedErrorCodeVERSION_NOT_VALID ExtendedErrorCode = "VERSION_NOT_VALID"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName
	ExtendedErrorCodeVISIBILITY_RULE_EXCEEDS_CONDITION_LIMIT ExtendedErrorCode = "VISIBILITY_RULE_EXCEEDS_CONDITION_LIMIT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName
	ExtendedErrorCodeVISIBILITY_RULE_NOT_AVAILABLE_IN_ORG ExtendedErrorCode = "VISIBILITY_RULE_NOT_AVAILABLE_IN_ORG"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName
	ExtendedErrorCodeVISIBILITY_RULE_NOT_SUPPORTED_FOR_API_VERSION ExtendedErrorCode = "VISIBILITY_RULE_NOT_SUPPORTED_FOR_API_VERSION"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, processType, screenFieldName
	ExtendedErrorCodeVISIBILITY_RULE_NOT_SUPPORTED_FOR_PROCESSTYPE ExtendedErrorCode = "VISIBILITY_RULE_NOT_SUPPORTED_FOR_PROCESSTYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, fieldName
	ExtendedErrorCodeVISIBILITY_RULE_NO_CONDITIONS ExtendedErrorCode = "VISIBILITY_RULE_NO_CONDITIONS"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, waitEventName
	ExtendedErrorCodeWAITEVENT_BATCH_SIZE_NOT_SUPPORTED_FOR_EVENTTYPE ExtendedErrorCode = "WAITEVENT_BATCH_SIZE_NOT_SUPPORTED_FOR_EVENTTYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, waitEventName
	ExtendedErrorCodeWAITEVENT_DEFAULT_CONNECTOR_MISSING_LABEL ExtendedErrorCode = "WAITEVENT_DEFAULT_CONNECTOR_MISSING_LABEL"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, parameterName
	ExtendedErrorCodeWAITEVENT_DUPLICATE_INPUT_PARAM ExtendedErrorCode = "WAITEVENT_DUPLICATE_INPUT_PARAM"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, waitEventName, inputParameterName
	ExtendedErrorCodeWAITEVENT_INPUT_NOT_SUPPORTED_FOR_EVENTTYPE ExtendedErrorCode = "WAITEVENT_INPUT_NOT_SUPPORTED_FOR_EVENTTYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, waitEventName, parameterName
	ExtendedErrorCodeWAITEVENT_INPUT_REQUIRES_LITERAL_VALUE ExtendedErrorCode = "WAITEVENT_INPUT_REQUIRES_LITERAL_VALUE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, waitEventName
	ExtendedErrorCodeWAITEVENT_INVALID_CONDITION_LOGIC ExtendedErrorCode = "WAITEVENT_INVALID_CONDITION_LOGIC"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, processType
	ExtendedErrorCodeWAITEVENT_INVALID_VALUE ExtendedErrorCode = "WAITEVENT_INVALID_VALUE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeWAITEVENT_MISSING ExtendedErrorCode = "WAITEVENT_MISSING"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, waitEventName
	ExtendedErrorCodeWAITEVENT_MISSING_CONNECTOR ExtendedErrorCode = "WAITEVENT_MISSING_CONNECTOR"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, waitEventName
	ExtendedErrorCodeWAITEVENT_MISSING_EVENTTYPE ExtendedErrorCode = "WAITEVENT_MISSING_EVENTTYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, waitEventName
	ExtendedErrorCodeWAITEVENT_OBJECT_NOT_SUPPORTED_FOR_EVENTTYPE ExtendedErrorCode = "WAITEVENT_OBJECT_NOT_SUPPORTED_FOR_EVENTTYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, waitEventName, outputParameter
	ExtendedErrorCodeWAITEVENT_OUTPUT_NOT_SUPPORTED_FOR_EVENTTYPE ExtendedErrorCode = "WAITEVENT_OUTPUT_NOT_SUPPORTED_FOR_EVENTTYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, waitEventName, eventParameterName, incompatibleValue
	ExtendedErrorCodeWAITEVENT_RELATIVEALARM_INVALID_DATETIME_FIELD ExtendedErrorCode = "WAITEVENT_RELATIVEALARM_INVALID_DATETIME_FIELD"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, waitEventName, eventParameterName, incompatibleValue
	ExtendedErrorCodeWAITEVENT_RELATIVEALARM_INVALID_FIELD ExtendedErrorCode = "WAITEVENT_RELATIVEALARM_INVALID_FIELD"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, waitEventName, inputParameterName
	ExtendedErrorCodeWAITEVENT_RELATIVEALARM_INVALID_OBJECTTYPE ExtendedErrorCode = "WAITEVENT_RELATIVEALARM_INVALID_OBJECTTYPE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, waitEventName, eventParameterName, incompatibleValue
	ExtendedErrorCodeWAITEVENT_RELATIVEALARM_INVALID_OFFSETNUMBER ExtendedErrorCode = "WAITEVENT_RELATIVEALARM_INVALID_OFFSETNUMBER"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, waitEventName, eventParameterName, incompatibleValue
	ExtendedErrorCodeWAITEVENT_RELATIVEALARM_INVALID_OFFSETUNIT ExtendedErrorCode = "WAITEVENT_RELATIVEALARM_INVALID_OFFSETUNIT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, waitEventName, parameterName
	ExtendedErrorCodeWAITEVENT_REQUIRED_INPUT_MISSING ExtendedErrorCode = "WAITEVENT_REQUIRED_INPUT_MISSING"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, processType
	ExtendedErrorCodeWAITEVENT_RESUME_DATE_IN_PAST ExtendedErrorCode = "WAITEVENT_RESUME_DATE_IN_PAST"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, waitEventName
	ExtendedErrorCodeWAITEVENT_TYPE_INVALID_OR_NOT_SUPPORTED ExtendedErrorCode = "WAITEVENT_TYPE_INVALID_OR_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, flowName
	ExtendedErrorCodeWORKFLOW_MISSING_PROCESSMETADATAVALUES ExtendedErrorCode = "WORKFLOW_MISSING_PROCESSMETADATAVALUES"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, objectType
	ExtendedErrorCodeWORKFLOW_OBJECTTYPE_NOT_FOUND ExtendedErrorCode = "WORKFLOW_OBJECTTYPE_NOT_FOUND"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, objectType
	ExtendedErrorCodeWORKFLOW_OBJECTTYPE_NOT_SUPPORTED ExtendedErrorCode = "WORKFLOW_OBJECTTYPE_NOT_SUPPORTED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, objectVariableName, oldObjectVariableName
	ExtendedErrorCodeWORKFLOW_OBJECTVARIABLE_AND_OLDOBJECTVARIABLE_REFERENCE_SAME_SOBJECT_VARIABLE ExtendedErrorCode = "WORKFLOW_OBJECTVARIABLE_AND_OLDOBJECTVARIABLE_REFERENCE_SAME_SOBJECT_VARIABLE"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, objectType, objectVariableName
	ExtendedErrorCodeWORKFLOW_OBJECTVARIABLE_DOESNT_SUPPORT_INPUT ExtendedErrorCode = "WORKFLOW_OBJECTVARIABLE_DOESNT_SUPPORT_INPUT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, objectType, oldObjectVariableName
	ExtendedErrorCodeWORKFLOW_OLDOBJECTVARIABLE_DOESNT_SUPPORT_INPUT ExtendedErrorCode = "WORKFLOW_OLDOBJECTVARIABLE_DOESNT_SUPPORT_INPUT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, metadataValue
	ExtendedErrorCodeWORKFLOW_PROCESSMETADATAVALUES_MORE_THAN_ONE_NAME ExtendedErrorCode = "WORKFLOW_PROCESSMETADATAVALUES_MORE_THAN_ONE_NAME"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, metadataValue
	ExtendedErrorCodeWORKFLOW_PROCESS_METADATAVALUES_MISSING_NAME ExtendedErrorCode = "WORKFLOW_PROCESS_METADATAVALUES_MISSING_NAME"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity, elementName
	ExtendedErrorCodeWORKFLOW_RECURSIVECOUNTVARIABLE_DOESNT_SUPPORT_INPUT ExtendedErrorCode = "WORKFLOW_RECURSIVECOUNTVARIABLE_DOESNT_SUPPORT_INPUT"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeWORKFLOW_RULE_NOT_DEACTIVATED ExtendedErrorCode = "WORKFLOW_RULE_NOT_DEACTIVATED"

	// Errors with this extended error code have the following properties: erroneousElementApiName, erroneousElementType, erroneousFields, severity
	ExtendedErrorCodeWORKFLOW_TRIGGERTYPE_INVALID_VALUE ExtendedErrorCode = "WORKFLOW_TRIGGERTYPE_INVALID_VALUE"
)

type TestLevel string

const (
	TestLevelNoTestRun TestLevel = "NoTestRun"

	TestLevelRunSpecifiedTests TestLevel = "RunSpecifiedTests"

	TestLevelRunLocalTests TestLevel = "RunLocalTests"

	TestLevelRunAllTestsInOrg TestLevel = "RunAllTestsInOrg"
)

type AsyncRequestState string

const (
	AsyncRequestStateQueued AsyncRequestState = "Queued"

	AsyncRequestStateInProgress AsyncRequestState = "InProgress"

	AsyncRequestStateCompleted AsyncRequestState = "Completed"

	AsyncRequestStateError AsyncRequestState = "Error"
)

type LogCategory string

const (
	LogCategoryDb LogCategory = "Db"

	LogCategoryWorkflow LogCategory = "Workflow"

	LogCategoryValidation LogCategory = "Validation"

	LogCategoryCallout LogCategory = "Callout"

	LogCategoryApex_code LogCategory = "Apex_code"

	LogCategoryApex_profiling LogCategory = "Apex_profiling"

	LogCategoryVisualforce LogCategory = "Visualforce"

	LogCategorySystem LogCategory = "System"

	LogCategoryWave LogCategory = "Wave"

	LogCategoryNba LogCategory = "Nba"

	LogCategoryAll LogCategory = "All"
)

type LogCategoryLevel string

const (
	LogCategoryLevelNone LogCategoryLevel = "None"

	LogCategoryLevelFinest LogCategoryLevel = "Finest"

	LogCategoryLevelFiner LogCategoryLevel = "Finer"

	LogCategoryLevelFine LogCategoryLevel = "Fine"

	LogCategoryLevelDebug LogCategoryLevel = "Debug"

	LogCategoryLevelInfo LogCategoryLevel = "Info"

	LogCategoryLevelWarn LogCategoryLevel = "Warn"

	LogCategoryLevelError LogCategoryLevel = "Error"
)

type LogType string

const (
	LogTypeNone LogType = "None"

	LogTypeDebugonly LogType = "Debugonly"

	LogTypeDb LogType = "Db"

	LogTypeProfiling LogType = "Profiling"

	LogTypeCallout LogType = "Callout"

	LogTypeDetail LogType = "Detail"
)

type ID string

type StatusCode string

const (
	StatusCodeALERT_NOTIFICATION_LIMIT_EXCEEDED StatusCode = "ALERT_NOTIFICATION_LIMIT_EXCEEDED"

	StatusCodeALL_OR_NONE_OPERATION_ROLLED_BACK StatusCode = "ALL_OR_NONE_OPERATION_ROLLED_BACK"

	StatusCodeALREADY_APPLIED StatusCode = "ALREADY_APPLIED"

	StatusCodeALREADY_IN_PROCESS StatusCode = "ALREADY_IN_PROCESS"

	StatusCodeALREADY_REDEEMED_VOUCHER StatusCode = "ALREADY_REDEEMED_VOUCHER"

	StatusCodeAPEX_DATA_ACCESS_RESTRICTION StatusCode = "APEX_DATA_ACCESS_RESTRICTION"

	StatusCodeAPEX_FAILED StatusCode = "APEX_FAILED"

	StatusCodeAPPLICATION_ALREADY_EXISTS StatusCode = "APPLICATION_ALREADY_EXISTS"

	StatusCodeASSIGNEE_TYPE_REQUIRED StatusCode = "ASSIGNEE_TYPE_REQUIRED"

	StatusCodeATTRIBUTE_DEFINITION_LIMIT_EXCEEDED StatusCode = "ATTRIBUTE_DEFINITION_LIMIT_EXCEEDED"

	StatusCodeAURA_COMPILE_ERROR StatusCode = "AURA_COMPILE_ERROR"

	StatusCodeAUTH_PROVIDER_NEEDS_AUTH StatusCode = "AUTH_PROVIDER_NEEDS_AUTH"

	StatusCodeAUTH_PROVIDER_NOT_FOUND StatusCode = "AUTH_PROVIDER_NOT_FOUND"

	StatusCodeB2B_SEARCH_ADMIN_ERROR StatusCode = "B2B_SEARCH_ADMIN_ERROR"

	StatusCodeBAD_CUSTOM_ENTITY_PARENT_DOMAIN StatusCode = "BAD_CUSTOM_ENTITY_PARENT_DOMAIN"

	StatusCodeBCC_NOT_ALLOWED_IF_BCC_COMPLIANCE_ENABLED StatusCode = "BCC_NOT_ALLOWED_IF_BCC_COMPLIANCE_ENABLED"

	StatusCodeBLOCKED_EXCLUSIVE StatusCode = "BLOCKED_EXCLUSIVE"

	StatusCodeCANNOT_CASCADE_PRODUCT_ACTIVE StatusCode = "CANNOT_CASCADE_PRODUCT_ACTIVE"

	StatusCodeCANNOT_CHANGE_FIELD_TYPE_OF_APEX_REFERENCED_FIELD StatusCode = "CANNOT_CHANGE_FIELD_TYPE_OF_APEX_REFERENCED_FIELD"

	StatusCodeCANNOT_CHANGE_FIELD_TYPE_OF_REFERENCED_FIELD StatusCode = "CANNOT_CHANGE_FIELD_TYPE_OF_REFERENCED_FIELD"

	StatusCodeCANNOT_CREATE_ANOTHER_MANAGED_PACKAGE StatusCode = "CANNOT_CREATE_ANOTHER_MANAGED_PACKAGE"

	StatusCodeCANNOT_DEACTIVATE_DIVISION StatusCode = "CANNOT_DEACTIVATE_DIVISION"

	StatusCodeCANNOT_DELETE_GLOBAL_ACTION_LIST StatusCode = "CANNOT_DELETE_GLOBAL_ACTION_LIST"

	StatusCodeCANNOT_DELETE_LAST_DATED_CONVERSION_RATE StatusCode = "CANNOT_DELETE_LAST_DATED_CONVERSION_RATE"

	StatusCodeCANNOT_DELETE_MANAGED_OBJECT StatusCode = "CANNOT_DELETE_MANAGED_OBJECT"

	StatusCodeCANNOT_DISABLE_LAST_ADMIN StatusCode = "CANNOT_DISABLE_LAST_ADMIN"

	StatusCodeCANNOT_ENABLE_IP_RESTRICT_REQUESTS StatusCode = "CANNOT_ENABLE_IP_RESTRICT_REQUESTS"

	StatusCodeCANNOT_EXECUTE_FLOW_TRIGGER StatusCode = "CANNOT_EXECUTE_FLOW_TRIGGER"

	StatusCodeCANNOT_FREEZE_SELF StatusCode = "CANNOT_FREEZE_SELF"

	StatusCodeCANNOT_INSERT_UPDATE_ACTIVATE_ENTITY StatusCode = "CANNOT_INSERT_UPDATE_ACTIVATE_ENTITY"

	StatusCodeCANNOT_MODIFY_MANAGED_OBJECT StatusCode = "CANNOT_MODIFY_MANAGED_OBJECT"

	StatusCodeCANNOT_PASSWORD_LOCKOUT StatusCode = "CANNOT_PASSWORD_LOCKOUT"

	StatusCodeCANNOT_POST_TO_ARCHIVED_GROUP StatusCode = "CANNOT_POST_TO_ARCHIVED_GROUP"

	StatusCodeCANNOT_RENAME_APEX_REFERENCED_FIELD StatusCode = "CANNOT_RENAME_APEX_REFERENCED_FIELD"

	StatusCodeCANNOT_RENAME_APEX_REFERENCED_OBJECT StatusCode = "CANNOT_RENAME_APEX_REFERENCED_OBJECT"

	StatusCodeCANNOT_RENAME_REFERENCED_FIELD StatusCode = "CANNOT_RENAME_REFERENCED_FIELD"

	StatusCodeCANNOT_RENAME_REFERENCED_OBJECT StatusCode = "CANNOT_RENAME_REFERENCED_OBJECT"

	StatusCodeCANNOT_REPARENT_RECORD StatusCode = "CANNOT_REPARENT_RECORD"

	StatusCodeCANNOT_UPDATE_CONVERTED_LEAD StatusCode = "CANNOT_UPDATE_CONVERTED_LEAD"

	StatusCodeCANNOT_UPDATE_IS_THIRD_PARTY StatusCode = "CANNOT_UPDATE_IS_THIRD_PARTY"

	StatusCodeCANNOT_UPDATE_PAYMENT_METHOD_SET StatusCode = "CANNOT_UPDATE_PAYMENT_METHOD_SET"

	StatusCodeCANT_DISABLE_CORP_CURRENCY StatusCode = "CANT_DISABLE_CORP_CURRENCY"

	StatusCodeCANT_UNSET_CORP_CURRENCY StatusCode = "CANT_UNSET_CORP_CURRENCY"

	StatusCodeCART_DELIVERY_GROUP_NOT_FOUND StatusCode = "CART_DELIVERY_GROUP_NOT_FOUND"

	StatusCodeCART_ITEM_NOT_FOUND StatusCode = "CART_ITEM_NOT_FOUND"

	StatusCodeCART_NOT_FOUND StatusCode = "CART_NOT_FOUND"

	StatusCodeCHECKOUT_CONFLICT StatusCode = "CHECKOUT_CONFLICT"

	StatusCodeCHECKOUT_EXPIRED StatusCode = "CHECKOUT_EXPIRED"

	StatusCodeCHECKOUT_INVALIDATED StatusCode = "CHECKOUT_INVALIDATED"

	StatusCodeCHECKOUT_LOCKED StatusCode = "CHECKOUT_LOCKED"

	StatusCodeCHECKOUT_NOT_FOUND StatusCode = "CHECKOUT_NOT_FOUND"

	StatusCodeCHECKOUT_UNAUTHORIZED StatusCode = "CHECKOUT_UNAUTHORIZED"

	StatusCodeCHILD_SHARE_FAILS_PARENT StatusCode = "CHILD_SHARE_FAILS_PARENT"

	StatusCodeCIRCULAR_DEPENDENCY StatusCode = "CIRCULAR_DEPENDENCY"

	StatusCodeCLEAN_SERVICE_ERROR StatusCode = "CLEAN_SERVICE_ERROR"

	StatusCodeCLONE_FIELD_INTEGRITY_EXCEPTION StatusCode = "CLONE_FIELD_INTEGRITY_EXCEPTION"

	StatusCodeCLONE_NOT_SUPPORTED StatusCode = "CLONE_NOT_SUPPORTED"

	StatusCodeCMS_FOLDER_ITEM_MOVE_FAILED StatusCode = "CMS_FOLDER_ITEM_MOVE_FAILED"

	StatusCodeCOLLISION_DETECTED StatusCode = "COLLISION_DETECTED"

	StatusCodeCOMMERCE_SEARCH_INDEXING_SYSTEM_ERROR StatusCode = "COMMERCE_SEARCH_INDEXING_SYSTEM_ERROR"

	StatusCodeCOMMERCE_SEARCH_MQ_ERROR StatusCode = "COMMERCE_SEARCH_MQ_ERROR"

	StatusCodeCOMMERCE_SEARCH_PROVIDER_LIMIT_EXCEEDED StatusCode = "COMMERCE_SEARCH_PROVIDER_LIMIT_EXCEEDED"

	StatusCodeCOMMERCE_SEARCH_RESOURCE_NOT_FOUND StatusCode = "COMMERCE_SEARCH_RESOURCE_NOT_FOUND"

	StatusCodeCOMMERCIAL_CONTROL_ERROR StatusCode = "COMMERCIAL_CONTROL_ERROR"

	StatusCodeCOMMUNITY_NOT_ACCESSIBLE StatusCode = "COMMUNITY_NOT_ACCESSIBLE"

	StatusCodeCONFLICT StatusCode = "CONFLICT"

	StatusCodeCONFLICTING_ENVIRONMENT_HUB_MEMBER StatusCode = "CONFLICTING_ENVIRONMENT_HUB_MEMBER"

	StatusCodeCONFLICTING_SSO_USER_MAPPING StatusCode = "CONFLICTING_SSO_USER_MAPPING"

	StatusCodeCONTENT_NOT_FOUND StatusCode = "CONTENT_NOT_FOUND"

	StatusCodeCONTENT_SEARCH_NOT_ENABLED StatusCode = "CONTENT_SEARCH_NOT_ENABLED"

	StatusCodeCONTENT_TYPE_DISABLED_FOR_API StatusCode = "CONTENT_TYPE_DISABLED_FOR_API"

	StatusCodeCONTENT_TYPE_NOT_FOUND StatusCode = "CONTENT_TYPE_NOT_FOUND"

	StatusCodeCOUPON_REDEMPTION_LIMIT_EXCEEDED StatusCode = "COUPON_REDEMPTION_LIMIT_EXCEEDED"

	StatusCodeCUSTOM_APEX_ERROR StatusCode = "CUSTOM_APEX_ERROR"

	StatusCodeCUSTOM_CLOB_FIELD_LIMIT_EXCEEDED StatusCode = "CUSTOM_CLOB_FIELD_LIMIT_EXCEEDED"

	StatusCodeCUSTOM_ENTITY_OR_FIELD_LIMIT StatusCode = "CUSTOM_ENTITY_OR_FIELD_LIMIT"

	StatusCodeCUSTOM_FIELD_INDEX_LIMIT_EXCEEDED StatusCode = "CUSTOM_FIELD_INDEX_LIMIT_EXCEEDED"

	StatusCodeCUSTOM_INDEX_EXISTS StatusCode = "CUSTOM_INDEX_EXISTS"

	StatusCodeCUSTOM_LINK_LIMIT_EXCEEDED StatusCode = "CUSTOM_LINK_LIMIT_EXCEEDED"

	StatusCodeCUSTOM_METADATA_LIMIT_EXCEEDED StatusCode = "CUSTOM_METADATA_LIMIT_EXCEEDED"

	StatusCodeCUSTOM_METADATA_REL_FIELD_MANAGEABILITY StatusCode = "CUSTOM_METADATA_REL_FIELD_MANAGEABILITY"

	StatusCodeCUSTOM_SETTINGS_LIMIT_EXCEEDED StatusCode = "CUSTOM_SETTINGS_LIMIT_EXCEEDED"

	StatusCodeCUSTOM_TAB_LIMIT_EXCEEDED StatusCode = "CUSTOM_TAB_LIMIT_EXCEEDED"

	StatusCodeDATAASSESSMENT_CONFIG_ASSESSMENT_IN_PROGRESS_ERROR StatusCode = "DATAASSESSMENT_CONFIG_ASSESSMENT_IN_PROGRESS_ERROR"

	StatusCodeDATAASSESSMENT_CONFIG_SERVICE_ERROR StatusCode = "DATAASSESSMENT_CONFIG_SERVICE_ERROR"

	StatusCodeDATACLOUDADDRESS_NO_RECORDS_FOUND StatusCode = "DATACLOUDADDRESS_NO_RECORDS_FOUND"

	StatusCodeDATACLOUDADDRESS_PROCESSING_ERROR StatusCode = "DATACLOUDADDRESS_PROCESSING_ERROR"

	StatusCodeDATACLOUDADDRESS_SERVER_ERROR StatusCode = "DATACLOUDADDRESS_SERVER_ERROR"

	StatusCodeDATA_MAPPING_NOT_FOUND StatusCode = "DATA_MAPPING_NOT_FOUND"

	StatusCodeDATA_MAPPING_SCHEMA_NOT_FOUND StatusCode = "DATA_MAPPING_SCHEMA_NOT_FOUND"

	StatusCodeDATA_TRANSFER_RECORD_LIMIT_EXCEEDED StatusCode = "DATA_TRANSFER_RECORD_LIMIT_EXCEEDED"

	StatusCodeDATA_TYPE_NOT_SUPPORTED StatusCode = "DATA_TYPE_NOT_SUPPORTED"

	StatusCodeDATE_OUT_OF_RANGE StatusCode = "DATE_OUT_OF_RANGE"

	StatusCodeDELETE_FAILED StatusCode = "DELETE_FAILED"

	StatusCodeDELETE_NOT_ALLOWED StatusCode = "DELETE_NOT_ALLOWED"

	StatusCodeDELETE_OPERATION_TOO_LARGE StatusCode = "DELETE_OPERATION_TOO_LARGE"

	StatusCodeDELETE_REQUIRED_ON_CASCADE StatusCode = "DELETE_REQUIRED_ON_CASCADE"

	StatusCodeDEPENDENCY_EXISTS StatusCode = "DEPENDENCY_EXISTS"

	StatusCodeDUPLICATES_DETECTED StatusCode = "DUPLICATES_DETECTED"

	StatusCodeDUPLICATE_CASE_SOLUTION StatusCode = "DUPLICATE_CASE_SOLUTION"

	StatusCodeDUPLICATE_COMM_NICKNAME StatusCode = "DUPLICATE_COMM_NICKNAME"

	StatusCodeDUPLICATE_CUSTOM_ENTITY_DEFINITION StatusCode = "DUPLICATE_CUSTOM_ENTITY_DEFINITION"

	StatusCodeDUPLICATE_CUSTOM_TAB_MOTIF StatusCode = "DUPLICATE_CUSTOM_TAB_MOTIF"

	StatusCodeDUPLICATE_DEVELOPER_NAME StatusCode = "DUPLICATE_DEVELOPER_NAME"

	StatusCodeDUPLICATE_EXTERNAL_ID StatusCode = "DUPLICATE_EXTERNAL_ID"

	StatusCodeDUPLICATE_MASTER_LABEL StatusCode = "DUPLICATE_MASTER_LABEL"

	StatusCodeDUPLICATE_SENDER_DISPLAY_NAME StatusCode = "DUPLICATE_SENDER_DISPLAY_NAME"

	StatusCodeDUPLICATE_USERNAME StatusCode = "DUPLICATE_USERNAME"

	StatusCodeDUPLICATE_VALUE StatusCode = "DUPLICATE_VALUE"

	StatusCodeEMAIL_ADDRESS_BOUNCED StatusCode = "EMAIL_ADDRESS_BOUNCED"

	StatusCodeEMAIL_EXTERNAL_TRANSPORT_CONNECTION_ERROR StatusCode = "EMAIL_EXTERNAL_TRANSPORT_CONNECTION_ERROR"

	StatusCodeEMAIL_EXTERNAL_TRANSPORT_PERMISSION_ERROR StatusCode = "EMAIL_EXTERNAL_TRANSPORT_PERMISSION_ERROR"

	StatusCodeEMAIL_EXTERNAL_TRANSPORT_TOKEN_ERROR StatusCode = "EMAIL_EXTERNAL_TRANSPORT_TOKEN_ERROR"

	StatusCodeEMAIL_EXTERNAL_TRANSPORT_TOO_LARGE_ERROR StatusCode = "EMAIL_EXTERNAL_TRANSPORT_TOO_LARGE_ERROR"

	StatusCodeEMAIL_EXTERNAL_TRANSPORT_TOO_MANY_REQUESTS_ERROR StatusCode = "EMAIL_EXTERNAL_TRANSPORT_TOO_MANY_REQUESTS_ERROR"

	StatusCodeEMAIL_EXTERNAL_TRANSPORT_UNKNOWN_ERROR StatusCode = "EMAIL_EXTERNAL_TRANSPORT_UNKNOWN_ERROR"

	StatusCodeEMAIL_NOT_PROCESSED_DUE_TO_PRIOR_ERROR StatusCode = "EMAIL_NOT_PROCESSED_DUE_TO_PRIOR_ERROR"

	StatusCodeEMAIL_OPTED_OUT StatusCode = "EMAIL_OPTED_OUT"

	StatusCodeEMAIL_TEMPLATE_FORMULA_ERROR StatusCode = "EMAIL_TEMPLATE_FORMULA_ERROR"

	StatusCodeEMAIL_TEMPLATE_MERGEFIELD_ACCESS_ERROR StatusCode = "EMAIL_TEMPLATE_MERGEFIELD_ACCESS_ERROR"

	StatusCodeEMAIL_TEMPLATE_MERGEFIELD_ERROR StatusCode = "EMAIL_TEMPLATE_MERGEFIELD_ERROR"

	StatusCodeEMAIL_TEMPLATE_MERGEFIELD_VALUE_ERROR StatusCode = "EMAIL_TEMPLATE_MERGEFIELD_VALUE_ERROR"

	StatusCodeEMAIL_TEMPLATE_PROCESSING_ERROR StatusCode = "EMAIL_TEMPLATE_PROCESSING_ERROR"

	StatusCodeEMPTY_CATALOG StatusCode = "EMPTY_CATALOG"

	StatusCodeEMPTY_INGESTION_JOB StatusCode = "EMPTY_INGESTION_JOB"

	StatusCodeEMPTY_SCONTROL_FILE_NAME StatusCode = "EMPTY_SCONTROL_FILE_NAME"

	StatusCodeENHANCED_EMAIL_TEMPLATE_COMPILATION_ERROR StatusCode = "ENHANCED_EMAIL_TEMPLATE_COMPILATION_ERROR"

	StatusCodeENTITY_FAILED_IFLASTMODIFIED_ON_UPDATE StatusCode = "ENTITY_FAILED_IFLASTMODIFIED_ON_UPDATE"

	StatusCodeENTITY_IS_ARCHIVED StatusCode = "ENTITY_IS_ARCHIVED"

	StatusCodeENTITY_IS_DELETED StatusCode = "ENTITY_IS_DELETED"

	StatusCodeENTITY_IS_LOCKED StatusCode = "ENTITY_IS_LOCKED"

	StatusCodeENTITY_SAVE_ERROR StatusCode = "ENTITY_SAVE_ERROR"

	StatusCodeENTITY_SAVE_VALIDATION_ERROR StatusCode = "ENTITY_SAVE_VALIDATION_ERROR"

	StatusCodeENVIRONMENT_HUB_MEMBERSHIP_CONFLICT StatusCode = "ENVIRONMENT_HUB_MEMBERSHIP_CONFLICT"

	StatusCodeENVIRONMENT_HUB_MEMBERSHIP_ERROR_JOINING_HUB StatusCode = "ENVIRONMENT_HUB_MEMBERSHIP_ERROR_JOINING_HUB"

	StatusCodeENVIRONMENT_HUB_MEMBERSHIP_USER_ALREADY_IN_HUB StatusCode = "ENVIRONMENT_HUB_MEMBERSHIP_USER_ALREADY_IN_HUB"

	StatusCodeENVIRONMENT_HUB_MEMBERSHIP_USER_NOT_ORG_ADMIN StatusCode = "ENVIRONMENT_HUB_MEMBERSHIP_USER_NOT_ORG_ADMIN"

	StatusCodeERROR_CALCULATING_EXPIRY_DATE StatusCode = "ERROR_CALCULATING_EXPIRY_DATE"

	StatusCodeERROR_IN_MAILER StatusCode = "ERROR_IN_MAILER"

	StatusCodeEXCEEDED_MAX_SEMIJOIN_SUBSELECTS_WRITE StatusCode = "EXCEEDED_MAX_SEMIJOIN_SUBSELECTS_WRITE"

	StatusCodeEXCHANGE_WEB_SERVICES_URL_INVALID StatusCode = "EXCHANGE_WEB_SERVICES_URL_INVALID"

	StatusCodeEXTERNAL_RESOURCE_FORBIDDEN StatusCode = "EXTERNAL_RESOURCE_FORBIDDEN"

	StatusCodeFAILED_ACTIVATION StatusCode = "FAILED_ACTIVATION"

	StatusCodeFAILED_DUE_TO_OTHER_INPUTS StatusCode = "FAILED_DUE_TO_OTHER_INPUTS"

	StatusCodeFAILED_TO_RESOLVE_MAPPING StatusCode = "FAILED_TO_RESOLVE_MAPPING"

	StatusCodeFAILED_TO_RESOLVE_SCHEMA_INFORMATION StatusCode = "FAILED_TO_RESOLVE_SCHEMA_INFORMATION"

	StatusCodeFIELD_CUSTOM_VALIDATION_EXCEPTION StatusCode = "FIELD_CUSTOM_VALIDATION_EXCEPTION"

	StatusCodeFIELD_FILTER_VALIDATION_EXCEPTION StatusCode = "FIELD_FILTER_VALIDATION_EXCEPTION"

	StatusCodeFIELD_INTEGRITY_EXCEPTION StatusCode = "FIELD_INTEGRITY_EXCEPTION"

	StatusCodeFIELD_KEYWORD_LIST_MATCH_LIMIT StatusCode = "FIELD_KEYWORD_LIST_MATCH_LIMIT"

	StatusCodeFIELD_MAPPING_ERROR StatusCode = "FIELD_MAPPING_ERROR"

	StatusCodeFIELD_MODERATION_RULE_BLOCK StatusCode = "FIELD_MODERATION_RULE_BLOCK"

	StatusCodeFIELD_NOT_UPDATABLE StatusCode = "FIELD_NOT_UPDATABLE"

	StatusCodeFILE_EXTENSION_NOT_ALLOWED StatusCode = "FILE_EXTENSION_NOT_ALLOWED"

	StatusCodeFILE_SIZE_LIMIT_EXCEEDED StatusCode = "FILE_SIZE_LIMIT_EXCEEDED"

	StatusCodeFILTERED_LOOKUP_LIMIT_EXCEEDED StatusCode = "FILTERED_LOOKUP_LIMIT_EXCEEDED"

	StatusCodeFIND_DUPLICATES_ERROR StatusCode = "FIND_DUPLICATES_ERROR"

	StatusCodeFLOW_EXCEPTION StatusCode = "FLOW_EXCEPTION"

	StatusCodeFUNCTIONALITY_NOT_ENABLED StatusCode = "FUNCTIONALITY_NOT_ENABLED"

	StatusCodeGET_EINSTEIN_TENANT_ERROR StatusCode = "GET_EINSTEIN_TENANT_ERROR"

	StatusCodeGUEST_INSUFFICIENT_ACCESS StatusCode = "GUEST_INSUFFICIENT_ACCESS"

	StatusCodeHAS_PUBLIC_REFERENCES StatusCode = "HAS_PUBLIC_REFERENCES"

	StatusCodeHTML_FILE_UPLOAD_NOT_ALLOWED StatusCode = "HTML_FILE_UPLOAD_NOT_ALLOWED"

	StatusCodeIAS_AM_AUTH_BAD_REQUEST StatusCode = "IAS_AM_AUTH_BAD_REQUEST"

	StatusCodeIAS_AM_AUTH_UNAUTHORIZED StatusCode = "IAS_AM_AUTH_UNAUTHORIZED"

	StatusCodeIAS_INVALID_AUTH StatusCode = "IAS_INVALID_AUTH"

	StatusCodeIAS_INVALID_REQUEST_PARAMETER StatusCode = "IAS_INVALID_REQUEST_PARAMETER"

	StatusCodeIAS_RECORD_DOES_NOT_EXIST StatusCode = "IAS_RECORD_DOES_NOT_EXIST"

	StatusCodeIAS_TENANT_NOT_PROVISIONED StatusCode = "IAS_TENANT_NOT_PROVISIONED"

	StatusCodeIAS_UNCOMMITTED_WORK StatusCode = "IAS_UNCOMMITTED_WORK"

	StatusCodeIMAGE_TOO_LARGE StatusCode = "IMAGE_TOO_LARGE"

	StatusCodeINACTIVE_OWNER_OR_USER StatusCode = "INACTIVE_OWNER_OR_USER"

	StatusCodeINACTIVE_RULE_ERROR StatusCode = "INACTIVE_RULE_ERROR"

	StatusCodeINDEX_ITEM_LIMIT_EXCEEDED StatusCode = "INDEX_ITEM_LIMIT_EXCEEDED"

	StatusCodeINDEX_PAYLOAD_NOT_FOUND StatusCode = "INDEX_PAYLOAD_NOT_FOUND"

	StatusCodeINGESTION_JOB_RECORDS_LIMIT_EXCEEDED StatusCode = "INGESTION_JOB_RECORDS_LIMIT_EXCEEDED"

	StatusCodeINGESTION_TOTAL_FILE_SIZE_LIMIT_EXCEEDED StatusCode = "INGESTION_TOTAL_FILE_SIZE_LIMIT_EXCEEDED"

	StatusCodeINPUTPARAM_INCOMPATIBLE_DATATYPE StatusCode = "INPUTPARAM_INCOMPATIBLE_DATATYPE"

	StatusCodeINSERT_UPDATE_DELETE_NOT_ALLOWED_DURING_MAINTENANCE StatusCode = "INSERT_UPDATE_DELETE_NOT_ALLOWED_DURING_MAINTENANCE"

	StatusCodeINSUFFICIENT_ACCESS StatusCode = "INSUFFICIENT_ACCESS"

	StatusCodeINSUFFICIENT_ACCESS_ON_CROSS_REFERENCE_ENTITY StatusCode = "INSUFFICIENT_ACCESS_ON_CROSS_REFERENCE_ENTITY"

	StatusCodeINSUFFICIENT_ACCESS_OR_READONLY StatusCode = "INSUFFICIENT_ACCESS_OR_READONLY"

	StatusCodeINSUFFICIENT_ACCESS_TO_INSIGHTSEXTERNALDATA StatusCode = "INSUFFICIENT_ACCESS_TO_INSIGHTSEXTERNALDATA"

	StatusCodeINSUFFICIENT_BALANCE StatusCode = "INSUFFICIENT_BALANCE"

	StatusCodeINSUFFICIENT_BENEFIT_REMAINING StatusCode = "INSUFFICIENT_BENEFIT_REMAINING"

	StatusCodeINSUFFICIENT_CREDITS StatusCode = "INSUFFICIENT_CREDITS"

	StatusCodeINTEGRATION_CANCELLED StatusCode = "INTEGRATION_CANCELLED"

	StatusCodeINTERNAL_ERROR StatusCode = "INTERNAL_ERROR"

	StatusCodeINVALID_ACCESS_LEVEL StatusCode = "INVALID_ACCESS_LEVEL"

	StatusCodeINVALID_ACCESS_TOKEN StatusCode = "INVALID_ACCESS_TOKEN"

	StatusCodeINVALID_ACCOUNT StatusCode = "INVALID_ACCOUNT"

	StatusCodeINVALID_ACTION_VERSION StatusCode = "INVALID_ACTION_VERSION"

	StatusCodeINVALID_API_INPUT StatusCode = "INVALID_API_INPUT"

	StatusCodeINVALID_ARGUMENT_TYPE StatusCode = "INVALID_ARGUMENT_TYPE"

	StatusCodeINVALID_ASSIGNEE_TYPE StatusCode = "INVALID_ASSIGNEE_TYPE"

	StatusCodeINVALID_ASSIGNMENT_RULE StatusCode = "INVALID_ASSIGNMENT_RULE"

	StatusCodeINVALID_AUTH_HEADER StatusCode = "INVALID_AUTH_HEADER"

	StatusCodeINVALID_BATCH_OPERATION StatusCode = "INVALID_BATCH_OPERATION"

	StatusCodeINVALID_BUSINESS_HOURS_NAME StatusCode = "INVALID_BUSINESS_HOURS_NAME"

	StatusCodeINVALID_CATEGORY_NETWORK StatusCode = "INVALID_CATEGORY_NETWORK"

	StatusCodeINVALID_CHECKOUT_INPUT StatusCode = "INVALID_CHECKOUT_INPUT"

	StatusCodeINVALID_CONTACT StatusCode = "INVALID_CONTACT"

	StatusCodeINVALID_CONTENT_TYPE StatusCode = "INVALID_CONTENT_TYPE"

	StatusCodeINVALID_CREDIT_CARD_INFO StatusCode = "INVALID_CREDIT_CARD_INFO"

	StatusCodeINVALID_CROSS_REFERENCE_KEY StatusCode = "INVALID_CROSS_REFERENCE_KEY"

	StatusCodeINVALID_CROSS_REFERENCE_TYPE_FOR_FIELD StatusCode = "INVALID_CROSS_REFERENCE_TYPE_FOR_FIELD"

	StatusCodeINVALID_CURRENCY_CONV_RATE StatusCode = "INVALID_CURRENCY_CONV_RATE"

	StatusCodeINVALID_CURRENCY_CORP_RATE StatusCode = "INVALID_CURRENCY_CORP_RATE"

	StatusCodeINVALID_CURRENCY_ISO StatusCode = "INVALID_CURRENCY_ISO"

	StatusCodeINVALID_DATASET_REFERENCE_INPUT StatusCode = "INVALID_DATASET_REFERENCE_INPUT"

	StatusCodeINVALID_DATA_CATEGORY_GROUP_REFERENCE StatusCode = "INVALID_DATA_CATEGORY_GROUP_REFERENCE"

	StatusCodeINVALID_DATA_URI StatusCode = "INVALID_DATA_URI"

	StatusCodeINVALID_EBV_OPERATION StatusCode = "INVALID_EBV_OPERATION"

	StatusCodeINVALID_EMAIL_ADDRESS StatusCode = "INVALID_EMAIL_ADDRESS"

	StatusCodeINVALID_EMPTY_KEY_OWNER StatusCode = "INVALID_EMPTY_KEY_OWNER"

	StatusCodeINVALID_ENTITY_FOR_MATCH_ENGINE_ERROR StatusCode = "INVALID_ENTITY_FOR_MATCH_ENGINE_ERROR"

	StatusCodeINVALID_ENTITY_FOR_MATCH_OPERATION_ERROR StatusCode = "INVALID_ENTITY_FOR_MATCH_OPERATION_ERROR"

	StatusCodeINVALID_ENTITY_FOR_UPSERT StatusCode = "INVALID_ENTITY_FOR_UPSERT"

	StatusCodeINVALID_ENVIRONMENT_HUB_MEMBER StatusCode = "INVALID_ENVIRONMENT_HUB_MEMBER"

	StatusCodeINVALID_EVENT_DELIVERY StatusCode = "INVALID_EVENT_DELIVERY"

	StatusCodeINVALID_EVENT_INPUT StatusCode = "INVALID_EVENT_INPUT"

	StatusCodeINVALID_EVENT_SUBSCRIPTION StatusCode = "INVALID_EVENT_SUBSCRIPTION"

	StatusCodeINVALID_EXTENSION_ID StatusCode = "INVALID_EXTENSION_ID"

	StatusCodeINVALID_EXTERNAL_ID_FIELD_NAME StatusCode = "INVALID_EXTERNAL_ID_FIELD_NAME"

	StatusCodeINVALID_FIELD StatusCode = "INVALID_FIELD"

	StatusCodeINVALID_FIELD_FOR_INSERT_UPDATE StatusCode = "INVALID_FIELD_FOR_INSERT_UPDATE"

	StatusCodeINVALID_FIELD_WHEN_USING_TEMPLATE StatusCode = "INVALID_FIELD_WHEN_USING_TEMPLATE"

	StatusCodeINVALID_FILTER_ACTION StatusCode = "INVALID_FILTER_ACTION"

	StatusCodeINVALID_GOOGLE_DOCS_URL StatusCode = "INVALID_GOOGLE_DOCS_URL"

	StatusCodeINVALID_ID_FIELD StatusCode = "INVALID_ID_FIELD"

	StatusCodeINVALID_INET_ADDRESS StatusCode = "INVALID_INET_ADDRESS"

	StatusCodeINVALID_INPUT StatusCode = "INVALID_INPUT"

	StatusCodeINVALID_INPUT_FORMAT StatusCode = "INVALID_INPUT_FORMAT"

	StatusCodeINVALID_KEY_FIELD_INPUT StatusCode = "INVALID_KEY_FIELD_INPUT"

	StatusCodeINVALID_LINEITEM_CLONE_STATE StatusCode = "INVALID_LINEITEM_CLONE_STATE"

	StatusCodeINVALID_MARKUP StatusCode = "INVALID_MARKUP"

	StatusCodeINVALID_MASTER_OR_TRANSLATED_SOLUTION StatusCode = "INVALID_MASTER_OR_TRANSLATED_SOLUTION"

	StatusCodeINVALID_MERCHANT_ACCOUNT_MODE StatusCode = "INVALID_MERCHANT_ACCOUNT_MODE"

	StatusCodeINVALID_MERCHANT_ACCOUNT_MODE_OR_STATUS StatusCode = "INVALID_MERCHANT_ACCOUNT_MODE_OR_STATUS"

	StatusCodeINVALID_MERGE_RECORD StatusCode = "INVALID_MERGE_RECORD"

	StatusCodeINVALID_MESSAGE_ID_REFERENCE StatusCode = "INVALID_MESSAGE_ID_REFERENCE"

	StatusCodeINVALID_NAMESPACE_PREFIX StatusCode = "INVALID_NAMESPACE_PREFIX"

	StatusCodeINVALID_OAUTH_URL StatusCode = "INVALID_OAUTH_URL"

	StatusCodeINVALID_OPERATION StatusCode = "INVALID_OPERATION"

	StatusCodeINVALID_OPERATOR StatusCode = "INVALID_OPERATOR"

	StatusCodeINVALID_OR_NULL_FOR_RESTRICTED_PICKLIST StatusCode = "INVALID_OR_NULL_FOR_RESTRICTED_PICKLIST"

	StatusCodeINVALID_OWNER StatusCode = "INVALID_OWNER"

	StatusCodeINVALID_PACKAGE_LICENSE StatusCode = "INVALID_PACKAGE_LICENSE"

	StatusCodeINVALID_PACKAGE_VERSION StatusCode = "INVALID_PACKAGE_VERSION"

	StatusCodeINVALID_PARTNER_NETWORK_STATUS StatusCode = "INVALID_PARTNER_NETWORK_STATUS"

	StatusCodeINVALID_PAYLOAD_VERSION StatusCode = "INVALID_PAYLOAD_VERSION"

	StatusCodeINVALID_PERSON_ACCOUNT_OPERATION StatusCode = "INVALID_PERSON_ACCOUNT_OPERATION"

	StatusCodeINVALID_PROFILE StatusCode = "INVALID_PROFILE"

	StatusCodeINVALID_PROMOTION StatusCode = "INVALID_PROMOTION"

	StatusCodeINVALID_PROVIDER_TYPE StatusCode = "INVALID_PROVIDER_TYPE"

	StatusCodeINVALID_QUERY_KEY StatusCode = "INVALID_QUERY_KEY"

	StatusCodeINVALID_QUERY_LOCATOR StatusCode = "INVALID_QUERY_LOCATOR"

	StatusCodeINVALID_QUERY_VALUE StatusCode = "INVALID_QUERY_VALUE"

	StatusCodeINVALID_READ_ONLY_USER_DML StatusCode = "INVALID_READ_ONLY_USER_DML"

	StatusCodeINVALID_RECEIVEDDOCUMENTID_ATTACHMENT StatusCode = "INVALID_RECEIVEDDOCUMENTID_ATTACHMENT"

	StatusCodeINVALID_RECORD_ATTRIBUTE_VALUE StatusCode = "INVALID_RECORD_ATTRIBUTE_VALUE"

	StatusCodeINVALID_RECORD_TYPE StatusCode = "INVALID_RECORD_TYPE"

	StatusCodeINVALID_REFRESH_TOKEN StatusCode = "INVALID_REFRESH_TOKEN"

	StatusCodeINVALID_REORDER_PORTAL_RECORD_ASSOCIATION StatusCode = "INVALID_REORDER_PORTAL_RECORD_ASSOCIATION"

	StatusCodeINVALID_REQUEST_STATE StatusCode = "INVALID_REQUEST_STATE"

	StatusCodeINVALID_RUNTIME_VALUE StatusCode = "INVALID_RUNTIME_VALUE"

	StatusCodeINVALID_SAVE_AS_ACTIVITY_FLAG StatusCode = "INVALID_SAVE_AS_ACTIVITY_FLAG"

	StatusCodeINVALID_SCS_INBOUND_USER StatusCode = "INVALID_SCS_INBOUND_USER"

	StatusCodeINVALID_SEARCH_PROVIDER_REQUEST StatusCode = "INVALID_SEARCH_PROVIDER_REQUEST"

	StatusCodeINVALID_SESSION_ID StatusCode = "INVALID_SESSION_ID"

	StatusCodeINVALID_SETUP_OWNER StatusCode = "INVALID_SETUP_OWNER"

	StatusCodeINVALID_SIGNUP_COUNTRY StatusCode = "INVALID_SIGNUP_COUNTRY"

	StatusCodeINVALID_SIGNUP_OPTION StatusCode = "INVALID_SIGNUP_OPTION"

	StatusCodeINVALID_SITE_DELETE_EXCEPTION StatusCode = "INVALID_SITE_DELETE_EXCEPTION"

	StatusCodeINVALID_SITE_FILE_IMPORTED_EXCEPTION StatusCode = "INVALID_SITE_FILE_IMPORTED_EXCEPTION"

	StatusCodeINVALID_SITE_FILE_TYPE_EXCEPTION StatusCode = "INVALID_SITE_FILE_TYPE_EXCEPTION"

	StatusCodeINVALID_SOURCE_OBJECT_ID StatusCode = "INVALID_SOURCE_OBJECT_ID"

	StatusCodeINVALID_STATUS StatusCode = "INVALID_STATUS"

	StatusCodeINVALID_SUBDOMAIN StatusCode = "INVALID_SUBDOMAIN"

	StatusCodeINVALID_TARGET_OBJECT_NAME StatusCode = "INVALID_TARGET_OBJECT_NAME"

	StatusCodeINVALID_TEXT_REPRESENTATION StatusCode = "INVALID_TEXT_REPRESENTATION"

	StatusCodeINVALID_TYPE StatusCode = "INVALID_TYPE"

	StatusCodeINVALID_TYPE_FOR_OPERATION StatusCode = "INVALID_TYPE_FOR_OPERATION"

	StatusCodeINVALID_TYPE_ON_FIELD_IN_RECORD StatusCode = "INVALID_TYPE_ON_FIELD_IN_RECORD"

	StatusCodeINVALID_UNMERGE_RECORD StatusCode = "INVALID_UNMERGE_RECORD"

	StatusCodeINVALID_USERID StatusCode = "INVALID_USERID"

	StatusCodeINVALID_USER_OBJECT StatusCode = "INVALID_USER_OBJECT"

	StatusCodeIP_RANGE_LIMIT_EXCEEDED StatusCode = "IP_RANGE_LIMIT_EXCEEDED"

	StatusCodeITEM_NOT_FOUND StatusCode = "ITEM_NOT_FOUND"

	StatusCodeJIGSAW_IMPORT_LIMIT_EXCEEDED StatusCode = "JIGSAW_IMPORT_LIMIT_EXCEEDED"

	StatusCodeLICENSE_LIMIT_EXCEEDED StatusCode = "LICENSE_LIMIT_EXCEEDED"

	StatusCodeLIGHT_PORTAL_USER_EXCEPTION StatusCode = "LIGHT_PORTAL_USER_EXCEPTION"

	StatusCodeLIMIT_EXCEEDED StatusCode = "LIMIT_EXCEEDED"

	StatusCodeLIST_PRICE_NOT_FOUND StatusCode = "LIST_PRICE_NOT_FOUND"

	StatusCodeMALFORMED_ID StatusCode = "MALFORMED_ID"

	StatusCodeMANAGER_NOT_DEFINED StatusCode = "MANAGER_NOT_DEFINED"

	StatusCodeMASSMAIL_RETRY_LIMIT_EXCEEDED StatusCode = "MASSMAIL_RETRY_LIMIT_EXCEEDED"

	StatusCodeMASS_MAIL_LIMIT_EXCEEDED StatusCode = "MASS_MAIL_LIMIT_EXCEEDED"

	StatusCodeMATCH_DEFINITION_ERROR StatusCode = "MATCH_DEFINITION_ERROR"

	StatusCodeMATCH_OPERATION_ERROR StatusCode = "MATCH_OPERATION_ERROR"

	StatusCodeMATCH_OPERATION_INVALID_ENGINE_ERROR StatusCode = "MATCH_OPERATION_INVALID_ENGINE_ERROR"

	StatusCodeMATCH_OPERATION_INVALID_RULE_ERROR StatusCode = "MATCH_OPERATION_INVALID_RULE_ERROR"

	StatusCodeMATCH_OPERATION_MISSING_ENGINE_ERROR StatusCode = "MATCH_OPERATION_MISSING_ENGINE_ERROR"

	StatusCodeMATCH_OPERATION_MISSING_OBJECT_TYPE_ERROR StatusCode = "MATCH_OPERATION_MISSING_OBJECT_TYPE_ERROR"

	StatusCodeMATCH_OPERATION_MISSING_OPTIONS_ERROR StatusCode = "MATCH_OPERATION_MISSING_OPTIONS_ERROR"

	StatusCodeMATCH_OPERATION_MISSING_RULE_ERROR StatusCode = "MATCH_OPERATION_MISSING_RULE_ERROR"

	StatusCodeMATCH_OPERATION_UNKNOWN_RULE_ERROR StatusCode = "MATCH_OPERATION_UNKNOWN_RULE_ERROR"

	StatusCodeMATCH_OPERATION_UNSUPPORTED_VERSION_ERROR StatusCode = "MATCH_OPERATION_UNSUPPORTED_VERSION_ERROR"

	StatusCodeMATCH_PRECONDITION_FAILED StatusCode = "MATCH_PRECONDITION_FAILED"

	StatusCodeMATCH_PRECONDITION_REQUIRED StatusCode = "MATCH_PRECONDITION_REQUIRED"

	StatusCodeMATCH_RUNTIME_ERROR StatusCode = "MATCH_RUNTIME_ERROR"

	StatusCodeMATCH_SERVICE_ERROR StatusCode = "MATCH_SERVICE_ERROR"

	StatusCodeMATCH_SERVICE_TIMED_OUT StatusCode = "MATCH_SERVICE_TIMED_OUT"

	StatusCodeMATCH_SERVICE_UNAVAILABLE_ERROR StatusCode = "MATCH_SERVICE_UNAVAILABLE_ERROR"

	StatusCodeMAXIMUM_CCEMAILS_EXCEEDED StatusCode = "MAXIMUM_CCEMAILS_EXCEEDED"

	StatusCodeMAXIMUM_DASHBOARD_COMPONENTS_EXCEEDED StatusCode = "MAXIMUM_DASHBOARD_COMPONENTS_EXCEEDED"

	StatusCodeMAXIMUM_HIERARCHY_CHILDREN_REACHED StatusCode = "MAXIMUM_HIERARCHY_CHILDREN_REACHED"

	StatusCodeMAXIMUM_HIERARCHY_LEVELS_REACHED StatusCode = "MAXIMUM_HIERARCHY_LEVELS_REACHED"

	StatusCodeMAXIMUM_HIERARCHY_TREE_SIZE_REACHED StatusCode = "MAXIMUM_HIERARCHY_TREE_SIZE_REACHED"

	StatusCodeMAXIMUM_SIZE_OF_ATTACHMENT StatusCode = "MAXIMUM_SIZE_OF_ATTACHMENT"

	StatusCodeMAXIMUM_SIZE_OF_DOCUMENT StatusCode = "MAXIMUM_SIZE_OF_DOCUMENT"

	StatusCodeMAX_ACTIONS_PER_RULE_EXCEEDED StatusCode = "MAX_ACTIONS_PER_RULE_EXCEEDED"

	StatusCodeMAX_ACTIVE_RULES_EXCEEDED StatusCode = "MAX_ACTIVE_RULES_EXCEEDED"

	StatusCodeMAX_APPROVAL_STEPS_EXCEEDED StatusCode = "MAX_APPROVAL_STEPS_EXCEEDED"

	StatusCodeMAX_DEPTH_IN_FLOW_EXECUTION StatusCode = "MAX_DEPTH_IN_FLOW_EXECUTION"

	StatusCodeMAX_FORMULAS_PER_RULE_EXCEEDED StatusCode = "MAX_FORMULAS_PER_RULE_EXCEEDED"

	StatusCodeMAX_LIMIT_EXCEEDED StatusCode = "MAX_LIMIT_EXCEEDED"

	StatusCodeMAX_RULES_EXCEEDED StatusCode = "MAX_RULES_EXCEEDED"

	StatusCodeMAX_RULE_ENTRIES_EXCEEDED StatusCode = "MAX_RULE_ENTRIES_EXCEEDED"

	StatusCodeMAX_TASK_DESCRIPTION_EXCEEEDED StatusCode = "MAX_TASK_DESCRIPTION_EXCEEEDED"

	StatusCodeMAX_TM_RULES_EXCEEDED StatusCode = "MAX_TM_RULES_EXCEEDED"

	StatusCodeMAX_TM_RULE_ITEMS_EXCEEDED StatusCode = "MAX_TM_RULE_ITEMS_EXCEEDED"

	StatusCodeMAX_TRIGGERS_EXCEEDED StatusCode = "MAX_TRIGGERS_EXCEEDED"

	StatusCodeMERGE_FAILED StatusCode = "MERGE_FAILED"

	StatusCodeMETADATA_FIELD_UPDATE_ERROR StatusCode = "METADATA_FIELD_UPDATE_ERROR"

	StatusCodeMETHOD_NOT_ALLOWED StatusCode = "METHOD_NOT_ALLOWED"

	StatusCodeMISMATCHING_TYPES StatusCode = "MISMATCHING_TYPES"

	StatusCodeMISSING_ARGUMENT StatusCode = "MISSING_ARGUMENT"

	StatusCodeMISSING_OMNI_PROCESS_ID StatusCode = "MISSING_OMNI_PROCESS_ID"

	StatusCodeMISSING_RECEIVEDDOCUMENTID_ATTACHMENT StatusCode = "MISSING_RECEIVEDDOCUMENTID_ATTACHMENT"

	StatusCodeMISSING_RECORD StatusCode = "MISSING_RECORD"

	StatusCodeMIXED_DML_OPERATION StatusCode = "MIXED_DML_OPERATION"

	StatusCodeMODEL_NOT_ACTIVE StatusCode = "MODEL_NOT_ACTIVE"

	StatusCodeMULTIPLE_CONTENT_FOUND StatusCode = "MULTIPLE_CONTENT_FOUND"

	StatusCodeMULTIPLE_VOUCHERS StatusCode = "MULTIPLE_VOUCHERS"

	StatusCodeNONUNIQUE_SHIPPING_ADDRESS StatusCode = "NONUNIQUE_SHIPPING_ADDRESS"

	StatusCodeNOT_FOUND StatusCode = "NOT_FOUND"

	StatusCodeNOT_RECOVERABLE_SEARCH_PROVIDER_ERROR StatusCode = "NOT_RECOVERABLE_SEARCH_PROVIDER_ERROR"

	StatusCodeNO_ACCESS_TOKEN StatusCode = "NO_ACCESS_TOKEN"

	StatusCodeNO_ACCESS_TOKEN_FROM_REFRESH StatusCode = "NO_ACCESS_TOKEN_FROM_REFRESH"

	StatusCodeNO_APPLICABLE_PROCESS StatusCode = "NO_APPLICABLE_PROCESS"

	StatusCodeNO_ATTACHMENT_PERMISSION StatusCode = "NO_ATTACHMENT_PERMISSION"

	StatusCodeNO_AUTH_PROVIDER StatusCode = "NO_AUTH_PROVIDER"

	StatusCodeNO_BUSINESS_HOURS_FOUND StatusCode = "NO_BUSINESS_HOURS_FOUND"

	StatusCodeNO_INACTIVE_DIVISION_MEMBERS StatusCode = "NO_INACTIVE_DIVISION_MEMBERS"

	StatusCodeNO_MASS_MAIL_PERMISSION StatusCode = "NO_MASS_MAIL_PERMISSION"

	StatusCodeNO_MESSAGE_TYPE_MESSAGES StatusCode = "NO_MESSAGE_TYPE_MESSAGES"

	StatusCodeNO_PARTNER_PERMISSION StatusCode = "NO_PARTNER_PERMISSION"

	StatusCodeNO_REFRESH_TOKEN StatusCode = "NO_REFRESH_TOKEN"

	StatusCodeNO_SEARCH_ATTRIBUTES StatusCode = "NO_SEARCH_ATTRIBUTES"

	StatusCodeNO_SINGLE_MAIL_PERMISSION StatusCode = "NO_SINGLE_MAIL_PERMISSION"

	StatusCodeNO_SORT_PRICEBOOK_ASSOCIATED_ERROR StatusCode = "NO_SORT_PRICEBOOK_ASSOCIATED_ERROR"

	StatusCodeNO_SUCH_USER_EXISTS StatusCode = "NO_SUCH_USER_EXISTS"

	StatusCodeNO_TOKEN_ENDPOINT StatusCode = "NO_TOKEN_ENDPOINT"

	StatusCodeNUMBER_OUTSIDE_VALID_RANGE StatusCode = "NUMBER_OUTSIDE_VALID_RANGE"

	StatusCodeNUM_HISTORY_FIELDS_BY_SOBJECT_EXCEEDED StatusCode = "NUM_HISTORY_FIELDS_BY_SOBJECT_EXCEEDED"

	StatusCodeOCR_INVALID_REQUEST StatusCode = "OCR_INVALID_REQUEST"

	StatusCodeOPERATION_ENQUEUED StatusCode = "OPERATION_ENQUEUED"

	StatusCodeOPERATION_WITH_CALLBACK_ENQUEUED StatusCode = "OPERATION_WITH_CALLBACK_ENQUEUED"

	StatusCodeOPTED_OUT_OF_MASS_MAIL StatusCode = "OPTED_OUT_OF_MASS_MAIL"

	StatusCodeOP_WITH_INVALID_USER_TYPE_EXCEPTION StatusCode = "OP_WITH_INVALID_USER_TYPE_EXCEPTION"

	StatusCodeORCHESTRATION_INVALID StatusCode = "ORCHESTRATION_INVALID"

	StatusCodeORDER_MANAGEMENT_ACTION_NOT_ALLOWED StatusCode = "ORDER_MANAGEMENT_ACTION_NOT_ALLOWED"

	StatusCodeORDER_MANAGEMENT_INVALID_RECORD StatusCode = "ORDER_MANAGEMENT_INVALID_RECORD"

	StatusCodeORDER_MANAGEMENT_RECORD_EXISTS StatusCode = "ORDER_MANAGEMENT_RECORD_EXISTS"

	StatusCodeORDER_MANAGEMENT_RECORD_NOT_FOUND StatusCode = "ORDER_MANAGEMENT_RECORD_NOT_FOUND"

	StatusCodeORG_SETTING_REQUIRED StatusCode = "ORG_SETTING_REQUIRED"

	StatusCodePACKAGE_DISABLED StatusCode = "PACKAGE_DISABLED"

	StatusCodePACKAGE_LICENSE_REQUIRED StatusCode = "PACKAGE_LICENSE_REQUIRED"

	StatusCodePACKAGING_API_INSTALL_FAILED StatusCode = "PACKAGING_API_INSTALL_FAILED"

	StatusCodePACKAGING_API_UNINSTALL_FAILED StatusCode = "PACKAGING_API_UNINSTALL_FAILED"

	StatusCodePALI_INVALID_ACTION_ID StatusCode = "PALI_INVALID_ACTION_ID"

	StatusCodePALI_INVALID_ACTION_NAME StatusCode = "PALI_INVALID_ACTION_NAME"

	StatusCodePALI_INVALID_ACTION_TYPE StatusCode = "PALI_INVALID_ACTION_TYPE"

	StatusCodePAL_INVALID_ASSISTANT_RECOMMENDATION_TYPE_ID StatusCode = "PAL_INVALID_ASSISTANT_RECOMMENDATION_TYPE_ID"

	StatusCodePAL_INVALID_ENTITY_ID StatusCode = "PAL_INVALID_ENTITY_ID"

	StatusCodePAL_INVALID_FLEXIPAGE_ID StatusCode = "PAL_INVALID_FLEXIPAGE_ID"

	StatusCodePAL_INVALID_LAYOUT_ID StatusCode = "PAL_INVALID_LAYOUT_ID"

	StatusCodePAL_INVALID_PARAMETERS StatusCode = "PAL_INVALID_PARAMETERS"

	StatusCodePARAMETER_TOO_LARGE StatusCode = "PARAMETER_TOO_LARGE"

	StatusCodePARTICIPANT_RELATIONSHIP_EXISTS StatusCode = "PARTICIPANT_RELATIONSHIP_EXISTS"

	StatusCodePAYLOAD_SIZE_EXCEEDED StatusCode = "PAYLOAD_SIZE_EXCEEDED"

	StatusCodePA_API_EXCEPTION StatusCode = "PA_API_EXCEPTION"

	StatusCodePA_AXIS_FAULT StatusCode = "PA_AXIS_FAULT"

	StatusCodePA_INVALID_ID_EXCEPTION StatusCode = "PA_INVALID_ID_EXCEPTION"

	StatusCodePA_NO_ACCESS_EXCEPTION StatusCode = "PA_NO_ACCESS_EXCEPTION"

	StatusCodePA_NO_DATA_FOUND_EXCEPTION StatusCode = "PA_NO_DATA_FOUND_EXCEPTION"

	StatusCodePA_URI_SYNTAX_EXCEPTION StatusCode = "PA_URI_SYNTAX_EXCEPTION"

	StatusCodePA_VISIBLE_ACTIONS_FILTER_ORDERING_EXCEPTION StatusCode = "PA_VISIBLE_ACTIONS_FILTER_ORDERING_EXCEPTION"

	StatusCodePENDING_COMMIT StatusCode = "PENDING_COMMIT"

	StatusCodePICKLIST_INACTIVE_VALUES_EXCEEDED StatusCode = "PICKLIST_INACTIVE_VALUES_EXCEEDED"

	StatusCodePLATFORM_EVENT_ENCRYPTION_ERROR StatusCode = "PLATFORM_EVENT_ENCRYPTION_ERROR"

	StatusCodePLATFORM_EVENT_PUBLISHING_UNAVAILABLE StatusCode = "PLATFORM_EVENT_PUBLISHING_UNAVAILABLE"

	StatusCodePLATFORM_EVENT_PUBLISH_FAILED StatusCode = "PLATFORM_EVENT_PUBLISH_FAILED"

	StatusCodePORTAL_NO_ACCESS StatusCode = "PORTAL_NO_ACCESS"

	StatusCodePORTAL_USER_ALREADY_EXISTS_FOR_CONTACT StatusCode = "PORTAL_USER_ALREADY_EXISTS_FOR_CONTACT"

	StatusCodePORTAL_USER_CREATION_RESTRICTED_WITH_ENCRYPTION StatusCode = "PORTAL_USER_CREATION_RESTRICTED_WITH_ENCRYPTION"

	StatusCodePRICE_NOT_FOUND StatusCode = "PRICE_NOT_FOUND"

	StatusCodePRIVATE_CONTACT_ON_ASSET StatusCode = "PRIVATE_CONTACT_ON_ASSET"

	StatusCodePROCESSING_HALTED StatusCode = "PROCESSING_HALTED"

	StatusCodePROGRAM_PROGRESS_NOT_ACTIVE StatusCode = "PROGRAM_PROGRESS_NOT_ACTIVE"

	StatusCodePROMOTION_NOT_FOUND StatusCode = "PROMOTION_NOT_FOUND"

	StatusCodeQA_INVALID_CREATE_FEED_ITEM StatusCode = "QA_INVALID_CREATE_FEED_ITEM"

	StatusCodeQA_INVALID_SUCCESS_MESSAGE StatusCode = "QA_INVALID_SUCCESS_MESSAGE"

	StatusCodeQUERY_REFINEMENT_VALUE_LIMIT_EXCEEDED StatusCode = "QUERY_REFINEMENT_VALUE_LIMIT_EXCEEDED"

	StatusCodeQUERY_TIMEOUT StatusCode = "QUERY_TIMEOUT"

	StatusCodeQUERY_TOKEN_COUNT_LIMIT_EXCEEDED StatusCode = "QUERY_TOKEN_COUNT_LIMIT_EXCEEDED"

	StatusCodeQUICK_ACTION_LIST_ITEM_NOT_ALLOWED StatusCode = "QUICK_ACTION_LIST_ITEM_NOT_ALLOWED"

	StatusCodeQUICK_ACTION_LIST_NOT_ALLOWED StatusCode = "QUICK_ACTION_LIST_NOT_ALLOWED"

	StatusCodeRECORD_CREATION_FAILED StatusCode = "RECORD_CREATION_FAILED"

	StatusCodeRECORD_IN_USE_BY_WORKFLOW StatusCode = "RECORD_IN_USE_BY_WORKFLOW"

	StatusCodeRECORD_MISSING_REQUIRED_FIELD StatusCode = "RECORD_MISSING_REQUIRED_FIELD"

	StatusCodeRECORD_UPDATE_FAILED StatusCode = "RECORD_UPDATE_FAILED"

	StatusCodeRECOVERABLE_SEARCH_PROVIDER_ERROR StatusCode = "RECOVERABLE_SEARCH_PROVIDER_ERROR"

	StatusCodeREFRESH_FAILED StatusCode = "REFRESH_FAILED"

	StatusCodeRELATED_ENTITY_FILTER_VALIDATION_EXCEPTION StatusCode = "RELATED_ENTITY_FILTER_VALIDATION_EXCEPTION"

	StatusCodeREL_FIELD_BAD_ACCESSIBILITY StatusCode = "REL_FIELD_BAD_ACCESSIBILITY"

	StatusCodeREPUTATION_MINIMUM_NUMBER_NOT_REACHED StatusCode = "REPUTATION_MINIMUM_NUMBER_NOT_REACHED"

	StatusCodeREQUEST_RUNNING_TOO_LONG StatusCode = "REQUEST_RUNNING_TOO_LONG"

	StatusCodeREQUIRED_FEATURE_MISSING StatusCode = "REQUIRED_FEATURE_MISSING"

	StatusCodeREQUIRED_FIELD_MISSING StatusCode = "REQUIRED_FIELD_MISSING"

	StatusCodeREQUIRE_CONNECTED_APP_SCS StatusCode = "REQUIRE_CONNECTED_APP_SCS"

	StatusCodeREQUIRE_CONNECTED_APP_SESSION_SCS StatusCode = "REQUIRE_CONNECTED_APP_SESSION_SCS"

	StatusCodeREQUIRE_RUNAS_USER StatusCode = "REQUIRE_RUNAS_USER"

	StatusCodeRESOURCE_NOT_AVAILABLE StatusCode = "RESOURCE_NOT_AVAILABLE"

	StatusCodeRETRIEVE_EXCHANGE_ATTACHMENT_FAILED StatusCode = "RETRIEVE_EXCHANGE_ATTACHMENT_FAILED"

	StatusCodeRETRIEVE_EXCHANGE_EMAIL_FAILED StatusCode = "RETRIEVE_EXCHANGE_EMAIL_FAILED"

	StatusCodeRETRIEVE_EXCHANGE_EVENT_FAILED StatusCode = "RETRIEVE_EXCHANGE_EVENT_FAILED"

	StatusCodeRETRIEVE_GOOGLE_EMAIL_FAILED StatusCode = "RETRIEVE_GOOGLE_EMAIL_FAILED"

	StatusCodeRETRIEVE_GOOGLE_EVENT_FAILED StatusCode = "RETRIEVE_GOOGLE_EVENT_FAILED"

	StatusCodeRETRIEVE_USER_CONFIG_ERROR StatusCode = "RETRIEVE_USER_CONFIG_ERROR"

	StatusCodeROUTES_EVALUATION_LIMIT_EXCEEDED StatusCode = "ROUTES_EVALUATION_LIMIT_EXCEEDED"

	StatusCodeSALESFORCE_INBOX_TRANSPORT_CONNECTION_ERROR StatusCode = "SALESFORCE_INBOX_TRANSPORT_CONNECTION_ERROR"

	StatusCodeSALESFORCE_INBOX_TRANSPORT_INVALID_INPUT_ERROR StatusCode = "SALESFORCE_INBOX_TRANSPORT_INVALID_INPUT_ERROR"

	StatusCodeSALESFORCE_INBOX_TRANSPORT_TOKEN_ERROR StatusCode = "SALESFORCE_INBOX_TRANSPORT_TOKEN_ERROR"

	StatusCodeSALESFORCE_INBOX_TRANSPORT_UNKNOWN_ERROR StatusCode = "SALESFORCE_INBOX_TRANSPORT_UNKNOWN_ERROR"

	StatusCodeSCHEMA_OBJECT_NOT_FOUND StatusCode = "SCHEMA_OBJECT_NOT_FOUND"

	StatusCodeSCREEN_POP_REQUIRED_INPUT_MISSING StatusCode = "SCREEN_POP_REQUIRED_INPUT_MISSING"

	StatusCodeSEARCH_INCLUDE_RULES_MAX_RULE_DEFINITION_LIMIT_EXCEEDED StatusCode = "SEARCH_INCLUDE_RULES_MAX_RULE_DEFINITION_LIMIT_EXCEEDED"

	StatusCodeSEARCH_INCLUDE_RULES_MIN_RULE_DEFINITION_NOT_MET StatusCode = "SEARCH_INCLUDE_RULES_MIN_RULE_DEFINITION_NOT_MET"

	StatusCodeSEARCH_PROVIDER_REQUEST_RATE_EXCEEDED StatusCode = "SEARCH_PROVIDER_REQUEST_RATE_EXCEEDED"

	StatusCodeSEGMENT_COUNT_LIMIT_EXCEEDED StatusCode = "SEGMENT_COUNT_LIMIT_EXCEEDED"

	StatusCodeSELF_REFERENCE_FROM_FLOW StatusCode = "SELF_REFERENCE_FROM_FLOW"

	StatusCodeSELF_REFERENCE_FROM_TRIGGER StatusCode = "SELF_REFERENCE_FROM_TRIGGER"

	StatusCodeSERVICE_UNAVAILABLE StatusCode = "SERVICE_UNAVAILABLE"

	StatusCodeSESSION_EXPIRED StatusCode = "SESSION_EXPIRED"

	StatusCodeSESSION_INVALIDATED StatusCode = "SESSION_INVALIDATED"

	StatusCodeSHARE_NEEDED_FOR_CHILD_OWNER StatusCode = "SHARE_NEEDED_FOR_CHILD_OWNER"

	StatusCodeSINGLE_EMAIL_LIMIT_EXCEEDED StatusCode = "SINGLE_EMAIL_LIMIT_EXCEEDED"

	StatusCodeSLACK_API_ERROR StatusCode = "SLACK_API_ERROR"

	StatusCodeSOCIAL_ACCOUNT_NOT_FOUND StatusCode = "SOCIAL_ACCOUNT_NOT_FOUND"

	StatusCodeSOCIAL_ACTION_INVALID StatusCode = "SOCIAL_ACTION_INVALID"

	StatusCodeSOCIAL_PERSONA_NOT_FOUND StatusCode = "SOCIAL_PERSONA_NOT_FOUND"

	StatusCodeSOCIAL_POST_INVALID StatusCode = "SOCIAL_POST_INVALID"

	StatusCodeSOCIAL_POST_NOT_FOUND StatusCode = "SOCIAL_POST_NOT_FOUND"

	StatusCodeSPECIFICATION_GENERATION_EXCEPTION StatusCode = "SPECIFICATION_GENERATION_EXCEPTION"

	StatusCodeSTANDARD_PRICE_NOT_DEFINED StatusCode = "STANDARD_PRICE_NOT_DEFINED"

	StatusCodeSTORAGE_LIMIT_EXCEEDED StatusCode = "STORAGE_LIMIT_EXCEEDED"

	StatusCodeSTRING_TOO_LONG StatusCode = "STRING_TOO_LONG"

	StatusCodeSUBDOMAIN_IN_USE StatusCode = "SUBDOMAIN_IN_USE"

	StatusCodeTABSET_LIMIT_EXCEEDED StatusCode = "TABSET_LIMIT_EXCEEDED"

	StatusCodeTEMPLATE_NOT_ACTIVE StatusCode = "TEMPLATE_NOT_ACTIVE"

	StatusCodeTEMPLATE_NOT_FOUND StatusCode = "TEMPLATE_NOT_FOUND"

	StatusCodeTERMS_OF_SERVICE_UNREAD StatusCode = "TERMS_OF_SERVICE_UNREAD"

	StatusCodeTERRITORY_REALIGN_IN_PROGRESS StatusCode = "TERRITORY_REALIGN_IN_PROGRESS"

	StatusCodeTEXT_DATA_OUTSIDE_SUPPORTED_CHARSET StatusCode = "TEXT_DATA_OUTSIDE_SUPPORTED_CHARSET"

	StatusCodeTEXT_TO_PICKLIST_VALUES_EXCEEDED StatusCode = "TEXT_TO_PICKLIST_VALUES_EXCEEDED"

	StatusCodeTOO_MANY_APEX_REQUESTS StatusCode = "TOO_MANY_APEX_REQUESTS"

	StatusCodeTOO_MANY_ENUM_VALUE StatusCode = "TOO_MANY_ENUM_VALUE"

	StatusCodeTOO_MANY_JOBS StatusCode = "TOO_MANY_JOBS"

	StatusCodeTOO_MANY_POSSIBLE_USERS_EXIST StatusCode = "TOO_MANY_POSSIBLE_USERS_EXIST"

	StatusCodeTRANSFER_REQUIRES_READ StatusCode = "TRANSFER_REQUIRES_READ"

	StatusCodeTXN_SECURITY_NO_ACCESS StatusCode = "TXN_SECURITY_NO_ACCESS"

	StatusCodeUISF_ENTITY_QUERY_FAILED StatusCode = "UISF_ENTITY_QUERY_FAILED"

	StatusCodeUISF_NO_MAPPINGS_FOUND StatusCode = "UISF_NO_MAPPINGS_FOUND"

	StatusCodeUISF_TOKEN_NOT_FOUND StatusCode = "UISF_TOKEN_NOT_FOUND"

	StatusCodeUISF_UNKNOWN_EXCEPTION StatusCode = "UISF_UNKNOWN_EXCEPTION"

	StatusCodeUISF_USER_MAPPING_FAILED StatusCode = "UISF_USER_MAPPING_FAILED"

	StatusCodeUNABLE_TO_LOCK_ROW StatusCode = "UNABLE_TO_LOCK_ROW"

	StatusCodeUNAUTHORIZED_SEARCH_PROVIDER_REQUEST StatusCode = "UNAUTHORIZED_SEARCH_PROVIDER_REQUEST"

	StatusCodeUNAVAILABLE_RECORDTYPE_EXCEPTION StatusCode = "UNAVAILABLE_RECORDTYPE_EXCEPTION"

	StatusCodeUNAVAILABLE_REF StatusCode = "UNAVAILABLE_REF"

	StatusCodeUNDEFINED_MAPPING_DEFINITION StatusCode = "UNDEFINED_MAPPING_DEFINITION"

	StatusCodeUNDELETE_FAILED StatusCode = "UNDELETE_FAILED"

	StatusCodeUNKNOWN_EXCEPTION StatusCode = "UNKNOWN_EXCEPTION"

	StatusCodeUNKNOWN_TOKEN_ERROR StatusCode = "UNKNOWN_TOKEN_ERROR"

	StatusCodeUNPROCESSABLE_REQUEST StatusCode = "UNPROCESSABLE_REQUEST"

	StatusCodeUNQUALIFIED_CART StatusCode = "UNQUALIFIED_CART"

	StatusCodeUNSAFE_HTML_CONTENT StatusCode = "UNSAFE_HTML_CONTENT"

	StatusCodeUNSPECIFIED_EMAIL_ADDRESS StatusCode = "UNSPECIFIED_EMAIL_ADDRESS"

	StatusCodeUNSUPPORTED_APEX_TRIGGER_OPERATON StatusCode = "UNSUPPORTED_APEX_TRIGGER_OPERATON"

	StatusCodeUNSUPPORTED_MODE StatusCode = "UNSUPPORTED_MODE"

	StatusCodeUNSUPPORTED_PAYMENT_GATEWAY_TYPE StatusCode = "UNSUPPORTED_PAYMENT_GATEWAY_TYPE"

	StatusCodeUNSUPPORTED_PAYMENT_REQUEST_TYPE StatusCode = "UNSUPPORTED_PAYMENT_REQUEST_TYPE"

	StatusCodeUNSUPPORTED_SITE StatusCode = "UNSUPPORTED_SITE"

	StatusCodeUNSUPPORTED_SITE_FILE_IMPORTED_EXCEPTION StatusCode = "UNSUPPORTED_SITE_FILE_IMPORTED_EXCEPTION"

	StatusCodeUNSUPPORTED_SOCIAL_PROVIDER StatusCode = "UNSUPPORTED_SOCIAL_PROVIDER"

	StatusCodeUNVERIFIED_SENDER_ADDRESS StatusCode = "UNVERIFIED_SENDER_ADDRESS"

	StatusCodeUPDATE_GOOGLE_EMAIL_LABEL_FAILED StatusCode = "UPDATE_GOOGLE_EMAIL_LABEL_FAILED"

	StatusCodeUSER_OWNS_PORTAL_ACCOUNT_EXCEPTION StatusCode = "USER_OWNS_PORTAL_ACCOUNT_EXCEPTION"

	StatusCodeUSER_WITHOUT_WEM_PERMISSION StatusCode = "USER_WITHOUT_WEM_PERMISSION"

	StatusCodeUSER_WITH_APEX_SHARES_EXCEPTION StatusCode = "USER_WITH_APEX_SHARES_EXCEPTION"

	StatusCodeVARIANT_NOT_FOUND StatusCode = "VARIANT_NOT_FOUND"

	StatusCodeVF_COMPILE_ERROR StatusCode = "VF_COMPILE_ERROR"

	StatusCodeVOICE_CAPACITY_ERROR StatusCode = "VOICE_CAPACITY_ERROR"

	StatusCodeWEBLINK_SIZE_LIMIT_EXCEEDED StatusCode = "WEBLINK_SIZE_LIMIT_EXCEEDED"

	StatusCodeWEBLINK_URL_INVALID StatusCode = "WEBLINK_URL_INVALID"

	StatusCodeWEM_SEGMENTS_CAN_NOT_HAVE_NON_ACTIVE_SEGMENT_TYPE StatusCode = "WEM_SEGMENTS_CAN_NOT_HAVE_NON_ACTIVE_SEGMENT_TYPE"

	StatusCodeWEM_SHIFT_SEGMENT_TIME_IS_OUTSIDE_OF_THE_SHIFT_DURATION StatusCode = "WEM_SHIFT_SEGMENT_TIME_IS_OUTSIDE_OF_THE_SHIFT_DURATION"

	StatusCodeWEM_USER_NOT_ORG_ADMIN StatusCode = "WEM_USER_NOT_ORG_ADMIN"

	StatusCodeWORKSPACE_NOT_FOUND StatusCode = "WORKSPACE_NOT_FOUND"

	StatusCodeWRONG_CONTROLLER_TYPE StatusCode = "WRONG_CONTROLLER_TYPE"

	StatusCodeXCLEAN_DJ_MATCH_IGNORABLE_ERROR StatusCode = "XCLEAN_DJ_MATCH_IGNORABLE_ERROR"

	StatusCodeXCLEAN_DJ_MATCH_INTERNAL_DJ_ERROR StatusCode = "XCLEAN_DJ_MATCH_INTERNAL_DJ_ERROR"

	StatusCodeXCLEAN_DJ_MATCH_NON_RETRIABLE_ERROR StatusCode = "XCLEAN_DJ_MATCH_NON_RETRIABLE_ERROR"

	StatusCodeXCLEAN_DJ_MATCH_RETRIABLE_ERROR StatusCode = "XCLEAN_DJ_MATCH_RETRIABLE_ERROR"

	StatusCodeXCLEAN_DJ_MATCH_UNKNOWN_ERROR StatusCode = "XCLEAN_DJ_MATCH_UNKNOWN_ERROR"

	StatusCodeXCLEAN_UNEXPECTED_ERROR StatusCode = "XCLEAN_UNEXPECTED_ERROR"
)

type AllOrNoneHeader struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata AllOrNoneHeader"`

	AllOrNone bool `xml:"allOrNone,omitempty" json:"allOrNone,omitempty"`
}

type CallOptions struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata CallOptions"`

	Client string `xml:"client,omitempty" json:"client,omitempty"`
}

type DebuggingHeader struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata DebuggingHeader"`

	Categories []*LogInfo `xml:"categories,omitempty" json:"categories,omitempty"`

	DebugLevel *LogType `xml:"debugLevel,omitempty" json:"debugLevel,omitempty"`
}

type DebuggingInfo struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata DebuggingInfo"`

	DebugLog string `xml:"debugLog,omitempty" json:"debugLog,omitempty"`
}

type SessionHeader struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata SessionHeader"`

	SessionId string `xml:"sessionId,omitempty" json:"sessionId,omitempty"`
}

type CancelDeploy struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata cancelDeploy"`

	String *ID `xml:"String,omitempty" json:"String,omitempty"`
}

type CancelDeployResponse struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata cancelDeployResponse"`

	Result *CancelDeployResult `xml:"result,omitempty" json:"result,omitempty"`
}

type CheckDeployStatus struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata checkDeployStatus"`

	AsyncProcessId *ID `xml:"asyncProcessId,omitempty" json:"asyncProcessId,omitempty"`

	IncludeDetails bool `xml:"includeDetails,omitempty" json:"includeDetails,omitempty"`
}

type CheckDeployStatusResponse struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata checkDeployStatusResponse"`

	Result *DeployResult `xml:"result,omitempty" json:"result,omitempty"`
}

type CheckRetrieveStatus struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata checkRetrieveStatus"`

	AsyncProcessId *ID `xml:"asyncProcessId,omitempty" json:"asyncProcessId,omitempty"`

	IncludeZip bool `xml:"includeZip,omitempty" json:"includeZip,omitempty"`
}

type CheckRetrieveStatusResponse struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata checkRetrieveStatusResponse"`

	Result *RetrieveResult `xml:"result,omitempty" json:"result,omitempty"`
}

type CreateMetadata struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata createMetadata"`

	Metadata []*Metadata `xml:"metadata,omitempty" json:"metadata,omitempty"`
}

type CreateMetadataResponse struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata createMetadataResponse"`

	Result []*SaveResult `xml:"result,omitempty" json:"result,omitempty"`
}

type DeleteMetadata struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata deleteMetadata"`

	Type_ string `xml:"type,omitempty" json:"type,omitempty"`

	FullNames []string `xml:"fullNames,omitempty" json:"fullNames,omitempty"`
}

type DeleteMetadataResponse struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata deleteMetadataResponse"`

	Result []*DeleteResult `xml:"result,omitempty" json:"result,omitempty"`
}

type Deploy struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata deploy"`

	ZipFile []byte `xml:"ZipFile,omitempty" json:"ZipFile,omitempty"`

	DeployOptions *DeployOptions `xml:"DeployOptions,omitempty" json:"DeployOptions,omitempty"`
}

type DeployResponse struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata deployResponse"`

	Result *AsyncResult `xml:"result,omitempty" json:"result,omitempty"`
}

type DeployRecentValidation struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata deployRecentValidation"`

	ValidationId *ID `xml:"validationId,omitempty" json:"validationId,omitempty"`
}

type DeployRecentValidationResponse struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata deployRecentValidationResponse"`

	Result string `xml:"result,omitempty" json:"result,omitempty"`
}

type DescribeMetadata struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata describeMetadata"`

	AsOfVersion float64 `xml:"asOfVersion,omitempty" json:"asOfVersion,omitempty"`
}

type DescribeMetadataResponse struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata describeMetadataResponse"`

	Result *DescribeMetadataResult `xml:"result,omitempty" json:"result,omitempty"`
}

type DescribeValueType struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata describeValueType"`

	Type_ string `xml:"type,omitempty" json:"type,omitempty"`
}

type DescribeValueTypeResponse struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata describeValueTypeResponse"`

	Result *DescribeValueTypeResult `xml:"result,omitempty" json:"result,omitempty"`
}

type ListMetadata struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata listMetadata"`

	Queries []*ListMetadataQuery `xml:"queries,omitempty" json:"queries,omitempty"`

	AsOfVersion float64 `xml:"asOfVersion,omitempty" json:"asOfVersion,omitempty"`
}

type ListMetadataResponse struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata listMetadataResponse"`

	Result []*FileProperties `xml:"result,omitempty" json:"result,omitempty"`
}

type ReadMetadata struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata readMetadata"`

	Type_ string `xml:"type,omitempty" json:"type,omitempty"`

	FullNames []string `xml:"fullNames,omitempty" json:"fullNames,omitempty"`
}

type ReadMetadataResponse struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata readMetadataResponse"`

	Result *ReadResult `xml:"result,omitempty" json:"result,omitempty"`
}

type RenameMetadata struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata renameMetadata"`

	Type_ string `xml:"type,omitempty" json:"type,omitempty"`

	OldFullName string `xml:"oldFullName,omitempty" json:"oldFullName,omitempty"`

	NewFullName string `xml:"newFullName,omitempty" json:"newFullName,omitempty"`
}

type RenameMetadataResponse struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata renameMetadataResponse"`

	Result *SaveResult `xml:"result,omitempty" json:"result,omitempty"`
}

type Retrieve struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata retrieve"`

	RetrieveRequest *RetrieveRequest `xml:"retrieveRequest,omitempty" json:"retrieveRequest,omitempty"`
}

type RetrieveResponse struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata retrieveResponse"`

	Result *AsyncResult `xml:"result,omitempty" json:"result,omitempty"`
}

type UpdateMetadata struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata updateMetadata"`

	Metadata []*Metadata `xml:"metadata,omitempty" json:"metadata,omitempty"`
}

type UpdateMetadataResponse struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata updateMetadataResponse"`

	Result []*SaveResult `xml:"result,omitempty" json:"result,omitempty"`
}

type UpsertMetadata struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata upsertMetadata"`

	Metadata []*Metadata `xml:"metadata,omitempty" json:"metadata,omitempty"`
}

type UpsertMetadataResponse struct {
	XMLName xml.Name `xml:"http://soap.sforce.com/2006/04/metadata upsertMetadataResponse"`

	Result []*UpsertResult `xml:"result,omitempty" json:"result,omitempty"`
}

type CancelDeployResult struct {
	Done bool `xml:"done,omitempty" json:"done,omitempty"`

	Id *ID `xml:"id,omitempty" json:"id,omitempty"`
}

type DeployResult struct {
	CanceledBy string `xml:"canceledBy,omitempty" json:"canceledBy,omitempty"`

	CanceledByName string `xml:"canceledByName,omitempty" json:"canceledByName,omitempty"`

	CheckOnly bool `xml:"checkOnly,omitempty" json:"checkOnly,omitempty"`

	CompletedDate soap.XSDDateTime `xml:"completedDate,omitempty" json:"completedDate,omitempty"`

	CreatedBy string `xml:"createdBy,omitempty" json:"createdBy,omitempty"`

	CreatedByName string `xml:"createdByName,omitempty" json:"createdByName,omitempty"`

	CreatedDate soap.XSDDateTime `xml:"createdDate,omitempty" json:"createdDate,omitempty"`

	Details *DeployDetails `xml:"details,omitempty" json:"details,omitempty"`

	Done bool `xml:"done,omitempty" json:"done,omitempty"`

	ErrorMessage string `xml:"errorMessage,omitempty" json:"errorMessage,omitempty"`

	ErrorStatusCode *StatusCode `xml:"errorStatusCode,omitempty" json:"errorStatusCode,omitempty"`

	Id *ID `xml:"id,omitempty" json:"id,omitempty"`

	IgnoreWarnings bool `xml:"ignoreWarnings,omitempty" json:"ignoreWarnings,omitempty"`

	LastModifiedDate soap.XSDDateTime `xml:"lastModifiedDate,omitempty" json:"lastModifiedDate,omitempty"`

	NumberComponentErrors int32 `xml:"numberComponentErrors,omitempty" json:"numberComponentErrors,omitempty"`

	NumberComponentsDeployed int32 `xml:"numberComponentsDeployed,omitempty" json:"numberComponentsDeployed,omitempty"`

	NumberComponentsTotal int32 `xml:"numberComponentsTotal,omitempty" json:"numberComponentsTotal,omitempty"`

	NumberTestErrors int32 `xml:"numberTestErrors,omitempty" json:"numberTestErrors,omitempty"`

	NumberTestsCompleted int32 `xml:"numberTestsCompleted,omitempty" json:"numberTestsCompleted,omitempty"`

	NumberTestsTotal int32 `xml:"numberTestsTotal,omitempty" json:"numberTestsTotal,omitempty"`

	RollbackOnError bool `xml:"rollbackOnError,omitempty" json:"rollbackOnError,omitempty"`

	RunTestsEnabled bool `xml:"runTestsEnabled,omitempty" json:"runTestsEnabled,omitempty"`

	StartDate soap.XSDDateTime `xml:"startDate,omitempty" json:"startDate,omitempty"`

	StateDetail string `xml:"stateDetail,omitempty" json:"stateDetail,omitempty"`

	Status *DeployStatus `xml:"status,omitempty" json:"status,omitempty"`

	Success bool `xml:"success,omitempty" json:"success,omitempty"`
}

type DeployDetails struct {
	ComponentFailures []*DeployMessage `xml:"componentFailures,omitempty" json:"componentFailures,omitempty"`

	ComponentSuccesses []*DeployMessage `xml:"componentSuccesses,omitempty" json:"componentSuccesses,omitempty"`

	RetrieveResult *RetrieveResult `xml:"retrieveResult,omitempty" json:"retrieveResult,omitempty"`

	RunTestResult *RunTestsResult `xml:"runTestResult,omitempty" json:"runTestResult,omitempty"`
}

type DeployMessage struct {
	Changed bool `xml:"changed,omitempty" json:"changed,omitempty"`

	ColumnNumber int32 `xml:"columnNumber,omitempty" json:"columnNumber,omitempty"`

	ComponentType string `xml:"componentType,omitempty" json:"componentType,omitempty"`

	Created bool `xml:"created,omitempty" json:"created,omitempty"`

	CreatedDate soap.XSDDateTime `xml:"createdDate,omitempty" json:"createdDate,omitempty"`

	Deleted bool `xml:"deleted,omitempty" json:"deleted,omitempty"`

	FileName string `xml:"fileName,omitempty" json:"fileName,omitempty"`

	FullName string `xml:"fullName,omitempty" json:"fullName,omitempty"`

	Id string `xml:"id,omitempty" json:"id,omitempty"`

	LineNumber int32 `xml:"lineNumber,omitempty" json:"lineNumber,omitempty"`

	Problem string `xml:"problem,omitempty" json:"problem,omitempty"`

	ProblemType *DeployProblemType `xml:"problemType,omitempty" json:"problemType,omitempty"`

	Success bool `xml:"success,omitempty" json:"success,omitempty"`
}

type RetrieveResult struct {
	Done bool `xml:"done,omitempty" json:"done,omitempty"`

	ErrorMessage string `xml:"errorMessage,omitempty" json:"errorMessage,omitempty"`

	ErrorStatusCode *StatusCode `xml:"errorStatusCode,omitempty" json:"errorStatusCode,omitempty"`

	FileProperties []*FileProperties `xml:"fileProperties,omitempty" json:"fileProperties,omitempty"`

	Id string `xml:"id,omitempty" json:"id,omitempty"`

	Messages []*RetrieveMessage `xml:"messages,omitempty" json:"messages,omitempty"`

	Status *RetrieveStatus `xml:"status,omitempty" json:"status,omitempty"`

	Success bool `xml:"success,omitempty" json:"success,omitempty"`

	ZipFile []byte `xml:"zipFile,omitempty" json:"zipFile,omitempty"`
}

type FileProperties struct {
	CreatedById string `xml:"createdById,omitempty" json:"createdById,omitempty"`

	CreatedByName string `xml:"createdByName,omitempty" json:"createdByName,omitempty"`

	CreatedDate soap.XSDDateTime `xml:"createdDate,omitempty" json:"createdDate,omitempty"`

	FileName string `xml:"fileName,omitempty" json:"fileName,omitempty"`

	FullName string `xml:"fullName,omitempty" json:"fullName,omitempty"`

	Id string `xml:"id,omitempty" json:"id,omitempty"`

	LastModifiedById string `xml:"lastModifiedById,omitempty" json:"lastModifiedById,omitempty"`

	LastModifiedByName string `xml:"lastModifiedByName,omitempty" json:"lastModifiedByName,omitempty"`

	LastModifiedDate soap.XSDDateTime `xml:"lastModifiedDate,omitempty" json:"lastModifiedDate,omitempty"`

	ManageableState *ManageableState `xml:"manageableState,omitempty" json:"manageableState,omitempty"`

	NamespacePrefix string `xml:"namespacePrefix,omitempty" json:"namespacePrefix,omitempty"`

	Type_ string `xml:"type,omitempty" json:"type,omitempty"`
}

type RetrieveMessage struct {
	FileName string `xml:"fileName,omitempty" json:"fileName,omitempty"`

	Problem string `xml:"problem,omitempty" json:"problem,omitempty"`
}

type RunTestsResult struct {
	ApexLogId string `xml:"apexLogId,omitempty" json:"apexLogId,omitempty"`

	CodeCoverage []*CodeCoverageResult `xml:"codeCoverage,omitempty" json:"codeCoverage,omitempty"`

	CodeCoverageWarnings []*CodeCoverageWarning `xml:"codeCoverageWarnings,omitempty" json:"codeCoverageWarnings,omitempty"`

	Failures []*RunTestFailure `xml:"failures,omitempty" json:"failures,omitempty"`

	FlowCoverage []*FlowCoverageResult `xml:"flowCoverage,omitempty" json:"flowCoverage,omitempty"`

	FlowCoverageWarnings []*FlowCoverageWarning `xml:"flowCoverageWarnings,omitempty" json:"flowCoverageWarnings,omitempty"`

	NumFailures int32 `xml:"numFailures,omitempty" json:"numFailures,omitempty"`

	NumTestsRun int32 `xml:"numTestsRun,omitempty" json:"numTestsRun,omitempty"`

	Successes []*RunTestSuccess `xml:"successes,omitempty" json:"successes,omitempty"`

	TotalTime float64 `xml:"totalTime,omitempty" json:"totalTime,omitempty"`
}

type CodeCoverageResult struct {
	DmlInfo []*CodeLocation `xml:"dmlInfo,omitempty" json:"dmlInfo,omitempty"`

	Id *ID `xml:"id,omitempty" json:"id,omitempty"`

	LocationsNotCovered []*CodeLocation `xml:"locationsNotCovered,omitempty" json:"locationsNotCovered,omitempty"`

	MethodInfo []*CodeLocation `xml:"methodInfo,omitempty" json:"methodInfo,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Namespace *string `xml:"namespace,omitempty" json:"namespace,omitempty"`

	NumLocations int32 `xml:"numLocations,omitempty" json:"numLocations,omitempty"`

	NumLocationsNotCovered int32 `xml:"numLocationsNotCovered,omitempty" json:"numLocationsNotCovered,omitempty"`

	SoqlInfo []*CodeLocation `xml:"soqlInfo,omitempty" json:"soqlInfo,omitempty"`

	SoslInfo []*CodeLocation `xml:"soslInfo,omitempty" json:"soslInfo,omitempty"`

	Type_ string `xml:"type,omitempty" json:"type,omitempty"`
}

type CodeLocation struct {
	Column int32 `xml:"column,omitempty" json:"column,omitempty"`

	Line int32 `xml:"line,omitempty" json:"line,omitempty"`

	NumExecutions int32 `xml:"numExecutions,omitempty" json:"numExecutions,omitempty"`

	Time float64 `xml:"time,omitempty" json:"time,omitempty"`
}

type CodeCoverageWarning struct {
	Id *ID `xml:"id,omitempty" json:"id,omitempty"`

	Message string `xml:"message,omitempty" json:"message,omitempty"`

	Name *string `xml:"name,omitempty" json:"name,omitempty"`

	Namespace *string `xml:"namespace,omitempty" json:"namespace,omitempty"`
}

type RunTestFailure struct {
	Id *ID `xml:"id,omitempty" json:"id,omitempty"`

	Message string `xml:"message,omitempty" json:"message,omitempty"`

	MethodName *string `xml:"methodName,omitempty" json:"methodName,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Namespace *string `xml:"namespace,omitempty" json:"namespace,omitempty"`

	PackageName string `xml:"packageName,omitempty" json:"packageName,omitempty"`

	SeeAllData bool `xml:"seeAllData,omitempty" json:"seeAllData,omitempty"`

	StackTrace *string `xml:"stackTrace,omitempty" json:"stackTrace,omitempty"`

	Time float64 `xml:"time,omitempty" json:"time,omitempty"`

	Type_ string `xml:"type,omitempty" json:"type,omitempty"`
}

type FlowCoverageResult struct {
	ElementsNotCovered []string `xml:"elementsNotCovered,omitempty" json:"elementsNotCovered,omitempty"`

	FlowId string `xml:"flowId,omitempty" json:"flowId,omitempty"`

	FlowName string `xml:"flowName,omitempty" json:"flowName,omitempty"`

	FlowNamespace *string `xml:"flowNamespace,omitempty" json:"flowNamespace,omitempty"`

	NumElements int32 `xml:"numElements,omitempty" json:"numElements,omitempty"`

	NumElementsNotCovered int32 `xml:"numElementsNotCovered,omitempty" json:"numElementsNotCovered,omitempty"`

	ProcessType *FlowProcessType `xml:"processType,omitempty" json:"processType,omitempty"`
}

type FlowCoverageWarning struct {
	FlowId *string `xml:"flowId,omitempty" json:"flowId,omitempty"`

	FlowName *string `xml:"flowName,omitempty" json:"flowName,omitempty"`

	FlowNamespace *string `xml:"flowNamespace,omitempty" json:"flowNamespace,omitempty"`

	Message string `xml:"message,omitempty" json:"message,omitempty"`
}

type RunTestSuccess struct {
	Id *ID `xml:"id,omitempty" json:"id,omitempty"`

	MethodName string `xml:"methodName,omitempty" json:"methodName,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Namespace *string `xml:"namespace,omitempty" json:"namespace,omitempty"`

	SeeAllData bool `xml:"seeAllData,omitempty" json:"seeAllData,omitempty"`

	Time float64 `xml:"time,omitempty" json:"time,omitempty"`
}

type Metadata struct {
	FullName string `xml:"fullName,omitempty" json:"fullName,omitempty"`
}

type AIApplication struct {
	*Metadata

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	Status *AIApplicationStatus `xml:"status,omitempty" json:"status,omitempty"`

	Type_ *AIApplicationType `xml:"type,omitempty" json:"type,omitempty"`
}

type AIApplicationConfig struct {
	*Metadata

	AiApplicationDeveloperName string `xml:"aiApplicationDeveloperName,omitempty" json:"aiApplicationDeveloperName,omitempty"`

	ApplicationId string `xml:"applicationId,omitempty" json:"applicationId,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	InsightReasonEnabled bool `xml:"insightReasonEnabled,omitempty" json:"insightReasonEnabled,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	Rank int32 `xml:"rank,omitempty" json:"rank,omitempty"`

	ScoringMode *AIScoringMode `xml:"scoringMode,omitempty" json:"scoringMode,omitempty"`
}

type AIReplyRecommendationsSettings struct {
	*Metadata

	EnableAIReplyRecommendations bool `xml:"enableAIReplyRecommendations,omitempty" json:"enableAIReplyRecommendations,omitempty"`
}

type AIScoringModelDefVersion struct {
	*Metadata

	AiScoringModelDefinition string `xml:"aiScoringModelDefinition,omitempty" json:"aiScoringModelDefinition,omitempty"`

	AiScoringSteps []*AIScoringStep `xml:"aiScoringSteps,omitempty" json:"aiScoringSteps,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	ModelMode *AIScoringModelDefVersionMode `xml:"modelMode,omitempty" json:"modelMode,omitempty"`
}

type AIScoringStep struct {
	AiModelConfigStep string `xml:"aiModelConfigStep,omitempty" json:"aiModelConfigStep,omitempty"`

	StepDetail string `xml:"stepDetail,omitempty" json:"stepDetail,omitempty"`
}

type AIScoringModelDefinition struct {
	*Metadata

	AiModelConfig string `xml:"aiModelConfig,omitempty" json:"aiModelConfig,omitempty"`

	AiScoringModelDefVersions []*AIScoringModelDefVersion `xml:"aiScoringModelDefVersions,omitempty" json:"aiScoringModelDefVersions,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type AccountIntelligenceSettings struct {
	*Metadata

	EnableAccountLogos bool `xml:"enableAccountLogos,omitempty" json:"enableAccountLogos,omitempty"`

	EnableAutomatedAccountFields bool `xml:"enableAutomatedAccountFields,omitempty" json:"enableAutomatedAccountFields,omitempty"`

	EnableNewsStories bool `xml:"enableNewsStories,omitempty" json:"enableNewsStories,omitempty"`
}

type AccountRelationshipShareRule struct {
	*Metadata

	AccessLevel string `xml:"accessLevel,omitempty" json:"accessLevel,omitempty"`

	AccountToCriteriaField string `xml:"accountToCriteriaField,omitempty" json:"accountToCriteriaField,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	EntityType string `xml:"entityType,omitempty" json:"entityType,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	StaticFormulaCriteria string `xml:"staticFormulaCriteria,omitempty" json:"staticFormulaCriteria,omitempty"`

	Type_ string `xml:"type,omitempty" json:"type,omitempty"`
}

type AccountSettings struct {
	*Metadata

	EnableAccountDiscovery bool `xml:"enableAccountDiscovery,omitempty" json:"enableAccountDiscovery,omitempty"`

	EnableAccountHistoryTracking bool `xml:"enableAccountHistoryTracking,omitempty" json:"enableAccountHistoryTracking,omitempty"`

	EnableAccountInsightsInMobile bool `xml:"enableAccountInsightsInMobile,omitempty" json:"enableAccountInsightsInMobile,omitempty"`

	EnableAccountOwnerReport bool `xml:"enableAccountOwnerReport,omitempty" json:"enableAccountOwnerReport,omitempty"`

	EnableAccountTeams bool `xml:"enableAccountTeams,omitempty" json:"enableAccountTeams,omitempty"`

	EnableContactHistoryTracking bool `xml:"enableContactHistoryTracking,omitempty" json:"enableContactHistoryTracking,omitempty"`

	EnableRelateContactToMultipleAccounts bool `xml:"enableRelateContactToMultipleAccounts,omitempty" json:"enableRelateContactToMultipleAccounts,omitempty"`

	ShowViewHierarchyLink bool `xml:"showViewHierarchyLink,omitempty" json:"showViewHierarchyLink,omitempty"`
}

type ActionLauncherItemDef struct {
	*Metadata

	Identifier string `xml:"identifier,omitempty" json:"identifier,omitempty"`

	ItemActionType *ItemActionType `xml:"itemActionType,omitempty" json:"itemActionType,omitempty"`

	ItemCategory *ItemCategory `xml:"itemCategory,omitempty" json:"itemCategory,omitempty"`

	ItemLanguage string `xml:"itemLanguage,omitempty" json:"itemLanguage,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	SubType string `xml:"subType,omitempty" json:"subType,omitempty"`

	Type_ string `xml:"type,omitempty" json:"type,omitempty"`

	VersionNumber string `xml:"versionNumber,omitempty" json:"versionNumber,omitempty"`
}

type ActionLinkGroupTemplate struct {
	*Metadata

	ActionLinkTemplates []*ActionLinkTemplate `xml:"actionLinkTemplates,omitempty" json:"actionLinkTemplates,omitempty"`

	Category *PlatformActionGroupCategory `xml:"category,omitempty" json:"category,omitempty"`

	ExecutionsAllowed *ActionLinkExecutionsAllowed `xml:"executionsAllowed,omitempty" json:"executionsAllowed,omitempty"`

	HoursUntilExpiration int32 `xml:"hoursUntilExpiration,omitempty" json:"hoursUntilExpiration,omitempty"`

	IsPublished bool `xml:"isPublished,omitempty" json:"isPublished,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type ActionLinkTemplate struct {
	ActionUrl string `xml:"actionUrl,omitempty" json:"actionUrl,omitempty"`

	Headers string `xml:"headers,omitempty" json:"headers,omitempty"`

	IsConfirmationRequired bool `xml:"isConfirmationRequired,omitempty" json:"isConfirmationRequired,omitempty"`

	IsGroupDefault bool `xml:"isGroupDefault,omitempty" json:"isGroupDefault,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	LabelKey string `xml:"labelKey,omitempty" json:"labelKey,omitempty"`

	LinkType *ActionLinkType `xml:"linkType,omitempty" json:"linkType,omitempty"`

	Method *ActionLinkHttpMethod `xml:"method,omitempty" json:"method,omitempty"`

	Position int32 `xml:"position,omitempty" json:"position,omitempty"`

	RequestBody string `xml:"requestBody,omitempty" json:"requestBody,omitempty"`

	UserAlias string `xml:"userAlias,omitempty" json:"userAlias,omitempty"`

	UserVisibility *ActionLinkUserVisibility `xml:"userVisibility,omitempty" json:"userVisibility,omitempty"`
}

type ActionPlanTemplate struct {
	*Metadata

	ActionPlanTemplateItem []*ActionPlanTemplateItem `xml:"actionPlanTemplateItem,omitempty" json:"actionPlanTemplateItem,omitempty"`

	ActionPlanTemplateItemDependencies []*ActionPlanTemplateItemDependency `xml:"actionPlanTemplateItemDependencies,omitempty" json:"actionPlanTemplateItemDependencies,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	IsAdHocItemCreationEnabled bool `xml:"isAdHocItemCreationEnabled,omitempty" json:"isAdHocItemCreationEnabled,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	TargetEntityType string `xml:"targetEntityType,omitempty" json:"targetEntityType,omitempty"`

	UniqueName string `xml:"uniqueName,omitempty" json:"uniqueName,omitempty"`
}

type ActionPlanTemplateItem struct {
	ActionPlanTemplateItemValue []*ActionPlanTemplateItemValue `xml:"actionPlanTemplateItemValue,omitempty" json:"actionPlanTemplateItemValue,omitempty"`

	DisplayOrder int32 `xml:"displayOrder,omitempty" json:"displayOrder,omitempty"`

	IsRequired bool `xml:"isRequired,omitempty" json:"isRequired,omitempty"`

	ItemEntityType string `xml:"itemEntityType,omitempty" json:"itemEntityType,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	UniqueName string `xml:"uniqueName,omitempty" json:"uniqueName,omitempty"`
}

type ActionPlanTemplateItemValue struct {
	ItemEntityType string `xml:"itemEntityType,omitempty" json:"itemEntityType,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	ValueFormula string `xml:"valueFormula,omitempty" json:"valueFormula,omitempty"`

	ValueLiteral string `xml:"valueLiteral,omitempty" json:"valueLiteral,omitempty"`
}

type ActionPlanTemplateItemDependency struct {
	CreationType string `xml:"creationType,omitempty" json:"creationType,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	PreviousTemplateItem *ActionPlanTemplateItem `xml:"previousTemplateItem,omitempty" json:"previousTemplateItem,omitempty"`

	TemplateItem *ActionPlanTemplateItem `xml:"templateItem,omitempty" json:"templateItem,omitempty"`
}

type ActionsSettings struct {
	*Metadata

	EnableDefaultQuickActionsOn bool `xml:"enableDefaultQuickActionsOn,omitempty" json:"enableDefaultQuickActionsOn,omitempty"`

	EnableMdpEnabled bool `xml:"enableMdpEnabled,omitempty" json:"enableMdpEnabled,omitempty"`

	EnableOfflineWebLinks bool `xml:"enableOfflineWebLinks,omitempty" json:"enableOfflineWebLinks,omitempty"`

	EnableThirdPartyActions bool `xml:"enableThirdPartyActions,omitempty" json:"enableThirdPartyActions,omitempty"`
}

type ActivitiesSettings struct {
	*Metadata

	AllowUsersToRelateMultipleContactsToTasksAndEvents bool `xml:"allowUsersToRelateMultipleContactsToTasksAndEvents,omitempty" json:"allowUsersToRelateMultipleContactsToTasksAndEvents,omitempty"`

	AutoRelateEventAttendees bool `xml:"autoRelateEventAttendees,omitempty" json:"autoRelateEventAttendees,omitempty"`

	EnableActivityReminders bool `xml:"enableActivityReminders,omitempty" json:"enableActivityReminders,omitempty"`

	EnableCalendarHomeLWC bool `xml:"enableCalendarHomeLWC,omitempty" json:"enableCalendarHomeLWC,omitempty"`

	EnableClickCreateEvents bool `xml:"enableClickCreateEvents,omitempty" json:"enableClickCreateEvents,omitempty"`

	EnableDragAndDropScheduling bool `xml:"enableDragAndDropScheduling,omitempty" json:"enableDragAndDropScheduling,omitempty"`

	EnableEmailTracking bool `xml:"enableEmailTracking,omitempty" json:"enableEmailTracking,omitempty"`

	EnableFlowTaskNotifsViaApex bool `xml:"enableFlowTaskNotifsViaApex,omitempty" json:"enableFlowTaskNotifsViaApex,omitempty"`

	EnableGroupTasks bool `xml:"enableGroupTasks,omitempty" json:"enableGroupTasks,omitempty"`

	EnableHideChildEventsPreference bool `xml:"enableHideChildEventsPreference,omitempty" json:"enableHideChildEventsPreference,omitempty"`

	EnableListViewScheduling bool `xml:"enableListViewScheduling,omitempty" json:"enableListViewScheduling,omitempty"`

	EnableLogNote bool `xml:"enableLogNote,omitempty" json:"enableLogNote,omitempty"`

	EnableMLSingleClientProfile bool `xml:"enableMLSingleClientProfile,omitempty" json:"enableMLSingleClientProfile,omitempty"`

	EnableMultidayEvents bool `xml:"enableMultidayEvents,omitempty" json:"enableMultidayEvents,omitempty"`

	EnableRecurringEvents bool `xml:"enableRecurringEvents,omitempty" json:"enableRecurringEvents,omitempty"`

	EnableRecurringTasks bool `xml:"enableRecurringTasks,omitempty" json:"enableRecurringTasks,omitempty"`

	EnableRollUpActivToContactsAcct bool `xml:"enableRollUpActivToContactsAcct,omitempty" json:"enableRollUpActivToContactsAcct,omitempty"`

	EnableSidebarCalendarShortcut bool `xml:"enableSidebarCalendarShortcut,omitempty" json:"enableSidebarCalendarShortcut,omitempty"`

	EnableSimpleTaskCreateUI bool `xml:"enableSimpleTaskCreateUI,omitempty" json:"enableSimpleTaskCreateUI,omitempty"`

	EnableTimelineCompDateSort bool `xml:"enableTimelineCompDateSort,omitempty" json:"enableTimelineCompDateSort,omitempty"`

	EnableUNSTaskDelegatedToNotifications bool `xml:"enableUNSTaskDelegatedToNotifications,omitempty" json:"enableUNSTaskDelegatedToNotifications,omitempty"`

	EnableUserListViewCalendars bool `xml:"enableUserListViewCalendars,omitempty" json:"enableUserListViewCalendars,omitempty"`

	MeetingRequestsLogo string `xml:"meetingRequestsLogo,omitempty" json:"meetingRequestsLogo,omitempty"`

	ShowCustomLogoMeetingRequests bool `xml:"showCustomLogoMeetingRequests,omitempty" json:"showCustomLogoMeetingRequests,omitempty"`

	ShowEventDetailsMultiUserCalendar bool `xml:"showEventDetailsMultiUserCalendar,omitempty" json:"showEventDetailsMultiUserCalendar,omitempty"`

	ShowHomePageHoverLinksForEvents bool `xml:"showHomePageHoverLinksForEvents,omitempty" json:"showHomePageHoverLinksForEvents,omitempty"`

	ShowMyTasksHoverLinks bool `xml:"showMyTasksHoverLinks,omitempty" json:"showMyTasksHoverLinks,omitempty"`
}

type AddressSettings struct {
	*Metadata

	CountriesAndStates *CountriesAndStates `xml:"countriesAndStates,omitempty" json:"countriesAndStates,omitempty"`
}

type CountriesAndStates struct {
	Countries []*Country `xml:"countries,omitempty" json:"countries,omitempty"`
}

type Country struct {
	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	IntegrationValue string `xml:"integrationValue,omitempty" json:"integrationValue,omitempty"`

	IsoCode string `xml:"isoCode,omitempty" json:"isoCode,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	OrgDefault bool `xml:"orgDefault,omitempty" json:"orgDefault,omitempty"`

	Standard bool `xml:"standard,omitempty" json:"standard,omitempty"`

	States []*State `xml:"states,omitempty" json:"states,omitempty"`

	Visible bool `xml:"visible,omitempty" json:"visible,omitempty"`
}

type State struct {
	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	IntegrationValue string `xml:"integrationValue,omitempty" json:"integrationValue,omitempty"`

	IsoCode string `xml:"isoCode,omitempty" json:"isoCode,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Standard bool `xml:"standard,omitempty" json:"standard,omitempty"`

	Visible bool `xml:"visible,omitempty" json:"visible,omitempty"`
}

type Ai4mSettings struct {
	*Metadata

	EnableUmaGlobalModel bool `xml:"enableUmaGlobalModel,omitempty" json:"enableUmaGlobalModel,omitempty"`

	EnableUmaSto bool `xml:"enableUmaSto,omitempty" json:"enableUmaSto,omitempty"`
}

type AnalyticSnapshot struct {
	*Metadata

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	GroupColumn string `xml:"groupColumn,omitempty" json:"groupColumn,omitempty"`

	Mappings []*AnalyticSnapshotMapping `xml:"mappings,omitempty" json:"mappings,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	RunningUser string `xml:"runningUser,omitempty" json:"runningUser,omitempty"`

	SourceReport string `xml:"sourceReport,omitempty" json:"sourceReport,omitempty"`

	TargetObject string `xml:"targetObject,omitempty" json:"targetObject,omitempty"`
}

type AnalyticSnapshotMapping struct {
	AggregateType *ReportSummaryType `xml:"aggregateType,omitempty" json:"aggregateType,omitempty"`

	SourceField string `xml:"sourceField,omitempty" json:"sourceField,omitempty"`

	SourceType *ReportJobSourceTypes `xml:"sourceType,omitempty" json:"sourceType,omitempty"`

	TargetField string `xml:"targetField,omitempty" json:"targetField,omitempty"`
}

type AnalyticsSettings struct {
	*Metadata

	AlwaysGenPreviews bool `xml:"alwaysGenPreviews,omitempty" json:"alwaysGenPreviews,omitempty"`

	AnalyticsAdoptionMetadata bool `xml:"analyticsAdoptionMetadata,omitempty" json:"analyticsAdoptionMetadata,omitempty"`

	AutoInstallApps bool `xml:"autoInstallApps,omitempty" json:"autoInstallApps,omitempty"`

	BundleCachingOptOut bool `xml:"bundleCachingOptOut,omitempty" json:"bundleCachingOptOut,omitempty"`

	CanAccessAnalyticsViaAPI bool `xml:"canAccessAnalyticsViaAPI,omitempty" json:"canAccessAnalyticsViaAPI,omitempty"`

	CanAnnotateDashboards bool `xml:"canAnnotateDashboards,omitempty" json:"canAnnotateDashboards,omitempty"`

	CanEnableSavedView bool `xml:"canEnableSavedView,omitempty" json:"canEnableSavedView,omitempty"`

	CanExploreDataConversationally bool `xml:"canExploreDataConversationally,omitempty" json:"canExploreDataConversationally,omitempty"`

	CanShareAppsWithCommunities bool `xml:"canShareAppsWithCommunities,omitempty" json:"canShareAppsWithCommunities,omitempty"`

	CanViewThumbnailAssets bool `xml:"canViewThumbnailAssets,omitempty" json:"canViewThumbnailAssets,omitempty"`

	EnableAmazonRedshiftOutputConnector bool `xml:"enableAmazonRedshiftOutputConnector,omitempty" json:"enableAmazonRedshiftOutputConnector,omitempty"`

	EnableAnalyticsEncryption bool `xml:"enableAnalyticsEncryption,omitempty" json:"enableAnalyticsEncryption,omitempty"`

	EnableAnalyticsSharingEnable bool `xml:"enableAnalyticsSharingEnable,omitempty" json:"enableAnalyticsSharingEnable,omitempty"`

	EnableAutoCompleteCombo bool `xml:"enableAutoCompleteCombo,omitempty" json:"enableAutoCompleteCombo,omitempty"`

	EnableAutonomousExperience bool `xml:"enableAutonomousExperience,omitempty" json:"enableAutonomousExperience,omitempty"`

	EnableAzureDLGen2OutputConnector bool `xml:"enableAzureDLGen2OutputConnector,omitempty" json:"enableAzureDLGen2OutputConnector,omitempty"`

	EnableC360GlobalProfileData bool `xml:"enableC360GlobalProfileData,omitempty" json:"enableC360GlobalProfileData,omitempty"`

	EnableCreateLegacyDataflows bool `xml:"enableCreateLegacyDataflows,omitempty" json:"enableCreateLegacyDataflows,omitempty"`

	EnableCrmaDataCloudIntegration bool `xml:"enableCrmaDataCloudIntegration,omitempty" json:"enableCrmaDataCloudIntegration,omitempty"`

	EnableDashboardChangeOwnerPref bool `xml:"enableDashboardChangeOwnerPref,omitempty" json:"enableDashboardChangeOwnerPref,omitempty"`

	EnableDashboardComponentSnapshot bool `xml:"enableDashboardComponentSnapshot,omitempty" json:"enableDashboardComponentSnapshot,omitempty"`

	EnableDashboardFlexiTable bool `xml:"enableDashboardFlexiTable,omitempty" json:"enableDashboardFlexiTable,omitempty"`

	EnableDashboardToPDFEnable bool `xml:"enableDashboardToPDFEnable,omitempty" json:"enableDashboardToPDFEnable,omitempty"`

	EnableDataCloudReportingPref bool `xml:"enableDataCloudReportingPref,omitempty" json:"enableDataCloudReportingPref,omitempty"`

	EnableEmailReportsToPortalUsers bool `xml:"enableEmailReportsToPortalUsers,omitempty" json:"enableEmailReportsToPortalUsers,omitempty"`

	EnableFirebirdEditor bool `xml:"enableFirebirdEditor,omitempty" json:"enableFirebirdEditor,omitempty"`

	EnableFloatingReportHeaders bool `xml:"enableFloatingReportHeaders,omitempty" json:"enableFloatingReportHeaders,omitempty"`

	EnableInsights bool `xml:"enableInsights,omitempty" json:"enableInsights,omitempty"`

	EnableInsightsHCMode bool `xml:"enableInsightsHCMode,omitempty" json:"enableInsightsHCMode,omitempty"`

	EnableLightningReportBuilder bool `xml:"enableLightningReportBuilder,omitempty" json:"enableLightningReportBuilder,omitempty"`

	EnableLotusNotesImages bool `xml:"enableLotusNotesImages,omitempty" json:"enableLotusNotesImages,omitempty"`

	EnableMassEnableReportBuilder bool `xml:"enableMassEnableReportBuilder,omitempty" json:"enableMassEnableReportBuilder,omitempty"`

	EnableNewChartsEngine bool `xml:"enableNewChartsEngine,omitempty" json:"enableNewChartsEngine,omitempty"`

	EnableNullDimension bool `xml:"enableNullDimension,omitempty" json:"enableNullDimension,omitempty"`

	EnableOrgCanSeeLivePreviews bool `xml:"enableOrgCanSeeLivePreviews,omitempty" json:"enableOrgCanSeeLivePreviews,omitempty"`

	EnableOrgCanViewTableau bool `xml:"enableOrgCanViewTableau,omitempty" json:"enableOrgCanViewTableau,omitempty"`

	EnableOrgCanViewThumbnailForOA bool `xml:"enableOrgCanViewThumbnailForOA,omitempty" json:"enableOrgCanViewThumbnailForOA,omitempty"`

	EnableOrgHasMobileOfflineEnabled bool `xml:"enableOrgHasMobileOfflineEnabled,omitempty" json:"enableOrgHasMobileOfflineEnabled,omitempty"`

	EnableOrgHasWatchlistEnabled bool `xml:"enableOrgHasWatchlistEnabled,omitempty" json:"enableOrgHasWatchlistEnabled,omitempty"`

	EnableQueryLiveConnectors bool `xml:"enableQueryLiveConnectors,omitempty" json:"enableQueryLiveConnectors,omitempty"`

	EnableRemoveFooterForRepDisplay bool `xml:"enableRemoveFooterForRepDisplay,omitempty" json:"enableRemoveFooterForRepDisplay,omitempty"`

	EnableRemoveFooterFromRepExp bool `xml:"enableRemoveFooterFromRepExp,omitempty" json:"enableRemoveFooterFromRepExp,omitempty"`

	EnableReportHideXlsExportPref bool `xml:"enableReportHideXlsExportPref,omitempty" json:"enableReportHideXlsExportPref,omitempty"`

	EnableReportInlineEditPref bool `xml:"enableReportInlineEditPref,omitempty" json:"enableReportInlineEditPref,omitempty"`

	EnableReportNotificationsEnable bool `xml:"enableReportNotificationsEnable,omitempty" json:"enableReportNotificationsEnable,omitempty"`

	EnableRequestPrioritySchdl bool `xml:"enableRequestPrioritySchdl,omitempty" json:"enableRequestPrioritySchdl,omitempty"`

	EnableS1AnalyticsEclairEnable bool `xml:"enableS1AnalyticsEclairEnable,omitempty" json:"enableS1AnalyticsEclairEnable,omitempty"`

	EnableS3OutputConnector bool `xml:"enableS3OutputConnector,omitempty" json:"enableS3OutputConnector,omitempty"`

	EnableSFXJoinedReportsEnable bool `xml:"enableSFXJoinedReportsEnable,omitempty" json:"enableSFXJoinedReportsEnable,omitempty"`

	EnableSalesforceOutputConnector bool `xml:"enableSalesforceOutputConnector,omitempty" json:"enableSalesforceOutputConnector,omitempty"`

	EnableSecureImageSharing bool `xml:"enableSecureImageSharing,omitempty" json:"enableSecureImageSharing,omitempty"`

	EnableSnowflakeOutputConnector bool `xml:"enableSnowflakeOutputConnector,omitempty" json:"enableSnowflakeOutputConnector,omitempty"`

	EnableTableauHyperOutputConnector bool `xml:"enableTableauHyperOutputConnector,omitempty" json:"enableTableauHyperOutputConnector,omitempty"`

	EnableUseOldChartsLookAndFeel bool `xml:"enableUseOldChartsLookAndFeel,omitempty" json:"enableUseOldChartsLookAndFeel,omitempty"`

	EnableWaveAssetsNewDateVersion bool `xml:"enableWaveAssetsNewDateVersion,omitempty" json:"enableWaveAssetsNewDateVersion,omitempty"`

	EnableWaveCustomFiscal bool `xml:"enableWaveCustomFiscal,omitempty" json:"enableWaveCustomFiscal,omitempty"`

	EnableWaveIndexMVDim bool `xml:"enableWaveIndexMVDim,omitempty" json:"enableWaveIndexMVDim,omitempty"`

	EnableWaveIndexMVDimV2 bool `xml:"enableWaveIndexMVDimV2,omitempty" json:"enableWaveIndexMVDimV2,omitempty"`

	EnableWaveMultiCurrency bool `xml:"enableWaveMultiCurrency,omitempty" json:"enableWaveMultiCurrency,omitempty"`

	EnableWaveRecordNavigation bool `xml:"enableWaveRecordNavigation,omitempty" json:"enableWaveRecordNavigation,omitempty"`

	EnableWaveReplication bool `xml:"enableWaveReplication,omitempty" json:"enableWaveReplication,omitempty"`

	EnableWaveSharingInheritance bool `xml:"enableWaveSharingInheritance,omitempty" json:"enableWaveSharingInheritance,omitempty"`

	EnableWaveSqlCFIndexing bool `xml:"enableWaveSqlCFIndexing,omitempty" json:"enableWaveSqlCFIndexing,omitempty"`

	EnableWaveTrendedDatasetCleanup bool `xml:"enableWaveTrendedDatasetCleanup,omitempty" json:"enableWaveTrendedDatasetCleanup,omitempty"`

	EtlOrchestrationPref bool `xml:"etlOrchestrationPref,omitempty" json:"etlOrchestrationPref,omitempty"`

	IsDiscoveryOptimizationEnabled bool `xml:"isDiscoveryOptimizationEnabled,omitempty" json:"isDiscoveryOptimizationEnabled,omitempty"`

	IsHighVolumePushbackEnabled bool `xml:"isHighVolumePushbackEnabled,omitempty" json:"isHighVolumePushbackEnabled,omitempty"`

	MaxHoursAppInProgress int32 `xml:"maxHoursAppInProgress,omitempty" json:"maxHoursAppInProgress,omitempty"`

	QueryCachingOptOut bool `xml:"queryCachingOptOut,omitempty" json:"queryCachingOptOut,omitempty"`

	RecipeDirectDataPref bool `xml:"recipeDirectDataPref,omitempty" json:"recipeDirectDataPref,omitempty"`

	RecipeFiscalPref bool `xml:"recipeFiscalPref,omitempty" json:"recipeFiscalPref,omitempty"`

	RecipePreCachingOptOut bool `xml:"recipePreCachingOptOut,omitempty" json:"recipePreCachingOptOut,omitempty"`

	RecipeStagedDataPref bool `xml:"recipeStagedDataPref,omitempty" json:"recipeStagedDataPref,omitempty"`

	ReplaceBlankMeasuresWithNulls bool `xml:"replaceBlankMeasuresWithNulls,omitempty" json:"replaceBlankMeasuresWithNulls,omitempty"`

	SetWaveIsYearEndFiscalYear bool `xml:"setWaveIsYearEndFiscalYear,omitempty" json:"setWaveIsYearEndFiscalYear,omitempty"`

	SonicEnabled bool `xml:"sonicEnabled,omitempty" json:"sonicEnabled,omitempty"`

	TurnOnTimeZones bool `xml:"turnOnTimeZones,omitempty" json:"turnOnTimeZones,omitempty"`
}

type AnimationRule struct {
	*Metadata

	AnimationFrequency string `xml:"animationFrequency,omitempty" json:"animationFrequency,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	RecordTypeContext string `xml:"recordTypeContext,omitempty" json:"recordTypeContext,omitempty"`

	RecordTypeName string `xml:"recordTypeName,omitempty" json:"recordTypeName,omitempty"`

	SobjectType string `xml:"sobjectType,omitempty" json:"sobjectType,omitempty"`

	TargetField string `xml:"targetField,omitempty" json:"targetField,omitempty"`

	TargetFieldChangeToValues string `xml:"targetFieldChangeToValues,omitempty" json:"targetFieldChangeToValues,omitempty"`
}

type ApexEmailNotifications struct {
	*Metadata

	ApexEmailNotification []*ApexEmailNotification `xml:"apexEmailNotification,omitempty" json:"apexEmailNotification,omitempty"`
}

type ApexEmailNotification struct {
	Email string `xml:"email,omitempty" json:"email,omitempty"`

	User string `xml:"user,omitempty" json:"user,omitempty"`
}

type ApexSettings struct {
	*Metadata

	DefaultQueueableDelay int32 `xml:"defaultQueueableDelay,omitempty" json:"defaultQueueableDelay,omitempty"`

	EnableAggregateCodeCoverageOnly bool `xml:"enableAggregateCodeCoverageOnly,omitempty" json:"enableAggregateCodeCoverageOnly,omitempty"`

	EnableApexAccessRightsPref bool `xml:"enableApexAccessRightsPref,omitempty" json:"enableApexAccessRightsPref,omitempty"`

	EnableApexApprovalLockUnlock bool `xml:"enableApexApprovalLockUnlock,omitempty" json:"enableApexApprovalLockUnlock,omitempty"`

	EnableApexCtrlImplicitWithSharingPref bool `xml:"enableApexCtrlImplicitWithSharingPref,omitempty" json:"enableApexCtrlImplicitWithSharingPref,omitempty"`

	EnableApexPropertyGetterPref bool `xml:"enableApexPropertyGetterPref,omitempty" json:"enableApexPropertyGetterPref,omitempty"`

	EnableAuraApexCtrlAuthUserAccessCheckPref bool `xml:"enableAuraApexCtrlAuthUserAccessCheckPref,omitempty" json:"enableAuraApexCtrlAuthUserAccessCheckPref,omitempty"`

	EnableAuraApexCtrlGuestUserAccessCheckPref bool `xml:"enableAuraApexCtrlGuestUserAccessCheckPref,omitempty" json:"enableAuraApexCtrlGuestUserAccessCheckPref,omitempty"`

	EnableCompileOnDeploy bool `xml:"enableCompileOnDeploy,omitempty" json:"enableCompileOnDeploy,omitempty"`

	EnableDisableParallelApexTesting bool `xml:"enableDisableParallelApexTesting,omitempty" json:"enableDisableParallelApexTesting,omitempty"`

	EnableDoNotEmailDebugLog bool `xml:"enableDoNotEmailDebugLog,omitempty" json:"enableDoNotEmailDebugLog,omitempty"`

	EnableGaplessTestAutoNum bool `xml:"enableGaplessTestAutoNum,omitempty" json:"enableGaplessTestAutoNum,omitempty"`

	EnableMngdCtrlActionAccessPref bool `xml:"enableMngdCtrlActionAccessPref,omitempty" json:"enableMngdCtrlActionAccessPref,omitempty"`

	EnableNonCertifiedApexMdCrud bool `xml:"enableNonCertifiedApexMdCrud,omitempty" json:"enableNonCertifiedApexMdCrud,omitempty"`

	EnableRestrictCommunityExecAnon bool `xml:"enableRestrictCommunityExecAnon,omitempty" json:"enableRestrictCommunityExecAnon,omitempty"`

	EnableSecureNoArgConstructorPref bool `xml:"enableSecureNoArgConstructorPref,omitempty" json:"enableSecureNoArgConstructorPref,omitempty"`
}

type ApexTestSuite struct {
	*Metadata

	TestClassName []string `xml:"testClassName,omitempty" json:"testClassName,omitempty"`
}

type AppExperienceSettings struct {
	*Metadata

	DoesHideAllAppsInAppLauncher bool `xml:"doesHideAllAppsInAppLauncher,omitempty" json:"doesHideAllAppsInAppLauncher,omitempty"`
}

type AppMenu struct {
	*Metadata

	AppMenuItems []*AppMenuItem `xml:"appMenuItems,omitempty" json:"appMenuItems,omitempty"`
}

type AppMenuItem struct {
	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Type_ string `xml:"type,omitempty" json:"type,omitempty"`
}

type AppointmentAssignmentPolicy struct {
	*Metadata

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	PolicyApplicableDuration *PolicyApplicableDuration `xml:"policyApplicableDuration,omitempty" json:"policyApplicableDuration,omitempty"`

	PolicyType *AssignmentPolicyType `xml:"policyType,omitempty" json:"policyType,omitempty"`

	UtilizationFactor *UtilizationFactor `xml:"utilizationFactor,omitempty" json:"utilizationFactor,omitempty"`
}

type AppointmentSchedulingPolicy struct {
	*Metadata

	AppointmentAssignmentPolicy string `xml:"appointmentAssignmentPolicy,omitempty" json:"appointmentAssignmentPolicy,omitempty"`

	AppointmentStartTimeInterval string `xml:"appointmentStartTimeInterval,omitempty" json:"appointmentStartTimeInterval,omitempty"`

	ExtCalEventHandler string `xml:"extCalEventHandler,omitempty" json:"extCalEventHandler,omitempty"`

	IsSvcTerrOpHoursWithShiftsUsed bool `xml:"isSvcTerrOpHoursWithShiftsUsed,omitempty" json:"isSvcTerrOpHoursWithShiftsUsed,omitempty"`

	IsSvcTerritoryMemberShiftUsed bool `xml:"isSvcTerritoryMemberShiftUsed,omitempty" json:"isSvcTerritoryMemberShiftUsed,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	ShouldCheckExternalCalendar bool `xml:"shouldCheckExternalCalendar,omitempty" json:"shouldCheckExternalCalendar,omitempty"`

	ShouldConsiderCalendarEvents bool `xml:"shouldConsiderCalendarEvents,omitempty" json:"shouldConsiderCalendarEvents,omitempty"`

	ShouldEnforceExcludedResource bool `xml:"shouldEnforceExcludedResource,omitempty" json:"shouldEnforceExcludedResource,omitempty"`

	ShouldEnforceRequiredResource bool `xml:"shouldEnforceRequiredResource,omitempty" json:"shouldEnforceRequiredResource,omitempty"`

	ShouldMatchSkill bool `xml:"shouldMatchSkill,omitempty" json:"shouldMatchSkill,omitempty"`

	ShouldMatchSkillLevel bool `xml:"shouldMatchSkillLevel,omitempty" json:"shouldMatchSkillLevel,omitempty"`

	ShouldRespectVisitingHours bool `xml:"shouldRespectVisitingHours,omitempty" json:"shouldRespectVisitingHours,omitempty"`

	ShouldUsePrimaryMembers bool `xml:"shouldUsePrimaryMembers,omitempty" json:"shouldUsePrimaryMembers,omitempty"`

	ShouldUseSecondaryMembers bool `xml:"shouldUseSecondaryMembers,omitempty" json:"shouldUseSecondaryMembers,omitempty"`
}

type ApprovalProcess struct {
	*Metadata

	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	AllowRecall bool `xml:"allowRecall,omitempty" json:"allowRecall,omitempty"`

	AllowedSubmitters []*ApprovalSubmitter `xml:"allowedSubmitters,omitempty" json:"allowedSubmitters,omitempty"`

	ApprovalPageFields *ApprovalPageField `xml:"approvalPageFields,omitempty" json:"approvalPageFields,omitempty"`

	ApprovalStep []*ApprovalStep `xml:"approvalStep,omitempty" json:"approvalStep,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	EmailTemplate string `xml:"emailTemplate,omitempty" json:"emailTemplate,omitempty"`

	EnableMobileDeviceAccess bool `xml:"enableMobileDeviceAccess,omitempty" json:"enableMobileDeviceAccess,omitempty"`

	EntryCriteria *ApprovalEntryCriteria `xml:"entryCriteria,omitempty" json:"entryCriteria,omitempty"`

	FinalApprovalActions *ApprovalAction `xml:"finalApprovalActions,omitempty" json:"finalApprovalActions,omitempty"`

	FinalApprovalRecordLock bool `xml:"finalApprovalRecordLock,omitempty" json:"finalApprovalRecordLock,omitempty"`

	FinalRejectionActions *ApprovalAction `xml:"finalRejectionActions,omitempty" json:"finalRejectionActions,omitempty"`

	FinalRejectionRecordLock bool `xml:"finalRejectionRecordLock,omitempty" json:"finalRejectionRecordLock,omitempty"`

	InitialSubmissionActions *ApprovalAction `xml:"initialSubmissionActions,omitempty" json:"initialSubmissionActions,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	NextAutomatedApprover *NextAutomatedApprover `xml:"nextAutomatedApprover,omitempty" json:"nextAutomatedApprover,omitempty"`

	PostTemplate string `xml:"postTemplate,omitempty" json:"postTemplate,omitempty"`

	ProcessOrder int32 `xml:"processOrder,omitempty" json:"processOrder,omitempty"`

	RecallActions *ApprovalAction `xml:"recallActions,omitempty" json:"recallActions,omitempty"`

	RecordEditability *RecordEditabilityType `xml:"recordEditability,omitempty" json:"recordEditability,omitempty"`

	ShowApprovalHistory bool `xml:"showApprovalHistory,omitempty" json:"showApprovalHistory,omitempty"`
}

type ApprovalSubmitter struct {
	Submitter string `xml:"submitter,omitempty" json:"submitter,omitempty"`

	Type_ *ProcessSubmitterType `xml:"type,omitempty" json:"type,omitempty"`
}

type ApprovalPageField struct {
	Field []string `xml:"field,omitempty" json:"field,omitempty"`
}

type ApprovalStep struct {
	AllowDelegate bool `xml:"allowDelegate,omitempty" json:"allowDelegate,omitempty"`

	ApprovalActions *ApprovalAction `xml:"approvalActions,omitempty" json:"approvalActions,omitempty"`

	AssignedApprover *ApprovalStepApprover `xml:"assignedApprover,omitempty" json:"assignedApprover,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	EntryCriteria *ApprovalEntryCriteria `xml:"entryCriteria,omitempty" json:"entryCriteria,omitempty"`

	IfCriteriaNotMet *StepCriteriaNotMetType `xml:"ifCriteriaNotMet,omitempty" json:"ifCriteriaNotMet,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	RejectBehavior *ApprovalStepRejectBehavior `xml:"rejectBehavior,omitempty" json:"rejectBehavior,omitempty"`

	RejectionActions *ApprovalAction `xml:"rejectionActions,omitempty" json:"rejectionActions,omitempty"`
}

type ApprovalAction struct {
	Action []*WorkflowActionReference `xml:"action,omitempty" json:"action,omitempty"`
}

type WorkflowActionReference struct {
	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Type_ *WorkflowActionType `xml:"type,omitempty" json:"type,omitempty"`
}

type ApprovalStepApprover struct {
	Approver []*Approver `xml:"approver,omitempty" json:"approver,omitempty"`

	WhenMultipleApprovers *RoutingType `xml:"whenMultipleApprovers,omitempty" json:"whenMultipleApprovers,omitempty"`
}

type Approver struct {
	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Type_ *NextOwnerType `xml:"type,omitempty" json:"type,omitempty"`
}

type ApprovalEntryCriteria struct {
	BooleanFilter string `xml:"booleanFilter,omitempty" json:"booleanFilter,omitempty"`

	CriteriaItems []*FilterItem `xml:"criteriaItems,omitempty" json:"criteriaItems,omitempty"`

	Formula string `xml:"formula,omitempty" json:"formula,omitempty"`
}

type FilterItem struct {
	Field string `xml:"field,omitempty" json:"field,omitempty"`

	Operation *FilterOperation `xml:"operation,omitempty" json:"operation,omitempty"`

	Value string `xml:"value,omitempty" json:"value,omitempty"`

	ValueField string `xml:"valueField,omitempty" json:"valueField,omitempty"`
}

type DuplicateRuleFilterItem struct {
	*FilterItem

	SortOrder int32 `xml:"sortOrder,omitempty" json:"sortOrder,omitempty"`

	Table string `xml:"table,omitempty" json:"table,omitempty"`
}

type ApprovalStepRejectBehavior struct {
	Type_ *StepRejectBehaviorType `xml:"type,omitempty" json:"type,omitempty"`
}

type NextAutomatedApprover struct {
	UseApproverFieldOfRecordOwner bool `xml:"useApproverFieldOfRecordOwner,omitempty" json:"useApproverFieldOfRecordOwner,omitempty"`

	UserHierarchyField string `xml:"userHierarchyField,omitempty" json:"userHierarchyField,omitempty"`
}

type AssignmentRule struct {
	*Metadata

	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	RuleEntry []*RuleEntry `xml:"ruleEntry,omitempty" json:"ruleEntry,omitempty"`
}

type RuleEntry struct {
	AssignedTo string `xml:"assignedTo,omitempty" json:"assignedTo,omitempty"`

	AssignedToType *AssignToLookupValueType `xml:"assignedToType,omitempty" json:"assignedToType,omitempty"`

	BooleanFilter string `xml:"booleanFilter,omitempty" json:"booleanFilter,omitempty"`

	BusinessHours string `xml:"businessHours,omitempty" json:"businessHours,omitempty"`

	BusinessHoursSource *BusinessHoursSourceType `xml:"businessHoursSource,omitempty" json:"businessHoursSource,omitempty"`

	CriteriaItems []*FilterItem `xml:"criteriaItems,omitempty" json:"criteriaItems,omitempty"`

	DisableEscalationWhenModified bool `xml:"disableEscalationWhenModified,omitempty" json:"disableEscalationWhenModified,omitempty"`

	EscalationAction []*EscalationAction `xml:"escalationAction,omitempty" json:"escalationAction,omitempty"`

	EscalationStartTime *EscalationStartTimeType `xml:"escalationStartTime,omitempty" json:"escalationStartTime,omitempty"`

	Formula string `xml:"formula,omitempty" json:"formula,omitempty"`

	NotifyCcRecipients bool `xml:"notifyCcRecipients,omitempty" json:"notifyCcRecipients,omitempty"`

	OverrideExistingTeams bool `xml:"overrideExistingTeams,omitempty" json:"overrideExistingTeams,omitempty"`

	ReplyToEmail string `xml:"replyToEmail,omitempty" json:"replyToEmail,omitempty"`

	SenderEmail string `xml:"senderEmail,omitempty" json:"senderEmail,omitempty"`

	SenderName string `xml:"senderName,omitempty" json:"senderName,omitempty"`

	Team []string `xml:"team,omitempty" json:"team,omitempty"`

	Template string `xml:"template,omitempty" json:"template,omitempty"`
}

type EscalationAction struct {
	AssignedTo string `xml:"assignedTo,omitempty" json:"assignedTo,omitempty"`

	AssignedToTemplate string `xml:"assignedToTemplate,omitempty" json:"assignedToTemplate,omitempty"`

	AssignedToType *AssignToLookupValueType `xml:"assignedToType,omitempty" json:"assignedToType,omitempty"`

	MinutesToEscalation int32 `xml:"minutesToEscalation,omitempty" json:"minutesToEscalation,omitempty"`

	NotifyCaseOwner bool `xml:"notifyCaseOwner,omitempty" json:"notifyCaseOwner,omitempty"`

	NotifyEmail []string `xml:"notifyEmail,omitempty" json:"notifyEmail,omitempty"`

	NotifyTo string `xml:"notifyTo,omitempty" json:"notifyTo,omitempty"`

	NotifyToTemplate string `xml:"notifyToTemplate,omitempty" json:"notifyToTemplate,omitempty"`
}

type AssignmentRules struct {
	*Metadata

	AssignmentRule []*AssignmentRule `xml:"assignmentRule,omitempty" json:"assignmentRule,omitempty"`
}

type Audience struct {
	*Metadata

	AudienceName string `xml:"audienceName,omitempty" json:"audienceName,omitempty"`

	Container string `xml:"container,omitempty" json:"container,omitempty"`

	Criteria *AudienceCriteria `xml:"criteria,omitempty" json:"criteria,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Formula string `xml:"formula,omitempty" json:"formula,omitempty"`

	FormulaFilterType *FormulaFilterType `xml:"formulaFilterType,omitempty" json:"formulaFilterType,omitempty"`

	IsDefaultAudience bool `xml:"isDefaultAudience,omitempty" json:"isDefaultAudience,omitempty"`

	Targets *PersonalizationTargetInfos `xml:"targets,omitempty" json:"targets,omitempty"`
}

type AudienceCriteria struct {
	Criterion []*AudienceCriterion `xml:"criterion,omitempty" json:"criterion,omitempty"`
}

type AudienceCriterion struct {
	CriteriaNumber int32 `xml:"criteriaNumber,omitempty" json:"criteriaNumber,omitempty"`

	CriterionValue *AudienceCriteriaValue `xml:"criterionValue,omitempty" json:"criterionValue,omitempty"`

	Operator *AudienceCriterionOperator `xml:"operator,omitempty" json:"operator,omitempty"`

	Type_ *AudienceCriterionType `xml:"type,omitempty" json:"type,omitempty"`
}

type AudienceCriteriaValue struct {
	AudienceDeveloperName string `xml:"audienceDeveloperName,omitempty" json:"audienceDeveloperName,omitempty"`

	City string `xml:"city,omitempty" json:"city,omitempty"`

	Country string `xml:"country,omitempty" json:"country,omitempty"`

	Domain string `xml:"domain,omitempty" json:"domain,omitempty"`

	EntityField string `xml:"entityField,omitempty" json:"entityField,omitempty"`

	EntityType string `xml:"entityType,omitempty" json:"entityType,omitempty"`

	FieldValue string `xml:"fieldValue,omitempty" json:"fieldValue,omitempty"`

	IsEnabled string `xml:"isEnabled,omitempty" json:"isEnabled,omitempty"`

	PermissionName string `xml:"permissionName,omitempty" json:"permissionName,omitempty"`

	PermissionType string `xml:"permissionType,omitempty" json:"permissionType,omitempty"`

	Profile string `xml:"profile,omitempty" json:"profile,omitempty"`

	Subdivision string `xml:"subdivision,omitempty" json:"subdivision,omitempty"`
}

type PersonalizationTargetInfos struct {
	Target []*PersonalizationTargetInfo `xml:"target,omitempty" json:"target,omitempty"`
}

type PersonalizationTargetInfo struct {
	GroupName string `xml:"groupName,omitempty" json:"groupName,omitempty"`

	Priority int32 `xml:"priority,omitempty" json:"priority,omitempty"`

	TargetType string `xml:"targetType,omitempty" json:"targetType,omitempty"`

	TargetValue string `xml:"targetValue,omitempty" json:"targetValue,omitempty"`
}

type AuraDefinitionBundle struct {
	*Metadata

	SVGContent []byte `xml:"SVGContent,omitempty" json:"SVGContent,omitempty"`

	ApiVersion float64 `xml:"apiVersion,omitempty" json:"apiVersion,omitempty"`

	AuraDefinitions *AuraDefinitions `xml:"auraDefinitions,omitempty" json:"auraDefinitions,omitempty"`

	ControllerContent []byte `xml:"controllerContent,omitempty" json:"controllerContent,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DesignContent []byte `xml:"designContent,omitempty" json:"designContent,omitempty"`

	DocumentationContent []byte `xml:"documentationContent,omitempty" json:"documentationContent,omitempty"`

	HelperContent []byte `xml:"helperContent,omitempty" json:"helperContent,omitempty"`

	Markup []byte `xml:"markup,omitempty" json:"markup,omitempty"`

	ModelContent []byte `xml:"modelContent,omitempty" json:"modelContent,omitempty"`

	PackageVersions []*PackageVersion `xml:"packageVersions,omitempty" json:"packageVersions,omitempty"`

	RendererContent []byte `xml:"rendererContent,omitempty" json:"rendererContent,omitempty"`

	StyleContent []byte `xml:"styleContent,omitempty" json:"styleContent,omitempty"`

	TestsuiteContent []byte `xml:"testsuiteContent,omitempty" json:"testsuiteContent,omitempty"`

	Type_ *AuraBundleType `xml:"type,omitempty" json:"type,omitempty"`
}

type AuraDefinitions struct {
	AuraDefinition []*AuraDefinition `xml:"auraDefinition,omitempty" json:"auraDefinition,omitempty"`
}

type AuraDefinition struct {
	DefType string `xml:"defType,omitempty" json:"defType,omitempty"`

	Source []byte `xml:"source,omitempty" json:"source,omitempty"`
}

type PackageVersion struct {
	MajorNumber int32 `xml:"majorNumber,omitempty" json:"majorNumber,omitempty"`

	MinorNumber int32 `xml:"minorNumber,omitempty" json:"minorNumber,omitempty"`

	Namespace string `xml:"namespace,omitempty" json:"namespace,omitempty"`
}

type AuthProvider struct {
	*Metadata

	AppleTeam string `xml:"appleTeam,omitempty" json:"appleTeam,omitempty"`

	AuthorizeUrl string `xml:"authorizeUrl,omitempty" json:"authorizeUrl,omitempty"`

	ConsumerKey string `xml:"consumerKey,omitempty" json:"consumerKey,omitempty"`

	ConsumerSecret string `xml:"consumerSecret,omitempty" json:"consumerSecret,omitempty"`

	ControlPlane *MuleSoftControlPlane `xml:"controlPlane,omitempty" json:"controlPlane,omitempty"`

	CustomMetadataTypeRecord string `xml:"customMetadataTypeRecord,omitempty" json:"customMetadataTypeRecord,omitempty"`

	DefaultScopes string `xml:"defaultScopes,omitempty" json:"defaultScopes,omitempty"`

	EcKey string `xml:"ecKey,omitempty" json:"ecKey,omitempty"`

	ErrorUrl string `xml:"errorUrl,omitempty" json:"errorUrl,omitempty"`

	ExecutionUser string `xml:"executionUser,omitempty" json:"executionUser,omitempty"`

	FriendlyName string `xml:"friendlyName,omitempty" json:"friendlyName,omitempty"`

	IconUrl string `xml:"iconUrl,omitempty" json:"iconUrl,omitempty"`

	IdTokenIssuer string `xml:"idTokenIssuer,omitempty" json:"idTokenIssuer,omitempty"`

	IncludeOrgIdInIdentifier bool `xml:"includeOrgIdInIdentifier,omitempty" json:"includeOrgIdInIdentifier,omitempty"`

	IsPkceEnabled bool `xml:"isPkceEnabled,omitempty" json:"isPkceEnabled,omitempty"`

	LinkKickoffUrl string `xml:"linkKickoffUrl,omitempty" json:"linkKickoffUrl,omitempty"`

	LogoutUrl string `xml:"logoutUrl,omitempty" json:"logoutUrl,omitempty"`

	OauthKickoffUrl string `xml:"oauthKickoffUrl,omitempty" json:"oauthKickoffUrl,omitempty"`

	Plugin string `xml:"plugin,omitempty" json:"plugin,omitempty"`

	Portal string `xml:"portal,omitempty" json:"portal,omitempty"`

	ProviderType *AuthProviderType `xml:"providerType,omitempty" json:"providerType,omitempty"`

	RegistrationHandler string `xml:"registrationHandler,omitempty" json:"registrationHandler,omitempty"`

	RequireMfa bool `xml:"requireMfa,omitempty" json:"requireMfa,omitempty"`

	SendAccessTokenInHeader bool `xml:"sendAccessTokenInHeader,omitempty" json:"sendAccessTokenInHeader,omitempty"`

	SendClientCredentialsInHeader bool `xml:"sendClientCredentialsInHeader,omitempty" json:"sendClientCredentialsInHeader,omitempty"`

	SendSecretInApis bool `xml:"sendSecretInApis,omitempty" json:"sendSecretInApis,omitempty"`

	SsoKickoffUrl string `xml:"ssoKickoffUrl,omitempty" json:"ssoKickoffUrl,omitempty"`

	TokenUrl string `xml:"tokenUrl,omitempty" json:"tokenUrl,omitempty"`

	UserInfoUrl string `xml:"userInfoUrl,omitempty" json:"userInfoUrl,omitempty"`
}

type AutoResponseRule struct {
	*Metadata

	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	RuleEntry []*RuleEntry `xml:"ruleEntry,omitempty" json:"ruleEntry,omitempty"`
}

type AutoResponseRules struct {
	*Metadata

	AutoResponseRule []*AutoResponseRule `xml:"autoResponseRule,omitempty" json:"autoResponseRule,omitempty"`
}

type AutomatedContactsSettings struct {
	*Metadata

	EnableAddContactAutomatically bool `xml:"enableAddContactAutomatically,omitempty" json:"enableAddContactAutomatically,omitempty"`

	EnableAddContactRoleAutomatically bool `xml:"enableAddContactRoleAutomatically,omitempty" json:"enableAddContactRoleAutomatically,omitempty"`

	EnableAddContactRoleWithSuggestion bool `xml:"enableAddContactRoleWithSuggestion,omitempty" json:"enableAddContactRoleWithSuggestion,omitempty"`

	EnableAddContactWithSuggestion bool `xml:"enableAddContactWithSuggestion,omitempty" json:"enableAddContactWithSuggestion,omitempty"`
}

type BlacklistedConsumer struct {
	*Metadata

	BlockedByApiWhitelisting bool `xml:"blockedByApiWhitelisting,omitempty" json:"blockedByApiWhitelisting,omitempty"`

	ConsumerKey string `xml:"consumerKey,omitempty" json:"consumerKey,omitempty"`

	ConsumerName string `xml:"consumerName,omitempty" json:"consumerName,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type BlockchainSettings struct {
	*Metadata

	EnableBcp bool `xml:"enableBcp,omitempty" json:"enableBcp,omitempty"`

	EnableEtpNft bool `xml:"enableEtpNft,omitempty" json:"enableEtpNft,omitempty"`
}

type Bot struct {
	*Metadata

	BotMlDomain *LocalMlDomain `xml:"botMlDomain,omitempty" json:"botMlDomain,omitempty"`

	BotUser string `xml:"botUser,omitempty" json:"botUser,omitempty"`

	BotVersions []*BotVersion `xml:"botVersions,omitempty" json:"botVersions,omitempty"`

	ContextVariables []*ConversationContextVariable `xml:"contextVariables,omitempty" json:"contextVariables,omitempty"`

	ConversationChannelProviders []*ConversationDefinitionChannelProvider `xml:"conversationChannelProviders,omitempty" json:"conversationChannelProviders,omitempty"`

	DefaultOutboundFlow string `xml:"defaultOutboundFlow,omitempty" json:"defaultOutboundFlow,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	LogPrivateConversationData bool `xml:"logPrivateConversationData,omitempty" json:"logPrivateConversationData,omitempty"`

	RichContentEnabled bool `xml:"richContentEnabled,omitempty" json:"richContentEnabled,omitempty"`

	SessionTimeout int32 `xml:"sessionTimeout,omitempty" json:"sessionTimeout,omitempty"`
}

type LocalMlDomain struct {
	Label string `xml:"label,omitempty" json:"label,omitempty"`

	MlIntents []*MlIntent `xml:"mlIntents,omitempty" json:"mlIntents,omitempty"`

	MlSlotClasses []*MlSlotClass `xml:"mlSlotClasses,omitempty" json:"mlSlotClasses,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type MlIntent struct {
	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	MlIntentUtterances []*MlIntentUtterance `xml:"mlIntentUtterances,omitempty" json:"mlIntentUtterances,omitempty"`

	RelatedMlIntents []*MlRelatedIntent `xml:"relatedMlIntents,omitempty" json:"relatedMlIntents,omitempty"`
}

type MlIntentUtterance struct {
	Language *Language `xml:"language,omitempty" json:"language,omitempty"`

	Utterance string `xml:"utterance,omitempty" json:"utterance,omitempty"`
}

type MlRelatedIntent struct {
	RelatedMlIntent string `xml:"relatedMlIntent,omitempty" json:"relatedMlIntent,omitempty"`
}

type MlSlotClass struct {
	DataType *MlSlotClassDataType `xml:"dataType,omitempty" json:"dataType,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	ExtractionRegex string `xml:"extractionRegex,omitempty" json:"extractionRegex,omitempty"`

	ExtractionType *MlSlotClassExtractionType `xml:"extractionType,omitempty" json:"extractionType,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	MlSlotClassValues []*MlSlotClassValue `xml:"mlSlotClassValues,omitempty" json:"mlSlotClassValues,omitempty"`
}

type MlSlotClassValue struct {
	SynonymGroup *SynonymGroup `xml:"synonymGroup,omitempty" json:"synonymGroup,omitempty"`

	SynonymGroups []*SynonymGroup `xml:"synonymGroups,omitempty" json:"synonymGroups,omitempty"`

	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type SynonymGroup struct {
	Languages []*Language `xml:"languages,omitempty" json:"languages,omitempty"`

	Terms []string `xml:"terms,omitempty" json:"terms,omitempty"`
}

type BotVersion struct {
	*Metadata

	ArticleAnswersGPTEnabled bool `xml:"articleAnswersGPTEnabled,omitempty" json:"articleAnswersGPTEnabled,omitempty"`

	BotDialogGroups []*BotDialogGroup `xml:"botDialogGroups,omitempty" json:"botDialogGroups,omitempty"`

	BotDialogs []*BotDialog `xml:"botDialogs,omitempty" json:"botDialogs,omitempty"`

	CitationsEnabled bool `xml:"citationsEnabled,omitempty" json:"citationsEnabled,omitempty"`

	ConversationGoals []*ConversationDefinitionGoal `xml:"conversationGoals,omitempty" json:"conversationGoals,omitempty"`

	ConversationSystemDialogs []*ConversationSystemDialog `xml:"conversationSystemDialogs,omitempty" json:"conversationSystemDialogs,omitempty"`

	ConversationVariables []*ConversationVariable `xml:"conversationVariables,omitempty" json:"conversationVariables,omitempty"`

	EntryDialog string `xml:"entryDialog,omitempty" json:"entryDialog,omitempty"`

	IntentDisambiguationEnabled bool `xml:"intentDisambiguationEnabled,omitempty" json:"intentDisambiguationEnabled,omitempty"`

	IntentV3Enabled bool `xml:"intentV3Enabled,omitempty" json:"intentV3Enabled,omitempty"`

	KnowledgeFallbackEnabled bool `xml:"knowledgeFallbackEnabled,omitempty" json:"knowledgeFallbackEnabled,omitempty"`

	MainMenuDialog string `xml:"mainMenuDialog,omitempty" json:"mainMenuDialog,omitempty"`

	NlpProviders []*ConversationDefinitionNlpProvider `xml:"nlpProviders,omitempty" json:"nlpProviders,omitempty"`

	ResponseDelayMilliseconds int32 `xml:"responseDelayMilliseconds,omitempty" json:"responseDelayMilliseconds,omitempty"`

	SmallTalkEnabled bool `xml:"smallTalkEnabled,omitempty" json:"smallTalkEnabled,omitempty"`
}

type BotDialogGroup struct {
	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`
}

type BotDialog struct {
	BotDialogGroup string `xml:"botDialogGroup,omitempty" json:"botDialogGroup,omitempty"`

	BotSteps []*BotStep `xml:"botSteps,omitempty" json:"botSteps,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	IsPlaceholderDialog bool `xml:"isPlaceholderDialog,omitempty" json:"isPlaceholderDialog,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	MlIntent string `xml:"mlIntent,omitempty" json:"mlIntent,omitempty"`

	MlIntentTrainingEnabled bool `xml:"mlIntentTrainingEnabled,omitempty" json:"mlIntentTrainingEnabled,omitempty"`

	ShowInFooterMenu bool `xml:"showInFooterMenu,omitempty" json:"showInFooterMenu,omitempty"`
}

type BotStep struct {
	BooleanFilter string `xml:"booleanFilter,omitempty" json:"booleanFilter,omitempty"`

	BotInvocation *BotInvocation `xml:"botInvocation,omitempty" json:"botInvocation,omitempty"`

	BotMessages []*BotMessage `xml:"botMessages,omitempty" json:"botMessages,omitempty"`

	BotNavigation *BotNavigation `xml:"botNavigation,omitempty" json:"botNavigation,omitempty"`

	BotStepConditions []*BotStepCondition `xml:"botStepConditions,omitempty" json:"botStepConditions,omitempty"`

	BotSteps []*BotStep `xml:"botSteps,omitempty" json:"botSteps,omitempty"`

	BotVariableOperation *BotVariableOperation `xml:"botVariableOperation,omitempty" json:"botVariableOperation,omitempty"`

	ConditionLogicType *ConversationDefinitionLogicalOperatorType `xml:"conditionLogicType,omitempty" json:"conditionLogicType,omitempty"`

	ConversationRecordLookup *ConversationRecordLookup `xml:"conversationRecordLookup,omitempty" json:"conversationRecordLookup,omitempty"`

	ConversationStepGoalMappings []*ConversationDefinitionStepGoalMapping `xml:"conversationStepGoalMappings,omitempty" json:"conversationStepGoalMappings,omitempty"`

	ConversationSystemMessage *ConversationSystemMessage `xml:"conversationSystemMessage,omitempty" json:"conversationSystemMessage,omitempty"`

	MessageDefinition *ConversationDefinitionRichMessage `xml:"messageDefinition,omitempty" json:"messageDefinition,omitempty"`

	StepIdentifier string `xml:"stepIdentifier,omitempty" json:"stepIdentifier,omitempty"`

	Type_ *BotStepType `xml:"type,omitempty" json:"type,omitempty"`
}

type BotInvocation struct {
	InvocationActionName string `xml:"invocationActionName,omitempty" json:"invocationActionName,omitempty"`

	InvocationActionType *ConversationInvocableTargetType `xml:"invocationActionType,omitempty" json:"invocationActionType,omitempty"`

	InvocationMappings []*BotInvocationMapping `xml:"invocationMappings,omitempty" json:"invocationMappings,omitempty"`
}

type BotInvocationMapping struct {
	ParameterName string `xml:"parameterName,omitempty" json:"parameterName,omitempty"`

	RecordName string `xml:"recordName,omitempty" json:"recordName,omitempty"`

	Type_ *BotInvocationMappingType `xml:"type,omitempty" json:"type,omitempty"`

	Value string `xml:"value,omitempty" json:"value,omitempty"`

	VariableName string `xml:"variableName,omitempty" json:"variableName,omitempty"`

	VariableType *ConversationVariableType `xml:"variableType,omitempty" json:"variableType,omitempty"`
}

type BotMessage struct {
	Message string `xml:"message,omitempty" json:"message,omitempty"`

	MessageIdentifier string `xml:"messageIdentifier,omitempty" json:"messageIdentifier,omitempty"`
}

type BotNavigation struct {
	BotNavigationLinks []*BotNavigationLink `xml:"botNavigationLinks,omitempty" json:"botNavigationLinks,omitempty"`

	Type_ *BotNavigationType `xml:"type,omitempty" json:"type,omitempty"`
}

type BotNavigationLink struct {
	Label string `xml:"label,omitempty" json:"label,omitempty"`

	TargetBotDialog string `xml:"targetBotDialog,omitempty" json:"targetBotDialog,omitempty"`

	TargetVariable string `xml:"targetVariable,omitempty" json:"targetVariable,omitempty"`

	TargetVariableType *ConversationVariableType `xml:"targetVariableType,omitempty" json:"targetVariableType,omitempty"`
}

type BotStepCondition struct {
	LeftOperandName string `xml:"leftOperandName,omitempty" json:"leftOperandName,omitempty"`

	LeftOperandType *ConversationVariableType `xml:"leftOperandType,omitempty" json:"leftOperandType,omitempty"`

	OperatorType *BotStepConditionOperatorType `xml:"operatorType,omitempty" json:"operatorType,omitempty"`

	RightOperandValue string `xml:"rightOperandValue,omitempty" json:"rightOperandValue,omitempty"`
}

type BotVariableOperation struct {
	AskCollectIfSet bool `xml:"askCollectIfSet,omitempty" json:"askCollectIfSet,omitempty"`

	AutoSelectIfSingleChoice bool `xml:"autoSelectIfSingleChoice,omitempty" json:"autoSelectIfSingleChoice,omitempty"`

	BotInvocation *BotInvocation `xml:"botInvocation,omitempty" json:"botInvocation,omitempty"`

	BotMessages []*BotMessage `xml:"botMessages,omitempty" json:"botMessages,omitempty"`

	BotQuickReplyOptions []*BotQuickReplyOption `xml:"botQuickReplyOptions,omitempty" json:"botQuickReplyOptions,omitempty"`

	BotVariableOperands []*BotVariableOperand `xml:"botVariableOperands,omitempty" json:"botVariableOperands,omitempty"`

	InvalidInputBotNavigation *BotNavigation `xml:"invalidInputBotNavigation,omitempty" json:"invalidInputBotNavigation,omitempty"`

	MessageDefinition *ConversationDefinitionRichMessage `xml:"messageDefinition,omitempty" json:"messageDefinition,omitempty"`

	OptionalCollect bool `xml:"optionalCollect,omitempty" json:"optionalCollect,omitempty"`

	QuickReplyOptionTemplate string `xml:"quickReplyOptionTemplate,omitempty" json:"quickReplyOptionTemplate,omitempty"`

	QuickReplyType *BotQuickReplyType `xml:"quickReplyType,omitempty" json:"quickReplyType,omitempty"`

	QuickReplyWidgetType *BotWidgetType `xml:"quickReplyWidgetType,omitempty" json:"quickReplyWidgetType,omitempty"`

	RetryMessages []*BotMessage `xml:"retryMessages,omitempty" json:"retryMessages,omitempty"`

	SourceVariableName string `xml:"sourceVariableName,omitempty" json:"sourceVariableName,omitempty"`

	SourceVariableType *ConversationVariableType `xml:"sourceVariableType,omitempty" json:"sourceVariableType,omitempty"`

	SuccessMessages []*BotMessage `xml:"successMessages,omitempty" json:"successMessages,omitempty"`

	Type_ *BotVariableOperationType `xml:"type,omitempty" json:"type,omitempty"`

	VariableOperationIdentifier string `xml:"variableOperationIdentifier,omitempty" json:"variableOperationIdentifier,omitempty"`
}

type BotQuickReplyOption struct {
	LiteralValue string `xml:"literalValue,omitempty" json:"literalValue,omitempty"`

	QuickReplyOptionIdentifier string `xml:"quickReplyOptionIdentifier,omitempty" json:"quickReplyOptionIdentifier,omitempty"`
}

type BotVariableOperand struct {
	DisableAutoFill bool `xml:"disableAutoFill,omitempty" json:"disableAutoFill,omitempty"`

	SourceName string `xml:"sourceName,omitempty" json:"sourceName,omitempty"`

	SourceType *ConversationVariableOperandSourceType `xml:"sourceType,omitempty" json:"sourceType,omitempty"`

	SourceValue string `xml:"sourceValue,omitempty" json:"sourceValue,omitempty"`

	TargetName string `xml:"targetName,omitempty" json:"targetName,omitempty"`

	TargetType *ConversationVariableType `xml:"targetType,omitempty" json:"targetType,omitempty"`
}

type ConversationDefinitionRichMessage struct {
	ExecutionType *ConversationMessageExecutionType `xml:"executionType,omitempty" json:"executionType,omitempty"`

	MessageDefinitionMappings []*BotInvocationMapping `xml:"messageDefinitionMappings,omitempty" json:"messageDefinitionMappings,omitempty"`

	MessageDefinitionName string `xml:"messageDefinitionName,omitempty" json:"messageDefinitionName,omitempty"`
}

type ConversationRecordLookup struct {
	SObjectType string `xml:"SObjectType,omitempty" json:"SObjectType,omitempty"`

	Conditions []*ConversationRecordLookupCondition `xml:"conditions,omitempty" json:"conditions,omitempty"`

	FilterLogic string `xml:"filterLogic,omitempty" json:"filterLogic,omitempty"`

	LookupFields []*ConversationRecordLookupField `xml:"lookupFields,omitempty" json:"lookupFields,omitempty"`

	MaxLookupResults int32 `xml:"maxLookupResults,omitempty" json:"maxLookupResults,omitempty"`

	SortFieldName string `xml:"sortFieldName,omitempty" json:"sortFieldName,omitempty"`

	SortOrder *SortOrder `xml:"sortOrder,omitempty" json:"sortOrder,omitempty"`

	SourceVariableName string `xml:"sourceVariableName,omitempty" json:"sourceVariableName,omitempty"`

	SourceVariableType *ConversationVariableType `xml:"sourceVariableType,omitempty" json:"sourceVariableType,omitempty"`

	TargetVariableName string `xml:"targetVariableName,omitempty" json:"targetVariableName,omitempty"`
}

type ConversationRecordLookupCondition struct {
	LeftOperand string `xml:"leftOperand,omitempty" json:"leftOperand,omitempty"`

	OperatorType string `xml:"operatorType,omitempty" json:"operatorType,omitempty"`

	RightOperandName string `xml:"rightOperandName,omitempty" json:"rightOperandName,omitempty"`

	RightOperandType *ConversationVariableType `xml:"rightOperandType,omitempty" json:"rightOperandType,omitempty"`

	RightOperandValue string `xml:"rightOperandValue,omitempty" json:"rightOperandValue,omitempty"`

	SortOrder int32 `xml:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

type ConversationRecordLookupField struct {
	FieldName string `xml:"fieldName,omitempty" json:"fieldName,omitempty"`
}

type ConversationDefinitionStepGoalMapping struct {
	GoalName string `xml:"goalName,omitempty" json:"goalName,omitempty"`
}

type ConversationSystemMessage struct {
	SystemMessageMappings []*ConversationSystemMessageMapping `xml:"systemMessageMappings,omitempty" json:"systemMessageMappings,omitempty"`

	Type_ *ConversationSystemMessageType `xml:"type,omitempty" json:"type,omitempty"`
}

type ConversationSystemMessageMapping struct {
	MappingType *ConversationMappingType `xml:"mappingType,omitempty" json:"mappingType,omitempty"`

	ParameterType *ConversationSystemMessageParamType `xml:"parameterType,omitempty" json:"parameterType,omitempty"`

	VariableName string `xml:"variableName,omitempty" json:"variableName,omitempty"`
}

type ConversationDefinitionGoal struct {
	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`
}

type ConversationSystemDialog struct {
	Dialog string `xml:"dialog,omitempty" json:"dialog,omitempty"`

	Type_ *ConversationSystemDialogType `xml:"type,omitempty" json:"type,omitempty"`
}

type ConversationVariable struct {
	SObjectType string `xml:"SObjectType,omitempty" json:"SObjectType,omitempty"`

	CollectionType *ConversationVariableCollectionType `xml:"collectionType,omitempty" json:"collectionType,omitempty"`

	DataType *ConversationDataType `xml:"dataType,omitempty" json:"dataType,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`
}

type ConversationDefinitionNlpProvider struct {
	Language *Language `xml:"language,omitempty" json:"language,omitempty"`

	NlpProviderName string `xml:"nlpProviderName,omitempty" json:"nlpProviderName,omitempty"`

	NlpProviderType *ConversationDefinitionNlpProviderType `xml:"nlpProviderType,omitempty" json:"nlpProviderType,omitempty"`
}

type ConversationContextVariable struct {
	SObjectType string `xml:"SObjectType,omitempty" json:"SObjectType,omitempty"`

	ContextVariableMappings []*ConversationContextVariableMapping `xml:"contextVariableMappings,omitempty" json:"contextVariableMappings,omitempty"`

	DataType *ConversationDataType `xml:"dataType,omitempty" json:"dataType,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`
}

type ConversationContextVariableMapping struct {
	SObjectType string `xml:"SObjectType,omitempty" json:"SObjectType,omitempty"`

	FieldName string `xml:"fieldName,omitempty" json:"fieldName,omitempty"`

	MessageType *MessageType `xml:"messageType,omitempty" json:"messageType,omitempty"`
}

type ConversationDefinitionChannelProvider struct {
	AgentRequired bool `xml:"agentRequired,omitempty" json:"agentRequired,omitempty"`

	ChatButtonName string `xml:"chatButtonName,omitempty" json:"chatButtonName,omitempty"`
}

type BotBlock struct {
	*Metadata

	BotBlockVersions []*BotBlockVersion `xml:"botBlockVersions,omitempty" json:"botBlockVersions,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Icon string `xml:"icon,omitempty" json:"icon,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	RichContentEnabled bool `xml:"richContentEnabled,omitempty" json:"richContentEnabled,omitempty"`
}

type BotBlockVersion struct {
	*Metadata

	BotDialogs []*BotDialog `xml:"botDialogs,omitempty" json:"botDialogs,omitempty"`

	ConversationGoals []*ConversationDefinitionGoal `xml:"conversationGoals,omitempty" json:"conversationGoals,omitempty"`

	ConversationLanguages string `xml:"conversationLanguages,omitempty" json:"conversationLanguages,omitempty"`

	ConversationVariables []*ConversationVariable `xml:"conversationVariables,omitempty" json:"conversationVariables,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	MlDomain *LocalMlDomain `xml:"mlDomain,omitempty" json:"mlDomain,omitempty"`

	PermissionSet string `xml:"permissionSet,omitempty" json:"permissionSet,omitempty"`

	Status *ConvDefBlockVersionStatus `xml:"status,omitempty" json:"status,omitempty"`
}

type BotSettings struct {
	*Metadata

	EnableBots bool `xml:"enableBots,omitempty" json:"enableBots,omitempty"`
}

type BotTemplate struct {
	*Metadata

	BotDialogGroups []*BotDialogGroup `xml:"botDialogGroups,omitempty" json:"botDialogGroups,omitempty"`

	BotDialogs []*BotDialog `xml:"botDialogs,omitempty" json:"botDialogs,omitempty"`

	ContextVariables []*ConversationContextVariable `xml:"contextVariables,omitempty" json:"contextVariables,omitempty"`

	ConversationGoals []*ConversationDefinitionGoal `xml:"conversationGoals,omitempty" json:"conversationGoals,omitempty"`

	ConversationLanguages string `xml:"conversationLanguages,omitempty" json:"conversationLanguages,omitempty"`

	ConversationSystemDialogs []*ConversationSystemDialog `xml:"conversationSystemDialogs,omitempty" json:"conversationSystemDialogs,omitempty"`

	ConversationVariables []*ConversationVariable `xml:"conversationVariables,omitempty" json:"conversationVariables,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	EntryDialog string `xml:"entryDialog,omitempty" json:"entryDialog,omitempty"`

	Icon string `xml:"icon,omitempty" json:"icon,omitempty"`

	MainMenuDialog string `xml:"mainMenuDialog,omitempty" json:"mainMenuDialog,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	MlDomain *LocalMlDomain `xml:"mlDomain,omitempty" json:"mlDomain,omitempty"`

	PermissionSet string `xml:"permissionSet,omitempty" json:"permissionSet,omitempty"`

	RichContentEnabled bool `xml:"richContentEnabled,omitempty" json:"richContentEnabled,omitempty"`
}

type BrandingSet struct {
	*Metadata

	BrandingSetProperty []*BrandingSetProperty `xml:"brandingSetProperty,omitempty" json:"brandingSetProperty,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	Type_ string `xml:"type,omitempty" json:"type,omitempty"`
}

type BrandingSetProperty struct {
	PropertyName string `xml:"propertyName,omitempty" json:"propertyName,omitempty"`

	PropertyValue string `xml:"propertyValue,omitempty" json:"propertyValue,omitempty"`
}

type BriefcaseDefinition struct {
	*Metadata

	BriefcaseRules []*BriefcaseRule `xml:"briefcaseRules,omitempty" json:"briefcaseRules,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	Type_ *BriefcaseType `xml:"type,omitempty" json:"type,omitempty"`
}

type BriefcaseRule struct {
	BriefcaseRuleFilters []*BriefcaseRuleFilter `xml:"briefcaseRuleFilters,omitempty" json:"briefcaseRuleFilters,omitempty"`

	FilterLogic string `xml:"filterLogic,omitempty" json:"filterLogic,omitempty"`

	IsAscendingOrder bool `xml:"isAscendingOrder,omitempty" json:"isAscendingOrder,omitempty"`

	OrderBy string `xml:"orderBy,omitempty" json:"orderBy,omitempty"`

	QueryScope *FilterScope `xml:"queryScope,omitempty" json:"queryScope,omitempty"`

	RecordLimit int32 `xml:"recordLimit,omitempty" json:"recordLimit,omitempty"`

	RelatedRules []*BriefcaseRule `xml:"relatedRules,omitempty" json:"relatedRules,omitempty"`

	RelationshipField string `xml:"relationshipField,omitempty" json:"relationshipField,omitempty"`

	RelationshipType *BriefcaseRuleRelationshipType `xml:"relationshipType,omitempty" json:"relationshipType,omitempty"`

	TargetEntity string `xml:"targetEntity,omitempty" json:"targetEntity,omitempty"`
}

type BriefcaseRuleFilter struct {
	FilterOperator *BriefcaseFilterOperator `xml:"filterOperator,omitempty" json:"filterOperator,omitempty"`

	FilterSeqNumber int32 `xml:"filterSeqNumber,omitempty" json:"filterSeqNumber,omitempty"`

	FilterValue string `xml:"filterValue,omitempty" json:"filterValue,omitempty"`

	TargetEntityField string `xml:"targetEntityField,omitempty" json:"targetEntityField,omitempty"`
}

type BusinessHoursEntry struct {
	*Metadata

	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	Default_ bool `xml:"default,omitempty" json:"default,omitempty"`

	FridayEndTime soap.XSDTime `xml:"fridayEndTime,omitempty" json:"fridayEndTime,omitempty"`

	FridayStartTime soap.XSDTime `xml:"fridayStartTime,omitempty" json:"fridayStartTime,omitempty"`

	MondayEndTime soap.XSDTime `xml:"mondayEndTime,omitempty" json:"mondayEndTime,omitempty"`

	MondayStartTime soap.XSDTime `xml:"mondayStartTime,omitempty" json:"mondayStartTime,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	SaturdayEndTime soap.XSDTime `xml:"saturdayEndTime,omitempty" json:"saturdayEndTime,omitempty"`

	SaturdayStartTime soap.XSDTime `xml:"saturdayStartTime,omitempty" json:"saturdayStartTime,omitempty"`

	SundayEndTime soap.XSDTime `xml:"sundayEndTime,omitempty" json:"sundayEndTime,omitempty"`

	SundayStartTime soap.XSDTime `xml:"sundayStartTime,omitempty" json:"sundayStartTime,omitempty"`

	ThursdayEndTime soap.XSDTime `xml:"thursdayEndTime,omitempty" json:"thursdayEndTime,omitempty"`

	ThursdayStartTime soap.XSDTime `xml:"thursdayStartTime,omitempty" json:"thursdayStartTime,omitempty"`

	TimeZoneId string `xml:"timeZoneId,omitempty" json:"timeZoneId,omitempty"`

	TuesdayEndTime soap.XSDTime `xml:"tuesdayEndTime,omitempty" json:"tuesdayEndTime,omitempty"`

	TuesdayStartTime soap.XSDTime `xml:"tuesdayStartTime,omitempty" json:"tuesdayStartTime,omitempty"`

	WednesdayEndTime soap.XSDTime `xml:"wednesdayEndTime,omitempty" json:"wednesdayEndTime,omitempty"`

	WednesdayStartTime soap.XSDTime `xml:"wednesdayStartTime,omitempty" json:"wednesdayStartTime,omitempty"`
}

type BusinessHoursSettings struct {
	*Metadata

	BusinessHours []*BusinessHoursEntry `xml:"businessHours,omitempty" json:"businessHours,omitempty"`

	Holidays []*Holiday `xml:"holidays,omitempty" json:"holidays,omitempty"`
}

type Holiday struct {
	ActivityDate soap.XSDDate `xml:"activityDate,omitempty" json:"activityDate,omitempty"`

	BusinessHours []string `xml:"businessHours,omitempty" json:"businessHours,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	EndTime soap.XSDTime `xml:"endTime,omitempty" json:"endTime,omitempty"`

	IsRecurring bool `xml:"isRecurring,omitempty" json:"isRecurring,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	RecurrenceDayOfMonth int32 `xml:"recurrenceDayOfMonth,omitempty" json:"recurrenceDayOfMonth,omitempty"`

	RecurrenceDayOfWeek []string `xml:"recurrenceDayOfWeek,omitempty" json:"recurrenceDayOfWeek,omitempty"`

	RecurrenceDayOfWeekMask int32 `xml:"recurrenceDayOfWeekMask,omitempty" json:"recurrenceDayOfWeekMask,omitempty"`

	RecurrenceEndDate soap.XSDDate `xml:"recurrenceEndDate,omitempty" json:"recurrenceEndDate,omitempty"`

	RecurrenceInstance string `xml:"recurrenceInstance,omitempty" json:"recurrenceInstance,omitempty"`

	RecurrenceInterval int32 `xml:"recurrenceInterval,omitempty" json:"recurrenceInterval,omitempty"`

	RecurrenceMonthOfYear string `xml:"recurrenceMonthOfYear,omitempty" json:"recurrenceMonthOfYear,omitempty"`

	RecurrenceStartDate soap.XSDDate `xml:"recurrenceStartDate,omitempty" json:"recurrenceStartDate,omitempty"`

	RecurrenceType string `xml:"recurrenceType,omitempty" json:"recurrenceType,omitempty"`

	StartTime soap.XSDTime `xml:"startTime,omitempty" json:"startTime,omitempty"`
}

type BusinessProcess struct {
	*Metadata

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	Values []*PicklistValue `xml:"values,omitempty" json:"values,omitempty"`
}

type PicklistValue struct {
	*Metadata

	Color string `xml:"color,omitempty" json:"color,omitempty"`

	Default_ bool `xml:"default,omitempty" json:"default,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	AllowEmail bool `xml:"allowEmail,omitempty" json:"allowEmail,omitempty"`

	Closed bool `xml:"closed,omitempty" json:"closed,omitempty"`

	ControllingFieldValues []string `xml:"controllingFieldValues,omitempty" json:"controllingFieldValues,omitempty"`

	Converted bool `xml:"converted,omitempty" json:"converted,omitempty"`

	CssExposed bool `xml:"cssExposed,omitempty" json:"cssExposed,omitempty"`

	ForecastCategory *ForecastCategories `xml:"forecastCategory,omitempty" json:"forecastCategory,omitempty"`

	HighPriority bool `xml:"highPriority,omitempty" json:"highPriority,omitempty"`

	Probability int32 `xml:"probability,omitempty" json:"probability,omitempty"`

	ReverseRole string `xml:"reverseRole,omitempty" json:"reverseRole,omitempty"`

	Reviewed bool `xml:"reviewed,omitempty" json:"reviewed,omitempty"`

	Won bool `xml:"won,omitempty" json:"won,omitempty"`
}

type BusinessProcessGroup struct {
	*Metadata

	BusinessProcessDefinitions []*BusinessProcessDefinition `xml:"businessProcessDefinitions,omitempty" json:"businessProcessDefinitions,omitempty"`

	CustomerSatisfactionMetric *SurveyQuestionType `xml:"customerSatisfactionMetric,omitempty" json:"customerSatisfactionMetric,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type BusinessProcessDefinition struct {
	BusinessProcessFeedbacks []*BusinessProcessFeedback `xml:"businessProcessFeedbacks,omitempty" json:"businessProcessFeedbacks,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	SequenceNumber int32 `xml:"sequenceNumber,omitempty" json:"sequenceNumber,omitempty"`
}

type BusinessProcessFeedback struct {
	ActionName string `xml:"actionName,omitempty" json:"actionName,omitempty"`

	ActionParam string `xml:"actionParam,omitempty" json:"actionParam,omitempty"`

	ActionType *ExpFeedbackCollType `xml:"actionType,omitempty" json:"actionType,omitempty"`
}

type CMSConnectSource struct {
	*Metadata

	CmsConnectAsset []*CMSConnectAsset `xml:"cmsConnectAsset,omitempty" json:"cmsConnectAsset,omitempty"`

	CmsConnectLanguage []*CMSConnectLanguage `xml:"cmsConnectLanguage,omitempty" json:"cmsConnectLanguage,omitempty"`

	CmsConnectPersonalization *CMSConnectPersonalization `xml:"cmsConnectPersonalization,omitempty" json:"cmsConnectPersonalization,omitempty"`

	CmsConnectResourceType []*CMSConnectResourceType `xml:"cmsConnectResourceType,omitempty" json:"cmsConnectResourceType,omitempty"`

	ConnectionType *CMSSourceConnectionType `xml:"connectionType,omitempty" json:"connectionType,omitempty"`

	CssScope string `xml:"cssScope,omitempty" json:"cssScope,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	LanguageEnabled string `xml:"languageEnabled,omitempty" json:"languageEnabled,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	NamedCredential string `xml:"namedCredential,omitempty" json:"namedCredential,omitempty"`

	PersonalizationEnabled string `xml:"personalizationEnabled,omitempty" json:"personalizationEnabled,omitempty"`

	RootPath string `xml:"rootPath,omitempty" json:"rootPath,omitempty"`

	SortOrder int32 `xml:"sortOrder,omitempty" json:"sortOrder,omitempty"`

	Status *CMSConnectionStatus `xml:"status,omitempty" json:"status,omitempty"`

	Type_ *CMSConnectionSourceType `xml:"type,omitempty" json:"type,omitempty"`

	WebsiteUrl string `xml:"websiteUrl,omitempty" json:"websiteUrl,omitempty"`
}

type CMSConnectAsset struct {
	AssetPath string `xml:"assetPath,omitempty" json:"assetPath,omitempty"`

	AssetType string `xml:"assetType,omitempty" json:"assetType,omitempty"`

	SortOrder int32 `xml:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

type CMSConnectLanguage struct {
	CmsLanguage string `xml:"cmsLanguage,omitempty" json:"cmsLanguage,omitempty"`

	Language string `xml:"language,omitempty" json:"language,omitempty"`
}

type CMSConnectPersonalization struct {
	ConnectorPage string `xml:"connectorPage,omitempty" json:"connectorPage,omitempty"`

	ConnectorPageAsset string `xml:"connectorPageAsset,omitempty" json:"connectorPageAsset,omitempty"`
}

type CMSConnectResourceType struct {
	CmsConnectResourceDefinition []*CMSConnectResourceDefinition `xml:"cmsConnectResourceDefinition,omitempty" json:"cmsConnectResourceDefinition,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	ResourceType string `xml:"resourceType,omitempty" json:"resourceType,omitempty"`
}

type CMSConnectResourceDefinition struct {
	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	Options int32 `xml:"options,omitempty" json:"options,omitempty"`

	PayloadType string `xml:"payloadType,omitempty" json:"payloadType,omitempty"`

	ResourceIdPath string `xml:"resourceIdPath,omitempty" json:"resourceIdPath,omitempty"`

	ResourceNamePath string `xml:"resourceNamePath,omitempty" json:"resourceNamePath,omitempty"`

	ResourcePath string `xml:"resourcePath,omitempty" json:"resourcePath,omitempty"`

	RootNodePath string `xml:"rootNodePath,omitempty" json:"rootNodePath,omitempty"`
}

type CallCenter struct {
	*Metadata

	AdapterUrl string `xml:"adapterUrl,omitempty" json:"adapterUrl,omitempty"`

	ContactCenterChannels []*ContactCenterChannel `xml:"contactCenterChannels,omitempty" json:"contactCenterChannels,omitempty"`

	CustomSettings string `xml:"customSettings,omitempty" json:"customSettings,omitempty"`

	DisplayName string `xml:"displayName,omitempty" json:"displayName,omitempty"`

	DisplayNameLabel string `xml:"displayNameLabel,omitempty" json:"displayNameLabel,omitempty"`

	InternalNameLabel string `xml:"internalNameLabel,omitempty" json:"internalNameLabel,omitempty"`

	Sections []*CallCenterSection `xml:"sections,omitempty" json:"sections,omitempty"`

	VendorCallCenterStatusMaps []*VendorCallCenterStatusMap `xml:"vendorCallCenterStatusMaps,omitempty" json:"vendorCallCenterStatusMaps,omitempty"`

	Version string `xml:"version,omitempty" json:"version,omitempty"`
}

type ContactCenterChannel struct {
	Channel string `xml:"channel,omitempty" json:"channel,omitempty"`
}

type CallCenterSection struct {
	Items []*CallCenterItem `xml:"items,omitempty" json:"items,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type CallCenterItem struct {
	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type VendorCallCenterStatusMap struct {
	ExternalStatus string `xml:"externalStatus,omitempty" json:"externalStatus,omitempty"`

	ServicePresenceStatus string `xml:"servicePresenceStatus,omitempty" json:"servicePresenceStatus,omitempty"`
}

type CallCenterRoutingMap struct {
	*Metadata

	CallCenter string `xml:"callCenter,omitempty" json:"callCenter,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	ExternalId string `xml:"externalId,omitempty" json:"externalId,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	QuickConnect string `xml:"quickConnect,omitempty" json:"quickConnect,omitempty"`

	ReferenceRecord string `xml:"referenceRecord,omitempty" json:"referenceRecord,omitempty"`
}

type CallCoachingMediaProvider struct {
	*Metadata

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	ProviderDescription string `xml:"providerDescription,omitempty" json:"providerDescription,omitempty"`

	ProviderName string `xml:"providerName,omitempty" json:"providerName,omitempty"`
}

type CallCtrAgentFavTrfrDest struct {
	*Metadata

	Agent string `xml:"agent,omitempty" json:"agent,omitempty"`

	CallCenter string `xml:"callCenter,omitempty" json:"callCenter,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	TransferDestination string `xml:"transferDestination,omitempty" json:"transferDestination,omitempty"`
}

type CampaignInfluenceModel struct {
	*Metadata

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	IsDefaultModel bool `xml:"isDefaultModel,omitempty" json:"isDefaultModel,omitempty"`

	IsModelLocked bool `xml:"isModelLocked,omitempty" json:"isModelLocked,omitempty"`

	ModelDescription string `xml:"modelDescription,omitempty" json:"modelDescription,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	RecordPreference string `xml:"recordPreference,omitempty" json:"recordPreference,omitempty"`
}

type CampaignSettings struct {
	*Metadata

	AiAttributionTimeframe int32 `xml:"aiAttributionTimeframe,omitempty" json:"aiAttributionTimeframe,omitempty"`

	EnableAIAttribution bool `xml:"enableAIAttribution,omitempty" json:"enableAIAttribution,omitempty"`

	EnableAccountsAsCM bool `xml:"enableAccountsAsCM,omitempty" json:"enableAccountsAsCM,omitempty"`

	EnableAutoCampInfluenceDisabled bool `xml:"enableAutoCampInfluenceDisabled,omitempty" json:"enableAutoCampInfluenceDisabled,omitempty"`

	EnableB2bmaCampaignInfluence2 bool `xml:"enableB2bmaCampaignInfluence2,omitempty" json:"enableB2bmaCampaignInfluence2,omitempty"`

	EnableCampaignHistoryTrackEnabled bool `xml:"enableCampaignHistoryTrackEnabled,omitempty" json:"enableCampaignHistoryTrackEnabled,omitempty"`

	EnableCampaignInfluence2 bool `xml:"enableCampaignInfluence2,omitempty" json:"enableCampaignInfluence2,omitempty"`

	EnableCampaignMemberTWCF bool `xml:"enableCampaignMemberTWCF,omitempty" json:"enableCampaignMemberTWCF,omitempty"`

	EnableEKAI bool `xml:"enableEKAI,omitempty" json:"enableEKAI,omitempty"`

	EnableSuppressNoValueCI2 bool `xml:"enableSuppressNoValueCI2,omitempty" json:"enableSuppressNoValueCI2,omitempty"`
}

type CanvasMetadata struct {
	*Metadata

	AccessMethod string `xml:"accessMethod,omitempty" json:"accessMethod,omitempty"`

	CanvasOptions string `xml:"canvasOptions,omitempty" json:"canvasOptions,omitempty"`

	CanvasUrl string `xml:"canvasUrl,omitempty" json:"canvasUrl,omitempty"`

	LifecycleClass string `xml:"lifecycleClass,omitempty" json:"lifecycleClass,omitempty"`

	LocationOptions string `xml:"locationOptions,omitempty" json:"locationOptions,omitempty"`

	SamlInitiationMethod string `xml:"samlInitiationMethod,omitempty" json:"samlInitiationMethod,omitempty"`
}

type CareBenefitVerifySettings struct {
	*Metadata

	CodeSetType string `xml:"codeSetType,omitempty" json:"codeSetType,omitempty"`

	DefaultNpi string `xml:"defaultNpi,omitempty" json:"defaultNpi,omitempty"`

	GeneralPlanServiceTypeCode string `xml:"generalPlanServiceTypeCode,omitempty" json:"generalPlanServiceTypeCode,omitempty"`

	IsDefault bool `xml:"isDefault,omitempty" json:"isDefault,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	OrganizationName string `xml:"organizationName,omitempty" json:"organizationName,omitempty"`

	ServiceApexClass string `xml:"serviceApexClass,omitempty" json:"serviceApexClass,omitempty"`

	ServiceNamedCredential string `xml:"serviceNamedCredential,omitempty" json:"serviceNamedCredential,omitempty"`

	ServiceTypeSourceSystem string `xml:"serviceTypeSourceSystem,omitempty" json:"serviceTypeSourceSystem,omitempty"`

	UriPath string `xml:"uriPath,omitempty" json:"uriPath,omitempty"`
}

type CareRequestConfiguration struct {
	*Metadata

	CareRequestRecordType string `xml:"careRequestRecordType,omitempty" json:"careRequestRecordType,omitempty"`

	CareRequestRecords []*CareRequestRecords `xml:"careRequestRecords,omitempty" json:"careRequestRecords,omitempty"`

	CareRequestType string `xml:"careRequestType,omitempty" json:"careRequestType,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	IsDefaultRecordType bool `xml:"isDefaultRecordType,omitempty" json:"isDefaultRecordType,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type CareRequestRecords struct {
	CareRequestRecord string `xml:"careRequestRecord,omitempty" json:"careRequestRecord,omitempty"`
}

type CaseSettings struct {
	*Metadata

	CaseAssignNotificationTemplate string `xml:"caseAssignNotificationTemplate,omitempty" json:"caseAssignNotificationTemplate,omitempty"`

	CaseAutoProcUser bool `xml:"caseAutoProcUser,omitempty" json:"caseAutoProcUser,omitempty"`

	CaseCloseNotificationTemplate string `xml:"caseCloseNotificationTemplate,omitempty" json:"caseCloseNotificationTemplate,omitempty"`

	CaseCommentNotificationTemplate string `xml:"caseCommentNotificationTemplate,omitempty" json:"caseCommentNotificationTemplate,omitempty"`

	CaseCreateNotificationTemplate string `xml:"caseCreateNotificationTemplate,omitempty" json:"caseCreateNotificationTemplate,omitempty"`

	CaseFeedItemSettings []*FeedItemSettings `xml:"caseFeedItemSettings,omitempty" json:"caseFeedItemSettings,omitempty"`

	CaseFeedReadUnreadLtng bool `xml:"caseFeedReadUnreadLtng,omitempty" json:"caseFeedReadUnreadLtng,omitempty"`

	CaseMergeInLightning bool `xml:"caseMergeInLightning,omitempty" json:"caseMergeInLightning,omitempty"`

	CloseCaseThroughStatusChange bool `xml:"closeCaseThroughStatusChange,omitempty" json:"closeCaseThroughStatusChange,omitempty"`

	DefaultCaseFeedLayoutOn bool `xml:"defaultCaseFeedLayoutOn,omitempty" json:"defaultCaseFeedLayoutOn,omitempty"`

	DefaultCaseOwner string `xml:"defaultCaseOwner,omitempty" json:"defaultCaseOwner,omitempty"`

	DefaultCaseOwnerType string `xml:"defaultCaseOwnerType,omitempty" json:"defaultCaseOwnerType,omitempty"`

	DefaultCaseUser string `xml:"defaultCaseUser,omitempty" json:"defaultCaseUser,omitempty"`

	EmailActionDefaultsHandlerClass string `xml:"emailActionDefaultsHandlerClass,omitempty" json:"emailActionDefaultsHandlerClass,omitempty"`

	EmailToCase *EmailToCaseSettings `xml:"emailToCase,omitempty" json:"emailToCase,omitempty"`

	EnableCaseFeed bool `xml:"enableCaseFeed,omitempty" json:"enableCaseFeed,omitempty"`

	EnableCaseSwarming bool `xml:"enableCaseSwarming,omitempty" json:"enableCaseSwarming,omitempty"`

	EnableCollapseEmailThread bool `xml:"enableCollapseEmailThread,omitempty" json:"enableCollapseEmailThread,omitempty"`

	EnableDraftEmails bool `xml:"enableDraftEmails,omitempty" json:"enableDraftEmails,omitempty"`

	EnableEarlyEscalationRuleTriggers bool `xml:"enableEarlyEscalationRuleTriggers,omitempty" json:"enableEarlyEscalationRuleTriggers,omitempty"`

	EnableEmailActionDefaultsHandler bool `xml:"enableEmailActionDefaultsHandler,omitempty" json:"enableEmailActionDefaultsHandler,omitempty"`

	EnableEmailContactOnCasePost bool `xml:"enableEmailContactOnCasePost,omitempty" json:"enableEmailContactOnCasePost,omitempty"`

	EnableEscalateQfiToCaseInternal bool `xml:"enableEscalateQfiToCaseInternal,omitempty" json:"enableEscalateQfiToCaseInternal,omitempty"`

	EnableEscalateQfiToCaseNetworks bool `xml:"enableEscalateQfiToCaseNetworks,omitempty" json:"enableEscalateQfiToCaseNetworks,omitempty"`

	EnableExtNetworksCaseFeedEnabled bool `xml:"enableExtNetworksCaseFeedEnabled,omitempty" json:"enableExtNetworksCaseFeedEnabled,omitempty"`

	EnableMultiLangSolnSrchCSS bool `xml:"enableMultiLangSolnSrchCSS,omitempty" json:"enableMultiLangSolnSrchCSS,omitempty"`

	EnableMultiLangSolnSrchPKB bool `xml:"enableMultiLangSolnSrchPKB,omitempty" json:"enableMultiLangSolnSrchPKB,omitempty"`

	EnableMultiLangSolution bool `xml:"enableMultiLangSolution,omitempty" json:"enableMultiLangSolution,omitempty"`

	EnableSolutionCategory bool `xml:"enableSolutionCategory,omitempty" json:"enableSolutionCategory,omitempty"`

	EnableSolutionInlineCategory bool `xml:"enableSolutionInlineCategory,omitempty" json:"enableSolutionInlineCategory,omitempty"`

	EnableSolutionShortSummary bool `xml:"enableSolutionShortSummary,omitempty" json:"enableSolutionShortSummary,omitempty"`

	EnableSuggestedArticlesApplication bool `xml:"enableSuggestedArticlesApplication,omitempty" json:"enableSuggestedArticlesApplication,omitempty"`

	EnableSuggestedArticlesCustomerPortal bool `xml:"enableSuggestedArticlesCustomerPortal,omitempty" json:"enableSuggestedArticlesCustomerPortal,omitempty"`

	EnableSuggestedArticlesPartnerPortal bool `xml:"enableSuggestedArticlesPartnerPortal,omitempty" json:"enableSuggestedArticlesPartnerPortal,omitempty"`

	EnableSuggestedSolutions bool `xml:"enableSuggestedSolutions,omitempty" json:"enableSuggestedSolutions,omitempty"`

	EscalateCaseBefore bool `xml:"escalateCaseBefore,omitempty" json:"escalateCaseBefore,omitempty"`

	GenericMessageEnabled bool `xml:"genericMessageEnabled,omitempty" json:"genericMessageEnabled,omitempty"`

	KeepCaseMergeRecords bool `xml:"keepCaseMergeRecords,omitempty" json:"keepCaseMergeRecords,omitempty"`

	KeepRecordTypeOnAssignmentRule bool `xml:"keepRecordTypeOnAssignmentRule,omitempty" json:"keepRecordTypeOnAssignmentRule,omitempty"`

	NotifyContactOnCaseComment bool `xml:"notifyContactOnCaseComment,omitempty" json:"notifyContactOnCaseComment,omitempty"`

	NotifyDefaultCaseOwner bool `xml:"notifyDefaultCaseOwner,omitempty" json:"notifyDefaultCaseOwner,omitempty"`

	NotifyOwnerOnCaseComment bool `xml:"notifyOwnerOnCaseComment,omitempty" json:"notifyOwnerOnCaseComment,omitempty"`

	NotifyOwnerOnCaseOwnerChange bool `xml:"notifyOwnerOnCaseOwnerChange,omitempty" json:"notifyOwnerOnCaseOwnerChange,omitempty"`

	PredictiveSupportEnabled bool `xml:"predictiveSupportEnabled,omitempty" json:"predictiveSupportEnabled,omitempty"`

	ShowEmailAttachmentsInCaseAttachmentsRL bool `xml:"showEmailAttachmentsInCaseAttachmentsRL,omitempty" json:"showEmailAttachmentsInCaseAttachmentsRL,omitempty"`

	ShowFewerCloseActions bool `xml:"showFewerCloseActions,omitempty" json:"showFewerCloseActions,omitempty"`

	SystemUserEmail string `xml:"systemUserEmail,omitempty" json:"systemUserEmail,omitempty"`

	UseSystemEmailAddress bool `xml:"useSystemEmailAddress,omitempty" json:"useSystemEmailAddress,omitempty"`

	UseSystemUserAsDefaultCaseUser bool `xml:"useSystemUserAsDefaultCaseUser,omitempty" json:"useSystemUserAsDefaultCaseUser,omitempty"`

	VisibleInCssCheckbox bool `xml:"visibleInCssCheckbox,omitempty" json:"visibleInCssCheckbox,omitempty"`

	WebToCase *WebToCaseSettings `xml:"webToCase,omitempty" json:"webToCase,omitempty"`
}

type FeedItemSettings struct {
	CharacterLimit int32 `xml:"characterLimit,omitempty" json:"characterLimit,omitempty"`

	DisplayFormat *FeedItemDisplayFormat `xml:"displayFormat,omitempty" json:"displayFormat,omitempty"`

	FeedItemType *FeedItemType `xml:"feedItemType,omitempty" json:"feedItemType,omitempty"`
}

type EmailToCaseSettings struct {
	EnableE2CAttachmentAsFile bool `xml:"enableE2CAttachmentAsFile,omitempty" json:"enableE2CAttachmentAsFile,omitempty"`

	EnableE2CSourceTracking bool `xml:"enableE2CSourceTracking,omitempty" json:"enableE2CSourceTracking,omitempty"`

	EnableEmailToCase bool `xml:"enableEmailToCase,omitempty" json:"enableEmailToCase,omitempty"`

	EnableHtmlEmail bool `xml:"enableHtmlEmail,omitempty" json:"enableHtmlEmail,omitempty"`

	EnableOnDemandEmailToCase bool `xml:"enableOnDemandEmailToCase,omitempty" json:"enableOnDemandEmailToCase,omitempty"`

	EnableThreadIDInBody bool `xml:"enableThreadIDInBody,omitempty" json:"enableThreadIDInBody,omitempty"`

	EnableThreadIDInSubject bool `xml:"enableThreadIDInSubject,omitempty" json:"enableThreadIDInSubject,omitempty"`

	NotifyOwnerOnNewCaseEmail bool `xml:"notifyOwnerOnNewCaseEmail,omitempty" json:"notifyOwnerOnNewCaseEmail,omitempty"`

	OverEmailLimitAction *EmailToCaseOnFailureActionType `xml:"overEmailLimitAction,omitempty" json:"overEmailLimitAction,omitempty"`

	PreQuoteSignature bool `xml:"preQuoteSignature,omitempty" json:"preQuoteSignature,omitempty"`

	RoutingAddresses []*EmailToCaseRoutingAddress `xml:"routingAddresses,omitempty" json:"routingAddresses,omitempty"`

	UnauthorizedSenderAction *EmailToCaseOnFailureActionType `xml:"unauthorizedSenderAction,omitempty" json:"unauthorizedSenderAction,omitempty"`
}

type EmailToCaseRoutingAddress struct {
	AddressType *EmailToCaseRoutingAddressType `xml:"addressType,omitempty" json:"addressType,omitempty"`

	AuthorizedSenders string `xml:"authorizedSenders,omitempty" json:"authorizedSenders,omitempty"`

	CaseOrigin string `xml:"caseOrigin,omitempty" json:"caseOrigin,omitempty"`

	CaseOwner string `xml:"caseOwner,omitempty" json:"caseOwner,omitempty"`

	CaseOwnerType string `xml:"caseOwnerType,omitempty" json:"caseOwnerType,omitempty"`

	CasePriority string `xml:"casePriority,omitempty" json:"casePriority,omitempty"`

	CreateTask bool `xml:"createTask,omitempty" json:"createTask,omitempty"`

	EmailAddress string `xml:"emailAddress,omitempty" json:"emailAddress,omitempty"`

	EmailServicesAddress string `xml:"emailServicesAddress,omitempty" json:"emailServicesAddress,omitempty"`

	FallbackQueue string `xml:"fallbackQueue,omitempty" json:"fallbackQueue,omitempty"`

	IsVerified bool `xml:"isVerified,omitempty" json:"isVerified,omitempty"`

	RoutingFlow string `xml:"routingFlow,omitempty" json:"routingFlow,omitempty"`

	RoutingName string `xml:"routingName,omitempty" json:"routingName,omitempty"`

	SaveEmailHeaders bool `xml:"saveEmailHeaders,omitempty" json:"saveEmailHeaders,omitempty"`

	TaskStatus string `xml:"taskStatus,omitempty" json:"taskStatus,omitempty"`
}

type WebToCaseSettings struct {
	CaseOrigin string `xml:"caseOrigin,omitempty" json:"caseOrigin,omitempty"`

	DefaultResponseTemplate string `xml:"defaultResponseTemplate,omitempty" json:"defaultResponseTemplate,omitempty"`

	EnableWebToCase bool `xml:"enableWebToCase,omitempty" json:"enableWebToCase,omitempty"`
}

type CaseSubjectParticle struct {
	*Metadata

	Index int32 `xml:"index,omitempty" json:"index,omitempty"`

	TextField string `xml:"textField,omitempty" json:"textField,omitempty"`

	Type_ *CaseSubjectParticleType `xml:"type,omitempty" json:"type,omitempty"`
}

type ChannelLayout struct {
	*Metadata

	DoesExcludeFieldLabels bool `xml:"doesExcludeFieldLabels,omitempty" json:"doesExcludeFieldLabels,omitempty"`

	DoesExcludeFiles bool `xml:"doesExcludeFiles,omitempty" json:"doesExcludeFiles,omitempty"`

	EnabledChannels []string `xml:"enabledChannels,omitempty" json:"enabledChannels,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	LayoutItems []*ChannelLayoutItem `xml:"layoutItems,omitempty" json:"layoutItems,omitempty"`

	RecordType string `xml:"recordType,omitempty" json:"recordType,omitempty"`
}

type ChannelLayoutItem struct {
	Field string `xml:"field,omitempty" json:"field,omitempty"`
}

type ChannelObjectLinkingRule struct {
	*Metadata

	ActionForNoRecordFound *ActionForNoRecordFound `xml:"actionForNoRecordFound,omitempty" json:"actionForNoRecordFound,omitempty"`

	ActionForSingleRecordFound *ActionForSingleRecordFound `xml:"actionForSingleRecordFound,omitempty" json:"actionForSingleRecordFound,omitempty"`

	ChannelType *ChannelType `xml:"channelType,omitempty" json:"channelType,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	IsLinkedRecordOpenedAsSubTab bool `xml:"isLinkedRecordOpenedAsSubTab,omitempty" json:"isLinkedRecordOpenedAsSubTab,omitempty"`

	IsRuleActive bool `xml:"isRuleActive,omitempty" json:"isRuleActive,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	ObjectToLink *ObjectToLink `xml:"objectToLink,omitempty" json:"objectToLink,omitempty"`

	RuleName string `xml:"ruleName,omitempty" json:"ruleName,omitempty"`
}

type ChatterAnswersSettings struct {
	*Metadata

	EmailFollowersOnBestAnswer bool `xml:"emailFollowersOnBestAnswer,omitempty" json:"emailFollowersOnBestAnswer,omitempty"`

	EmailFollowersOnReply bool `xml:"emailFollowersOnReply,omitempty" json:"emailFollowersOnReply,omitempty"`

	EmailOwnerOnPrivateReply bool `xml:"emailOwnerOnPrivateReply,omitempty" json:"emailOwnerOnPrivateReply,omitempty"`

	EmailOwnerOnReply bool `xml:"emailOwnerOnReply,omitempty" json:"emailOwnerOnReply,omitempty"`

	EnableAnswerViaEmail bool `xml:"enableAnswerViaEmail,omitempty" json:"enableAnswerViaEmail,omitempty"`

	EnableChatterAnswers bool `xml:"enableChatterAnswers,omitempty" json:"enableChatterAnswers,omitempty"`

	EnableFacebookSSO bool `xml:"enableFacebookSSO,omitempty" json:"enableFacebookSSO,omitempty"`

	EnableInlinePublisher bool `xml:"enableInlinePublisher,omitempty" json:"enableInlinePublisher,omitempty"`

	EnableReputation bool `xml:"enableReputation,omitempty" json:"enableReputation,omitempty"`

	EnableRichTextEditor bool `xml:"enableRichTextEditor,omitempty" json:"enableRichTextEditor,omitempty"`

	FacebookAuthProvider string `xml:"facebookAuthProvider,omitempty" json:"facebookAuthProvider,omitempty"`

	ShowInPortals bool `xml:"showInPortals,omitempty" json:"showInPortals,omitempty"`
}

type ChatterEmailsMDSettings struct {
	*Metadata

	EnableChatterDigestEmailsApiOnly bool `xml:"enableChatterDigestEmailsApiOnly,omitempty" json:"enableChatterDigestEmailsApiOnly,omitempty"`

	EnableChatterEmailAttachment bool `xml:"enableChatterEmailAttachment,omitempty" json:"enableChatterEmailAttachment,omitempty"`

	EnableCollaborationEmail bool `xml:"enableCollaborationEmail,omitempty" json:"enableCollaborationEmail,omitempty"`

	EnableDisplayAppDownloadBadges bool `xml:"enableDisplayAppDownloadBadges,omitempty" json:"enableDisplayAppDownloadBadges,omitempty"`

	EnableEmailReplyToChatter bool `xml:"enableEmailReplyToChatter,omitempty" json:"enableEmailReplyToChatter,omitempty"`

	EnableEmailToChatter bool `xml:"enableEmailToChatter,omitempty" json:"enableEmailToChatter,omitempty"`

	NoQnOwnNotifyOnCaseCmt bool `xml:"noQnOwnNotifyOnCaseCmt,omitempty" json:"noQnOwnNotifyOnCaseCmt,omitempty"`

	NoQnOwnNotifyOnRep bool `xml:"noQnOwnNotifyOnRep,omitempty" json:"noQnOwnNotifyOnRep,omitempty"`

	NoQnSubNotifyOnBestR bool `xml:"noQnSubNotifyOnBestR,omitempty" json:"noQnSubNotifyOnBestR,omitempty"`

	NoQnSubNotifyOnRep bool `xml:"noQnSubNotifyOnRep,omitempty" json:"noQnSubNotifyOnRep,omitempty"`
}

type ChatterExtension struct {
	*Metadata

	CompositionComponent string `xml:"compositionComponent,omitempty" json:"compositionComponent,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	ExtensionName string `xml:"extensionName,omitempty" json:"extensionName,omitempty"`

	HeaderText string `xml:"headerText,omitempty" json:"headerText,omitempty"`

	HoverText string `xml:"hoverText,omitempty" json:"hoverText,omitempty"`

	Icon string `xml:"icon,omitempty" json:"icon,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	RenderComponent string `xml:"renderComponent,omitempty" json:"renderComponent,omitempty"`

	Type_ *ChatterExtensionType `xml:"type,omitempty" json:"type,omitempty"`
}

type ChatterSettings struct {
	*Metadata

	AllowChatterGroupArchiving bool `xml:"allowChatterGroupArchiving,omitempty" json:"allowChatterGroupArchiving,omitempty"`

	AllowRecordsInChatterGroup bool `xml:"allowRecordsInChatterGroup,omitempty" json:"allowRecordsInChatterGroup,omitempty"`

	EnableApprovalRequest bool `xml:"enableApprovalRequest,omitempty" json:"enableApprovalRequest,omitempty"`

	EnableCaseFeedRelativeTimestamps bool `xml:"enableCaseFeedRelativeTimestamps,omitempty" json:"enableCaseFeedRelativeTimestamps,omitempty"`

	EnableChatter bool `xml:"enableChatter,omitempty" json:"enableChatter,omitempty"`

	EnableChatterEmoticons bool `xml:"enableChatterEmoticons,omitempty" json:"enableChatterEmoticons,omitempty"`

	EnableFeedEdit bool `xml:"enableFeedEdit,omitempty" json:"enableFeedEdit,omitempty"`

	EnableFeedPinning bool `xml:"enableFeedPinning,omitempty" json:"enableFeedPinning,omitempty"`

	EnableFeedsDraftPosts bool `xml:"enableFeedsDraftPosts,omitempty" json:"enableFeedsDraftPosts,omitempty"`

	EnableFeedsRichText bool `xml:"enableFeedsRichText,omitempty" json:"enableFeedsRichText,omitempty"`

	EnableInviteCsnUsers bool `xml:"enableInviteCsnUsers,omitempty" json:"enableInviteCsnUsers,omitempty"`

	EnableOutOfOfficeEnabledPref bool `xml:"enableOutOfOfficeEnabledPref,omitempty" json:"enableOutOfOfficeEnabledPref,omitempty"`

	EnableRichLinkPreviewsInFeed bool `xml:"enableRichLinkPreviewsInFeed,omitempty" json:"enableRichLinkPreviewsInFeed,omitempty"`

	EnableTodayRecsInFeed bool `xml:"enableTodayRecsInFeed,omitempty" json:"enableTodayRecsInFeed,omitempty"`

	UnlistedGroupsEnabled bool `xml:"unlistedGroupsEnabled,omitempty" json:"unlistedGroupsEnabled,omitempty"`
}

type CleanDataService struct {
	*Metadata

	CleanRules []*CleanRule `xml:"cleanRules,omitempty" json:"cleanRules,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	MatchEngine string `xml:"matchEngine,omitempty" json:"matchEngine,omitempty"`
}

type CleanRule struct {
	BulkEnabled bool `xml:"bulkEnabled,omitempty" json:"bulkEnabled,omitempty"`

	BypassTriggers bool `xml:"bypassTriggers,omitempty" json:"bypassTriggers,omitempty"`

	BypassWorkflow bool `xml:"bypassWorkflow,omitempty" json:"bypassWorkflow,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	FieldMappings []*FieldMapping `xml:"fieldMappings,omitempty" json:"fieldMappings,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	MatchRule string `xml:"matchRule,omitempty" json:"matchRule,omitempty"`

	SourceSobjectType string `xml:"sourceSobjectType,omitempty" json:"sourceSobjectType,omitempty"`

	Status *CleanRuleStatus `xml:"status,omitempty" json:"status,omitempty"`

	TargetSobjectType string `xml:"targetSobjectType,omitempty" json:"targetSobjectType,omitempty"`
}

type FieldMapping struct {
	SObjectType string `xml:"SObjectType,omitempty" json:"SObjectType,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	FieldMappingRows []*FieldMappingRow `xml:"fieldMappingRows,omitempty" json:"fieldMappingRows,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type FieldMappingRow struct {
	SObjectType string `xml:"SObjectType,omitempty" json:"SObjectType,omitempty"`

	FieldMappingFields []*FieldMappingField `xml:"fieldMappingFields,omitempty" json:"fieldMappingFields,omitempty"`

	FieldName string `xml:"fieldName,omitempty" json:"fieldName,omitempty"`

	MappingOperation *MappingOperation `xml:"mappingOperation,omitempty" json:"mappingOperation,omitempty"`
}

type FieldMappingField struct {
	DataServiceField string `xml:"dataServiceField,omitempty" json:"dataServiceField,omitempty"`

	DataServiceObjectName string `xml:"dataServiceObjectName,omitempty" json:"dataServiceObjectName,omitempty"`

	Priority int32 `xml:"priority,omitempty" json:"priority,omitempty"`
}

type CommandAction struct {
	*Metadata

	ActionType string `xml:"actionType,omitempty" json:"actionType,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Intents []*CommandActionIntent `xml:"intents,omitempty" json:"intents,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Parameters []*CommandActionParam `xml:"parameters,omitempty" json:"parameters,omitempty"`

	ResponseTemplates []*CommandActionResponse `xml:"responseTemplates,omitempty" json:"responseTemplates,omitempty"`

	Target string `xml:"target,omitempty" json:"target,omitempty"`
}

type CommandActionIntent struct {
	Phrase string `xml:"phrase,omitempty" json:"phrase,omitempty"`

	ResponseTemplates []*CommandActionResponse `xml:"responseTemplates,omitempty" json:"responseTemplates,omitempty"`
}

type CommandActionResponse struct {
	Template string `xml:"template,omitempty" json:"template,omitempty"`
}

type CommandActionParam struct {
	DefaultValue string `xml:"defaultValue,omitempty" json:"defaultValue,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Required bool `xml:"required,omitempty" json:"required,omitempty"`

	Type_ string `xml:"type,omitempty" json:"type,omitempty"`
}

type CommerceSettings struct {
	*Metadata

	CommerceEnabled bool `xml:"commerceEnabled,omitempty" json:"commerceEnabled,omitempty"`

	LowestUnitPriceTracking bool `xml:"lowestUnitPriceTracking,omitempty" json:"lowestUnitPriceTracking,omitempty"`
}

type CommsServiceConsoleSettings struct {
	*Metadata

	EnableCommsServiceConsole bool `xml:"enableCommsServiceConsole,omitempty" json:"enableCommsServiceConsole,omitempty"`
}

type CommunitiesSettings struct {
	*Metadata

	ApplyLoginPageTypeToEmbeddedLogin bool `xml:"applyLoginPageTypeToEmbeddedLogin,omitempty" json:"applyLoginPageTypeToEmbeddedLogin,omitempty"`

	BlockEmbeddedLoginUnknownURLRedirect bool `xml:"blockEmbeddedLoginUnknownURLRedirect,omitempty" json:"blockEmbeddedLoginUnknownURLRedirect,omitempty"`

	CanModerateAllFeedPosts bool `xml:"canModerateAllFeedPosts,omitempty" json:"canModerateAllFeedPosts,omitempty"`

	CanModerateInternalFeedPosts bool `xml:"canModerateInternalFeedPosts,omitempty" json:"canModerateInternalFeedPosts,omitempty"`

	EmbeddedVisualforcePages bool `xml:"embeddedVisualforcePages,omitempty" json:"embeddedVisualforcePages,omitempty"`

	EnableCommunityWorkspaces bool `xml:"enableCommunityWorkspaces,omitempty" json:"enableCommunityWorkspaces,omitempty"`

	EnableCspContactVisibilityPref bool `xml:"enableCspContactVisibilityPref,omitempty" json:"enableCspContactVisibilityPref,omitempty"`

	EnableCspNotesOnAccConPref bool `xml:"enableCspNotesOnAccConPref,omitempty" json:"enableCspNotesOnAccConPref,omitempty"`

	EnableEnablePRM bool `xml:"enableEnablePRM,omitempty" json:"enableEnablePRM,omitempty"`

	EnableExternalAccHierPref bool `xml:"enableExternalAccHierPref,omitempty" json:"enableExternalAccHierPref,omitempty"`

	EnableGuestPermDisOptOutCruc bool `xml:"enableGuestPermDisOptOutCruc,omitempty" json:"enableGuestPermDisOptOutCruc,omitempty"`

	EnableGuestRecordReassignOrgPref bool `xml:"enableGuestRecordReassignOrgPref,omitempty" json:"enableGuestRecordReassignOrgPref,omitempty"`

	EnableGuestSecurityOptOutCruc bool `xml:"enableGuestSecurityOptOutCruc,omitempty" json:"enableGuestSecurityOptOutCruc,omitempty"`

	EnableGuvSecurityOptOutPref bool `xml:"enableGuvSecurityOptOutPref,omitempty" json:"enableGuvSecurityOptOutPref,omitempty"`

	EnableInviteChatterGuestEnabled bool `xml:"enableInviteChatterGuestEnabled,omitempty" json:"enableInviteChatterGuestEnabled,omitempty"`

	EnableNameFieldsUserPIIEnabled bool `xml:"enableNameFieldsUserPIIEnabled,omitempty" json:"enableNameFieldsUserPIIEnabled,omitempty"`

	EnableNetPortalUserReportOpts bool `xml:"enableNetPortalUserReportOpts,omitempty" json:"enableNetPortalUserReportOpts,omitempty"`

	EnableNetworksEnabled bool `xml:"enableNetworksEnabled,omitempty" json:"enableNetworksEnabled,omitempty"`

	EnableOotbProfExtUserOpsEnable bool `xml:"enableOotbProfExtUserOpsEnable,omitempty" json:"enableOotbProfExtUserOpsEnable,omitempty"`

	EnablePRMAccRelPref bool `xml:"enablePRMAccRelPref,omitempty" json:"enablePRMAccRelPref,omitempty"`

	EnablePowerCustomerCaseStatus bool `xml:"enablePowerCustomerCaseStatus,omitempty" json:"enablePowerCustomerCaseStatus,omitempty"`

	EnablePreventBadgeGuestAccess bool `xml:"enablePreventBadgeGuestAccess,omitempty" json:"enablePreventBadgeGuestAccess,omitempty"`

	EnableRelaxPartnerAccountFieldPref bool `xml:"enableRelaxPartnerAccountFieldPref,omitempty" json:"enableRelaxPartnerAccountFieldPref,omitempty"`

	EnableUnsupportedBrowserModalPref bool `xml:"enableUnsupportedBrowserModalPref,omitempty" json:"enableUnsupportedBrowserModalPref,omitempty"`

	EnableUsernameUniqForOrgPref bool `xml:"enableUsernameUniqForOrgPref,omitempty" json:"enableUsernameUniqForOrgPref,omitempty"`
}

type Community struct {
	*Metadata

	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	ChatterAnswersFacebookSsoUrl string `xml:"chatterAnswersFacebookSsoUrl,omitempty" json:"chatterAnswersFacebookSsoUrl,omitempty"`

	CommunityFeedPage string `xml:"communityFeedPage,omitempty" json:"communityFeedPage,omitempty"`

	DataCategoryName string `xml:"dataCategoryName,omitempty" json:"dataCategoryName,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	EmailFooterDocument string `xml:"emailFooterDocument,omitempty" json:"emailFooterDocument,omitempty"`

	EmailHeaderDocument string `xml:"emailHeaderDocument,omitempty" json:"emailHeaderDocument,omitempty"`

	EmailNotificationUrl string `xml:"emailNotificationUrl,omitempty" json:"emailNotificationUrl,omitempty"`

	EnableChatterAnswers bool `xml:"enableChatterAnswers,omitempty" json:"enableChatterAnswers,omitempty"`

	EnablePrivateQuestions bool `xml:"enablePrivateQuestions,omitempty" json:"enablePrivateQuestions,omitempty"`

	ExpertsGroup string `xml:"expertsGroup,omitempty" json:"expertsGroup,omitempty"`

	Portal string `xml:"portal,omitempty" json:"portal,omitempty"`

	ReputationLevels *ReputationLevels `xml:"reputationLevels,omitempty" json:"reputationLevels,omitempty"`

	ShowInPortal bool `xml:"showInPortal,omitempty" json:"showInPortal,omitempty"`

	Site string `xml:"site,omitempty" json:"site,omitempty"`
}

type ReputationLevels struct {
	ChatterAnswersReputationLevels []*ChatterAnswersReputationLevel `xml:"chatterAnswersReputationLevels,omitempty" json:"chatterAnswersReputationLevels,omitempty"`

	IdeaReputationLevels []*IdeaReputationLevel `xml:"ideaReputationLevels,omitempty" json:"ideaReputationLevels,omitempty"`
}

type ChatterAnswersReputationLevel struct {
	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Value int32 `xml:"value,omitempty" json:"value,omitempty"`
}

type IdeaReputationLevel struct {
	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Value int32 `xml:"value,omitempty" json:"value,omitempty"`
}

type CommunityTemplateDefinition struct {
	*Metadata

	BaseTemplate *CommunityBaseTemplate `xml:"baseTemplate,omitempty" json:"baseTemplate,omitempty"`

	BundlesInfo []*CommunityTemplateBundleInfo `xml:"bundlesInfo,omitempty" json:"bundlesInfo,omitempty"`

	Category *CommunityTemplateCategory `xml:"category,omitempty" json:"category,omitempty"`

	DefaultBrandingSet string `xml:"defaultBrandingSet,omitempty" json:"defaultBrandingSet,omitempty"`

	DefaultThemeDefinition string `xml:"defaultThemeDefinition,omitempty" json:"defaultThemeDefinition,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	EnableExtendedCleanUpOnDelete bool `xml:"enableExtendedCleanUpOnDelete,omitempty" json:"enableExtendedCleanUpOnDelete,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	NavigationLinkSet []*NavigationLinkSet `xml:"navigationLinkSet,omitempty" json:"navigationLinkSet,omitempty"`

	PageSetting []*CommunityTemplatePageSetting `xml:"pageSetting,omitempty" json:"pageSetting,omitempty"`

	Publisher string `xml:"publisher,omitempty" json:"publisher,omitempty"`
}

type CommunityTemplateBundleInfo struct {
	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Image string `xml:"image,omitempty" json:"image,omitempty"`

	Order int32 `xml:"order,omitempty" json:"order,omitempty"`

	Title string `xml:"title,omitempty" json:"title,omitempty"`

	Type_ *CommunityTemplateBundleInfoType `xml:"type,omitempty" json:"type,omitempty"`
}

type CommunityThemeBundleInfo struct {
	*CommunityTemplateBundleInfo
}

type NavigationLinkSet struct {
	NavigationMenuItem []*NavigationMenuItem `xml:"navigationMenuItem,omitempty" json:"navigationMenuItem,omitempty"`
}

type NavigationMenuItem struct {
	DefaultListViewId string `xml:"defaultListViewId,omitempty" json:"defaultListViewId,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	MenuItemBranding *NavigationMenuItemBranding `xml:"menuItemBranding,omitempty" json:"menuItemBranding,omitempty"`

	Position int32 `xml:"position,omitempty" json:"position,omitempty"`

	PubliclyAvailable bool `xml:"publiclyAvailable,omitempty" json:"publiclyAvailable,omitempty"`

	SubMenu *NavigationSubMenu `xml:"subMenu,omitempty" json:"subMenu,omitempty"`

	Target string `xml:"target,omitempty" json:"target,omitempty"`

	TargetPreference string `xml:"targetPreference,omitempty" json:"targetPreference,omitempty"`

	Type_ string `xml:"type,omitempty" json:"type,omitempty"`
}

type NavigationMenuItemBranding struct {
	TileImage string `xml:"tileImage,omitempty" json:"tileImage,omitempty"`
}

type NavigationSubMenu struct {
	NavigationMenuItem []*NavigationMenuItem `xml:"navigationMenuItem,omitempty" json:"navigationMenuItem,omitempty"`
}

type CommunityTemplatePageSetting struct {
	Page string `xml:"page,omitempty" json:"page,omitempty"`

	ThemeLayout string `xml:"themeLayout,omitempty" json:"themeLayout,omitempty"`
}

type CommunityThemeDefinition struct {
	*Metadata

	BundlesInfo []*CommunityThemeBundleInfo `xml:"bundlesInfo,omitempty" json:"bundlesInfo,omitempty"`

	CustomThemeLayoutType []*CommunityCustomThemeLayoutType `xml:"customThemeLayoutType,omitempty" json:"customThemeLayoutType,omitempty"`

	DefaultBrandingSet string `xml:"defaultBrandingSet,omitempty" json:"defaultBrandingSet,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	EnableExtendedCleanUpOnDelete bool `xml:"enableExtendedCleanUpOnDelete,omitempty" json:"enableExtendedCleanUpOnDelete,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	Publisher string `xml:"publisher,omitempty" json:"publisher,omitempty"`

	ThemeRouteOverride []*CommunityThemeRouteOverride `xml:"themeRouteOverride,omitempty" json:"themeRouteOverride,omitempty"`

	ThemeSetting []*CommunityThemeSetting `xml:"themeSetting,omitempty" json:"themeSetting,omitempty"`
}

type CommunityCustomThemeLayoutType struct {
	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`
}

type CommunityThemeRouteOverride struct {
	CustomThemeLayoutType string `xml:"customThemeLayoutType,omitempty" json:"customThemeLayoutType,omitempty"`

	PageAttributes string `xml:"pageAttributes,omitempty" json:"pageAttributes,omitempty"`

	PageType string `xml:"pageType,omitempty" json:"pageType,omitempty"`

	ThemeLayoutType *CommunityThemeLayoutType `xml:"themeLayoutType,omitempty" json:"themeLayoutType,omitempty"`
}

type CommunityThemeSetting struct {
	CustomThemeLayoutType string `xml:"customThemeLayoutType,omitempty" json:"customThemeLayoutType,omitempty"`

	ThemeLayout string `xml:"themeLayout,omitempty" json:"themeLayout,omitempty"`

	ThemeLayoutType *CommunityThemeLayoutType `xml:"themeLayoutType,omitempty" json:"themeLayoutType,omitempty"`
}

type CompactLayout struct {
	*Metadata

	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`
}

type CompanySettings struct {
	*Metadata

	EnableCustomFiscalYear bool `xml:"enableCustomFiscalYear,omitempty" json:"enableCustomFiscalYear,omitempty"`

	FiscalYear *FiscalYearSettings `xml:"fiscalYear,omitempty" json:"fiscalYear,omitempty"`
}

type FiscalYearSettings struct {
	FiscalYearNameBasedOn string `xml:"fiscalYearNameBasedOn,omitempty" json:"fiscalYearNameBasedOn,omitempty"`

	StartMonth string `xml:"startMonth,omitempty" json:"startMonth,omitempty"`
}

type ConnectedApp struct {
	*Metadata

	Attributes []*ConnectedAppAttribute `xml:"attributes,omitempty" json:"attributes,omitempty"`

	Canvas *CanvasMetadata `xml:"canvas,omitempty" json:"canvas,omitempty"`

	CanvasConfig *ConnectedAppCanvasConfig `xml:"canvasConfig,omitempty" json:"canvasConfig,omitempty"`

	ContactEmail string `xml:"contactEmail,omitempty" json:"contactEmail,omitempty"`

	ContactPhone string `xml:"contactPhone,omitempty" json:"contactPhone,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	IconUrl string `xml:"iconUrl,omitempty" json:"iconUrl,omitempty"`

	InfoUrl string `xml:"infoUrl,omitempty" json:"infoUrl,omitempty"`

	IpRanges []*ConnectedAppIpRange `xml:"ipRanges,omitempty" json:"ipRanges,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	LogoUrl string `xml:"logoUrl,omitempty" json:"logoUrl,omitempty"`

	MobileAppConfig *ConnectedAppMobileDetailConfig `xml:"mobileAppConfig,omitempty" json:"mobileAppConfig,omitempty"`

	MobileStartUrl string `xml:"mobileStartUrl,omitempty" json:"mobileStartUrl,omitempty"`

	OauthConfig *ConnectedAppOauthConfig `xml:"oauthConfig,omitempty" json:"oauthConfig,omitempty"`

	OauthPolicy *ConnectedAppOauthPolicy `xml:"oauthPolicy,omitempty" json:"oauthPolicy,omitempty"`

	PermissionSetName []string `xml:"permissionSetName,omitempty" json:"permissionSetName,omitempty"`

	Plugin string `xml:"plugin,omitempty" json:"plugin,omitempty"`

	PluginExecutionUser string `xml:"pluginExecutionUser,omitempty" json:"pluginExecutionUser,omitempty"`

	ProfileName []string `xml:"profileName,omitempty" json:"profileName,omitempty"`

	SamlConfig *ConnectedAppSamlConfig `xml:"samlConfig,omitempty" json:"samlConfig,omitempty"`

	SessionPolicy *ConnectedAppSessionPolicy `xml:"sessionPolicy,omitempty" json:"sessionPolicy,omitempty"`

	StartUrl string `xml:"startUrl,omitempty" json:"startUrl,omitempty"`
}

type ConnectedAppAttribute struct {
	Formula string `xml:"formula,omitempty" json:"formula,omitempty"`

	Key string `xml:"key,omitempty" json:"key,omitempty"`
}

type ConnectedAppCanvasConfig struct {
	AccessMethod *AccessMethod `xml:"accessMethod,omitempty" json:"accessMethod,omitempty"`

	CanvasUrl string `xml:"canvasUrl,omitempty" json:"canvasUrl,omitempty"`

	LifecycleClass string `xml:"lifecycleClass,omitempty" json:"lifecycleClass,omitempty"`

	Locations []*CanvasLocationOptions `xml:"locations,omitempty" json:"locations,omitempty"`

	Options []*CanvasOptions `xml:"options,omitempty" json:"options,omitempty"`

	SamlInitiationMethod *SamlInitiationMethod `xml:"samlInitiationMethod,omitempty" json:"samlInitiationMethod,omitempty"`
}

type ConnectedAppIpRange struct {
	Description string `xml:"description,omitempty" json:"description,omitempty"`

	End string `xml:"end,omitempty" json:"end,omitempty"`

	Start string `xml:"start,omitempty" json:"start,omitempty"`
}

type ConnectedAppMobileDetailConfig struct {
	ApplicationBinaryFile []byte `xml:"applicationBinaryFile,omitempty" json:"applicationBinaryFile,omitempty"`

	ApplicationBinaryFileName string `xml:"applicationBinaryFileName,omitempty" json:"applicationBinaryFileName,omitempty"`

	ApplicationBundleIdentifier string `xml:"applicationBundleIdentifier,omitempty" json:"applicationBundleIdentifier,omitempty"`

	ApplicationFileLength int32 `xml:"applicationFileLength,omitempty" json:"applicationFileLength,omitempty"`

	ApplicationIconFile string `xml:"applicationIconFile,omitempty" json:"applicationIconFile,omitempty"`

	ApplicationIconFileName string `xml:"applicationIconFileName,omitempty" json:"applicationIconFileName,omitempty"`

	ApplicationInstallUrl string `xml:"applicationInstallUrl,omitempty" json:"applicationInstallUrl,omitempty"`

	DevicePlatform *DevicePlatformType `xml:"devicePlatform,omitempty" json:"devicePlatform,omitempty"`

	DeviceType *DeviceType `xml:"deviceType,omitempty" json:"deviceType,omitempty"`

	MinimumOsVersion string `xml:"minimumOsVersion,omitempty" json:"minimumOsVersion,omitempty"`

	PrivateApp bool `xml:"privateApp,omitempty" json:"privateApp,omitempty"`

	Version string `xml:"version,omitempty" json:"version,omitempty"`
}

type ConnectedAppOauthConfig struct {
	AssetTokenConfig *ConnectedAppOauthAssetToken `xml:"assetTokenConfig,omitempty" json:"assetTokenConfig,omitempty"`

	CallbackUrl string `xml:"callbackUrl,omitempty" json:"callbackUrl,omitempty"`

	Certificate string `xml:"certificate,omitempty" json:"certificate,omitempty"`

	ConsumerKey string `xml:"consumerKey,omitempty" json:"consumerKey,omitempty"`

	ConsumerSecret string `xml:"consumerSecret,omitempty" json:"consumerSecret,omitempty"`

	IdTokenConfig *ConnectedAppOauthIdToken `xml:"idTokenConfig,omitempty" json:"idTokenConfig,omitempty"`

	IsAdminApproved bool `xml:"isAdminApproved,omitempty" json:"isAdminApproved,omitempty"`

	IsClientCredentialEnabled bool `xml:"isClientCredentialEnabled,omitempty" json:"isClientCredentialEnabled,omitempty"`

	IsCodeCredentialEnabled bool `xml:"isCodeCredentialEnabled,omitempty" json:"isCodeCredentialEnabled,omitempty"`

	IsCodeCredentialPostOnly bool `xml:"isCodeCredentialPostOnly,omitempty" json:"isCodeCredentialPostOnly,omitempty"`

	IsConsumerSecretOptional bool `xml:"isConsumerSecretOptional,omitempty" json:"isConsumerSecretOptional,omitempty"`

	IsIntrospectAllTokens bool `xml:"isIntrospectAllTokens,omitempty" json:"isIntrospectAllTokens,omitempty"`

	IsNamedUserJwtEnabled bool `xml:"isNamedUserJwtEnabled,omitempty" json:"isNamedUserJwtEnabled,omitempty"`

	IsPkceRequired bool `xml:"isPkceRequired,omitempty" json:"isPkceRequired,omitempty"`

	IsSecretRequiredForRefreshToken bool `xml:"isSecretRequiredForRefreshToken,omitempty" json:"isSecretRequiredForRefreshToken,omitempty"`

	OauthClientCredentialUser string `xml:"oauthClientCredentialUser,omitempty" json:"oauthClientCredentialUser,omitempty"`

	Scopes []*ConnectedAppOauthAccessScope `xml:"scopes,omitempty" json:"scopes,omitempty"`

	SingleLogoutUrl string `xml:"singleLogoutUrl,omitempty" json:"singleLogoutUrl,omitempty"`
}

type ConnectedAppOauthAssetToken struct {
	AssetAudiences string `xml:"assetAudiences,omitempty" json:"assetAudiences,omitempty"`

	AssetIncludeAttributes bool `xml:"assetIncludeAttributes,omitempty" json:"assetIncludeAttributes,omitempty"`

	AssetIncludeCustomPerms bool `xml:"assetIncludeCustomPerms,omitempty" json:"assetIncludeCustomPerms,omitempty"`

	AssetSigningCertId string `xml:"assetSigningCertId,omitempty" json:"assetSigningCertId,omitempty"`

	AssetValidityPeriod int32 `xml:"assetValidityPeriod,omitempty" json:"assetValidityPeriod,omitempty"`
}

type ConnectedAppOauthIdToken struct {
	IdTokenAudience string `xml:"idTokenAudience,omitempty" json:"idTokenAudience,omitempty"`

	IdTokenIncludeAttributes bool `xml:"idTokenIncludeAttributes,omitempty" json:"idTokenIncludeAttributes,omitempty"`

	IdTokenIncludeCustomPerms bool `xml:"idTokenIncludeCustomPerms,omitempty" json:"idTokenIncludeCustomPerms,omitempty"`

	IdTokenIncludeStandardClaims bool `xml:"idTokenIncludeStandardClaims,omitempty" json:"idTokenIncludeStandardClaims,omitempty"`

	IdTokenValidity int32 `xml:"idTokenValidity,omitempty" json:"idTokenValidity,omitempty"`
}

type ConnectedAppOauthPolicy struct {
	IpRelaxation string `xml:"ipRelaxation,omitempty" json:"ipRelaxation,omitempty"`

	RefreshTokenPolicy string `xml:"refreshTokenPolicy,omitempty" json:"refreshTokenPolicy,omitempty"`

	SingleLogoutUrl string `xml:"singleLogoutUrl,omitempty" json:"singleLogoutUrl,omitempty"`
}

type ConnectedAppSamlConfig struct {
	AcsUrl string `xml:"acsUrl,omitempty" json:"acsUrl,omitempty"`

	Certificate string `xml:"certificate,omitempty" json:"certificate,omitempty"`

	EncryptionCertificate string `xml:"encryptionCertificate,omitempty" json:"encryptionCertificate,omitempty"`

	EncryptionType *SamlEncryptionType `xml:"encryptionType,omitempty" json:"encryptionType,omitempty"`

	EntityUrl string `xml:"entityUrl,omitempty" json:"entityUrl,omitempty"`

	Issuer string `xml:"issuer,omitempty" json:"issuer,omitempty"`

	SamlIdpSLOBindingEnum *SamlIdpSLOBinding `xml:"samlIdpSLOBindingEnum,omitempty" json:"samlIdpSLOBindingEnum,omitempty"`

	SamlNameIdFormat *SamlNameIdFormatType `xml:"samlNameIdFormat,omitempty" json:"samlNameIdFormat,omitempty"`

	SamlSigningAlgoType *SamlSigningAlgoType `xml:"samlSigningAlgoType,omitempty" json:"samlSigningAlgoType,omitempty"`

	SamlSloUrl string `xml:"samlSloUrl,omitempty" json:"samlSloUrl,omitempty"`

	SamlSubjectCustomAttr string `xml:"samlSubjectCustomAttr,omitempty" json:"samlSubjectCustomAttr,omitempty"`

	SamlSubjectType *SamlSubjectType `xml:"samlSubjectType,omitempty" json:"samlSubjectType,omitempty"`
}

type ConnectedAppSessionPolicy struct {
	PolicyAction string `xml:"policyAction,omitempty" json:"policyAction,omitempty"`

	SessionLevel string `xml:"sessionLevel,omitempty" json:"sessionLevel,omitempty"`

	SessionTimeout int32 `xml:"sessionTimeout,omitempty" json:"sessionTimeout,omitempty"`
}

type ConnectedAppSettings struct {
	*Metadata

	EnableAdminApprovedAppsOnly bool `xml:"enableAdminApprovedAppsOnly,omitempty" json:"enableAdminApprovedAppsOnly,omitempty"`

	EnableAdminApprovedAppsOnlyForExternalUser bool `xml:"enableAdminApprovedAppsOnlyForExternalUser,omitempty" json:"enableAdminApprovedAppsOnlyForExternalUser,omitempty"`

	EnableSkipUserProvisioningWizardWelcomePage bool `xml:"enableSkipUserProvisioningWizardWelcomePage,omitempty" json:"enableSkipUserProvisioningWizardWelcomePage,omitempty"`
}

type ContentSettings struct {
	*Metadata

	EnableCMSC2CConnections bool `xml:"enableCMSC2CConnections,omitempty" json:"enableCMSC2CConnections,omitempty"`

	EnableChatterFileLink bool `xml:"enableChatterFileLink,omitempty" json:"enableChatterFileLink,omitempty"`

	EnableContent bool `xml:"enableContent,omitempty" json:"enableContent,omitempty"`

	EnableContentAutoAssign bool `xml:"enableContentAutoAssign,omitempty" json:"enableContentAutoAssign,omitempty"`

	EnableContentDistForPortalUsers bool `xml:"enableContentDistForPortalUsers,omitempty" json:"enableContentDistForPortalUsers,omitempty"`

	EnableContentDistPwOptionsBit1 bool `xml:"enableContentDistPwOptionsBit1,omitempty" json:"enableContentDistPwOptionsBit1,omitempty"`

	EnableContentDistPwOptionsBit2 bool `xml:"enableContentDistPwOptionsBit2,omitempty" json:"enableContentDistPwOptionsBit2,omitempty"`

	EnableContentDistribution bool `xml:"enableContentDistribution,omitempty" json:"enableContentDistribution,omitempty"`

	EnableContentSupportMultiLanguage bool `xml:"enableContentSupportMultiLanguage,omitempty" json:"enableContentSupportMultiLanguage,omitempty"`

	EnableContentWorkspaceAccess bool `xml:"enableContentWorkspaceAccess,omitempty" json:"enableContentWorkspaceAccess,omitempty"`

	EnableDeleteFileInContentPacks bool `xml:"enableDeleteFileInContentPacks,omitempty" json:"enableDeleteFileInContentPacks,omitempty"`

	EnableFileShareSetByRecord bool `xml:"enableFileShareSetByRecord,omitempty" json:"enableFileShareSetByRecord,omitempty"`

	EnableFilesUsrShareNetRestricted bool `xml:"enableFilesUsrShareNetRestricted,omitempty" json:"enableFilesUsrShareNetRestricted,omitempty"`

	EnableJPGPreviews bool `xml:"enableJPGPreviews,omitempty" json:"enableJPGPreviews,omitempty"`

	EnableLibraryManagedFiles bool `xml:"enableLibraryManagedFiles,omitempty" json:"enableLibraryManagedFiles,omitempty"`

	EnableShowChatterFilesInContent bool `xml:"enableShowChatterFilesInContent,omitempty" json:"enableShowChatterFilesInContent,omitempty"`

	EnableSiteGuestUserToUploadFiles bool `xml:"enableSiteGuestUserToUploadFiles,omitempty" json:"enableSiteGuestUserToUploadFiles,omitempty"`

	EnableUploadFilesOnAttachments bool `xml:"enableUploadFilesOnAttachments,omitempty" json:"enableUploadFilesOnAttachments,omitempty"`

	SetValidContentTypeForAtchDocDownload bool `xml:"setValidContentTypeForAtchDocDownload,omitempty" json:"setValidContentTypeForAtchDocDownload,omitempty"`

	SkipContentAssetTriggers bool `xml:"skipContentAssetTriggers,omitempty" json:"skipContentAssetTriggers,omitempty"`

	SkipContentAssetTriggersOnDeploy bool `xml:"skipContentAssetTriggersOnDeploy,omitempty" json:"skipContentAssetTriggersOnDeploy,omitempty"`
}

type ContractSettings struct {
	*Metadata

	AutoCalculateEndDate bool `xml:"autoCalculateEndDate,omitempty" json:"autoCalculateEndDate,omitempty"`

	AutoExpirationDelay string `xml:"autoExpirationDelay,omitempty" json:"autoExpirationDelay,omitempty"`

	AutoExpirationRecipient string `xml:"autoExpirationRecipient,omitempty" json:"autoExpirationRecipient,omitempty"`

	AutoExpireContracts bool `xml:"autoExpireContracts,omitempty" json:"autoExpireContracts,omitempty"`

	EnableContractHistoryTracking bool `xml:"enableContractHistoryTracking,omitempty" json:"enableContractHistoryTracking,omitempty"`

	NotifyOwnersOnContractExpiration bool `xml:"notifyOwnersOnContractExpiration,omitempty" json:"notifyOwnersOnContractExpiration,omitempty"`
}

type ConversationChannelDefinition struct {
	*Metadata

	ConnectedAppOauthLink string `xml:"connectedAppOauthLink,omitempty" json:"connectedAppOauthLink,omitempty"`

	ConversationVendorInfo string `xml:"conversationVendorInfo,omitempty" json:"conversationVendorInfo,omitempty"`

	CustomEventChnlAddrIdField string `xml:"customEventChnlAddrIdField,omitempty" json:"customEventChnlAddrIdField,omitempty"`

	CustomEventPayloadField string `xml:"customEventPayloadField,omitempty" json:"customEventPayloadField,omitempty"`

	CustomEventRecipientField string `xml:"customEventRecipientField,omitempty" json:"customEventRecipientField,omitempty"`

	CustomPlatformEvent string `xml:"customPlatformEvent,omitempty" json:"customPlatformEvent,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	SupportsDoubleOptInConsent bool `xml:"supportsDoubleOptInConsent,omitempty" json:"supportsDoubleOptInConsent,omitempty"`

	SupportsExplicitConsent bool `xml:"supportsExplicitConsent,omitempty" json:"supportsExplicitConsent,omitempty"`

	SupportsImplicitConsent bool `xml:"supportsImplicitConsent,omitempty" json:"supportsImplicitConsent,omitempty"`

	SupportsIsoCountryCode bool `xml:"supportsIsoCountryCode,omitempty" json:"supportsIsoCountryCode,omitempty"`

	SupportsKeywords bool `xml:"supportsKeywords,omitempty" json:"supportsKeywords,omitempty"`
}

type ConversationMessageDefinition struct {
	*Metadata

	Constants []*ConversationMessageConstant `xml:"constants,omitempty" json:"constants,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Language string `xml:"language,omitempty" json:"language,omitempty"`

	MessageHandlers []*ConversationMessageHandler `xml:"messageHandlers,omitempty" json:"messageHandlers,omitempty"`

	MessageLayouts []*ConversationMessageLayout `xml:"messageLayouts,omitempty" json:"messageLayouts,omitempty"`

	OptionsParameter *ConversationMessageOptionsParameter `xml:"optionsParameter,omitempty" json:"optionsParameter,omitempty"`

	Parameters []*ConversationMessageParameter `xml:"parameters,omitempty" json:"parameters,omitempty"`

	Type_ *ConversationMessageDefinitionType `xml:"type,omitempty" json:"type,omitempty"`
}

type ConversationMessageConstant struct {
	CompositeValues []*ConversationMessageConstantCompositeValue `xml:"compositeValues,omitempty" json:"compositeValues,omitempty"`

	ConstantType *ConversationMessageConstantType `xml:"constantType,omitempty" json:"constantType,omitempty"`

	PrimitiveValues []*ConversationMessageConstantPrimitiveValue `xml:"primitiveValues,omitempty" json:"primitiveValues,omitempty"`
}

type ConversationMessageConstantCompositeValue struct {
	ConstantItems []*ConversationMessageConstant `xml:"constantItems,omitempty" json:"constantItems,omitempty"`

	Identifier string `xml:"identifier,omitempty" json:"identifier,omitempty"`
}

type ConversationMessageConstantPrimitiveValue struct {
	ContentAssetName string `xml:"contentAssetName,omitempty" json:"contentAssetName,omitempty"`

	TextValue string `xml:"textValue,omitempty" json:"textValue,omitempty"`

	Type_ *ConversationMessageConstantValueType `xml:"type,omitempty" json:"type,omitempty"`

	UrlValue string `xml:"urlValue,omitempty" json:"urlValue,omitempty"`
}

type ConversationMessageHandler struct {
	ActiveRequestDurationMinutes int32 `xml:"activeRequestDurationMinutes,omitempty" json:"activeRequestDurationMinutes,omitempty"`

	HandlerName string `xml:"handlerName,omitempty" json:"handlerName,omitempty"`

	HandlerType *ConversationMessageHandlerType `xml:"handlerType,omitempty" json:"handlerType,omitempty"`
}

type ConversationMessageLayout struct {
	ExternalTemplates []*ConvMsgExternalTemplateVersion `xml:"externalTemplates,omitempty" json:"externalTemplates,omitempty"`

	FormatType *ConversationMessageFormatType `xml:"formatType,omitempty" json:"formatType,omitempty"`

	LayoutItems []*ConversationMessageLayoutItem `xml:"layoutItems,omitempty" json:"layoutItems,omitempty"`

	MessageType *ConversationMessageType `xml:"messageType,omitempty" json:"messageType,omitempty"`
}

type ConvMsgExternalTemplateVersion struct {
	AccountIdentifier string `xml:"accountIdentifier,omitempty" json:"accountIdentifier,omitempty"`

	AccountName string `xml:"accountName,omitempty" json:"accountName,omitempty"`

	Language string `xml:"language,omitempty" json:"language,omitempty"`

	Status *ConvMsgExternalTemplateVersionStatus `xml:"status,omitempty" json:"status,omitempty"`

	TemplateName string `xml:"templateName,omitempty" json:"templateName,omitempty"`

	TemplateVersionIdentifier string `xml:"templateVersionIdentifier,omitempty" json:"templateVersionIdentifier,omitempty"`
}

type ConversationMessageLayoutItem struct {
	CollectionType *ConversationMessageCollectionType `xml:"collectionType,omitempty" json:"collectionType,omitempty"`

	CompositeValues []*ConversationMessageLayoutCompositeValue `xml:"compositeValues,omitempty" json:"compositeValues,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	PrimitiveValues []*ConversationMessageLayoutPrimitiveValue `xml:"primitiveValues,omitempty" json:"primitiveValues,omitempty"`
}

type ConversationMessageLayoutCompositeValue struct {
	CompositeTypeName string `xml:"compositeTypeName,omitempty" json:"compositeTypeName,omitempty"`

	LayoutItems []*ConversationMessageLayoutItem `xml:"layoutItems,omitempty" json:"layoutItems,omitempty"`

	ValueSourceReference string `xml:"valueSourceReference,omitempty" json:"valueSourceReference,omitempty"`
}

type ConversationMessageLayoutPrimitiveValue struct {
	ContentAssetName string `xml:"contentAssetName,omitempty" json:"contentAssetName,omitempty"`

	FieldName string `xml:"fieldName,omitempty" json:"fieldName,omitempty"`

	FormulaTemplate string `xml:"formulaTemplate,omitempty" json:"formulaTemplate,omitempty"`

	LiteralValue string `xml:"literalValue,omitempty" json:"literalValue,omitempty"`

	MergeFields []*ConversationMessageMergeField `xml:"mergeFields,omitempty" json:"mergeFields,omitempty"`

	Type_ *ConversationMessageLayoutValueType `xml:"type,omitempty" json:"type,omitempty"`

	ValueFormula string `xml:"valueFormula,omitempty" json:"valueFormula,omitempty"`

	ValueSourceReference string `xml:"valueSourceReference,omitempty" json:"valueSourceReference,omitempty"`
}

type ConversationMessageMergeField struct {
	FormulaTemplate string `xml:"formulaTemplate,omitempty" json:"formulaTemplate,omitempty"`

	MergeFieldType *ConversationMessageMergeFieldType `xml:"mergeFieldType,omitempty" json:"mergeFieldType,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	ValueSourceReference string `xml:"valueSourceReference,omitempty" json:"valueSourceReference,omitempty"`
}

type ConversationMessageOptionsParameter struct {
	CompositeTypeDetails *ConversationMessageParameterCompositeDetails `xml:"compositeTypeDetails,omitempty" json:"compositeTypeDetails,omitempty"`

	OptionsParameterType *ConversationMessageOptionsParameterType `xml:"optionsParameterType,omitempty" json:"optionsParameterType,omitempty"`

	PrimitiveTypeDetails *ConversationMessageParameterPrimitiveDetails `xml:"primitiveTypeDetails,omitempty" json:"primitiveTypeDetails,omitempty"`
}

type ConversationMessageParameterCompositeDetails struct {
	CompositeChildItems []*ConversationMessageParameterCompositeDetails `xml:"compositeChildItems,omitempty" json:"compositeChildItems,omitempty"`

	IsList bool `xml:"isList,omitempty" json:"isList,omitempty"`

	IsRequired bool `xml:"isRequired,omitempty" json:"isRequired,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	MaxListItems int32 `xml:"maxListItems,omitempty" json:"maxListItems,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	PrimitiveChildItems []*ConversationMessageParameterPrimitiveDetails `xml:"primitiveChildItems,omitempty" json:"primitiveChildItems,omitempty"`
}

type ConversationMessageParameterPrimitiveDetails struct {
	IsList bool `xml:"isList,omitempty" json:"isList,omitempty"`

	IsRequired bool `xml:"isRequired,omitempty" json:"isRequired,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	MaxListItems int32 `xml:"maxListItems,omitempty" json:"maxListItems,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	SobjectType string `xml:"sobjectType,omitempty" json:"sobjectType,omitempty"`

	ValueType *ConversationMessageValueType `xml:"valueType,omitempty" json:"valueType,omitempty"`
}

type ConversationMessageParameter struct {
	CompositeTypeDetails *ConversationMessageParameterCompositeDetails `xml:"compositeTypeDetails,omitempty" json:"compositeTypeDetails,omitempty"`

	ParameterType *ConversationMessageParameterType `xml:"parameterType,omitempty" json:"parameterType,omitempty"`

	PrimitiveTypeDetails *ConversationMessageParameterPrimitiveDetails `xml:"primitiveTypeDetails,omitempty" json:"primitiveTypeDetails,omitempty"`
}

type ConversationVendorInfo struct {
	*Metadata

	AgentSSOSupported bool `xml:"agentSSOSupported,omitempty" json:"agentSSOSupported,omitempty"`

	AwsAccountKey string `xml:"awsAccountKey,omitempty" json:"awsAccountKey,omitempty"`

	AwsRootEmail string `xml:"awsRootEmail,omitempty" json:"awsRootEmail,omitempty"`

	AwsTenantVersion float64 `xml:"awsTenantVersion,omitempty" json:"awsTenantVersion,omitempty"`

	BridgeComponent string `xml:"bridgeComponent,omitempty" json:"bridgeComponent,omitempty"`

	ClientAuthMode *ClientAuthMode `xml:"clientAuthMode,omitempty" json:"clientAuthMode,omitempty"`

	ConnectorUrl string `xml:"connectorUrl,omitempty" json:"connectorUrl,omitempty"`

	CustomConfig string `xml:"customConfig,omitempty" json:"customConfig,omitempty"`

	CustomLoginUrl string `xml:"customLoginUrl,omitempty" json:"customLoginUrl,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	EinsteinConversationInsightsSupported bool `xml:"einsteinConversationInsightsSupported,omitempty" json:"einsteinConversationInsightsSupported,omitempty"`

	IntegrationClass string `xml:"integrationClass,omitempty" json:"integrationClass,omitempty"`

	IntegrationClassName string `xml:"integrationClassName,omitempty" json:"integrationClassName,omitempty"`

	IntelligenceSupported bool `xml:"intelligenceSupported,omitempty" json:"intelligenceSupported,omitempty"`

	IsTaxCompliant bool `xml:"isTaxCompliant,omitempty" json:"isTaxCompliant,omitempty"`

	KeyProvisioningSupported bool `xml:"keyProvisioningSupported,omitempty" json:"keyProvisioningSupported,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	NamedCredential string `xml:"namedCredential,omitempty" json:"namedCredential,omitempty"`

	NamedCredentialSupported bool `xml:"namedCredentialSupported,omitempty" json:"namedCredentialSupported,omitempty"`

	PartnerContactCenterListSupported bool `xml:"partnerContactCenterListSupported,omitempty" json:"partnerContactCenterListSupported,omitempty"`

	PartnerPhoneNumbersSupported bool `xml:"partnerPhoneNumbersSupported,omitempty" json:"partnerPhoneNumbersSupported,omitempty"`

	PartnerTransferDestinationsSupported bool `xml:"partnerTransferDestinationsSupported,omitempty" json:"partnerTransferDestinationsSupported,omitempty"`

	QueueManagementSupported bool `xml:"queueManagementSupported,omitempty" json:"queueManagementSupported,omitempty"`

	ServerAuthMode *ServerAuthMode `xml:"serverAuthMode,omitempty" json:"serverAuthMode,omitempty"`

	TelephonySettingsComponent string `xml:"telephonySettingsComponent,omitempty" json:"telephonySettingsComponent,omitempty"`

	UniversalCallRecordingAccessSupported bool `xml:"universalCallRecordingAccessSupported,omitempty" json:"universalCallRecordingAccessSupported,omitempty"`

	UserSyncingSupported bool `xml:"userSyncingSupported,omitempty" json:"userSyncingSupported,omitempty"`

	VendorType *ConversationVendorType `xml:"vendorType,omitempty" json:"vendorType,omitempty"`
}

type ConversationalIntelligenceSettings struct {
	*Metadata

	EnableCallCoaching bool `xml:"enableCallCoaching,omitempty" json:"enableCallCoaching,omitempty"`

	EnableCallCoachingZoom bool `xml:"enableCallCoachingZoom,omitempty" json:"enableCallCoachingZoom,omitempty"`

	EnableCallSummarization bool `xml:"enableCallSummarization,omitempty" json:"enableCallSummarization,omitempty"`

	EnableDiarizationPref bool `xml:"enableDiarizationPref,omitempty" json:"enableDiarizationPref,omitempty"`

	EnableOpptyMatching bool `xml:"enableOpptyMatching,omitempty" json:"enableOpptyMatching,omitempty"`

	EnableUnifiedActivities bool `xml:"enableUnifiedActivities,omitempty" json:"enableUnifiedActivities,omitempty"`
}

type CorsWhitelistOrigin struct {
	*Metadata

	UrlPattern string `xml:"urlPattern,omitempty" json:"urlPattern,omitempty"`
}

type CspTrustedSite struct {
	*Metadata

	CanAccessCamera bool `xml:"canAccessCamera,omitempty" json:"canAccessCamera,omitempty"`

	CanAccessMicrophone bool `xml:"canAccessMicrophone,omitempty" json:"canAccessMicrophone,omitempty"`

	Context *CspTrustedSiteContext `xml:"context,omitempty" json:"context,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	EndpointUrl string `xml:"endpointUrl,omitempty" json:"endpointUrl,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	IsApplicableToConnectSrc bool `xml:"isApplicableToConnectSrc,omitempty" json:"isApplicableToConnectSrc,omitempty"`

	IsApplicableToFontSrc bool `xml:"isApplicableToFontSrc,omitempty" json:"isApplicableToFontSrc,omitempty"`

	IsApplicableToFrameSrc bool `xml:"isApplicableToFrameSrc,omitempty" json:"isApplicableToFrameSrc,omitempty"`

	IsApplicableToImgSrc bool `xml:"isApplicableToImgSrc,omitempty" json:"isApplicableToImgSrc,omitempty"`

	IsApplicableToMediaSrc bool `xml:"isApplicableToMediaSrc,omitempty" json:"isApplicableToMediaSrc,omitempty"`

	IsApplicableToStyleSrc bool `xml:"isApplicableToStyleSrc,omitempty" json:"isApplicableToStyleSrc,omitempty"`

	MobileExtension string `xml:"mobileExtension,omitempty" json:"mobileExtension,omitempty"`
}

type CurrencySettings struct {
	*Metadata

	EnableCurrencyEffectiveDates bool `xml:"enableCurrencyEffectiveDates,omitempty" json:"enableCurrencyEffectiveDates,omitempty"`

	EnableCurrencySymbolWithMultiCurrency bool `xml:"enableCurrencySymbolWithMultiCurrency,omitempty" json:"enableCurrencySymbolWithMultiCurrency,omitempty"`

	EnableMultiCurrency bool `xml:"enableMultiCurrency,omitempty" json:"enableMultiCurrency,omitempty"`

	IsMultiCurrencyActivationAllowed bool `xml:"isMultiCurrencyActivationAllowed,omitempty" json:"isMultiCurrencyActivationAllowed,omitempty"`

	IsParenCurrencyConvDisabled bool `xml:"isParenCurrencyConvDisabled,omitempty" json:"isParenCurrencyConvDisabled,omitempty"`
}

type CustomAddressFieldSettings struct {
	*Metadata

	EnableCustomAddressField bool `xml:"enableCustomAddressField,omitempty" json:"enableCustomAddressField,omitempty"`
}

type CustomApplication struct {
	*Metadata

	ActionOverrides []*AppActionOverride `xml:"actionOverrides,omitempty" json:"actionOverrides,omitempty"`

	Brand *AppBrand `xml:"brand,omitempty" json:"brand,omitempty"`

	ConsoleConfig *ServiceCloudConsoleConfig `xml:"consoleConfig,omitempty" json:"consoleConfig,omitempty"`

	DefaultLandingTab string `xml:"defaultLandingTab,omitempty" json:"defaultLandingTab,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	FormFactors []*FormFactor `xml:"formFactors,omitempty" json:"formFactors,omitempty"`

	IsNavAutoTempTabsDisabled bool `xml:"isNavAutoTempTabsDisabled,omitempty" json:"isNavAutoTempTabsDisabled,omitempty"`

	IsNavPersonalizationDisabled bool `xml:"isNavPersonalizationDisabled,omitempty" json:"isNavPersonalizationDisabled,omitempty"`

	IsNavTabPersistenceDisabled bool `xml:"isNavTabPersistenceDisabled,omitempty" json:"isNavTabPersistenceDisabled,omitempty"`

	IsServiceCloudConsole bool `xml:"isServiceCloudConsole,omitempty" json:"isServiceCloudConsole,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Logo string `xml:"logo,omitempty" json:"logo,omitempty"`

	NavType *NavType `xml:"navType,omitempty" json:"navType,omitempty"`

	Preferences *AppPreferences `xml:"preferences,omitempty" json:"preferences,omitempty"`

	ProfileActionOverrides []*AppProfileActionOverride `xml:"profileActionOverrides,omitempty" json:"profileActionOverrides,omitempty"`

	SetupExperience string `xml:"setupExperience,omitempty" json:"setupExperience,omitempty"`

	SubscriberTabs []string `xml:"subscriberTabs,omitempty" json:"subscriberTabs,omitempty"`

	Tabs []string `xml:"tabs,omitempty" json:"tabs,omitempty"`

	UiType *UiType `xml:"uiType,omitempty" json:"uiType,omitempty"`

	UtilityBar string `xml:"utilityBar,omitempty" json:"utilityBar,omitempty"`

	WorkspaceConfig *AppWorkspaceConfig `xml:"workspaceConfig,omitempty" json:"workspaceConfig,omitempty"`
}

type AppActionOverride struct {
	*ActionOverride

	PageOrSobjectType string `xml:"pageOrSobjectType,omitempty" json:"pageOrSobjectType,omitempty"`
}

type ActionOverride struct {
	ActionName string `xml:"actionName,omitempty" json:"actionName,omitempty"`

	Comment string `xml:"comment,omitempty" json:"comment,omitempty"`

	Content string `xml:"content,omitempty" json:"content,omitempty"`

	FormFactor *FormFactor `xml:"formFactor,omitempty" json:"formFactor,omitempty"`

	SkipRecordTypeSelect bool `xml:"skipRecordTypeSelect,omitempty" json:"skipRecordTypeSelect,omitempty"`

	Type_ *ActionOverrideType `xml:"type,omitempty" json:"type,omitempty"`
}

type AppBrand struct {
	FooterColor string `xml:"footerColor,omitempty" json:"footerColor,omitempty"`

	HeaderColor string `xml:"headerColor,omitempty" json:"headerColor,omitempty"`

	Logo string `xml:"logo,omitempty" json:"logo,omitempty"`

	LogoVersion int32 `xml:"logoVersion,omitempty" json:"logoVersion,omitempty"`

	ShouldOverrideOrgTheme bool `xml:"shouldOverrideOrgTheme,omitempty" json:"shouldOverrideOrgTheme,omitempty"`
}

type ServiceCloudConsoleConfig struct {
	ComponentList *AppComponentList `xml:"componentList,omitempty" json:"componentList,omitempty"`

	DetailPageRefreshMethod string `xml:"detailPageRefreshMethod,omitempty" json:"detailPageRefreshMethod,omitempty"`

	FooterColor string `xml:"footerColor,omitempty" json:"footerColor,omitempty"`

	HeaderColor string `xml:"headerColor,omitempty" json:"headerColor,omitempty"`

	KeyboardShortcuts *KeyboardShortcuts `xml:"keyboardShortcuts,omitempty" json:"keyboardShortcuts,omitempty"`

	ListPlacement *ListPlacement `xml:"listPlacement,omitempty" json:"listPlacement,omitempty"`

	ListRefreshMethod string `xml:"listRefreshMethod,omitempty" json:"listRefreshMethod,omitempty"`

	LiveAgentConfig *LiveAgentConfig `xml:"liveAgentConfig,omitempty" json:"liveAgentConfig,omitempty"`

	PrimaryTabColor string `xml:"primaryTabColor,omitempty" json:"primaryTabColor,omitempty"`

	PushNotifications []*PushNotification `xml:"pushNotifications,omitempty" json:"pushNotifications,omitempty"`

	TabLimitConfig *TabLimitConfig `xml:"tabLimitConfig,omitempty" json:"tabLimitConfig,omitempty"`

	WhitelistedDomains []string `xml:"whitelistedDomains,omitempty" json:"whitelistedDomains,omitempty"`
}

type AppComponentList struct {
	Alignment string `xml:"alignment,omitempty" json:"alignment,omitempty"`

	Components []string `xml:"components,omitempty" json:"components,omitempty"`
}

type KeyboardShortcuts struct {
	CustomShortcuts []*CustomShortcut `xml:"customShortcuts,omitempty" json:"customShortcuts,omitempty"`

	DefaultShortcuts []*DefaultShortcut `xml:"defaultShortcuts,omitempty" json:"defaultShortcuts,omitempty"`
}

type CustomShortcut struct {
	*DefaultShortcut

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	EventName string `xml:"eventName,omitempty" json:"eventName,omitempty"`
}

type DefaultShortcut struct {
	Action string `xml:"action,omitempty" json:"action,omitempty"`

	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	KeyCommand string `xml:"keyCommand,omitempty" json:"keyCommand,omitempty"`
}

type ListPlacement struct {
	Height int32 `xml:"height,omitempty" json:"height,omitempty"`

	Location string `xml:"location,omitempty" json:"location,omitempty"`

	Units string `xml:"units,omitempty" json:"units,omitempty"`

	Width int32 `xml:"width,omitempty" json:"width,omitempty"`
}

type LiveAgentConfig struct {
	EnableLiveChat bool `xml:"enableLiveChat,omitempty" json:"enableLiveChat,omitempty"`

	OpenNewAccountSubtab bool `xml:"openNewAccountSubtab,omitempty" json:"openNewAccountSubtab,omitempty"`

	OpenNewCaseSubtab bool `xml:"openNewCaseSubtab,omitempty" json:"openNewCaseSubtab,omitempty"`

	OpenNewContactSubtab bool `xml:"openNewContactSubtab,omitempty" json:"openNewContactSubtab,omitempty"`

	OpenNewLeadSubtab bool `xml:"openNewLeadSubtab,omitempty" json:"openNewLeadSubtab,omitempty"`

	OpenNewVFPageSubtab bool `xml:"openNewVFPageSubtab,omitempty" json:"openNewVFPageSubtab,omitempty"`

	PageNamesToOpen []string `xml:"pageNamesToOpen,omitempty" json:"pageNamesToOpen,omitempty"`

	ShowKnowledgeArticles bool `xml:"showKnowledgeArticles,omitempty" json:"showKnowledgeArticles,omitempty"`
}

type PushNotification struct {
	FieldNames []string `xml:"fieldNames,omitempty" json:"fieldNames,omitempty"`

	ObjectName string `xml:"objectName,omitempty" json:"objectName,omitempty"`
}

type TabLimitConfig struct {
	MaxNumberOfPrimaryTabs string `xml:"maxNumberOfPrimaryTabs,omitempty" json:"maxNumberOfPrimaryTabs,omitempty"`

	MaxNumberOfSubTabs string `xml:"maxNumberOfSubTabs,omitempty" json:"maxNumberOfSubTabs,omitempty"`
}

type AppPreferences struct {
	EnableCustomizeMyTabs bool `xml:"enableCustomizeMyTabs,omitempty" json:"enableCustomizeMyTabs,omitempty"`

	EnableKeyboardShortcuts bool `xml:"enableKeyboardShortcuts,omitempty" json:"enableKeyboardShortcuts,omitempty"`

	EnableListViewHover bool `xml:"enableListViewHover,omitempty" json:"enableListViewHover,omitempty"`

	EnableListViewReskin bool `xml:"enableListViewReskin,omitempty" json:"enableListViewReskin,omitempty"`

	EnableMultiMonitorComponents bool `xml:"enableMultiMonitorComponents,omitempty" json:"enableMultiMonitorComponents,omitempty"`

	EnablePinTabs bool `xml:"enablePinTabs,omitempty" json:"enablePinTabs,omitempty"`

	EnableTabHover bool `xml:"enableTabHover,omitempty" json:"enableTabHover,omitempty"`

	EnableTabLimits bool `xml:"enableTabLimits,omitempty" json:"enableTabLimits,omitempty"`

	SaveUserSessions bool `xml:"saveUserSessions,omitempty" json:"saveUserSessions,omitempty"`
}

type AppProfileActionOverride struct {
	*ProfileActionOverride

	Profile string `xml:"profile,omitempty" json:"profile,omitempty"`
}

type ProfileActionOverride struct {
	ActionName string `xml:"actionName,omitempty" json:"actionName,omitempty"`

	Content string `xml:"content,omitempty" json:"content,omitempty"`

	FormFactor *FormFactor `xml:"formFactor,omitempty" json:"formFactor,omitempty"`

	PageOrSobjectType string `xml:"pageOrSobjectType,omitempty" json:"pageOrSobjectType,omitempty"`

	RecordType string `xml:"recordType,omitempty" json:"recordType,omitempty"`

	Type_ *ActionOverrideType `xml:"type,omitempty" json:"type,omitempty"`
}

type AppWorkspaceConfig struct {
	Mappings []*WorkspaceMapping `xml:"mappings,omitempty" json:"mappings,omitempty"`
}

type WorkspaceMapping struct {
	FieldName string `xml:"fieldName,omitempty" json:"fieldName,omitempty"`

	Tab string `xml:"tab,omitempty" json:"tab,omitempty"`
}

type CustomApplicationComponent struct {
	*Metadata

	ButtonIconUrl string `xml:"buttonIconUrl,omitempty" json:"buttonIconUrl,omitempty"`

	ButtonStyle string `xml:"buttonStyle,omitempty" json:"buttonStyle,omitempty"`

	ButtonText string `xml:"buttonText,omitempty" json:"buttonText,omitempty"`

	ButtonWidth int32 `xml:"buttonWidth,omitempty" json:"buttonWidth,omitempty"`

	Height int32 `xml:"height,omitempty" json:"height,omitempty"`

	IsHeightFixed bool `xml:"isHeightFixed,omitempty" json:"isHeightFixed,omitempty"`

	IsHidden bool `xml:"isHidden,omitempty" json:"isHidden,omitempty"`

	IsWidthFixed bool `xml:"isWidthFixed,omitempty" json:"isWidthFixed,omitempty"`

	VisualforcePage string `xml:"visualforcePage,omitempty" json:"visualforcePage,omitempty"`

	Width int32 `xml:"width,omitempty" json:"width,omitempty"`
}

type CustomFeedFilter struct {
	*Metadata

	Criteria []*FeedFilterCriterion `xml:"criteria,omitempty" json:"criteria,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`
}

type FeedFilterCriterion struct {
	FeedItemType *FeedItemType `xml:"feedItemType,omitempty" json:"feedItemType,omitempty"`

	FeedItemVisibility *FeedItemVisibility `xml:"feedItemVisibility,omitempty" json:"feedItemVisibility,omitempty"`

	RelatedSObjectType string `xml:"relatedSObjectType,omitempty" json:"relatedSObjectType,omitempty"`
}

type CustomField struct {
	*Metadata

	BusinessOwnerGroup string `xml:"businessOwnerGroup,omitempty" json:"businessOwnerGroup,omitempty"`

	BusinessOwnerUser string `xml:"businessOwnerUser,omitempty" json:"businessOwnerUser,omitempty"`

	BusinessStatus string `xml:"businessStatus,omitempty" json:"businessStatus,omitempty"`

	CaseSensitive bool `xml:"caseSensitive,omitempty" json:"caseSensitive,omitempty"`

	ComplianceGroup string `xml:"complianceGroup,omitempty" json:"complianceGroup,omitempty"`

	CustomDataType string `xml:"customDataType,omitempty" json:"customDataType,omitempty"`

	DefaultValue string `xml:"defaultValue,omitempty" json:"defaultValue,omitempty"`

	DeleteConstraint *DeleteConstraint `xml:"deleteConstraint,omitempty" json:"deleteConstraint,omitempty"`

	Deprecated bool `xml:"deprecated,omitempty" json:"deprecated,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DisplayFormat string `xml:"displayFormat,omitempty" json:"displayFormat,omitempty"`

	EncryptionScheme *EncryptionScheme `xml:"encryptionScheme,omitempty" json:"encryptionScheme,omitempty"`

	EscapeMarkup bool `xml:"escapeMarkup,omitempty" json:"escapeMarkup,omitempty"`

	ExternalDeveloperName string `xml:"externalDeveloperName,omitempty" json:"externalDeveloperName,omitempty"`

	ExternalId bool `xml:"externalId,omitempty" json:"externalId,omitempty"`

	FieldManageability *FieldManageability `xml:"fieldManageability,omitempty" json:"fieldManageability,omitempty"`

	Formula string `xml:"formula,omitempty" json:"formula,omitempty"`

	FormulaTreatBlanksAs *TreatBlanksAs `xml:"formulaTreatBlanksAs,omitempty" json:"formulaTreatBlanksAs,omitempty"`

	InlineHelpText string `xml:"inlineHelpText,omitempty" json:"inlineHelpText,omitempty"`

	IsAIPredictionField bool `xml:"isAIPredictionField,omitempty" json:"isAIPredictionField,omitempty"`

	IsConvertLeadDisabled bool `xml:"isConvertLeadDisabled,omitempty" json:"isConvertLeadDisabled,omitempty"`

	IsFilteringDisabled bool `xml:"isFilteringDisabled,omitempty" json:"isFilteringDisabled,omitempty"`

	IsNameField bool `xml:"isNameField,omitempty" json:"isNameField,omitempty"`

	IsSortingDisabled bool `xml:"isSortingDisabled,omitempty" json:"isSortingDisabled,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Length int32 `xml:"length,omitempty" json:"length,omitempty"`

	LookupFilter *LookupFilter `xml:"lookupFilter,omitempty" json:"lookupFilter,omitempty"`

	MaskChar *EncryptedFieldMaskChar `xml:"maskChar,omitempty" json:"maskChar,omitempty"`

	MaskType *EncryptedFieldMaskType `xml:"maskType,omitempty" json:"maskType,omitempty"`

	MetadataRelationshipControllingField string `xml:"metadataRelationshipControllingField,omitempty" json:"metadataRelationshipControllingField,omitempty"`

	MktDataLakeFieldAttributes *MktDataLakeFieldAttributes `xml:"mktDataLakeFieldAttributes,omitempty" json:"mktDataLakeFieldAttributes,omitempty"`

	MktDataModelFieldAttributes *MktDataModelFieldAttributes `xml:"mktDataModelFieldAttributes,omitempty" json:"mktDataModelFieldAttributes,omitempty"`

	PopulateExistingRows bool `xml:"populateExistingRows,omitempty" json:"populateExistingRows,omitempty"`

	Precision int32 `xml:"precision,omitempty" json:"precision,omitempty"`

	ReferenceTargetField string `xml:"referenceTargetField,omitempty" json:"referenceTargetField,omitempty"`

	ReferenceTo string `xml:"referenceTo,omitempty" json:"referenceTo,omitempty"`

	RelationshipLabel string `xml:"relationshipLabel,omitempty" json:"relationshipLabel,omitempty"`

	RelationshipName string `xml:"relationshipName,omitempty" json:"relationshipName,omitempty"`

	RelationshipOrder int32 `xml:"relationshipOrder,omitempty" json:"relationshipOrder,omitempty"`

	ReparentableMasterDetail bool `xml:"reparentableMasterDetail,omitempty" json:"reparentableMasterDetail,omitempty"`

	Required bool `xml:"required,omitempty" json:"required,omitempty"`

	RestrictedAdminField bool `xml:"restrictedAdminField,omitempty" json:"restrictedAdminField,omitempty"`

	Scale *int32 `xml:"scale,omitempty" json:"scale,omitempty"`

	SecurityClassification string `xml:"securityClassification,omitempty" json:"securityClassification,omitempty"`

	StartingNumber int32 `xml:"startingNumber,omitempty" json:"startingNumber,omitempty"`

	StripMarkup bool `xml:"stripMarkup,omitempty" json:"stripMarkup,omitempty"`

	SummarizedField string `xml:"summarizedField,omitempty" json:"summarizedField,omitempty"`

	SummaryFilterItems []*FilterItem `xml:"summaryFilterItems,omitempty" json:"summaryFilterItems,omitempty"`

	SummaryForeignKey string `xml:"summaryForeignKey,omitempty" json:"summaryForeignKey,omitempty"`

	SummaryOperation *SummaryOperations `xml:"summaryOperation,omitempty" json:"summaryOperation,omitempty"`

	TrackFeedHistory bool `xml:"trackFeedHistory,omitempty" json:"trackFeedHistory,omitempty"`

	TrackHistory bool `xml:"trackHistory,omitempty" json:"trackHistory,omitempty"`

	TrackTrending bool `xml:"trackTrending,omitempty" json:"trackTrending,omitempty"`

	TranslateData bool `xml:"translateData,omitempty" json:"translateData,omitempty"`

	Type_ *FieldType `xml:"type,omitempty" json:"type,omitempty"`

	Unique bool `xml:"unique,omitempty" json:"unique,omitempty"`

	ValueSet *ValueSet `xml:"valueSet,omitempty" json:"valueSet,omitempty"`

	VisibleLines int32 `xml:"visibleLines,omitempty" json:"visibleLines,omitempty"`

	WriteRequiresMasterRead bool `xml:"writeRequiresMasterRead,omitempty" json:"writeRequiresMasterRead,omitempty"`
}

type LookupFilter struct {
	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	BooleanFilter string `xml:"booleanFilter,omitempty" json:"booleanFilter,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	ErrorMessage string `xml:"errorMessage,omitempty" json:"errorMessage,omitempty"`

	FilterItems []*FilterItem `xml:"filterItems,omitempty" json:"filterItems,omitempty"`

	InfoMessage string `xml:"infoMessage,omitempty" json:"infoMessage,omitempty"`

	IsOptional bool `xml:"isOptional,omitempty" json:"isOptional,omitempty"`
}

type MktDataLakeFieldAttributes struct {
	DateFormat string `xml:"dateFormat,omitempty" json:"dateFormat,omitempty"`

	DefinitionCreationType *DefinitionCreationType `xml:"definitionCreationType,omitempty" json:"definitionCreationType,omitempty"`

	ExternalName string `xml:"externalName,omitempty" json:"externalName,omitempty"`

	IsEventDate bool `xml:"isEventDate,omitempty" json:"isEventDate,omitempty"`

	IsInternalOrganization bool `xml:"isInternalOrganization,omitempty" json:"isInternalOrganization,omitempty"`

	IsRecordModified bool `xml:"isRecordModified,omitempty" json:"isRecordModified,omitempty"`

	KeyQualifierName string `xml:"keyQualifierName,omitempty" json:"keyQualifierName,omitempty"`

	MktDatalakeSrcKeyQualifier string `xml:"mktDatalakeSrcKeyQualifier,omitempty" json:"mktDatalakeSrcKeyQualifier,omitempty"`

	PrimaryIndexOrder int32 `xml:"primaryIndexOrder,omitempty" json:"primaryIndexOrder,omitempty"`

	UsageTag *UsageTag `xml:"usageTag,omitempty" json:"usageTag,omitempty"`
}

type MktDataModelFieldAttributes struct {
	DefinitionCreationType *DefinitionCreationType `xml:"definitionCreationType,omitempty" json:"definitionCreationType,omitempty"`

	InvalidMergeActionType *InvalidMergeActionType `xml:"invalidMergeActionType,omitempty" json:"invalidMergeActionType,omitempty"`

	IsDynamicLookup bool `xml:"isDynamicLookup,omitempty" json:"isDynamicLookup,omitempty"`

	KeyQualifierName string `xml:"keyQualifierName,omitempty" json:"keyQualifierName,omitempty"`

	PrimaryIndexOrder int32 `xml:"primaryIndexOrder,omitempty" json:"primaryIndexOrder,omitempty"`

	RefAttrDeveloperName string `xml:"refAttrDeveloperName,omitempty" json:"refAttrDeveloperName,omitempty"`

	UsageTag *MktDataModelFieldUsageTag `xml:"usageTag,omitempty" json:"usageTag,omitempty"`
}

type ValueSet struct {
	ControllingField string `xml:"controllingField,omitempty" json:"controllingField,omitempty"`

	Restricted bool `xml:"restricted,omitempty" json:"restricted,omitempty"`

	ValueSetDefinition *ValueSetValuesDefinition `xml:"valueSetDefinition,omitempty" json:"valueSetDefinition,omitempty"`

	ValueSetName string `xml:"valueSetName,omitempty" json:"valueSetName,omitempty"`

	ValueSettings []*ValueSettings `xml:"valueSettings,omitempty" json:"valueSettings,omitempty"`
}

type ValueSetValuesDefinition struct {
	Sorted bool `xml:"sorted,omitempty" json:"sorted,omitempty"`

	Value []*CustomValue `xml:"value,omitempty" json:"value,omitempty"`
}

type CustomValue struct {
	*Metadata

	Color string `xml:"color,omitempty" json:"color,omitempty"`

	Default_ bool `xml:"default,omitempty" json:"default,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`
}

type StandardValue struct {
	*CustomValue

	AllowEmail bool `xml:"allowEmail,omitempty" json:"allowEmail,omitempty"`

	Closed bool `xml:"closed,omitempty" json:"closed,omitempty"`

	Converted bool `xml:"converted,omitempty" json:"converted,omitempty"`

	CssExposed bool `xml:"cssExposed,omitempty" json:"cssExposed,omitempty"`

	ForecastCategory *ForecastCategories `xml:"forecastCategory,omitempty" json:"forecastCategory,omitempty"`

	GroupingString string `xml:"groupingString,omitempty" json:"groupingString,omitempty"`

	HighPriority bool `xml:"highPriority,omitempty" json:"highPriority,omitempty"`

	Probability int32 `xml:"probability,omitempty" json:"probability,omitempty"`

	ReverseRole string `xml:"reverseRole,omitempty" json:"reverseRole,omitempty"`

	Reviewed bool `xml:"reviewed,omitempty" json:"reviewed,omitempty"`

	Won bool `xml:"won,omitempty" json:"won,omitempty"`
}

type ValueSettings struct {
	ControllingFieldValue []string `xml:"controllingFieldValue,omitempty" json:"controllingFieldValue,omitempty"`

	ValueName string `xml:"valueName,omitempty" json:"valueName,omitempty"`
}

type CustomHelpMenuSection struct {
	*Metadata

	CustomHelpMenuItems []*CustomHelpMenuItem `xml:"customHelpMenuItems,omitempty" json:"customHelpMenuItems,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type CustomHelpMenuItem struct {
	LinkUrl string `xml:"linkUrl,omitempty" json:"linkUrl,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	SortOrder int32 `xml:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

type CustomIndex struct {
	*Metadata

	AllowNullValues bool `xml:"allowNullValues,omitempty" json:"allowNullValues,omitempty"`
}

type CustomLabel struct {
	*Metadata

	Categories string `xml:"categories,omitempty" json:"categories,omitempty"`

	Language string `xml:"language,omitempty" json:"language,omitempty"`

	Protected bool `xml:"protected,omitempty" json:"protected,omitempty"`

	ShortDescription string `xml:"shortDescription,omitempty" json:"shortDescription,omitempty"`

	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type CustomLabels struct {
	*Metadata

	Labels []*CustomLabel `xml:"labels,omitempty" json:"labels,omitempty"`
}

type CustomMetadata struct {
	*Metadata

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Protected bool `xml:"protected,omitempty" json:"protected,omitempty"`

	Values []*CustomMetadataValue `xml:"values,omitempty" json:"values,omitempty"`
}

type CustomMetadataValue struct {
	Field string `xml:"field,omitempty" json:"field,omitempty"`

	Value *AnyType `xml:"value,omitempty" json:"value,omitempty"`
}

type CustomNotificationType struct {
	*Metadata

	CustomNotifTypeName string `xml:"customNotifTypeName,omitempty" json:"customNotifTypeName,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Desktop bool `xml:"desktop,omitempty" json:"desktop,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	Mobile bool `xml:"mobile,omitempty" json:"mobile,omitempty"`

	Slack bool `xml:"slack,omitempty" json:"slack,omitempty"`
}

type CustomObject struct {
	*Metadata

	ActionOverrides []*ActionOverride `xml:"actionOverrides,omitempty" json:"actionOverrides,omitempty"`

	AllowInChatterGroups bool `xml:"allowInChatterGroups,omitempty" json:"allowInChatterGroups,omitempty"`

	ArticleTypeChannelDisplay *ArticleTypeChannelDisplay `xml:"articleTypeChannelDisplay,omitempty" json:"articleTypeChannelDisplay,omitempty"`

	BusinessProcesses []*BusinessProcess `xml:"businessProcesses,omitempty" json:"businessProcesses,omitempty"`

	CompactLayoutAssignment string `xml:"compactLayoutAssignment,omitempty" json:"compactLayoutAssignment,omitempty"`

	CompactLayouts []*CompactLayout `xml:"compactLayouts,omitempty" json:"compactLayouts,omitempty"`

	CustomHelp string `xml:"customHelp,omitempty" json:"customHelp,omitempty"`

	CustomHelpPage string `xml:"customHelpPage,omitempty" json:"customHelpPage,omitempty"`

	CustomSettingsType *CustomSettingsType `xml:"customSettingsType,omitempty" json:"customSettingsType,omitempty"`

	DeploymentStatus *DeploymentStatus `xml:"deploymentStatus,omitempty" json:"deploymentStatus,omitempty"`

	Deprecated bool `xml:"deprecated,omitempty" json:"deprecated,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	EnableActivities bool `xml:"enableActivities,omitempty" json:"enableActivities,omitempty"`

	EnableBulkApi bool `xml:"enableBulkApi,omitempty" json:"enableBulkApi,omitempty"`

	EnableDataTranslation bool `xml:"enableDataTranslation,omitempty" json:"enableDataTranslation,omitempty"`

	EnableDivisions bool `xml:"enableDivisions,omitempty" json:"enableDivisions,omitempty"`

	EnableEnhancedLookup bool `xml:"enableEnhancedLookup,omitempty" json:"enableEnhancedLookup,omitempty"`

	EnableFeeds bool `xml:"enableFeeds,omitempty" json:"enableFeeds,omitempty"`

	EnableHistory bool `xml:"enableHistory,omitempty" json:"enableHistory,omitempty"`

	EnableLicensing bool `xml:"enableLicensing,omitempty" json:"enableLicensing,omitempty"`

	EnablePublishStatusTracking bool `xml:"enablePublishStatusTracking,omitempty" json:"enablePublishStatusTracking,omitempty"`

	EnableReports bool `xml:"enableReports,omitempty" json:"enableReports,omitempty"`

	EnableSearch bool `xml:"enableSearch,omitempty" json:"enableSearch,omitempty"`

	EnableSharing bool `xml:"enableSharing,omitempty" json:"enableSharing,omitempty"`

	EnableStreamingApi bool `xml:"enableStreamingApi,omitempty" json:"enableStreamingApi,omitempty"`

	EventType *PlatformEventType `xml:"eventType,omitempty" json:"eventType,omitempty"`

	ExternalDataSource string `xml:"externalDataSource,omitempty" json:"externalDataSource,omitempty"`

	ExternalName string `xml:"externalName,omitempty" json:"externalName,omitempty"`

	ExternalRepository string `xml:"externalRepository,omitempty" json:"externalRepository,omitempty"`

	ExternalSharingModel *SharingModel `xml:"externalSharingModel,omitempty" json:"externalSharingModel,omitempty"`

	FieldSets []*FieldSet `xml:"fieldSets,omitempty" json:"fieldSets,omitempty"`

	Fields []*CustomField `xml:"fields,omitempty" json:"fields,omitempty"`

	Gender *Gender `xml:"gender,omitempty" json:"gender,omitempty"`

	HistoryRetentionPolicy *HistoryRetentionPolicy `xml:"historyRetentionPolicy,omitempty" json:"historyRetentionPolicy,omitempty"`

	Household bool `xml:"household,omitempty" json:"household,omitempty"`

	Indexes []*Index `xml:"indexes,omitempty" json:"indexes,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	ListViews []*ListView `xml:"listViews,omitempty" json:"listViews,omitempty"`

	MktDataLakeAttributes *MktDataLakeAttributes `xml:"mktDataLakeAttributes,omitempty" json:"mktDataLakeAttributes,omitempty"`

	MktDataModelAttributes *MktDataModelAttributes `xml:"mktDataModelAttributes,omitempty" json:"mktDataModelAttributes,omitempty"`

	NameField *CustomField `xml:"nameField,omitempty" json:"nameField,omitempty"`

	PluralLabel string `xml:"pluralLabel,omitempty" json:"pluralLabel,omitempty"`

	ProfileSearchLayouts []*ProfileSearchLayouts `xml:"profileSearchLayouts,omitempty" json:"profileSearchLayouts,omitempty"`

	PublishBehavior *PlatformEventPublishBehavior `xml:"publishBehavior,omitempty" json:"publishBehavior,omitempty"`

	RecordTypeTrackFeedHistory bool `xml:"recordTypeTrackFeedHistory,omitempty" json:"recordTypeTrackFeedHistory,omitempty"`

	RecordTypeTrackHistory bool `xml:"recordTypeTrackHistory,omitempty" json:"recordTypeTrackHistory,omitempty"`

	RecordTypes []*RecordType `xml:"recordTypes,omitempty" json:"recordTypes,omitempty"`

	SearchLayouts *SearchLayouts `xml:"searchLayouts,omitempty" json:"searchLayouts,omitempty"`

	SharingModel *SharingModel `xml:"sharingModel,omitempty" json:"sharingModel,omitempty"`

	SharingReasons []*SharingReason `xml:"sharingReasons,omitempty" json:"sharingReasons,omitempty"`

	SharingRecalculations []*SharingRecalculation `xml:"sharingRecalculations,omitempty" json:"sharingRecalculations,omitempty"`

	StartsWith *StartsWith `xml:"startsWith,omitempty" json:"startsWith,omitempty"`

	ValidationRules []*ValidationRule `xml:"validationRules,omitempty" json:"validationRules,omitempty"`

	Visibility *SetupObjectVisibility `xml:"visibility,omitempty" json:"visibility,omitempty"`

	WebLinks []*WebLink `xml:"webLinks,omitempty" json:"webLinks,omitempty"`
}

type ArticleTypeChannelDisplay struct {
	ArticleTypeTemplates []*ArticleTypeTemplate `xml:"articleTypeTemplates,omitempty" json:"articleTypeTemplates,omitempty"`
}

type ArticleTypeTemplate struct {
	Channel *Channel `xml:"channel,omitempty" json:"channel,omitempty"`

	Page string `xml:"page,omitempty" json:"page,omitempty"`

	Template *Template `xml:"template,omitempty" json:"template,omitempty"`
}

type FieldSet struct {
	*Metadata

	AvailableFields []*FieldSetItem `xml:"availableFields,omitempty" json:"availableFields,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DisplayedFields []*FieldSetItem `xml:"displayedFields,omitempty" json:"displayedFields,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`
}

type FieldSetItem struct {
	Field string `xml:"field,omitempty" json:"field,omitempty"`

	IsFieldManaged bool `xml:"isFieldManaged,omitempty" json:"isFieldManaged,omitempty"`

	IsRequired bool `xml:"isRequired,omitempty" json:"isRequired,omitempty"`
}

type HistoryRetentionPolicy struct {
	ArchiveAfterMonths int32 `xml:"archiveAfterMonths,omitempty" json:"archiveAfterMonths,omitempty"`

	ArchiveRetentionYears int32 `xml:"archiveRetentionYears,omitempty" json:"archiveRetentionYears,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`
}

type Index struct {
	*Metadata

	Fields []*IndexField `xml:"fields,omitempty" json:"fields,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`
}

type IndexField struct {
	Name string `xml:"name,omitempty" json:"name,omitempty"`

	SortDirection string `xml:"sortDirection,omitempty" json:"sortDirection,omitempty"`
}

type ListView struct {
	*Metadata

	BooleanFilter string `xml:"booleanFilter,omitempty" json:"booleanFilter,omitempty"`

	Columns []string `xml:"columns,omitempty" json:"columns,omitempty"`

	Division string `xml:"division,omitempty" json:"division,omitempty"`

	FilterScope *FilterScope `xml:"filterScope,omitempty" json:"filterScope,omitempty"`

	Filters []*ListViewFilter `xml:"filters,omitempty" json:"filters,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Language *Language `xml:"language,omitempty" json:"language,omitempty"`

	Queue string `xml:"queue,omitempty" json:"queue,omitempty"`

	SharedTo *SharedTo `xml:"sharedTo,omitempty" json:"sharedTo,omitempty"`
}

type ListViewFilter struct {
	Field string `xml:"field,omitempty" json:"field,omitempty"`

	Operation *FilterOperation `xml:"operation,omitempty" json:"operation,omitempty"`

	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type SharedTo struct {
	AllCustomerPortalUsers string `xml:"allCustomerPortalUsers,omitempty" json:"allCustomerPortalUsers,omitempty"`

	AllInternalUsers string `xml:"allInternalUsers,omitempty" json:"allInternalUsers,omitempty"`

	AllPartnerUsers string `xml:"allPartnerUsers,omitempty" json:"allPartnerUsers,omitempty"`

	ChannelProgramGroup []string `xml:"channelProgramGroup,omitempty" json:"channelProgramGroup,omitempty"`

	ChannelProgramGroups []string `xml:"channelProgramGroups,omitempty" json:"channelProgramGroups,omitempty"`

	Group []string `xml:"group,omitempty" json:"group,omitempty"`

	Groups []string `xml:"groups,omitempty" json:"groups,omitempty"`

	GuestUser []string `xml:"guestUser,omitempty" json:"guestUser,omitempty"`

	ManagerSubordinates []string `xml:"managerSubordinates,omitempty" json:"managerSubordinates,omitempty"`

	Managers []string `xml:"managers,omitempty" json:"managers,omitempty"`

	PortalRole []string `xml:"portalRole,omitempty" json:"portalRole,omitempty"`

	PortalRoleAndSubordinates []string `xml:"portalRoleAndSubordinates,omitempty" json:"portalRoleAndSubordinates,omitempty"`

	Queue []string `xml:"queue,omitempty" json:"queue,omitempty"`

	Role []string `xml:"role,omitempty" json:"role,omitempty"`

	RoleAndSubordinates []string `xml:"roleAndSubordinates,omitempty" json:"roleAndSubordinates,omitempty"`

	RoleAndSubordinatesInternal []string `xml:"roleAndSubordinatesInternal,omitempty" json:"roleAndSubordinatesInternal,omitempty"`

	Roles []string `xml:"roles,omitempty" json:"roles,omitempty"`

	RolesAndSubordinates []string `xml:"rolesAndSubordinates,omitempty" json:"rolesAndSubordinates,omitempty"`

	Territories []string `xml:"territories,omitempty" json:"territories,omitempty"`

	TerritoriesAndSubordinates []string `xml:"territoriesAndSubordinates,omitempty" json:"territoriesAndSubordinates,omitempty"`

	Territory []string `xml:"territory,omitempty" json:"territory,omitempty"`

	TerritoryAndSubordinates []string `xml:"territoryAndSubordinates,omitempty" json:"territoryAndSubordinates,omitempty"`
}

type MktDataLakeAttributes struct {
	CreationType *DefinitionCreationType `xml:"creationType,omitempty" json:"creationType,omitempty"`

	IsEnabled bool `xml:"isEnabled,omitempty" json:"isEnabled,omitempty"`

	ObjectCategory string `xml:"objectCategory,omitempty" json:"objectCategory,omitempty"`
}

type MktDataModelAttributes struct {
	CreationType *DefinitionCreationType `xml:"creationType,omitempty" json:"creationType,omitempty"`

	DataModelTaxonomy string `xml:"dataModelTaxonomy,omitempty" json:"dataModelTaxonomy,omitempty"`

	DataSpaceName string `xml:"dataSpaceName,omitempty" json:"dataSpaceName,omitempty"`

	DataSpacePrefix string `xml:"dataSpacePrefix,omitempty" json:"dataSpacePrefix,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	IsEnabled bool `xml:"isEnabled,omitempty" json:"isEnabled,omitempty"`

	IsSegmentable bool `xml:"isSegmentable,omitempty" json:"isSegmentable,omitempty"`

	IsUsedForMetrics bool `xml:"isUsedForMetrics,omitempty" json:"isUsedForMetrics,omitempty"`

	ObjectCategory string `xml:"objectCategory,omitempty" json:"objectCategory,omitempty"`

	ReferenceEntityGroup string `xml:"referenceEntityGroup,omitempty" json:"referenceEntityGroup,omitempty"`

	ReferenceEntityName string `xml:"referenceEntityName,omitempty" json:"referenceEntityName,omitempty"`

	ReferenceEntitySubjectArea string `xml:"referenceEntitySubjectArea,omitempty" json:"referenceEntitySubjectArea,omitempty"`
}

type ProfileSearchLayouts struct {
	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`

	ProfileName string `xml:"profileName,omitempty" json:"profileName,omitempty"`
}

type RecordType struct {
	*Metadata

	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	BusinessProcess string `xml:"businessProcess,omitempty" json:"businessProcess,omitempty"`

	CompactLayoutAssignment string `xml:"compactLayoutAssignment,omitempty" json:"compactLayoutAssignment,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	PicklistValues []*RecordTypePicklistValue `xml:"picklistValues,omitempty" json:"picklistValues,omitempty"`
}

type RecordTypePicklistValue struct {
	Picklist string `xml:"picklist,omitempty" json:"picklist,omitempty"`

	Values []*PicklistValue `xml:"values,omitempty" json:"values,omitempty"`
}

type SearchLayouts struct {
	CustomTabListAdditionalFields []string `xml:"customTabListAdditionalFields,omitempty" json:"customTabListAdditionalFields,omitempty"`

	ExcludedStandardButtons []string `xml:"excludedStandardButtons,omitempty" json:"excludedStandardButtons,omitempty"`

	ListViewButtons []string `xml:"listViewButtons,omitempty" json:"listViewButtons,omitempty"`

	LookupDialogsAdditionalFields []string `xml:"lookupDialogsAdditionalFields,omitempty" json:"lookupDialogsAdditionalFields,omitempty"`

	LookupFilterFields []string `xml:"lookupFilterFields,omitempty" json:"lookupFilterFields,omitempty"`

	LookupPhoneDialogsAdditionalFields []string `xml:"lookupPhoneDialogsAdditionalFields,omitempty" json:"lookupPhoneDialogsAdditionalFields,omitempty"`

	MassQuickActions []string `xml:"massQuickActions,omitempty" json:"massQuickActions,omitempty"`

	SearchFilterFields []string `xml:"searchFilterFields,omitempty" json:"searchFilterFields,omitempty"`

	SearchResultsAdditionalFields []string `xml:"searchResultsAdditionalFields,omitempty" json:"searchResultsAdditionalFields,omitempty"`

	SearchResultsCustomButtons []string `xml:"searchResultsCustomButtons,omitempty" json:"searchResultsCustomButtons,omitempty"`
}

type SharingReason struct {
	*Metadata

	Label string `xml:"label,omitempty" json:"label,omitempty"`
}

type SharingRecalculation struct {
	ClassName string `xml:"className,omitempty" json:"className,omitempty"`
}

type ValidationRule struct {
	*Metadata

	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	ErrorConditionFormula string `xml:"errorConditionFormula,omitempty" json:"errorConditionFormula,omitempty"`

	ErrorDisplayField string `xml:"errorDisplayField,omitempty" json:"errorDisplayField,omitempty"`

	ErrorMessage string `xml:"errorMessage,omitempty" json:"errorMessage,omitempty"`
}

type WebLink struct {
	*Metadata

	Availability *WebLinkAvailability `xml:"availability,omitempty" json:"availability,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DisplayType *WebLinkDisplayType `xml:"displayType,omitempty" json:"displayType,omitempty"`

	EncodingKey *Encoding `xml:"encodingKey,omitempty" json:"encodingKey,omitempty"`

	HasMenubar bool `xml:"hasMenubar,omitempty" json:"hasMenubar,omitempty"`

	HasScrollbars bool `xml:"hasScrollbars,omitempty" json:"hasScrollbars,omitempty"`

	HasToolbar bool `xml:"hasToolbar,omitempty" json:"hasToolbar,omitempty"`

	Height int32 `xml:"height,omitempty" json:"height,omitempty"`

	IsResizable bool `xml:"isResizable,omitempty" json:"isResizable,omitempty"`

	LinkType *WebLinkType `xml:"linkType,omitempty" json:"linkType,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	OpenType *WebLinkWindowType `xml:"openType,omitempty" json:"openType,omitempty"`

	Page string `xml:"page,omitempty" json:"page,omitempty"`

	Position *WebLinkPosition `xml:"position,omitempty" json:"position,omitempty"`

	Protected bool `xml:"protected,omitempty" json:"protected,omitempty"`

	RequireRowSelection bool `xml:"requireRowSelection,omitempty" json:"requireRowSelection,omitempty"`

	Scontrol string `xml:"scontrol,omitempty" json:"scontrol,omitempty"`

	ShowsLocation bool `xml:"showsLocation,omitempty" json:"showsLocation,omitempty"`

	ShowsStatus bool `xml:"showsStatus,omitempty" json:"showsStatus,omitempty"`

	Url string `xml:"url,omitempty" json:"url,omitempty"`

	Width int32 `xml:"width,omitempty" json:"width,omitempty"`
}

type CustomObjectTranslation struct {
	*Metadata

	CaseValues []*ObjectNameCaseValue `xml:"caseValues,omitempty" json:"caseValues,omitempty"`

	FieldSets []*FieldSetTranslation `xml:"fieldSets,omitempty" json:"fieldSets,omitempty"`

	Fields []*CustomFieldTranslation `xml:"fields,omitempty" json:"fields,omitempty"`

	Gender *Gender `xml:"gender,omitempty" json:"gender,omitempty"`

	Layouts []*LayoutTranslation `xml:"layouts,omitempty" json:"layouts,omitempty"`

	NameFieldLabel string `xml:"nameFieldLabel,omitempty" json:"nameFieldLabel,omitempty"`

	QuickActions []*QuickActionTranslation `xml:"quickActions,omitempty" json:"quickActions,omitempty"`

	RecordTypes []*RecordTypeTranslation `xml:"recordTypes,omitempty" json:"recordTypes,omitempty"`

	SharingReasons []*SharingReasonTranslation `xml:"sharingReasons,omitempty" json:"sharingReasons,omitempty"`

	StandardFields []*StandardFieldTranslation `xml:"standardFields,omitempty" json:"standardFields,omitempty"`

	StartsWith *StartsWith `xml:"startsWith,omitempty" json:"startsWith,omitempty"`

	ValidationRules []*ValidationRuleTranslation `xml:"validationRules,omitempty" json:"validationRules,omitempty"`

	WebLinks []*WebLinkTranslation `xml:"webLinks,omitempty" json:"webLinks,omitempty"`

	WorkflowTasks []*WorkflowTaskTranslation `xml:"workflowTasks,omitempty" json:"workflowTasks,omitempty"`
}

type ObjectNameCaseValue struct {
	Article *Article `xml:"article,omitempty" json:"article,omitempty"`

	CaseType *CaseType `xml:"caseType,omitempty" json:"caseType,omitempty"`

	Plural bool `xml:"plural,omitempty" json:"plural,omitempty"`

	Possessive *Possessive `xml:"possessive,omitempty" json:"possessive,omitempty"`

	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type FieldSetTranslation struct {
	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type CustomFieldTranslation struct {
	CaseValues []*ObjectNameCaseValue `xml:"caseValues,omitempty" json:"caseValues,omitempty"`

	Gender *Gender `xml:"gender,omitempty" json:"gender,omitempty"`

	Help string `xml:"help,omitempty" json:"help,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	LookupFilter *LookupFilterTranslation `xml:"lookupFilter,omitempty" json:"lookupFilter,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	PicklistValues []*PicklistValueTranslation `xml:"picklistValues,omitempty" json:"picklistValues,omitempty"`

	RelationshipLabel string `xml:"relationshipLabel,omitempty" json:"relationshipLabel,omitempty"`

	StartsWith *StartsWith `xml:"startsWith,omitempty" json:"startsWith,omitempty"`
}

type LookupFilterTranslation struct {
	ErrorMessage string `xml:"errorMessage,omitempty" json:"errorMessage,omitempty"`

	InformationalMessage string `xml:"informationalMessage,omitempty" json:"informationalMessage,omitempty"`
}

type PicklistValueTranslation struct {
	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	Translation string `xml:"translation,omitempty" json:"translation,omitempty"`
}

type LayoutTranslation struct {
	Layout string `xml:"layout,omitempty" json:"layout,omitempty"`

	LayoutType string `xml:"layoutType,omitempty" json:"layoutType,omitempty"`

	Sections []*LayoutSectionTranslation `xml:"sections,omitempty" json:"sections,omitempty"`
}

type LayoutSectionTranslation struct {
	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Section string `xml:"section,omitempty" json:"section,omitempty"`
}

type QuickActionTranslation struct {
	Aspect string `xml:"aspect,omitempty" json:"aspect,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type RecordTypeTranslation struct {
	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type SharingReasonTranslation struct {
	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type StandardFieldTranslation struct {
	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type ValidationRuleTranslation struct {
	ErrorMessage string `xml:"errorMessage,omitempty" json:"errorMessage,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type WebLinkTranslation struct {
	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type WorkflowTaskTranslation struct {
	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Subject string `xml:"subject,omitempty" json:"subject,omitempty"`
}

type CustomPageWebLink struct {
	*Metadata

	Availability *WebLinkAvailability `xml:"availability,omitempty" json:"availability,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DisplayType *WebLinkDisplayType `xml:"displayType,omitempty" json:"displayType,omitempty"`

	EncodingKey *Encoding `xml:"encodingKey,omitempty" json:"encodingKey,omitempty"`

	HasMenubar bool `xml:"hasMenubar,omitempty" json:"hasMenubar,omitempty"`

	HasScrollbars bool `xml:"hasScrollbars,omitempty" json:"hasScrollbars,omitempty"`

	HasToolbar bool `xml:"hasToolbar,omitempty" json:"hasToolbar,omitempty"`

	Height int32 `xml:"height,omitempty" json:"height,omitempty"`

	IsResizable bool `xml:"isResizable,omitempty" json:"isResizable,omitempty"`

	LinkType *WebLinkType `xml:"linkType,omitempty" json:"linkType,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	OpenType *WebLinkWindowType `xml:"openType,omitempty" json:"openType,omitempty"`

	Page string `xml:"page,omitempty" json:"page,omitempty"`

	Position *WebLinkPosition `xml:"position,omitempty" json:"position,omitempty"`

	Protected bool `xml:"protected,omitempty" json:"protected,omitempty"`

	RequireRowSelection bool `xml:"requireRowSelection,omitempty" json:"requireRowSelection,omitempty"`

	Scontrol string `xml:"scontrol,omitempty" json:"scontrol,omitempty"`

	ShowsLocation bool `xml:"showsLocation,omitempty" json:"showsLocation,omitempty"`

	ShowsStatus bool `xml:"showsStatus,omitempty" json:"showsStatus,omitempty"`

	Url string `xml:"url,omitempty" json:"url,omitempty"`

	Width int32 `xml:"width,omitempty" json:"width,omitempty"`
}

type CustomPermission struct {
	*Metadata

	ConnectedApp string `xml:"connectedApp,omitempty" json:"connectedApp,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	IsLicensed bool `xml:"isLicensed,omitempty" json:"isLicensed,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	RequiredPermission []*CustomPermissionDependencyRequired `xml:"requiredPermission,omitempty" json:"requiredPermission,omitempty"`
}

type CustomPermissionDependencyRequired struct {
	CustomPermission string `xml:"customPermission,omitempty" json:"customPermission,omitempty"`

	Dependency bool `xml:"dependency,omitempty" json:"dependency,omitempty"`
}

type CustomSite struct {
	*Metadata

	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	AllowHomePage bool `xml:"allowHomePage,omitempty" json:"allowHomePage,omitempty"`

	AllowStandardAnswersPages bool `xml:"allowStandardAnswersPages,omitempty" json:"allowStandardAnswersPages,omitempty"`

	AllowStandardIdeasPages bool `xml:"allowStandardIdeasPages,omitempty" json:"allowStandardIdeasPages,omitempty"`

	AllowStandardLookups bool `xml:"allowStandardLookups,omitempty" json:"allowStandardLookups,omitempty"`

	AllowStandardPortalPages bool `xml:"allowStandardPortalPages,omitempty" json:"allowStandardPortalPages,omitempty"`

	AllowStandardSearch bool `xml:"allowStandardSearch,omitempty" json:"allowStandardSearch,omitempty"`

	AnalyticsTrackingCode string `xml:"analyticsTrackingCode,omitempty" json:"analyticsTrackingCode,omitempty"`

	AuthorizationRequiredPage string `xml:"authorizationRequiredPage,omitempty" json:"authorizationRequiredPage,omitempty"`

	BandwidthExceededPage string `xml:"bandwidthExceededPage,omitempty" json:"bandwidthExceededPage,omitempty"`

	BrowserXssProtection bool `xml:"browserXssProtection,omitempty" json:"browserXssProtection,omitempty"`

	CachePublicVisualforcePagesInProxyServers bool `xml:"cachePublicVisualforcePagesInProxyServers,omitempty" json:"cachePublicVisualforcePagesInProxyServers,omitempty"`

	ChangePasswordPage string `xml:"changePasswordPage,omitempty" json:"changePasswordPage,omitempty"`

	ChatterAnswersForgotPasswordConfirmPage string `xml:"chatterAnswersForgotPasswordConfirmPage,omitempty" json:"chatterAnswersForgotPasswordConfirmPage,omitempty"`

	ChatterAnswersForgotPasswordPage string `xml:"chatterAnswersForgotPasswordPage,omitempty" json:"chatterAnswersForgotPasswordPage,omitempty"`

	ChatterAnswersHelpPage string `xml:"chatterAnswersHelpPage,omitempty" json:"chatterAnswersHelpPage,omitempty"`

	ChatterAnswersLoginPage string `xml:"chatterAnswersLoginPage,omitempty" json:"chatterAnswersLoginPage,omitempty"`

	ChatterAnswersRegistrationPage string `xml:"chatterAnswersRegistrationPage,omitempty" json:"chatterAnswersRegistrationPage,omitempty"`

	ClickjackProtectionLevel *SiteClickjackProtectionLevel `xml:"clickjackProtectionLevel,omitempty" json:"clickjackProtectionLevel,omitempty"`

	ContentSniffingProtection bool `xml:"contentSniffingProtection,omitempty" json:"contentSniffingProtection,omitempty"`

	CustomWebAddresses []*SiteWebAddress `xml:"customWebAddresses,omitempty" json:"customWebAddresses,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	EnableAuraRequests bool `xml:"enableAuraRequests,omitempty" json:"enableAuraRequests,omitempty"`

	FavoriteIcon string `xml:"favoriteIcon,omitempty" json:"favoriteIcon,omitempty"`

	FileNotFoundPage string `xml:"fileNotFoundPage,omitempty" json:"fileNotFoundPage,omitempty"`

	ForgotPasswordPage string `xml:"forgotPasswordPage,omitempty" json:"forgotPasswordPage,omitempty"`

	GenericErrorPage string `xml:"genericErrorPage,omitempty" json:"genericErrorPage,omitempty"`

	GuestProfile string `xml:"guestProfile,omitempty" json:"guestProfile,omitempty"`

	InMaintenancePage string `xml:"inMaintenancePage,omitempty" json:"inMaintenancePage,omitempty"`

	InactiveIndexPage string `xml:"inactiveIndexPage,omitempty" json:"inactiveIndexPage,omitempty"`

	IndexPage string `xml:"indexPage,omitempty" json:"indexPage,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	MyProfilePage string `xml:"myProfilePage,omitempty" json:"myProfilePage,omitempty"`

	Portal string `xml:"portal,omitempty" json:"portal,omitempty"`

	RedirectToCustomDomain bool `xml:"redirectToCustomDomain,omitempty" json:"redirectToCustomDomain,omitempty"`

	ReferrerPolicyOriginWhenCrossOrigin bool `xml:"referrerPolicyOriginWhenCrossOrigin,omitempty" json:"referrerPolicyOriginWhenCrossOrigin,omitempty"`

	RobotsTxtPage string `xml:"robotsTxtPage,omitempty" json:"robotsTxtPage,omitempty"`

	SelfRegPage string `xml:"selfRegPage,omitempty" json:"selfRegPage,omitempty"`

	ServerIsDown string `xml:"serverIsDown,omitempty" json:"serverIsDown,omitempty"`

	SiteAdmin string `xml:"siteAdmin,omitempty" json:"siteAdmin,omitempty"`

	SiteGuestRecordDefaultOwner string `xml:"siteGuestRecordDefaultOwner,omitempty" json:"siteGuestRecordDefaultOwner,omitempty"`

	SiteIframeWhiteListUrls []*SiteIframeWhiteListUrl `xml:"siteIframeWhiteListUrls,omitempty" json:"siteIframeWhiteListUrls,omitempty"`

	SiteRedirectMappings []*SiteRedirectMapping `xml:"siteRedirectMappings,omitempty" json:"siteRedirectMappings,omitempty"`

	SiteTemplate string `xml:"siteTemplate,omitempty" json:"siteTemplate,omitempty"`

	SiteType *SiteType `xml:"siteType,omitempty" json:"siteType,omitempty"`

	Subdomain string `xml:"subdomain,omitempty" json:"subdomain,omitempty"`

	UrlPathPrefix string `xml:"urlPathPrefix,omitempty" json:"urlPathPrefix,omitempty"`
}

type SiteWebAddress struct {
	Certificate string `xml:"certificate,omitempty" json:"certificate,omitempty"`

	DomainName string `xml:"domainName,omitempty" json:"domainName,omitempty"`

	Primary bool `xml:"primary,omitempty" json:"primary,omitempty"`
}

type SiteIframeWhiteListUrl struct {
	Url string `xml:"url,omitempty" json:"url,omitempty"`
}

type SiteRedirectMapping struct {
	Action *SiteRedirect `xml:"action,omitempty" json:"action,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	IsDynamic bool `xml:"isDynamic,omitempty" json:"isDynamic,omitempty"`

	Source string `xml:"source,omitempty" json:"source,omitempty"`

	Target string `xml:"target,omitempty" json:"target,omitempty"`
}

type CustomTab struct {
	*Metadata

	ActionOverrides []*ActionOverride `xml:"actionOverrides,omitempty" json:"actionOverrides,omitempty"`

	AuraComponent string `xml:"auraComponent,omitempty" json:"auraComponent,omitempty"`

	CustomObject bool `xml:"customObject,omitempty" json:"customObject,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	FlexiPage string `xml:"flexiPage,omitempty" json:"flexiPage,omitempty"`

	FrameHeight int32 `xml:"frameHeight,omitempty" json:"frameHeight,omitempty"`

	HasSidebar bool `xml:"hasSidebar,omitempty" json:"hasSidebar,omitempty"`

	Icon string `xml:"icon,omitempty" json:"icon,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	LwcComponent string `xml:"lwcComponent,omitempty" json:"lwcComponent,omitempty"`

	Motif string `xml:"motif,omitempty" json:"motif,omitempty"`

	Page string `xml:"page,omitempty" json:"page,omitempty"`

	Scontrol string `xml:"scontrol,omitempty" json:"scontrol,omitempty"`

	SplashPageLink string `xml:"splashPageLink,omitempty" json:"splashPageLink,omitempty"`

	Url string `xml:"url,omitempty" json:"url,omitempty"`

	UrlEncodingKey *Encoding `xml:"urlEncodingKey,omitempty" json:"urlEncodingKey,omitempty"`
}

type CustomerDataPlatformSettings struct {
	*Metadata

	EnableCustomerDataPlatform bool `xml:"enableCustomerDataPlatform,omitempty" json:"enableCustomerDataPlatform,omitempty"`
}

type CustomizablePropensityScoringSettings struct {
	*Metadata

	EnableCpsPref bool `xml:"enableCpsPref,omitempty" json:"enableCpsPref,omitempty"`
}

type Dashboard struct {
	*Metadata

	BackgroundEndColor string `xml:"backgroundEndColor,omitempty" json:"backgroundEndColor,omitempty"`

	BackgroundFadeDirection *ChartBackgroundDirection `xml:"backgroundFadeDirection,omitempty" json:"backgroundFadeDirection,omitempty"`

	BackgroundStartColor string `xml:"backgroundStartColor,omitempty" json:"backgroundStartColor,omitempty"`

	ChartTheme *ChartTheme `xml:"chartTheme,omitempty" json:"chartTheme,omitempty"`

	ColorPalette *ChartColorPalettes `xml:"colorPalette,omitempty" json:"colorPalette,omitempty"`

	DashboardChartTheme *ChartTheme `xml:"dashboardChartTheme,omitempty" json:"dashboardChartTheme,omitempty"`

	DashboardColorPalette *ChartColorPalettes `xml:"dashboardColorPalette,omitempty" json:"dashboardColorPalette,omitempty"`

	DashboardFilters []*DashboardFilter `xml:"dashboardFilters,omitempty" json:"dashboardFilters,omitempty"`

	DashboardGridLayout *DashboardGridLayout `xml:"dashboardGridLayout,omitempty" json:"dashboardGridLayout,omitempty"`

	DashboardResultRefreshedDate string `xml:"dashboardResultRefreshedDate,omitempty" json:"dashboardResultRefreshedDate,omitempty"`

	DashboardResultRunningUser string `xml:"dashboardResultRunningUser,omitempty" json:"dashboardResultRunningUser,omitempty"`

	DashboardType *DashboardType `xml:"dashboardType,omitempty" json:"dashboardType,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	FolderName string `xml:"folderName,omitempty" json:"folderName,omitempty"`

	IsGridLayout bool `xml:"isGridLayout,omitempty" json:"isGridLayout,omitempty"`

	LeftSection *DashboardComponentSection `xml:"leftSection,omitempty" json:"leftSection,omitempty"`

	MiddleSection *DashboardComponentSection `xml:"middleSection,omitempty" json:"middleSection,omitempty"`

	NumSubscriptions int32 `xml:"numSubscriptions,omitempty" json:"numSubscriptions,omitempty"`

	Owner string `xml:"owner,omitempty" json:"owner,omitempty"`

	RightSection *DashboardComponentSection `xml:"rightSection,omitempty" json:"rightSection,omitempty"`

	RunningUser string `xml:"runningUser,omitempty" json:"runningUser,omitempty"`

	TextColor string `xml:"textColor,omitempty" json:"textColor,omitempty"`

	Title string `xml:"title,omitempty" json:"title,omitempty"`

	TitleColor string `xml:"titleColor,omitempty" json:"titleColor,omitempty"`

	TitleSize int32 `xml:"titleSize,omitempty" json:"titleSize,omitempty"`
}

type DashboardFilter struct {
	DashboardFilterOptions []*DashboardFilterOption `xml:"dashboardFilterOptions,omitempty" json:"dashboardFilterOptions,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type DashboardFilterOption struct {
	Operator *DashboardFilterOperation `xml:"operator,omitempty" json:"operator,omitempty"`

	Values []string `xml:"values,omitempty" json:"values,omitempty"`
}

type DashboardGridLayout struct {
	DashboardGridComponents []*DashboardGridComponent `xml:"dashboardGridComponents,omitempty" json:"dashboardGridComponents,omitempty"`

	NumberOfColumns int32 `xml:"numberOfColumns,omitempty" json:"numberOfColumns,omitempty"`

	RowHeight int32 `xml:"rowHeight,omitempty" json:"rowHeight,omitempty"`
}

type DashboardGridComponent struct {
	ColSpan int32 `xml:"colSpan,omitempty" json:"colSpan,omitempty"`

	ColumnIndex int32 `xml:"columnIndex,omitempty" json:"columnIndex,omitempty"`

	DashboardComponent *DashboardComponent `xml:"dashboardComponent,omitempty" json:"dashboardComponent,omitempty"`

	RowIndex int32 `xml:"rowIndex,omitempty" json:"rowIndex,omitempty"`

	RowSpan int32 `xml:"rowSpan,omitempty" json:"rowSpan,omitempty"`
}

type DashboardComponent struct {
	AutoselectColumnsFromReport bool `xml:"autoselectColumnsFromReport,omitempty" json:"autoselectColumnsFromReport,omitempty"`

	ChartAxisRange *ChartRangeType `xml:"chartAxisRange,omitempty" json:"chartAxisRange,omitempty"`

	ChartAxisRangeMax float64 `xml:"chartAxisRangeMax,omitempty" json:"chartAxisRangeMax,omitempty"`

	ChartAxisRangeMin float64 `xml:"chartAxisRangeMin,omitempty" json:"chartAxisRangeMin,omitempty"`

	ChartSummary []*ChartSummary `xml:"chartSummary,omitempty" json:"chartSummary,omitempty"`

	ComponentChartTheme *ChartTheme `xml:"componentChartTheme,omitempty" json:"componentChartTheme,omitempty"`

	ComponentType *DashboardComponentType `xml:"componentType,omitempty" json:"componentType,omitempty"`

	DashboardComponentContents []*DashboardComponentContent `xml:"dashboardComponentContents,omitempty" json:"dashboardComponentContents,omitempty"`

	DashboardDynamicValues []*DashboardDynamicValue `xml:"dashboardDynamicValues,omitempty" json:"dashboardDynamicValues,omitempty"`

	DashboardFilterColumns []*DashboardFilterColumn `xml:"dashboardFilterColumns,omitempty" json:"dashboardFilterColumns,omitempty"`

	DashboardTableColumn []*DashboardTableColumn `xml:"dashboardTableColumn,omitempty" json:"dashboardTableColumn,omitempty"`

	DecimalPrecision int32 `xml:"decimalPrecision,omitempty" json:"decimalPrecision,omitempty"`

	DisplayUnits *ChartUnits `xml:"displayUnits,omitempty" json:"displayUnits,omitempty"`

	DrillDownUrl string `xml:"drillDownUrl,omitempty" json:"drillDownUrl,omitempty"`

	DrillEnabled bool `xml:"drillEnabled,omitempty" json:"drillEnabled,omitempty"`

	DrillToDetailEnabled bool `xml:"drillToDetailEnabled,omitempty" json:"drillToDetailEnabled,omitempty"`

	EnableHover bool `xml:"enableHover,omitempty" json:"enableHover,omitempty"`

	ExpandOthers bool `xml:"expandOthers,omitempty" json:"expandOthers,omitempty"`

	FlexComponentProperties *DashboardFlexTableComponentProperties `xml:"flexComponentProperties,omitempty" json:"flexComponentProperties,omitempty"`

	Footer string `xml:"footer,omitempty" json:"footer,omitempty"`

	GaugeMax float64 `xml:"gaugeMax,omitempty" json:"gaugeMax,omitempty"`

	GaugeMin float64 `xml:"gaugeMin,omitempty" json:"gaugeMin,omitempty"`

	GroupingColumn []string `xml:"groupingColumn,omitempty" json:"groupingColumn,omitempty"`

	GroupingSortProperties *DashboardComponentGroupingSortProperties `xml:"groupingSortProperties,omitempty" json:"groupingSortProperties,omitempty"`

	Header string `xml:"header,omitempty" json:"header,omitempty"`

	IndicatorBreakpoint1 float64 `xml:"indicatorBreakpoint1,omitempty" json:"indicatorBreakpoint1,omitempty"`

	IndicatorBreakpoint2 float64 `xml:"indicatorBreakpoint2,omitempty" json:"indicatorBreakpoint2,omitempty"`

	IndicatorHighColor string `xml:"indicatorHighColor,omitempty" json:"indicatorHighColor,omitempty"`

	IndicatorLowColor string `xml:"indicatorLowColor,omitempty" json:"indicatorLowColor,omitempty"`

	IndicatorMiddleColor string `xml:"indicatorMiddleColor,omitempty" json:"indicatorMiddleColor,omitempty"`

	LegendPosition *ChartLegendPosition `xml:"legendPosition,omitempty" json:"legendPosition,omitempty"`

	MaxValuesDisplayed int32 `xml:"maxValuesDisplayed,omitempty" json:"maxValuesDisplayed,omitempty"`

	MetricLabel string `xml:"metricLabel,omitempty" json:"metricLabel,omitempty"`

	Page string `xml:"page,omitempty" json:"page,omitempty"`

	PageHeightInPixels int32 `xml:"pageHeightInPixels,omitempty" json:"pageHeightInPixels,omitempty"`

	Report string `xml:"report,omitempty" json:"report,omitempty"`

	Scontrol string `xml:"scontrol,omitempty" json:"scontrol,omitempty"`

	ScontrolHeightInPixels int32 `xml:"scontrolHeightInPixels,omitempty" json:"scontrolHeightInPixels,omitempty"`

	ShowPercentage bool `xml:"showPercentage,omitempty" json:"showPercentage,omitempty"`

	ShowPicturesOnCharts bool `xml:"showPicturesOnCharts,omitempty" json:"showPicturesOnCharts,omitempty"`

	ShowPicturesOnTables bool `xml:"showPicturesOnTables,omitempty" json:"showPicturesOnTables,omitempty"`

	ShowRange bool `xml:"showRange,omitempty" json:"showRange,omitempty"`

	ShowTotal bool `xml:"showTotal,omitempty" json:"showTotal,omitempty"`

	ShowValues bool `xml:"showValues,omitempty" json:"showValues,omitempty"`

	SortBy *DashboardComponentFilter `xml:"sortBy,omitempty" json:"sortBy,omitempty"`

	Title string `xml:"title,omitempty" json:"title,omitempty"`

	UseReportChart bool `xml:"useReportChart,omitempty" json:"useReportChart,omitempty"`
}

type ChartSummary struct {
	Aggregate *ReportSummaryType `xml:"aggregate,omitempty" json:"aggregate,omitempty"`

	AxisBinding *ChartAxis `xml:"axisBinding,omitempty" json:"axisBinding,omitempty"`

	Column string `xml:"column,omitempty" json:"column,omitempty"`
}

type DashboardComponentContent struct {
	AdditionalInfo string `xml:"additionalInfo,omitempty" json:"additionalInfo,omitempty"`

	AltText string `xml:"altText,omitempty" json:"altText,omitempty"`

	FileName string `xml:"fileName,omitempty" json:"fileName,omitempty"`

	Fit *Fit `xml:"fit,omitempty" json:"fit,omitempty"`

	HorizontalAlignment *HorizontalAlignment `xml:"horizontalAlignment,omitempty" json:"horizontalAlignment,omitempty"`

	RichTextContent string `xml:"richTextContent,omitempty" json:"richTextContent,omitempty"`

	Tooltip string `xml:"tooltip,omitempty" json:"tooltip,omitempty"`

	VerticalAlignment *VerticalAlignment `xml:"verticalAlignment,omitempty" json:"verticalAlignment,omitempty"`
}

type DashboardDynamicValue struct {
	AdditionalInfo string `xml:"additionalInfo,omitempty" json:"additionalInfo,omitempty"`

	FieldName string `xml:"fieldName,omitempty" json:"fieldName,omitempty"`

	IsDynamicUser bool `xml:"isDynamicUser,omitempty" json:"isDynamicUser,omitempty"`
}

type DashboardFilterColumn struct {
	Column string `xml:"column,omitempty" json:"column,omitempty"`
}

type DashboardTableColumn struct {
	AggregateType *ReportSummaryType `xml:"aggregateType,omitempty" json:"aggregateType,omitempty"`

	CalculatePercent bool `xml:"calculatePercent,omitempty" json:"calculatePercent,omitempty"`

	Column string `xml:"column,omitempty" json:"column,omitempty"`

	DecimalPlaces int32 `xml:"decimalPlaces,omitempty" json:"decimalPlaces,omitempty"`

	ShowSubTotal bool `xml:"showSubTotal,omitempty" json:"showSubTotal,omitempty"`

	ShowTotal bool `xml:"showTotal,omitempty" json:"showTotal,omitempty"`

	SortBy *DashboardComponentFilter `xml:"sortBy,omitempty" json:"sortBy,omitempty"`
}

type DashboardFlexTableComponentProperties struct {
	DecimalPrecision int32 `xml:"decimalPrecision,omitempty" json:"decimalPrecision,omitempty"`

	FlexTableColumn []*DashboardComponentColumn `xml:"flexTableColumn,omitempty" json:"flexTableColumn,omitempty"`

	FlexTableSortInfo *DashboardComponentSortInfo `xml:"flexTableSortInfo,omitempty" json:"flexTableSortInfo,omitempty"`

	HideChatterPhotos bool `xml:"hideChatterPhotos,omitempty" json:"hideChatterPhotos,omitempty"`
}

type DashboardComponentColumn struct {
	BreakPoint1 float64 `xml:"breakPoint1,omitempty" json:"breakPoint1,omitempty"`

	BreakPoint2 float64 `xml:"breakPoint2,omitempty" json:"breakPoint2,omitempty"`

	BreakPointOrder int32 `xml:"breakPointOrder,omitempty" json:"breakPointOrder,omitempty"`

	HighRangeColor int32 `xml:"highRangeColor,omitempty" json:"highRangeColor,omitempty"`

	LowRangeColor int32 `xml:"lowRangeColor,omitempty" json:"lowRangeColor,omitempty"`

	MidRangeColor int32 `xml:"midRangeColor,omitempty" json:"midRangeColor,omitempty"`

	ReportColumn string `xml:"reportColumn,omitempty" json:"reportColumn,omitempty"`

	ShowSubTotal bool `xml:"showSubTotal,omitempty" json:"showSubTotal,omitempty"`

	ShowTotal bool `xml:"showTotal,omitempty" json:"showTotal,omitempty"`

	Type_ *DashboardComponentColumnType `xml:"type,omitempty" json:"type,omitempty"`
}

type DashboardComponentSortInfo struct {
	SortColumn string `xml:"sortColumn,omitempty" json:"sortColumn,omitempty"`

	SortOrder string `xml:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

type DashboardComponentGroupingSortProperties struct {
	GroupingSorts []*DashboardComponentGroupingSort `xml:"groupingSorts,omitempty" json:"groupingSorts,omitempty"`
}

type DashboardComponentGroupingSort struct {
	GroupingLevel string `xml:"groupingLevel,omitempty" json:"groupingLevel,omitempty"`

	InheritedReportGroupingSort string `xml:"inheritedReportGroupingSort,omitempty" json:"inheritedReportGroupingSort,omitempty"`

	SortColumn string `xml:"sortColumn,omitempty" json:"sortColumn,omitempty"`

	SortOrder string `xml:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

type DashboardComponentSection struct {
	ColumnSize *DashboardComponentSize `xml:"columnSize,omitempty" json:"columnSize,omitempty"`

	Components []*DashboardComponent `xml:"components,omitempty" json:"components,omitempty"`
}

type DataCategoryGroup struct {
	*Metadata

	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	DataCategory *DataCategory `xml:"dataCategory,omitempty" json:"dataCategory,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	ObjectUsage *ObjectUsage `xml:"objectUsage,omitempty" json:"objectUsage,omitempty"`
}

type DataCategory struct {
	DataCategory []*DataCategory `xml:"dataCategory,omitempty" json:"dataCategory,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type ObjectUsage struct {
	Object []string `xml:"object,omitempty" json:"object,omitempty"`
}

type DataDotComSettings struct {
	*Metadata

	EnableAccountExportButtonOff bool `xml:"enableAccountExportButtonOff,omitempty" json:"enableAccountExportButtonOff,omitempty"`

	EnableAccountImportButtonOff bool `xml:"enableAccountImportButtonOff,omitempty" json:"enableAccountImportButtonOff,omitempty"`

	EnableAllowDupeContactFromLead bool `xml:"enableAllowDupeContactFromLead,omitempty" json:"enableAllowDupeContactFromLead,omitempty"`

	EnableAllowDupeLeadFromContact bool `xml:"enableAllowDupeLeadFromContact,omitempty" json:"enableAllowDupeLeadFromContact,omitempty"`

	EnableContactExportButtonOff bool `xml:"enableContactExportButtonOff,omitempty" json:"enableContactExportButtonOff,omitempty"`

	EnableContactImportButtonOff bool `xml:"enableContactImportButtonOff,omitempty" json:"enableContactImportButtonOff,omitempty"`

	EnableDDCSocialKeyEnabled bool `xml:"enableDDCSocialKeyEnabled,omitempty" json:"enableDDCSocialKeyEnabled,omitempty"`

	EnableDataDotComCleanEnabled bool `xml:"enableDataDotComCleanEnabled,omitempty" json:"enableDataDotComCleanEnabled,omitempty"`

	EnableDataDotComOptOutsEnabled bool `xml:"enableDataDotComOptOutsEnabled,omitempty" json:"enableDataDotComOptOutsEnabled,omitempty"`

	EnableDatacloudAPIEnabled bool `xml:"enableDatacloudAPIEnabled,omitempty" json:"enableDatacloudAPIEnabled,omitempty"`
}

type PlatformEventSubscriberConfig struct {
	*Metadata

	BatchSize int32 `xml:"batchSize,omitempty" json:"batchSize,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	NumPartitions int32 `xml:"numPartitions,omitempty" json:"numPartitions,omitempty"`

	PartitionKey string `xml:"partitionKey,omitempty" json:"partitionKey,omitempty"`

	PlatformEventConsumer string `xml:"platformEventConsumer,omitempty" json:"platformEventConsumer,omitempty"`

	User string `xml:"user,omitempty" json:"user,omitempty"`
}

type SchedulingObjective struct {
	*Metadata

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	SchedulingCategory *SchedulingCategory `xml:"schedulingCategory,omitempty" json:"schedulingCategory,omitempty"`

	SchedulingObjectiveParameters []*SchedulingObjectiveParameter `xml:"schedulingObjectiveParameters,omitempty" json:"schedulingObjectiveParameters,omitempty"`

	SchedulingObjectiveType *SchedulingObjectiveType `xml:"schedulingObjectiveType,omitempty" json:"schedulingObjectiveType,omitempty"`
}

type SchedulingObjectiveParameter struct {
	ParameterKey *ObjectiveParameterKey `xml:"parameterKey,omitempty" json:"parameterKey,omitempty"`

	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type PipelineInspMetricConfig struct {
	*Metadata

	IsCumulative bool `xml:"isCumulative,omitempty" json:"isCumulative,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	Metric *PipelineInspectionMetric `xml:"metric,omitempty" json:"metric,omitempty"`
}

type VirtualVisitConfig struct {
	*Metadata

	ComprehendServiceType *VirtualVisitComprehendServiceType `xml:"comprehendServiceType,omitempty" json:"comprehendServiceType,omitempty"`

	ExperienceCloudSiteUrl string `xml:"experienceCloudSiteUrl,omitempty" json:"experienceCloudSiteUrl,omitempty"`

	ExternalMsgServiceIdentifier string `xml:"externalMsgServiceIdentifier,omitempty" json:"externalMsgServiceIdentifier,omitempty"`

	ExternalRoleIdentifier string `xml:"externalRoleIdentifier,omitempty" json:"externalRoleIdentifier,omitempty"`

	ExternalUserIdentifier string `xml:"externalUserIdentifier,omitempty" json:"externalUserIdentifier,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	MessagingRegion string `xml:"messagingRegion,omitempty" json:"messagingRegion,omitempty"`

	NamedCredential string `xml:"namedCredential,omitempty" json:"namedCredential,omitempty"`

	StorageBucketName string `xml:"storageBucketName,omitempty" json:"storageBucketName,omitempty"`

	UsageType *VirtualVisitUsageType `xml:"usageType,omitempty" json:"usageType,omitempty"`

	VideoCallApptTypeValue string `xml:"videoCallApptTypeValue,omitempty" json:"videoCallApptTypeValue,omitempty"`

	VideoControlRegion string `xml:"videoControlRegion,omitempty" json:"videoControlRegion,omitempty"`

	VisitRegion *VirtualVisitVisitRegion `xml:"visitRegion,omitempty" json:"visitRegion,omitempty"`
}

type MobileSecurityAssignment struct {
	*Metadata

	ConnectedApplication string `xml:"connectedApplication,omitempty" json:"connectedApplication,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	Profile string `xml:"profile,omitempty" json:"profile,omitempty"`
}

type MobileSecurityPolicy struct {
	*Metadata

	EffectiveDate soap.XSDDateTime `xml:"effectiveDate,omitempty" json:"effectiveDate,omitempty"`

	IsEnabled bool `xml:"isEnabled,omitempty" json:"isEnabled,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	MobilePlatform *MobileSecurityMobilePlatform `xml:"mobilePlatform,omitempty" json:"mobilePlatform,omitempty"`

	MobileSecurityAssignment string `xml:"mobileSecurityAssignment,omitempty" json:"mobileSecurityAssignment,omitempty"`

	RuleValue string `xml:"ruleValue,omitempty" json:"ruleValue,omitempty"`

	RuleValueType *MobileSecurityPolicyRuleValueType `xml:"ruleValueType,omitempty" json:"ruleValueType,omitempty"`

	SeverityLevel *MobileSecurityPolicySeverityLevel `xml:"severityLevel,omitempty" json:"severityLevel,omitempty"`

	Type_ *MobileSecurityPolicyType `xml:"type,omitempty" json:"type,omitempty"`
}

type LearningAchievementConfig struct {
	*Metadata

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	IconName string `xml:"iconName,omitempty" json:"iconName,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	LearningAchievementType *LearningAchievementType `xml:"learningAchievementType,omitempty" json:"learningAchievementType,omitempty"`

	LearningAchvRecordType string `xml:"learningAchvRecordType,omitempty" json:"learningAchvRecordType,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type RecordAlertDataSource struct {
	*Metadata

	ApexClass string `xml:"apexClass,omitempty" json:"apexClass,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	Type_ *RecordAlertDataSourceType `xml:"type,omitempty" json:"type,omitempty"`
}

type DocumentCategory struct {
	*Metadata

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type RecAlrtDataSrcExpSetDef struct {
	*Metadata

	ExpressionSetDefinition string `xml:"expressionSetDefinition,omitempty" json:"expressionSetDefinition,omitempty"`

	ExpressionSetObject string `xml:"expressionSetObject,omitempty" json:"expressionSetObject,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	RecordAlertDataSource string `xml:"recordAlertDataSource,omitempty" json:"recordAlertDataSource,omitempty"`
}

type EmployeeDataSyncProfile struct {
	*Metadata

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	EmployeeDataSyncField []*EmployeeDataSyncField `xml:"employeeDataSyncField,omitempty" json:"employeeDataSyncField,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type EmployeeDataSyncField struct {
	Description string `xml:"description,omitempty" json:"description,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	IsDefault bool `xml:"isDefault,omitempty" json:"isDefault,omitempty"`

	IsRequired bool `xml:"isRequired,omitempty" json:"isRequired,omitempty"`

	SourceField string `xml:"sourceField,omitempty" json:"sourceField,omitempty"`

	TargetField string `xml:"targetField,omitempty" json:"targetField,omitempty"`
}

type RegisteredExternalService struct {
	*Metadata

	ConfigUrl string `xml:"configUrl,omitempty" json:"configUrl,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DocumentationUrl string `xml:"documentationUrl,omitempty" json:"documentationUrl,omitempty"`

	ExtensionPointName *ExtensionPointName `xml:"extensionPointName,omitempty" json:"extensionPointName,omitempty"`

	ExternalServiceProvider string `xml:"externalServiceProvider,omitempty" json:"externalServiceProvider,omitempty"`

	ExternalServiceProviderType *RegistryProviderType `xml:"externalServiceProviderType,omitempty" json:"externalServiceProviderType,omitempty"`

	IconUri string `xml:"iconUri,omitempty" json:"iconUri,omitempty"`

	IsApplication bool `xml:"isApplication,omitempty" json:"isApplication,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type AccountingFieldMapping struct {
	*Metadata

	AccountingModelConfig string `xml:"accountingModelConfig,omitempty" json:"accountingModelConfig,omitempty"`

	IsForAllocationType bool `xml:"isForAllocationType,omitempty" json:"isForAllocationType,omitempty"`

	IsForPaymentType bool `xml:"isForPaymentType,omitempty" json:"isForPaymentType,omitempty"`

	IsForTransactionType bool `xml:"isForTransactionType,omitempty" json:"isForTransactionType,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	MappingBehavior *MappingBehaviorType `xml:"mappingBehavior,omitempty" json:"mappingBehavior,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	SourceField string `xml:"sourceField,omitempty" json:"sourceField,omitempty"`

	TargetField string `xml:"targetField,omitempty" json:"targetField,omitempty"`
}

type RecordAlertTemplate struct {
	*Metadata

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	RecordAlertCategory string `xml:"recordAlertCategory,omitempty" json:"recordAlertCategory,omitempty"`

	Subject string `xml:"subject,omitempty" json:"subject,omitempty"`
}

type MobSecurityCertPinConfig struct {
	*Metadata

	CertificateHash string `xml:"certificateHash,omitempty" json:"certificateHash,omitempty"`

	DomainName string `xml:"domainName,omitempty" json:"domainName,omitempty"`

	IsEnabled bool `xml:"isEnabled,omitempty" json:"isEnabled,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	IsSubdomainIncluded bool `xml:"isSubdomainIncluded,omitempty" json:"isSubdomainIncluded,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	MobilePlatform *MobileSecurityMobilePlatform `xml:"mobilePlatform,omitempty" json:"mobilePlatform,omitempty"`

	MobileSecurityAssignment string `xml:"mobileSecurityAssignment,omitempty" json:"mobileSecurityAssignment,omitempty"`

	SeverityLevel *MobileSecurityPolicySeverityLevel `xml:"severityLevel,omitempty" json:"severityLevel,omitempty"`

	Type_ *MobileSecurityCertPinType `xml:"type,omitempty" json:"type,omitempty"`
}

type ActionableListDefinition struct {
	*Metadata

	ActionableListDatasetColumns []*ActionableListDatasetColumn `xml:"actionableListDatasetColumns,omitempty" json:"actionableListDatasetColumns,omitempty"`

	ActionableListMemberStatuses []*ActionableListMemberStatus `xml:"actionableListMemberStatuses,omitempty" json:"actionableListMemberStatuses,omitempty"`

	BatchCalcJobDefinition string `xml:"batchCalcJobDefinition,omitempty" json:"batchCalcJobDefinition,omitempty"`

	DatasetName string `xml:"datasetName,omitempty" json:"datasetName,omitempty"`

	EdgeMart string `xml:"edgeMart,omitempty" json:"edgeMart,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	ObjectName string `xml:"objectName,omitempty" json:"objectName,omitempty"`

	SourceType *ActionableListSourceType `xml:"sourceType,omitempty" json:"sourceType,omitempty"`
}

type ActionableListDatasetColumn struct {
	DataDomain *DatasetColumnDataType `xml:"dataDomain,omitempty" json:"dataDomain,omitempty"`

	DataType *DatatableDataType `xml:"dataType,omitempty" json:"dataType,omitempty"`

	DisplayOrder int32 `xml:"displayOrder,omitempty" json:"displayOrder,omitempty"`

	IsDefault bool `xml:"isDefault,omitempty" json:"isDefault,omitempty"`

	IsGroupedByListDefObj bool `xml:"isGroupedByListDefObj,omitempty" json:"isGroupedByListDefObj,omitempty"`

	ObjectName string `xml:"objectName,omitempty" json:"objectName,omitempty"`

	SourceColumnApiName string `xml:"sourceColumnApiName,omitempty" json:"sourceColumnApiName,omitempty"`

	SourceFieldName string `xml:"sourceFieldName,omitempty" json:"sourceFieldName,omitempty"`
}

type ActionableListMemberStatus struct {
	IconName string `xml:"iconName,omitempty" json:"iconName,omitempty"`

	Status string `xml:"status,omitempty" json:"status,omitempty"`
}

type CareProviderSearchConfig struct {
	*Metadata

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	MappedObject *ProviderSearchObjectMapping `xml:"mappedObject,omitempty" json:"mappedObject,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	SourceField string `xml:"sourceField,omitempty" json:"sourceField,omitempty"`

	TargetField string `xml:"targetField,omitempty" json:"targetField,omitempty"`
}

type CareSystemFieldMapping struct {
	*Metadata

	ExternalIdField string `xml:"externalIdField,omitempty" json:"externalIdField,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	Role *SourceSystemFieldRole `xml:"role,omitempty" json:"role,omitempty"`

	SourceSystem string `xml:"sourceSystem,omitempty" json:"sourceSystem,omitempty"`

	TargetObject string `xml:"targetObject,omitempty" json:"targetObject,omitempty"`
}

type CareLimitType struct {
	*Metadata

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	LimitType string `xml:"limitType,omitempty" json:"limitType,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	MetricType *CareLimitTypeMetricType `xml:"metricType,omitempty" json:"metricType,omitempty"`
}

type AssessmentConfiguration struct {
	*Metadata

	Configuration *AssessmentConfigurationOption `xml:"configuration,omitempty" json:"configuration,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	Resolution string `xml:"resolution,omitempty" json:"resolution,omitempty"`

	Type_ *AssessmentType `xml:"type,omitempty" json:"type,omitempty"`
}

type SchedulingRule struct {
	*Metadata

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	SchedulingCategory *SchedulingCategory `xml:"schedulingCategory,omitempty" json:"schedulingCategory,omitempty"`

	SchedulingRuleParameters []*SchedulingRuleParameter `xml:"schedulingRuleParameters,omitempty" json:"schedulingRuleParameters,omitempty"`

	SchedulingRuleType *SchedulingRuleType `xml:"schedulingRuleType,omitempty" json:"schedulingRuleType,omitempty"`
}

type SchedulingRuleParameter struct {
	SchedulingParameterKey *SchedulingParameterKey `xml:"schedulingParameterKey,omitempty" json:"schedulingParameterKey,omitempty"`

	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type CareProviderAfflRoleConfig struct {
	*Metadata

	AffiliationType *CareProviderAfflType `xml:"affiliationType,omitempty" json:"affiliationType,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	ProviderRole string `xml:"providerRole,omitempty" json:"providerRole,omitempty"`
}

type PortalDelegablePermissionSet struct {
	*Metadata

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	PermissionSet string `xml:"permissionSet,omitempty" json:"permissionSet,omitempty"`

	Profile string `xml:"profile,omitempty" json:"profile,omitempty"`
}

type RelatedRecordAssocCriteria struct {
	*Metadata

	AssociationHandlerApexClass string `xml:"associationHandlerApexClass,omitempty" json:"associationHandlerApexClass,omitempty"`

	AssociationType *AssociationType `xml:"associationType,omitempty" json:"associationType,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	EventType *AssociationEventType `xml:"eventType,omitempty" json:"eventType,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	PreCondition string `xml:"preCondition,omitempty" json:"preCondition,omitempty"`

	ReferenceObject string `xml:"referenceObject,omitempty" json:"referenceObject,omitempty"`

	SelectedOwnerField string `xml:"selectedOwnerField,omitempty" json:"selectedOwnerField,omitempty"`

	Status *AssociationStatusType `xml:"status,omitempty" json:"status,omitempty"`
}

type DocumentCategoryDocumentType struct {
	*Metadata

	DocumentCategory string `xml:"documentCategory,omitempty" json:"documentCategory,omitempty"`

	DocumentType string `xml:"documentType,omitempty" json:"documentType,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type PlatformSlackSettings struct {
	*Metadata

	EnableSlackService bool `xml:"enableSlackService,omitempty" json:"enableSlackService,omitempty"`

	EnableSlackServiceAlerts bool `xml:"enableSlackServiceAlerts,omitempty" json:"enableSlackServiceAlerts,omitempty"`

	SlackCapabilitiesEnabled bool `xml:"slackCapabilitiesEnabled,omitempty" json:"slackCapabilitiesEnabled,omitempty"`
}

type DataImportManagementSettings struct {
	*Metadata

	EnableDataConnectorHubspot bool `xml:"enableDataConnectorHubspot,omitempty" json:"enableDataConnectorHubspot,omitempty"`

	EnableEasyImport bool `xml:"enableEasyImport,omitempty" json:"enableEasyImport,omitempty"`
}

type WorkforceEngagementSettings struct {
	*Metadata

	EnableHistoricalAdherence bool `xml:"enableHistoricalAdherence,omitempty" json:"enableHistoricalAdherence,omitempty"`

	EnableIndividualAdherence bool `xml:"enableIndividualAdherence,omitempty" json:"enableIndividualAdherence,omitempty"`

	EnableIntradayManagement bool `xml:"enableIntradayManagement,omitempty" json:"enableIntradayManagement,omitempty"`

	EnableMachineLearningForecasting bool `xml:"enableMachineLearningForecasting,omitempty" json:"enableMachineLearningForecasting,omitempty"`

	EnableRealTimeAdherence bool `xml:"enableRealTimeAdherence,omitempty" json:"enableRealTimeAdherence,omitempty"`

	EnableWorkforceEngagement bool `xml:"enableWorkforceEngagement,omitempty" json:"enableWorkforceEngagement,omitempty"`

	EnableWorkforceEngagementConfiguration bool `xml:"enableWorkforceEngagementConfiguration,omitempty" json:"enableWorkforceEngagementConfiguration,omitempty"`
}

type KnowledgeGenerationSettings struct {
	*Metadata

	EnableKnowledgeGeneration bool `xml:"enableKnowledgeGeneration,omitempty" json:"enableKnowledgeGeneration,omitempty"`
}

type ClaimMgmtFoundationEnabledSettings struct {
	*Metadata

	EnableWarrantyClaimMgmt bool `xml:"enableWarrantyClaimMgmt,omitempty" json:"enableWarrantyClaimMgmt,omitempty"`
}

type MailMergeSettings struct {
	*Metadata

	EnableExtendedMailMerge bool `xml:"enableExtendedMailMerge,omitempty" json:"enableExtendedMailMerge,omitempty"`

	SaveMailMergeDocsAsSalesforceDocs bool `xml:"saveMailMergeDocsAsSalesforceDocs,omitempty" json:"saveMailMergeDocsAsSalesforceDocs,omitempty"`
}

type AccountingSettings struct {
	*Metadata

	EnableAccountingSubledger bool `xml:"enableAccountingSubledger,omitempty" json:"enableAccountingSubledger,omitempty"`

	EnableFinancePeriod bool `xml:"enableFinancePeriod,omitempty" json:"enableFinancePeriod,omitempty"`

	EnablePaymentMethodAdjust bool `xml:"enablePaymentMethodAdjust,omitempty" json:"enablePaymentMethodAdjust,omitempty"`

	EnableScheduledJob bool `xml:"enableScheduledJob,omitempty" json:"enableScheduledJob,omitempty"`
}

type CollectionsDashboardSettings struct {
	*Metadata

	EnableCollectionsDashboard bool `xml:"enableCollectionsDashboard,omitempty" json:"enableCollectionsDashboard,omitempty"`
}

type InvLatePymntRiskCalcSettings struct {
	*Metadata

	EnableInvLatePymntRiskCalc bool `xml:"enableInvLatePymntRiskCalc,omitempty" json:"enableInvLatePymntRiskCalc,omitempty"`
}

type MediaAdSalesSettings struct {
	*Metadata

	EnableMediaAdSales bool `xml:"enableMediaAdSales,omitempty" json:"enableMediaAdSales,omitempty"`
}

type IndustriesPricingSettings struct {
	*Metadata

	EnableHighAvailability bool `xml:"enableHighAvailability,omitempty" json:"enableHighAvailability,omitempty"`

	EnablePricingWaterfall bool `xml:"enablePricingWaterfall,omitempty" json:"enablePricingWaterfall,omitempty"`

	EnablePricingWaterfallPersistence bool `xml:"enablePricingWaterfallPersistence,omitempty" json:"enablePricingWaterfallPersistence,omitempty"`

	EnableSalesforcePricing bool `xml:"enableSalesforcePricing,omitempty" json:"enableSalesforcePricing,omitempty"`
}

type BranchManagementSettings struct {
	*Metadata

	AssociateAccountWithBranch bool `xml:"associateAccountWithBranch,omitempty" json:"associateAccountWithBranch,omitempty"`
}

type DynamicFormsSettings struct {
	*Metadata

	EnableFormsOnMobile bool `xml:"enableFormsOnMobile,omitempty" json:"enableFormsOnMobile,omitempty"`
}

type CodeBuilderSettings struct {
	*Metadata

	EnableCodeBuilder bool `xml:"enableCodeBuilder,omitempty" json:"enableCodeBuilder,omitempty"`
}

type IndustriesContextSettings struct {
	*Metadata

	EnableContextDefinitions bool `xml:"enableContextDefinitions,omitempty" json:"enableContextDefinitions,omitempty"`
}

type SandboxSettings struct {
	*Metadata

	DisableSandboxExpirationEmails bool `xml:"disableSandboxExpirationEmails,omitempty" json:"disableSandboxExpirationEmails,omitempty"`
}

type InterestTaggingSettings struct {
	*Metadata

	EnableInterestTagging bool `xml:"enableInterestTagging,omitempty" json:"enableInterestTagging,omitempty"`
}

type ConversationServiceIntegrationSettings struct {
	*Metadata

	EnableConvoCatchUpForAgents bool `xml:"enableConvoCatchUpForAgents,omitempty" json:"enableConvoCatchUpForAgents,omitempty"`

	EnableConvoCatchUpForSupervisors bool `xml:"enableConvoCatchUpForSupervisors,omitempty" json:"enableConvoCatchUpForSupervisors,omitempty"`
}

type PlatformEventSettings struct {
	*Metadata

	EnableEnhancedUsageMetrics bool `xml:"enableEnhancedUsageMetrics,omitempty" json:"enableEnhancedUsageMetrics,omitempty"`
}

type AssociationEngineSettings struct {
	*Metadata

	EnableAssociationEngine bool `xml:"enableAssociationEngine,omitempty" json:"enableAssociationEngine,omitempty"`
}

type SourceTrackingSettings struct {
	*Metadata

	EnableSourceTrackingSandboxes bool `xml:"enableSourceTrackingSandboxes,omitempty" json:"enableSourceTrackingSandboxes,omitempty"`
}

type OrgSettings struct {
	*Metadata

	EnableCustomerSuccessPortal bool `xml:"enableCustomerSuccessPortal,omitempty" json:"enableCustomerSuccessPortal,omitempty"`

	EnableIncludeContractStatus bool `xml:"enableIncludeContractStatus,omitempty" json:"enableIncludeContractStatus,omitempty"`

	EnableMakeDeploymentsMandatory bool `xml:"enableMakeDeploymentsMandatory,omitempty" json:"enableMakeDeploymentsMandatory,omitempty"`

	EnableManageSelfServiceUsers bool `xml:"enableManageSelfServiceUsers,omitempty" json:"enableManageSelfServiceUsers,omitempty"`

	EnableOrgFeedSentimentAnalysis bool `xml:"enableOrgFeedSentimentAnalysis,omitempty" json:"enableOrgFeedSentimentAnalysis,omitempty"`

	EnableRADeploymentAttributeOnly bool `xml:"enableRADeploymentAttributeOnly,omitempty" json:"enableRADeploymentAttributeOnly,omitempty"`

	EnableResetDivisionOnLogin bool `xml:"enableResetDivisionOnLogin,omitempty" json:"enableResetDivisionOnLogin,omitempty"`
}

type DevHubSettings struct {
	*Metadata

	DevOpsCenterBetaMsa bool `xml:"devOpsCenterBetaMsa,omitempty" json:"devOpsCenterBetaMsa,omitempty"`

	EnableDevOpsCenter bool `xml:"enableDevOpsCenter,omitempty" json:"enableDevOpsCenter,omitempty"`

	EnableDevOpsCenterGA bool `xml:"enableDevOpsCenterGA,omitempty" json:"enableDevOpsCenterGA,omitempty"`

	EnablePackaging2 bool `xml:"enablePackaging2,omitempty" json:"enablePackaging2,omitempty"`

	EnableScratchOrgManagementPref bool `xml:"enableScratchOrgManagementPref,omitempty" json:"enableScratchOrgManagementPref,omitempty"`

	EnableShapeExportPref bool `xml:"enableShapeExportPref,omitempty" json:"enableShapeExportPref,omitempty"`
}

type IncludeEstTaxInQuoteSettings struct {
	*Metadata

	EnableQuoteEstimatedTax bool `xml:"enableQuoteEstimatedTax,omitempty" json:"enableQuoteEstimatedTax,omitempty"`
}

type ReferralMarketingSettings struct {
	*Metadata

	EnableMarketingCloudIntegration bool `xml:"enableMarketingCloudIntegration,omitempty" json:"enableMarketingCloudIntegration,omitempty"`
}

type IndustriesLoyaltySettings struct {
	*Metadata

	EnableAutomaticMemberTierAssessmentSelection bool `xml:"enableAutomaticMemberTierAssessmentSelection,omitempty" json:"enableAutomaticMemberTierAssessmentSelection,omitempty"`

	EnableAutomaticVoucherCodeGeneration bool `xml:"enableAutomaticVoucherCodeGeneration,omitempty" json:"enableAutomaticVoucherCodeGeneration,omitempty"`

	EnableFixedTypeNQPAggregation bool `xml:"enableFixedTypeNQPAggregation,omitempty" json:"enableFixedTypeNQPAggregation,omitempty"`

	EnableLoyaltyApiAccessForExternalSiteUsers bool `xml:"enableLoyaltyApiAccessForExternalSiteUsers,omitempty" json:"enableLoyaltyApiAccessForExternalSiteUsers,omitempty"`

	EnableLoyaltyRedeemedPointsExpirationInfoPref bool `xml:"enableLoyaltyRedeemedPointsExpirationInfoPref,omitempty" json:"enableLoyaltyRedeemedPointsExpirationInfoPref,omitempty"`

	EnableLoyaltyRulesVerifyCdpMemberSegment bool `xml:"enableLoyaltyRulesVerifyCdpMemberSegment,omitempty" json:"enableLoyaltyRulesVerifyCdpMemberSegment,omitempty"`

	EnableLoyaltyServiceExcellence bool `xml:"enableLoyaltyServiceExcellence,omitempty" json:"enableLoyaltyServiceExcellence,omitempty"`

	EnableNQPRealTimePointBalance bool `xml:"enableNQPRealTimePointBalance,omitempty" json:"enableNQPRealTimePointBalance,omitempty"`

	EnableNonQualifyingPointsConsolidation bool `xml:"enableNonQualifyingPointsConsolidation,omitempty" json:"enableNonQualifyingPointsConsolidation,omitempty"`

	EnableQPRealTimePointBalance bool `xml:"enableQPRealTimePointBalance,omitempty" json:"enableQPRealTimePointBalance,omitempty"`
}

type Web3Settings struct {
	*Metadata

	EnableMultisig bool `xml:"enableMultisig,omitempty" json:"enableMultisig,omitempty"`
}

type IndustriesUnifiedPromotionsSettings struct {
	*Metadata

	EnableUnifiedPromotions bool `xml:"enableUnifiedPromotions,omitempty" json:"enableUnifiedPromotions,omitempty"`
}

type PaymentsManagementEnabledSettings struct {
	*Metadata

	PaymentsManagementEnabled bool `xml:"paymentsManagementEnabled,omitempty" json:"paymentsManagementEnabled,omitempty"`
}

type EinsteinGptSettings struct {
	*Metadata

	EnableEinsteinGptPlatform bool `xml:"enableEinsteinGptPlatform,omitempty" json:"enableEinsteinGptPlatform,omitempty"`
}

type AppAnalyticsSettings struct {
	*Metadata

	EnableSimulationMode bool `xml:"enableSimulationMode,omitempty" json:"enableSimulationMode,omitempty"`
}

type MapsAndLocationSettings struct {
	*Metadata

	EnableAddressAutoComplete bool `xml:"enableAddressAutoComplete,omitempty" json:"enableAddressAutoComplete,omitempty"`

	EnableMapsAndLocation bool `xml:"enableMapsAndLocation,omitempty" json:"enableMapsAndLocation,omitempty"`
}

type OnlineSalesSettings struct {
	*Metadata

	EnableSubscriptionAppEnrolled bool `xml:"enableSubscriptionAppEnrolled,omitempty" json:"enableSubscriptionAppEnrolled,omitempty"`
}

type DelegateGroup struct {
	*Metadata

	CustomObjects []string `xml:"customObjects,omitempty" json:"customObjects,omitempty"`

	Groups []string `xml:"groups,omitempty" json:"groups,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	LoginAccess bool `xml:"loginAccess,omitempty" json:"loginAccess,omitempty"`

	PermissionSetGroups []string `xml:"permissionSetGroups,omitempty" json:"permissionSetGroups,omitempty"`

	PermissionSets []string `xml:"permissionSets,omitempty" json:"permissionSets,omitempty"`

	Profiles []string `xml:"profiles,omitempty" json:"profiles,omitempty"`

	Roles []string `xml:"roles,omitempty" json:"roles,omitempty"`
}

type DeploymentSettings struct {
	*Metadata

	DoesSkipAsyncApexValidation bool `xml:"doesSkipAsyncApexValidation,omitempty" json:"doesSkipAsyncApexValidation,omitempty"`
}

type DigitalExperienceBundle struct {
	*Metadata

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	SpaceResources []*DigitalExperience `xml:"spaceResources,omitempty" json:"spaceResources,omitempty"`
}

type DigitalExperience struct {
	*MetadataWithContent

	FileName string `xml:"fileName,omitempty" json:"fileName,omitempty"`

	FilePath string `xml:"filePath,omitempty" json:"filePath,omitempty"`

	Format string `xml:"format,omitempty" json:"format,omitempty"`
}

type MetadataWithContent struct {
	*Metadata

	Content []byte `xml:"content,omitempty" json:"content,omitempty"`
}

type ApexClass struct {
	*MetadataWithContent

	ApiVersion float64 `xml:"apiVersion,omitempty" json:"apiVersion,omitempty"`

	PackageVersions []*PackageVersion `xml:"packageVersions,omitempty" json:"packageVersions,omitempty"`

	Status *ApexCodeUnitStatus `xml:"status,omitempty" json:"status,omitempty"`
}

type ApexComponent struct {
	*MetadataWithContent

	ApiVersion float64 `xml:"apiVersion,omitempty" json:"apiVersion,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	PackageVersions []*PackageVersion `xml:"packageVersions,omitempty" json:"packageVersions,omitempty"`
}

type ApexPage struct {
	*MetadataWithContent

	ApiVersion float64 `xml:"apiVersion,omitempty" json:"apiVersion,omitempty"`

	AvailableInTouch bool `xml:"availableInTouch,omitempty" json:"availableInTouch,omitempty"`

	ConfirmationTokenRequired bool `xml:"confirmationTokenRequired,omitempty" json:"confirmationTokenRequired,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	PackageVersions []*PackageVersion `xml:"packageVersions,omitempty" json:"packageVersions,omitempty"`
}

type ApexTrigger struct {
	*MetadataWithContent

	ApiVersion float64 `xml:"apiVersion,omitempty" json:"apiVersion,omitempty"`

	PackageVersions []*PackageVersion `xml:"packageVersions,omitempty" json:"packageVersions,omitempty"`

	Status *ApexCodeUnitStatus `xml:"status,omitempty" json:"status,omitempty"`
}

type Certificate struct {
	*MetadataWithContent

	CaSigned bool `xml:"caSigned,omitempty" json:"caSigned,omitempty"`

	EncryptedWithPlatformEncryption *bool `xml:"encryptedWithPlatformEncryption,omitempty" json:"encryptedWithPlatformEncryption,omitempty"`

	ExpirationDate *soap.XSDDateTime `xml:"expirationDate,omitempty" json:"expirationDate,omitempty"`

	KeySize int32 `xml:"keySize,omitempty" json:"keySize,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	PrivateKeyExportable *bool `xml:"privateKeyExportable,omitempty" json:"privateKeyExportable,omitempty"`
}

type ContentAsset struct {
	*MetadataWithContent

	Format *ContentAssetFormat `xml:"format,omitempty" json:"format,omitempty"`

	IsVisibleByExternalUsers bool `xml:"isVisibleByExternalUsers,omitempty" json:"isVisibleByExternalUsers,omitempty"`

	Language string `xml:"language,omitempty" json:"language,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	OriginNetwork string `xml:"originNetwork,omitempty" json:"originNetwork,omitempty"`

	Relationships *ContentAssetRelationships `xml:"relationships,omitempty" json:"relationships,omitempty"`

	Versions *ContentAssetVersions `xml:"versions,omitempty" json:"versions,omitempty"`
}

type ContentAssetRelationships struct {
	EmailTemplate []*ContentAssetLink `xml:"emailTemplate,omitempty" json:"emailTemplate,omitempty"`

	InsightsApplication []*ContentAssetLink `xml:"insightsApplication,omitempty" json:"insightsApplication,omitempty"`

	Network []*ContentAssetLink `xml:"network,omitempty" json:"network,omitempty"`

	Organization *ContentAssetLink `xml:"organization,omitempty" json:"organization,omitempty"`

	Workspace []*ContentAssetLink `xml:"workspace,omitempty" json:"workspace,omitempty"`
}

type ContentAssetLink struct {
	Access *ContentAssetAccess `xml:"access,omitempty" json:"access,omitempty"`

	IsManagingWorkspace bool `xml:"isManagingWorkspace,omitempty" json:"isManagingWorkspace,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type ContentAssetVersions struct {
	Version []*ContentAssetVersion `xml:"version,omitempty" json:"version,omitempty"`
}

type ContentAssetVersion struct {
	Number string `xml:"number,omitempty" json:"number,omitempty"`

	PathOnClient string `xml:"pathOnClient,omitempty" json:"pathOnClient,omitempty"`

	ZipEntry string `xml:"zipEntry,omitempty" json:"zipEntry,omitempty"`
}

type DataWeaveResource struct {
	*MetadataWithContent

	ApiVersion float64 `xml:"apiVersion,omitempty" json:"apiVersion,omitempty"`

	IsGlobal bool `xml:"isGlobal,omitempty" json:"isGlobal,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`
}

type DiscoveryAIModel struct {
	*MetadataWithContent

	AlgorithmType *DiscoveryAlgorithmType `xml:"algorithmType,omitempty" json:"algorithmType,omitempty"`

	ClassificationThreshold float64 `xml:"classificationThreshold,omitempty" json:"classificationThreshold,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	ModelFields []*DiscoveryModelField `xml:"modelFields,omitempty" json:"modelFields,omitempty"`

	ModelRuntimeType *DiscoveryModelRuntimeType `xml:"modelRuntimeType,omitempty" json:"modelRuntimeType,omitempty"`

	PredictedField string `xml:"predictedField,omitempty" json:"predictedField,omitempty"`

	PredictionType *DiscoveryPredictionType `xml:"predictionType,omitempty" json:"predictionType,omitempty"`

	SourceType *DiscoveryModelSourceType `xml:"sourceType,omitempty" json:"sourceType,omitempty"`

	Status *DiscoveryAIModelStatus `xml:"status,omitempty" json:"status,omitempty"`

	TrainingMetrics string `xml:"trainingMetrics,omitempty" json:"trainingMetrics,omitempty"`

	Transformations []*DiscoveryModelTransform `xml:"transformations,omitempty" json:"transformations,omitempty"`
}

type DiscoveryModelField struct {
	IsDisparateImpact bool `xml:"isDisparateImpact,omitempty" json:"isDisparateImpact,omitempty"`

	IsSensitive bool `xml:"isSensitive,omitempty" json:"isSensitive,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Type_ *DiscoveryModelFieldType `xml:"type,omitempty" json:"type,omitempty"`

	Values []string `xml:"values,omitempty" json:"values,omitempty"`
}

type DiscoveryModelTransform struct {
	Config string `xml:"config,omitempty" json:"config,omitempty"`

	SourceFieldNames []string `xml:"sourceFieldNames,omitempty" json:"sourceFieldNames,omitempty"`

	TargetFieldNames []string `xml:"targetFieldNames,omitempty" json:"targetFieldNames,omitempty"`

	Type_ *DiscoveryAIModelTransformationType `xml:"type,omitempty" json:"type,omitempty"`
}

type DiscoveryStory struct {
	*MetadataWithContent

	Application string `xml:"application,omitempty" json:"application,omitempty"`

	Autopilot *DiscoveryStoryAutopilotStatus `xml:"autopilot,omitempty" json:"autopilot,omitempty"`

	ClassificationThreshold float64 `xml:"classificationThreshold,omitempty" json:"classificationThreshold,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Outcome *DiscoveryStoryOutcome `xml:"outcome,omitempty" json:"outcome,omitempty"`

	SourceContainer string `xml:"sourceContainer,omitempty" json:"sourceContainer,omitempty"`

	SourceType *DiscoveryStorySourceType `xml:"sourceType,omitempty" json:"sourceType,omitempty"`

	ValidationContainer string `xml:"validationContainer,omitempty" json:"validationContainer,omitempty"`
}

type DiscoveryStoryOutcome struct {
	FailureValue string `xml:"failureValue,omitempty" json:"failureValue,omitempty"`

	Field string `xml:"field,omitempty" json:"field,omitempty"`

	Goal *DiscoveryStoryOutcomeGoal `xml:"goal,omitempty" json:"goal,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	SuccessValue string `xml:"successValue,omitempty" json:"successValue,omitempty"`

	Type_ *DiscoveryStoryOutcomeType `xml:"type,omitempty" json:"type,omitempty"`
}

type Document struct {
	*MetadataWithContent

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	InternalUseOnly bool `xml:"internalUseOnly,omitempty" json:"internalUseOnly,omitempty"`

	Keywords string `xml:"keywords,omitempty" json:"keywords,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Public bool `xml:"public,omitempty" json:"public,omitempty"`
}

type EclairGeoData struct {
	*MetadataWithContent

	Maps []*EclairMap `xml:"maps,omitempty" json:"maps,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type EclairMap struct {
	BoundingBoxBottom float64 `xml:"boundingBoxBottom,omitempty" json:"boundingBoxBottom,omitempty"`

	BoundingBoxLeft float64 `xml:"boundingBoxLeft,omitempty" json:"boundingBoxLeft,omitempty"`

	BoundingBoxRight float64 `xml:"boundingBoxRight,omitempty" json:"boundingBoxRight,omitempty"`

	BoundingBoxTop float64 `xml:"boundingBoxTop,omitempty" json:"boundingBoxTop,omitempty"`

	MapLabel string `xml:"mapLabel,omitempty" json:"mapLabel,omitempty"`

	MapName string `xml:"mapName,omitempty" json:"mapName,omitempty"`

	Projection string `xml:"projection,omitempty" json:"projection,omitempty"`
}

type EmailTemplate struct {
	*MetadataWithContent

	ApiVersion float64 `xml:"apiVersion,omitempty" json:"apiVersion,omitempty"`

	AttachedDocuments []string `xml:"attachedDocuments,omitempty" json:"attachedDocuments,omitempty"`

	Attachments []*Attachment `xml:"attachments,omitempty" json:"attachments,omitempty"`

	Available bool `xml:"available,omitempty" json:"available,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	EncodingKey *Encoding `xml:"encodingKey,omitempty" json:"encodingKey,omitempty"`

	Letterhead string `xml:"letterhead,omitempty" json:"letterhead,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	PackageVersions []*PackageVersion `xml:"packageVersions,omitempty" json:"packageVersions,omitempty"`

	PageDevName string `xml:"pageDevName,omitempty" json:"pageDevName,omitempty"`

	RelatedEntityType string `xml:"relatedEntityType,omitempty" json:"relatedEntityType,omitempty"`

	Style *EmailTemplateStyle `xml:"style,omitempty" json:"style,omitempty"`

	Subject string `xml:"subject,omitempty" json:"subject,omitempty"`

	TextOnly string `xml:"textOnly,omitempty" json:"textOnly,omitempty"`

	Type_ *EmailTemplateType `xml:"type,omitempty" json:"type,omitempty"`

	UiType *EmailTemplateUiType `xml:"uiType,omitempty" json:"uiType,omitempty"`
}

type Attachment struct {
	Content []byte `xml:"content,omitempty" json:"content,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type FieldServiceMobileExtension struct {
	*MetadataWithContent

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	FileName string `xml:"fileName,omitempty" json:"fileName,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	Size int32 `xml:"size,omitempty" json:"size,omitempty"`

	Version int32 `xml:"version,omitempty" json:"version,omitempty"`
}

type InboundCertificate struct {
	*MetadataWithContent

	ExpirationDate soap.XSDDate `xml:"expirationDate,omitempty" json:"expirationDate,omitempty"`

	Issuer string `xml:"issuer,omitempty" json:"issuer,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	SerialId string `xml:"serialId,omitempty" json:"serialId,omitempty"`
}

type NetworkBranding struct {
	*MetadataWithContent

	LoginBackgroundImageUrl string `xml:"loginBackgroundImageUrl,omitempty" json:"loginBackgroundImageUrl,omitempty"`

	LoginFooterText string `xml:"loginFooterText,omitempty" json:"loginFooterText,omitempty"`

	LoginLogo string `xml:"loginLogo,omitempty" json:"loginLogo,omitempty"`

	LoginLogoName string `xml:"loginLogoName,omitempty" json:"loginLogoName,omitempty"`

	LoginPrimaryColor string `xml:"loginPrimaryColor,omitempty" json:"loginPrimaryColor,omitempty"`

	LoginQuaternaryColor string `xml:"loginQuaternaryColor,omitempty" json:"loginQuaternaryColor,omitempty"`

	LoginRightFrameUrl string `xml:"loginRightFrameUrl,omitempty" json:"loginRightFrameUrl,omitempty"`

	Network string `xml:"network,omitempty" json:"network,omitempty"`

	PageFooter string `xml:"pageFooter,omitempty" json:"pageFooter,omitempty"`

	PageHeader string `xml:"pageHeader,omitempty" json:"pageHeader,omitempty"`

	PrimaryColor string `xml:"primaryColor,omitempty" json:"primaryColor,omitempty"`

	PrimaryComplementColor string `xml:"primaryComplementColor,omitempty" json:"primaryComplementColor,omitempty"`

	QuaternaryColor string `xml:"quaternaryColor,omitempty" json:"quaternaryColor,omitempty"`

	QuaternaryComplementColor string `xml:"quaternaryComplementColor,omitempty" json:"quaternaryComplementColor,omitempty"`

	SecondaryColor string `xml:"secondaryColor,omitempty" json:"secondaryColor,omitempty"`

	StaticLogoImageUrl string `xml:"staticLogoImageUrl,omitempty" json:"staticLogoImageUrl,omitempty"`

	TertiaryColor string `xml:"tertiaryColor,omitempty" json:"tertiaryColor,omitempty"`

	TertiaryComplementColor string `xml:"tertiaryComplementColor,omitempty" json:"tertiaryComplementColor,omitempty"`

	ZeronaryColor string `xml:"zeronaryColor,omitempty" json:"zeronaryColor,omitempty"`

	ZeronaryComplementColor string `xml:"zeronaryComplementColor,omitempty" json:"zeronaryComplementColor,omitempty"`
}

type Orchestration struct {
	*MetadataWithContent

	Context string `xml:"context,omitempty" json:"context,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type Scontrol struct {
	*MetadataWithContent

	ContentSource *SControlContentSource `xml:"contentSource,omitempty" json:"contentSource,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	EncodingKey *Encoding `xml:"encodingKey,omitempty" json:"encodingKey,omitempty"`

	FileContent []byte `xml:"fileContent,omitempty" json:"fileContent,omitempty"`

	FileName string `xml:"fileName,omitempty" json:"fileName,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	SupportsCaching bool `xml:"supportsCaching,omitempty" json:"supportsCaching,omitempty"`
}

type SiteDotCom struct {
	*MetadataWithContent

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	SiteType *SiteType `xml:"siteType,omitempty" json:"siteType,omitempty"`
}

type StaticResource struct {
	*MetadataWithContent

	CacheControl *StaticResourceCacheControl `xml:"cacheControl,omitempty" json:"cacheControl,omitempty"`

	ContentType string `xml:"contentType,omitempty" json:"contentType,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`
}

type UiPlugin struct {
	*MetadataWithContent

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	ExtensionPointIdentifier string `xml:"extensionPointIdentifier,omitempty" json:"extensionPointIdentifier,omitempty"`

	IsEnabled bool `xml:"isEnabled,omitempty" json:"isEnabled,omitempty"`

	Language string `xml:"language,omitempty" json:"language,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type UserAuthCertificate struct {
	*MetadataWithContent

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	ExpirationDate soap.XSDDateTime `xml:"expirationDate,omitempty" json:"expirationDate,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	SerialNumber string `xml:"serialNumber,omitempty" json:"serialNumber,omitempty"`

	User string `xml:"user,omitempty" json:"user,omitempty"`
}

type WaveDashboard struct {
	*MetadataWithContent

	Application string `xml:"application,omitempty" json:"application,omitempty"`

	DateVersion int32 `xml:"dateVersion,omitempty" json:"dateVersion,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	TemplateAssetSourceName string `xml:"templateAssetSourceName,omitempty" json:"templateAssetSourceName,omitempty"`
}

type WaveComponent struct {
	*WaveDashboard
}

type WaveDataflow struct {
	*MetadataWithContent

	Application string `xml:"application,omitempty" json:"application,omitempty"`

	DataflowType string `xml:"dataflowType,omitempty" json:"dataflowType,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type WaveLens struct {
	*MetadataWithContent

	Application string `xml:"application,omitempty" json:"application,omitempty"`

	Datasets []string `xml:"datasets,omitempty" json:"datasets,omitempty"`

	DateVersion int32 `xml:"dateVersion,omitempty" json:"dateVersion,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	TemplateAssetSourceName string `xml:"templateAssetSourceName,omitempty" json:"templateAssetSourceName,omitempty"`

	VisualizationType string `xml:"visualizationType,omitempty" json:"visualizationType,omitempty"`
}

type WaveRecipe struct {
	*MetadataWithContent

	Application string `xml:"application,omitempty" json:"application,omitempty"`

	Dataflow string `xml:"dataflow,omitempty" json:"dataflow,omitempty"`

	Format string `xml:"format,omitempty" json:"format,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	SecurityPredicate string `xml:"securityPredicate,omitempty" json:"securityPredicate,omitempty"`

	TargetDatasetAlias string `xml:"targetDatasetAlias,omitempty" json:"targetDatasetAlias,omitempty"`

	TemplateAssetSourceName string `xml:"templateAssetSourceName,omitempty" json:"templateAssetSourceName,omitempty"`
}

type DiscoveryGoal struct {
	*Metadata

	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	DeployedModels []*DiscoveryDeployedModel `xml:"deployedModels,omitempty" json:"deployedModels,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	ModelCards []*DiscoveryModelCard `xml:"modelCards,omitempty" json:"modelCards,omitempty"`

	Outcome *DiscoveryGoalOutcome `xml:"outcome,omitempty" json:"outcome,omitempty"`

	PredictionType *DiscoveryPredictionType `xml:"predictionType,omitempty" json:"predictionType,omitempty"`

	PushbackField string `xml:"pushbackField,omitempty" json:"pushbackField,omitempty"`

	PushbackType *DiscoveryPushbackType `xml:"pushbackType,omitempty" json:"pushbackType,omitempty"`

	SubscribedEntity string `xml:"subscribedEntity,omitempty" json:"subscribedEntity,omitempty"`

	TerminalStateFilters []*DiscoveryFilter `xml:"terminalStateFilters,omitempty" json:"terminalStateFilters,omitempty"`
}

type DiscoveryDeployedModel struct {
	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	AiModel string `xml:"aiModel,omitempty" json:"aiModel,omitempty"`

	ClassificationThreshold float64 `xml:"classificationThreshold,omitempty" json:"classificationThreshold,omitempty"`

	FieldMappings []*DiscoveryFieldMap `xml:"fieldMappings,omitempty" json:"fieldMappings,omitempty"`

	Filters []*DiscoveryFilter `xml:"filters,omitempty" json:"filters,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	PrescribableFields []*DiscoveryPrescribableField `xml:"prescribableFields,omitempty" json:"prescribableFields,omitempty"`
}

type DiscoveryFieldMap struct {
	MappedField string `xml:"mappedField,omitempty" json:"mappedField,omitempty"`

	ModelField string `xml:"modelField,omitempty" json:"modelField,omitempty"`

	SobjectFieldJoinKey string `xml:"sobjectFieldJoinKey,omitempty" json:"sobjectFieldJoinKey,omitempty"`

	Source string `xml:"source,omitempty" json:"source,omitempty"`

	SourceFieldJoinKey string `xml:"sourceFieldJoinKey,omitempty" json:"sourceFieldJoinKey,omitempty"`

	SourceType *DiscoveryFieldMapSourceType `xml:"sourceType,omitempty" json:"sourceType,omitempty"`
}

type DiscoveryFilter struct {
	Field string `xml:"field,omitempty" json:"field,omitempty"`

	Operator *DiscoveryFilterOperator `xml:"operator,omitempty" json:"operator,omitempty"`

	Type_ *DiscoveryFilterFieldType `xml:"type,omitempty" json:"type,omitempty"`

	Values []*DiscoveryFilterValue `xml:"values,omitempty" json:"values,omitempty"`
}

type DiscoveryFilterValue struct {
	Type_ *DiscoveryFilterValueType `xml:"type,omitempty" json:"type,omitempty"`

	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type DiscoveryPrescribableField struct {
	CustomDefinitions []*DiscoveryCustomPrescribableFieldDefinition `xml:"customDefinitions,omitempty" json:"customDefinitions,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type DiscoveryCustomPrescribableFieldDefinition struct {
	Filters []*DiscoveryFilter `xml:"filters,omitempty" json:"filters,omitempty"`

	Template string `xml:"template,omitempty" json:"template,omitempty"`
}

type DiscoveryModelCard struct {
	ContactEmail string `xml:"contactEmail,omitempty" json:"contactEmail,omitempty"`

	ContactName string `xml:"contactName,omitempty" json:"contactName,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Sections string `xml:"sections,omitempty" json:"sections,omitempty"`
}

type DiscoveryGoalOutcome struct {
	Field string `xml:"field,omitempty" json:"field,omitempty"`

	FieldLabel string `xml:"fieldLabel,omitempty" json:"fieldLabel,omitempty"`

	Goal *DiscoveryOutcomeGoal `xml:"goal,omitempty" json:"goal,omitempty"`

	MappedField string `xml:"mappedField,omitempty" json:"mappedField,omitempty"`
}

type DiscoverySettings struct {
	*Metadata

	EnableEinsteinAnswersPref bool `xml:"enableEinsteinAnswersPref,omitempty" json:"enableEinsteinAnswersPref,omitempty"`

	EnableEinsteinArticleRecommendations bool `xml:"enableEinsteinArticleRecommendations,omitempty" json:"enableEinsteinArticleRecommendations,omitempty"`
}

type DocumentChecklistSettings struct {
	*Metadata

	DciCustomSharing bool `xml:"dciCustomSharing,omitempty" json:"dciCustomSharing,omitempty"`

	DeleteDCIWithFiles bool `xml:"deleteDCIWithFiles,omitempty" json:"deleteDCIWithFiles,omitempty"`
}

type DocumentType struct {
	*Metadata

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type DuplicateRule struct {
	*Metadata

	ActionOnInsert *DupeActionType `xml:"actionOnInsert,omitempty" json:"actionOnInsert,omitempty"`

	ActionOnUpdate *DupeActionType `xml:"actionOnUpdate,omitempty" json:"actionOnUpdate,omitempty"`

	AlertText *string `xml:"alertText,omitempty" json:"alertText,omitempty"`

	Description *string `xml:"description,omitempty" json:"description,omitempty"`

	DuplicateRuleFilter *DuplicateRuleFilter `xml:"duplicateRuleFilter,omitempty" json:"duplicateRuleFilter,omitempty"`

	DuplicateRuleMatchRules []*DuplicateRuleMatchRule `xml:"duplicateRuleMatchRules,omitempty" json:"duplicateRuleMatchRules,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	OperationsOnInsert []string `xml:"operationsOnInsert,omitempty" json:"operationsOnInsert,omitempty"`

	OperationsOnUpdate []string `xml:"operationsOnUpdate,omitempty" json:"operationsOnUpdate,omitempty"`

	SecurityOption *DupeSecurityOptionType `xml:"securityOption,omitempty" json:"securityOption,omitempty"`

	SortOrder int32 `xml:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

type DuplicateRuleFilter struct {
	BooleanFilter *string `xml:"booleanFilter,omitempty" json:"booleanFilter,omitempty"`

	DuplicateRuleFilterItems []*DuplicateRuleFilterItem `xml:"duplicateRuleFilterItems,omitempty" json:"duplicateRuleFilterItems,omitempty"`
}

type DuplicateRuleMatchRule struct {
	MatchRuleSObjectType string `xml:"matchRuleSObjectType,omitempty" json:"matchRuleSObjectType,omitempty"`

	MatchingRule string `xml:"matchingRule,omitempty" json:"matchingRule,omitempty"`

	ObjectMapping *ObjectMapping `xml:"objectMapping,omitempty" json:"objectMapping,omitempty"`
}

type ObjectMapping struct {
	InputObject string `xml:"inputObject,omitempty" json:"inputObject,omitempty"`

	MappingFields []*ObjectMappingField `xml:"mappingFields,omitempty" json:"mappingFields,omitempty"`

	OutputObject string `xml:"outputObject,omitempty" json:"outputObject,omitempty"`
}

type ObjectMappingField struct {
	InputField string `xml:"inputField,omitempty" json:"inputField,omitempty"`

	OutputField string `xml:"outputField,omitempty" json:"outputField,omitempty"`
}

type EACSettings struct {
	*Metadata

	AddRcCompToFlexiPages bool `xml:"addRcCompToFlexiPages,omitempty" json:"addRcCompToFlexiPages,omitempty"`

	AutoPopulateGoogleMeetLinks bool `xml:"autoPopulateGoogleMeetLinks,omitempty" json:"autoPopulateGoogleMeetLinks,omitempty"`

	AutomatedEmailFilter bool `xml:"automatedEmailFilter,omitempty" json:"automatedEmailFilter,omitempty"`

	DSThresholdNotification bool `xml:"dSThresholdNotification,omitempty" json:"dSThresholdNotification,omitempty"`

	EnableActivityAnalyticsPref bool `xml:"enableActivityAnalyticsPref,omitempty" json:"enableActivityAnalyticsPref,omitempty"`

	EnableActivityCapture bool `xml:"enableActivityCapture,omitempty" json:"enableActivityCapture,omitempty"`

	EnableActivityMetrics bool `xml:"enableActivityMetrics,omitempty" json:"enableActivityMetrics,omitempty"`

	EnableActivitySyncEngine bool `xml:"enableActivitySyncEngine,omitempty" json:"enableActivitySyncEngine,omitempty"`

	EnableEACForEveryonePref bool `xml:"enableEACForEveryonePref,omitempty" json:"enableEACForEveryonePref,omitempty"`

	EnableEnforceEacSharingPref bool `xml:"enableEnforceEacSharingPref,omitempty" json:"enableEnforceEacSharingPref,omitempty"`

	EnableInboxActivitySharing bool `xml:"enableInboxActivitySharing,omitempty" json:"enableInboxActivitySharing,omitempty"`

	EnableInsightsInTimeline bool `xml:"enableInsightsInTimeline,omitempty" json:"enableInsightsInTimeline,omitempty"`

	EnableInsightsInTimelineEacStd bool `xml:"enableInsightsInTimelineEacStd,omitempty" json:"enableInsightsInTimelineEacStd,omitempty"`

	EnableUnifiedActivitiesPref bool `xml:"enableUnifiedActivitiesPref,omitempty" json:"enableUnifiedActivitiesPref,omitempty"`

	ProvisionProductivityFeatures bool `xml:"provisionProductivityFeatures,omitempty" json:"provisionProductivityFeatures,omitempty"`

	SalesforceEventsOnlyPref bool `xml:"salesforceEventsOnlyPref,omitempty" json:"salesforceEventsOnlyPref,omitempty"`

	SensitiveEmailFilter bool `xml:"sensitiveEmailFilter,omitempty" json:"sensitiveEmailFilter,omitempty"`

	ShowEACCalendarPref bool `xml:"showEACCalendarPref,omitempty" json:"showEACCalendarPref,omitempty"`

	SyncInternalEvents bool `xml:"syncInternalEvents,omitempty" json:"syncInternalEvents,omitempty"`
}

type EinsteinAgentSettings struct {
	*Metadata

	EinsteinAgentRecommendations bool `xml:"einsteinAgentRecommendations,omitempty" json:"einsteinAgentRecommendations,omitempty"`

	ReRunAttributeBasedRules bool `xml:"reRunAttributeBasedRules,omitempty" json:"reRunAttributeBasedRules,omitempty"`

	RunAssignmentRules bool `xml:"runAssignmentRules,omitempty" json:"runAssignmentRules,omitempty"`

	SummarizationRecs bool `xml:"summarizationRecs,omitempty" json:"summarizationRecs,omitempty"`

	VoiceWrapUpRecs bool `xml:"voiceWrapUpRecs,omitempty" json:"voiceWrapUpRecs,omitempty"`
}

type EinsteinAssistantSettings struct {
	*Metadata

	EnableEinsteinAssistantDataExtractionEnabled bool `xml:"enableEinsteinAssistantDataExtractionEnabled,omitempty" json:"enableEinsteinAssistantDataExtractionEnabled,omitempty"`

	EnableEinsteinAssistantEnabled bool `xml:"enableEinsteinAssistantEnabled,omitempty" json:"enableEinsteinAssistantEnabled,omitempty"`

	EnableEinsteinEnableVoiceLogging bool `xml:"enableEinsteinEnableVoiceLogging,omitempty" json:"enableEinsteinEnableVoiceLogging,omitempty"`
}

type EinsteinDealInsightsSettings struct {
	*Metadata

	EnableUnlikelyToCloseThisMonth bool `xml:"enableUnlikelyToCloseThisMonth,omitempty" json:"enableUnlikelyToCloseThisMonth,omitempty"`
}

type EinsteinDocumentCaptureSettings struct {
	*Metadata

	EnableEinsteinDocumentReader bool `xml:"enableEinsteinDocumentReader,omitempty" json:"enableEinsteinDocumentReader,omitempty"`
}

type EmailAdministrationSettings struct {
	*Metadata

	EnableComplianceBcc bool `xml:"enableComplianceBcc,omitempty" json:"enableComplianceBcc,omitempty"`

	EnableEmailConsentManagement bool `xml:"enableEmailConsentManagement,omitempty" json:"enableEmailConsentManagement,omitempty"`

	EnableEmailSenderIdCompliance bool `xml:"enableEmailSenderIdCompliance,omitempty" json:"enableEmailSenderIdCompliance,omitempty"`

	EnableEmailSpfCompliance bool `xml:"enableEmailSpfCompliance,omitempty" json:"enableEmailSpfCompliance,omitempty"`

	EnableEmailToSalesforce bool `xml:"enableEmailToSalesforce,omitempty" json:"enableEmailToSalesforce,omitempty"`

	EnableEmailTrackingIPBlocklist bool `xml:"enableEmailTrackingIPBlocklist,omitempty" json:"enableEmailTrackingIPBlocklist,omitempty"`

	EnableEmailWorkflowApproval bool `xml:"enableEmailWorkflowApproval,omitempty" json:"enableEmailWorkflowApproval,omitempty"`

	EnableEnhancedEmailEnabled bool `xml:"enableEnhancedEmailEnabled,omitempty" json:"enableEnhancedEmailEnabled,omitempty"`

	EnableHandleBouncedEmails bool `xml:"enableHandleBouncedEmails,omitempty" json:"enableHandleBouncedEmails,omitempty"`

	EnableHtmlEmail bool `xml:"enableHtmlEmail,omitempty" json:"enableHtmlEmail,omitempty"`

	EnableInternationalEmailAddresses bool `xml:"enableInternationalEmailAddresses,omitempty" json:"enableInternationalEmailAddresses,omitempty"`

	EnableListEmailLogActivities bool `xml:"enableListEmailLogActivities,omitempty" json:"enableListEmailLogActivities,omitempty"`

	EnableResendBouncedEmails bool `xml:"enableResendBouncedEmails,omitempty" json:"enableResendBouncedEmails,omitempty"`

	EnableRestrictTlsToDomains bool `xml:"enableRestrictTlsToDomains,omitempty" json:"enableRestrictTlsToDomains,omitempty"`

	EnableSendThroughGmailPref bool `xml:"enableSendThroughGmailPref,omitempty" json:"enableSendThroughGmailPref,omitempty"`

	EnableSendViaExchangePref bool `xml:"enableSendViaExchangePref,omitempty" json:"enableSendViaExchangePref,omitempty"`

	EnableSendViaGmailPref bool `xml:"enableSendViaGmailPref,omitempty" json:"enableSendViaGmailPref,omitempty"`

	EnableUseOrgFootersForExtTrans bool `xml:"enableUseOrgFootersForExtTrans,omitempty" json:"enableUseOrgFootersForExtTrans,omitempty"`

	EnableVerifyEmailDomainByDkim bool `xml:"enableVerifyEmailDomainByDkim,omitempty" json:"enableVerifyEmailDomainByDkim,omitempty"`

	SendEmailsEvenWhenAutomationUpdatesSameRecord bool `xml:"sendEmailsEvenWhenAutomationUpdatesSameRecord,omitempty" json:"sendEmailsEvenWhenAutomationUpdatesSameRecord,omitempty"`

	SendMassEmailNotification bool `xml:"sendMassEmailNotification,omitempty" json:"sendMassEmailNotification,omitempty"`

	SendTextOnlySystemEmails bool `xml:"sendTextOnlySystemEmails,omitempty" json:"sendTextOnlySystemEmails,omitempty"`
}

type EmailIntegrationSettings struct {
	*Metadata

	DoesEmailLogAsEmailMessageInOutlook bool `xml:"doesEmailLogAsEmailMessageInOutlook,omitempty" json:"doesEmailLogAsEmailMessageInOutlook,omitempty"`

	DoesGmailStayConnectedToSalesforce bool `xml:"doesGmailStayConnectedToSalesforce,omitempty" json:"doesGmailStayConnectedToSalesforce,omitempty"`

	EnableContactAndEventSync bool `xml:"enableContactAndEventSync,omitempty" json:"enableContactAndEventSync,omitempty"`

	EnableContextualEverywhere bool `xml:"enableContextualEverywhere,omitempty" json:"enableContextualEverywhere,omitempty"`

	EnableEmailTrackingInMobile bool `xml:"enableEmailTrackingInMobile,omitempty" json:"enableEmailTrackingInMobile,omitempty"`

	EnableEngageForOutlook bool `xml:"enableEngageForOutlook,omitempty" json:"enableEngageForOutlook,omitempty"`

	EnableExtensionHostUnrestricted bool `xml:"enableExtensionHostUnrestricted,omitempty" json:"enableExtensionHostUnrestricted,omitempty"`

	EnableGmailIntegration bool `xml:"enableGmailIntegration,omitempty" json:"enableGmailIntegration,omitempty"`

	EnableInboxInternalEmailTracking bool `xml:"enableInboxInternalEmailTracking,omitempty" json:"enableInboxInternalEmailTracking,omitempty"`

	EnableInboxMobileIntune bool `xml:"enableInboxMobileIntune,omitempty" json:"enableInboxMobileIntune,omitempty"`

	EnableOutlookIntegration bool `xml:"enableOutlookIntegration,omitempty" json:"enableOutlookIntegration,omitempty"`

	EnableOutlookMobileIntegration bool `xml:"enableOutlookMobileIntegration,omitempty" json:"enableOutlookMobileIntegration,omitempty"`

	EnableProductivityFeatures bool `xml:"enableProductivityFeatures,omitempty" json:"enableProductivityFeatures,omitempty"`

	EnableSupplementalContactInfoInMobile bool `xml:"enableSupplementalContactInfoInMobile,omitempty" json:"enableSupplementalContactInfoInMobile,omitempty"`

	IsLayoutCustomizationAllowed bool `xml:"isLayoutCustomizationAllowed,omitempty" json:"isLayoutCustomizationAllowed,omitempty"`

	OrgIsSyncingEventsOutbound bool `xml:"orgIsSyncingEventsOutbound,omitempty" json:"orgIsSyncingEventsOutbound,omitempty"`

	ShouldUseTrustedDomainsList bool `xml:"shouldUseTrustedDomainsList,omitempty" json:"shouldUseTrustedDomainsList,omitempty"`
}

type EmailServicesFunction struct {
	*Metadata

	ApexClass string `xml:"apexClass,omitempty" json:"apexClass,omitempty"`

	AttachmentOption *EmailServicesAttOptions `xml:"attachmentOption,omitempty" json:"attachmentOption,omitempty"`

	AuthenticationFailureAction *EmailServicesErrorAction `xml:"authenticationFailureAction,omitempty" json:"authenticationFailureAction,omitempty"`

	AuthorizationFailureAction *EmailServicesErrorAction `xml:"authorizationFailureAction,omitempty" json:"authorizationFailureAction,omitempty"`

	AuthorizedSenders string `xml:"authorizedSenders,omitempty" json:"authorizedSenders,omitempty"`

	EmailServicesAddresses []*EmailServicesAddress `xml:"emailServicesAddresses,omitempty" json:"emailServicesAddresses,omitempty"`

	ErrorRoutingAddress string `xml:"errorRoutingAddress,omitempty" json:"errorRoutingAddress,omitempty"`

	FunctionInactiveAction *EmailServicesErrorAction `xml:"functionInactiveAction,omitempty" json:"functionInactiveAction,omitempty"`

	FunctionName string `xml:"functionName,omitempty" json:"functionName,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	IsAuthenticationRequired bool `xml:"isAuthenticationRequired,omitempty" json:"isAuthenticationRequired,omitempty"`

	IsErrorRoutingEnabled bool `xml:"isErrorRoutingEnabled,omitempty" json:"isErrorRoutingEnabled,omitempty"`

	IsTextAttachmentsAsBinary bool `xml:"isTextAttachmentsAsBinary,omitempty" json:"isTextAttachmentsAsBinary,omitempty"`

	IsTlsRequired bool `xml:"isTlsRequired,omitempty" json:"isTlsRequired,omitempty"`

	OverLimitAction *EmailServicesErrorAction `xml:"overLimitAction,omitempty" json:"overLimitAction,omitempty"`
}

type EmailServicesAddress struct {
	AuthorizedSenders string `xml:"authorizedSenders,omitempty" json:"authorizedSenders,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	LocalPart string `xml:"localPart,omitempty" json:"localPart,omitempty"`

	RunAsUser string `xml:"runAsUser,omitempty" json:"runAsUser,omitempty"`
}

type EmailTemplateSettings struct {
	*Metadata

	EnableTemplateEnhancedFolderPref bool `xml:"enableTemplateEnhancedFolderPref,omitempty" json:"enableTemplateEnhancedFolderPref,omitempty"`
}

type EmbeddedServiceBranding struct {
	*Metadata

	ContrastInvertedColor string `xml:"contrastInvertedColor,omitempty" json:"contrastInvertedColor,omitempty"`

	ContrastPrimaryColor string `xml:"contrastPrimaryColor,omitempty" json:"contrastPrimaryColor,omitempty"`

	EmbeddedServiceConfig string `xml:"embeddedServiceConfig,omitempty" json:"embeddedServiceConfig,omitempty"`

	Font string `xml:"font,omitempty" json:"font,omitempty"`

	Height int32 `xml:"height,omitempty" json:"height,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	NavBarColor string `xml:"navBarColor,omitempty" json:"navBarColor,omitempty"`

	NavBarTextColor string `xml:"navBarTextColor,omitempty" json:"navBarTextColor,omitempty"`

	PrimaryColor string `xml:"primaryColor,omitempty" json:"primaryColor,omitempty"`

	SecondaryColor string `xml:"secondaryColor,omitempty" json:"secondaryColor,omitempty"`

	SecondaryNavBarColor string `xml:"secondaryNavBarColor,omitempty" json:"secondaryNavBarColor,omitempty"`

	Width int32 `xml:"width,omitempty" json:"width,omitempty"`
}

type EmbeddedServiceConfig struct {
	*Metadata

	AreGuestUsersAllowed bool `xml:"areGuestUsersAllowed,omitempty" json:"areGuestUsersAllowed,omitempty"`

	AuthMethod *EmbeddedServiceAuthMethod `xml:"authMethod,omitempty" json:"authMethod,omitempty"`

	Branding string `xml:"branding,omitempty" json:"branding,omitempty"`

	DeploymentFeature *EmbeddedServiceDeploymentFeature `xml:"deploymentFeature,omitempty" json:"deploymentFeature,omitempty"`

	DeploymentType *EmbeddedServiceDeploymentType `xml:"deploymentType,omitempty" json:"deploymentType,omitempty"`

	EmbeddedServiceAppointmentSettings *EmbeddedServiceAppointmentSettings `xml:"embeddedServiceAppointmentSettings,omitempty" json:"embeddedServiceAppointmentSettings,omitempty"`

	EmbeddedServiceCustomComponents []*EmbeddedServiceCustomComponent `xml:"embeddedServiceCustomComponents,omitempty" json:"embeddedServiceCustomComponents,omitempty"`

	EmbeddedServiceCustomLabels []*EmbeddedServiceCustomLabel `xml:"embeddedServiceCustomLabels,omitempty" json:"embeddedServiceCustomLabels,omitempty"`

	EmbeddedServiceCustomizations []*EmbeddedServiceCustomization `xml:"embeddedServiceCustomizations,omitempty" json:"embeddedServiceCustomizations,omitempty"`

	EmbeddedServiceFlowConfig *EmbeddedServiceFlowConfig `xml:"embeddedServiceFlowConfig,omitempty" json:"embeddedServiceFlowConfig,omitempty"`

	EmbeddedServiceFlows []*EmbeddedServiceFlow `xml:"embeddedServiceFlows,omitempty" json:"embeddedServiceFlows,omitempty"`

	EmbeddedServiceLayouts []*EmbeddedServiceLayout `xml:"embeddedServiceLayouts,omitempty" json:"embeddedServiceLayouts,omitempty"`

	IsEnabled bool `xml:"isEnabled,omitempty" json:"isEnabled,omitempty"`

	IsTermsAndConditionsEnabled bool `xml:"isTermsAndConditionsEnabled,omitempty" json:"isTermsAndConditionsEnabled,omitempty"`

	IsTermsAndConditionsRequired bool `xml:"isTermsAndConditionsRequired,omitempty" json:"isTermsAndConditionsRequired,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	ShouldHideAuthDialog bool `xml:"shouldHideAuthDialog,omitempty" json:"shouldHideAuthDialog,omitempty"`

	Site string `xml:"site,omitempty" json:"site,omitempty"`
}

type EmbeddedServiceAppointmentSettings struct {
	AppointmentConfirmImg string `xml:"appointmentConfirmImg,omitempty" json:"appointmentConfirmImg,omitempty"`

	Enabled bool `xml:"enabled,omitempty" json:"enabled,omitempty"`

	HomeImg string `xml:"homeImg,omitempty" json:"homeImg,omitempty"`

	LogoImg string `xml:"logoImg,omitempty" json:"logoImg,omitempty"`

	ShouldShowExistingAppointment bool `xml:"shouldShowExistingAppointment,omitempty" json:"shouldShowExistingAppointment,omitempty"`

	ShouldShowNewAppointment bool `xml:"shouldShowNewAppointment,omitempty" json:"shouldShowNewAppointment,omitempty"`
}

type EmbeddedServiceCustomComponent struct {
	ComponentBundleType *EmbeddedServiceComponentBundleType `xml:"componentBundleType,omitempty" json:"componentBundleType,omitempty"`

	CustomComponent string `xml:"customComponent,omitempty" json:"customComponent,omitempty"`

	CustomComponentType *EmbeddedServiceCustomComponentType `xml:"customComponentType,omitempty" json:"customComponentType,omitempty"`
}

type EmbeddedServiceCustomLabel struct {
	CustomLabel string `xml:"customLabel,omitempty" json:"customLabel,omitempty"`

	Feature *EmbeddedServiceFeature `xml:"feature,omitempty" json:"feature,omitempty"`

	LabelKey *EmbeddedServiceLabelKey `xml:"labelKey,omitempty" json:"labelKey,omitempty"`
}

type EmbeddedServiceCustomization struct {
	CustomizationName string `xml:"customizationName,omitempty" json:"customizationName,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	EmbeddedServiceResources []*EmbeddedServiceResource `xml:"embeddedServiceResources,omitempty" json:"embeddedServiceResources,omitempty"`
}

type EmbeddedServiceResource struct {
	Resource string `xml:"resource,omitempty" json:"resource,omitempty"`

	ResourceType *EmbeddedServiceResourceType `xml:"resourceType,omitempty" json:"resourceType,omitempty"`
}

type EmbeddedServiceFlowConfig struct {
	*Metadata

	Enabled bool `xml:"enabled,omitempty" json:"enabled,omitempty"`
}

type EmbeddedServiceFlow struct {
	Flow string `xml:"flow,omitempty" json:"flow,omitempty"`

	FlowType *EmbeddedServiceFlowType `xml:"flowType,omitempty" json:"flowType,omitempty"`

	IsAuthenticationRequired bool `xml:"isAuthenticationRequired,omitempty" json:"isAuthenticationRequired,omitempty"`
}

type EmbeddedServiceLayout struct {
	EmbeddedServiceLayoutRules []*EmbeddedServiceLayoutRule `xml:"embeddedServiceLayoutRules,omitempty" json:"embeddedServiceLayoutRules,omitempty"`

	Layout string `xml:"layout,omitempty" json:"layout,omitempty"`

	LayoutType *EmbeddedServiceLayoutType `xml:"layoutType,omitempty" json:"layoutType,omitempty"`
}

type EmbeddedServiceLayoutRule struct {
	AppointmentStatus string `xml:"appointmentStatus,omitempty" json:"appointmentStatus,omitempty"`
}

type EmbeddedServiceLiveAgent struct {
	*Metadata

	AvatarImg string `xml:"avatarImg,omitempty" json:"avatarImg,omitempty"`

	EmbeddedServiceConfig string `xml:"embeddedServiceConfig,omitempty" json:"embeddedServiceConfig,omitempty"`

	EmbeddedServiceQuickActions []*EmbeddedServiceQuickAction `xml:"embeddedServiceQuickActions,omitempty" json:"embeddedServiceQuickActions,omitempty"`

	Enabled bool `xml:"enabled,omitempty" json:"enabled,omitempty"`

	FontSize *EmbeddedServiceFontSize `xml:"fontSize,omitempty" json:"fontSize,omitempty"`

	IsOfflineCaseEnabled bool `xml:"isOfflineCaseEnabled,omitempty" json:"isOfflineCaseEnabled,omitempty"`

	IsQueuePositionEnabled bool `xml:"isQueuePositionEnabled,omitempty" json:"isQueuePositionEnabled,omitempty"`

	LiveAgentChatUrl string `xml:"liveAgentChatUrl,omitempty" json:"liveAgentChatUrl,omitempty"`

	LiveAgentContentUrl string `xml:"liveAgentContentUrl,omitempty" json:"liveAgentContentUrl,omitempty"`

	LiveChatButton string `xml:"liveChatButton,omitempty" json:"liveChatButton,omitempty"`

	LiveChatDeployment string `xml:"liveChatDeployment,omitempty" json:"liveChatDeployment,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	OfflineCaseBackgroundImg string `xml:"offlineCaseBackgroundImg,omitempty" json:"offlineCaseBackgroundImg,omitempty"`

	PrechatBackgroundImg string `xml:"prechatBackgroundImg,omitempty" json:"prechatBackgroundImg,omitempty"`

	PrechatEnabled bool `xml:"prechatEnabled,omitempty" json:"prechatEnabled,omitempty"`

	PrechatJson string `xml:"prechatJson,omitempty" json:"prechatJson,omitempty"`

	Scenario *EmbeddedServiceScenario `xml:"scenario,omitempty" json:"scenario,omitempty"`

	SmallCompanyLogoImg string `xml:"smallCompanyLogoImg,omitempty" json:"smallCompanyLogoImg,omitempty"`

	WaitingStateBackgroundImg string `xml:"waitingStateBackgroundImg,omitempty" json:"waitingStateBackgroundImg,omitempty"`
}

type EmbeddedServiceQuickAction struct {
	EmbeddedServiceLiveAgent string `xml:"embeddedServiceLiveAgent,omitempty" json:"embeddedServiceLiveAgent,omitempty"`

	Order int32 `xml:"order,omitempty" json:"order,omitempty"`

	QuickActionDefinition string `xml:"quickActionDefinition,omitempty" json:"quickActionDefinition,omitempty"`

	QuickActionType *EmbeddedServiceQuickActionType `xml:"quickActionType,omitempty" json:"quickActionType,omitempty"`
}

type EmbeddedServiceMenuSettings struct {
	*Metadata

	Branding string `xml:"branding,omitempty" json:"branding,omitempty"`

	EmbeddedServiceCustomLabels []*EmbeddedServiceCustomLabel `xml:"embeddedServiceCustomLabels,omitempty" json:"embeddedServiceCustomLabels,omitempty"`

	EmbeddedServiceCustomizations []*EmbeddedServiceCustomization `xml:"embeddedServiceCustomizations,omitempty" json:"embeddedServiceCustomizations,omitempty"`

	EmbeddedServiceMenuItems []*EmbeddedServiceMenuItem `xml:"embeddedServiceMenuItems,omitempty" json:"embeddedServiceMenuItems,omitempty"`

	IsEnabled bool `xml:"isEnabled,omitempty" json:"isEnabled,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	Site string `xml:"site,omitempty" json:"site,omitempty"`
}

type EmbeddedServiceMenuItem struct {
	Channel string `xml:"channel,omitempty" json:"channel,omitempty"`

	ChannelType *EmbeddedServiceChannelType `xml:"channelType,omitempty" json:"channelType,omitempty"`

	CustomUrl string `xml:"customUrl,omitempty" json:"customUrl,omitempty"`

	DisplayOrder int32 `xml:"displayOrder,omitempty" json:"displayOrder,omitempty"`

	EmbeddedServiceCustomLabels []*EmbeddedServiceCustomLabel `xml:"embeddedServiceCustomLabels,omitempty" json:"embeddedServiceCustomLabels,omitempty"`

	IconUrl string `xml:"iconUrl,omitempty" json:"iconUrl,omitempty"`

	IsDisplayedOnPageLoad bool `xml:"isDisplayedOnPageLoad,omitempty" json:"isDisplayedOnPageLoad,omitempty"`

	ItemName string `xml:"itemName,omitempty" json:"itemName,omitempty"`

	OsOptionsHideInIOS bool `xml:"osOptionsHideInIOS,omitempty" json:"osOptionsHideInIOS,omitempty"`

	OsOptionsHideInLinuxOS bool `xml:"osOptionsHideInLinuxOS,omitempty" json:"osOptionsHideInLinuxOS,omitempty"`

	OsOptionsHideInMacOS bool `xml:"osOptionsHideInMacOS,omitempty" json:"osOptionsHideInMacOS,omitempty"`

	OsOptionsHideInOtherOS bool `xml:"osOptionsHideInOtherOS,omitempty" json:"osOptionsHideInOtherOS,omitempty"`

	OsOptionsHideInWindowsOS bool `xml:"osOptionsHideInWindowsOS,omitempty" json:"osOptionsHideInWindowsOS,omitempty"`

	PhoneNumber string `xml:"phoneNumber,omitempty" json:"phoneNumber,omitempty"`

	ShouldOpenUrlInSameTab bool `xml:"shouldOpenUrlInSameTab,omitempty" json:"shouldOpenUrlInSameTab,omitempty"`
}

type EmployeeFieldAccessSettings struct {
	*Metadata

	EnableEmployeeFieldMaskDefaults bool `xml:"enableEmployeeFieldMaskDefaults,omitempty" json:"enableEmployeeFieldMaskDefaults,omitempty"`

	EnableEmployeeFieldMasking bool `xml:"enableEmployeeFieldMasking,omitempty" json:"enableEmployeeFieldMasking,omitempty"`
}

type EmployeeUserSettings struct {
	*Metadata

	EmailEncoding string `xml:"emailEncoding,omitempty" json:"emailEncoding,omitempty"`

	EnableEmployeeAutoCreateUser bool `xml:"enableEmployeeAutoCreateUser,omitempty" json:"enableEmployeeAutoCreateUser,omitempty"`

	EnableEmployeeIsSourceOfTruth bool `xml:"enableEmployeeIsSourceOfTruth,omitempty" json:"enableEmployeeIsSourceOfTruth,omitempty"`

	Permset string `xml:"permset,omitempty" json:"permset,omitempty"`

	Profile string `xml:"profile,omitempty" json:"profile,omitempty"`

	UsernameSuffix string `xml:"usernameSuffix,omitempty" json:"usernameSuffix,omitempty"`
}

type EncryptionKeySettings struct {
	*Metadata

	CanOptOutOfDerivationWithBYOK bool `xml:"canOptOutOfDerivationWithBYOK,omitempty" json:"canOptOutOfDerivationWithBYOK,omitempty"`

	EnableBringYourOwnkms bool `xml:"enableBringYourOwnkms,omitempty" json:"enableBringYourOwnkms,omitempty"`

	EnableCacheOnlyKeys bool `xml:"enableCacheOnlyKeys,omitempty" json:"enableCacheOnlyKeys,omitempty"`

	EnableReplayDetection bool `xml:"enableReplayDetection,omitempty" json:"enableReplayDetection,omitempty"`
}

type EnhancedNotesSettings struct {
	*Metadata

	EnableEnhancedNotes bool `xml:"enableEnhancedNotes,omitempty" json:"enableEnhancedNotes,omitempty"`

	EnableTasksOnEnhancedNotes bool `xml:"enableTasksOnEnhancedNotes,omitempty" json:"enableTasksOnEnhancedNotes,omitempty"`
}

type EntitlementProcess struct {
	*Metadata

	SObjectType string `xml:"SObjectType,omitempty" json:"SObjectType,omitempty"`

	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	BusinessHours string `xml:"businessHours,omitempty" json:"businessHours,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	EntryStartDateField string `xml:"entryStartDateField,omitempty" json:"entryStartDateField,omitempty"`

	ExitCriteriaBooleanFilter string `xml:"exitCriteriaBooleanFilter,omitempty" json:"exitCriteriaBooleanFilter,omitempty"`

	ExitCriteriaFilterItems []*FilterItem `xml:"exitCriteriaFilterItems,omitempty" json:"exitCriteriaFilterItems,omitempty"`

	ExitCriteriaFormula string `xml:"exitCriteriaFormula,omitempty" json:"exitCriteriaFormula,omitempty"`

	IsRecordTypeApplied bool `xml:"isRecordTypeApplied,omitempty" json:"isRecordTypeApplied,omitempty"`

	IsVersionDefault bool `xml:"isVersionDefault,omitempty" json:"isVersionDefault,omitempty"`

	Milestones []*EntitlementProcessMilestoneItem `xml:"milestones,omitempty" json:"milestones,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	RecordType string `xml:"recordType,omitempty" json:"recordType,omitempty"`

	VersionMaster string `xml:"versionMaster,omitempty" json:"versionMaster,omitempty"`

	VersionNotes string `xml:"versionNotes,omitempty" json:"versionNotes,omitempty"`

	VersionNumber int32 `xml:"versionNumber,omitempty" json:"versionNumber,omitempty"`
}

type EntitlementProcessMilestoneItem struct {
	BusinessHours string `xml:"businessHours,omitempty" json:"businessHours,omitempty"`

	CriteriaBooleanFilter string `xml:"criteriaBooleanFilter,omitempty" json:"criteriaBooleanFilter,omitempty"`

	MilestoneCriteriaFilterItems []*FilterItem `xml:"milestoneCriteriaFilterItems,omitempty" json:"milestoneCriteriaFilterItems,omitempty"`

	MilestoneCriteriaFormula string `xml:"milestoneCriteriaFormula,omitempty" json:"milestoneCriteriaFormula,omitempty"`

	MilestoneName string `xml:"milestoneName,omitempty" json:"milestoneName,omitempty"`

	MinutesCustomClass string `xml:"minutesCustomClass,omitempty" json:"minutesCustomClass,omitempty"`

	MinutesToComplete int32 `xml:"minutesToComplete,omitempty" json:"minutesToComplete,omitempty"`

	SuccessActions []*WorkflowActionReference `xml:"successActions,omitempty" json:"successActions,omitempty"`

	TimeTriggers []*EntitlementProcessMilestoneTimeTrigger `xml:"timeTriggers,omitempty" json:"timeTriggers,omitempty"`

	UseCriteriaStartTime bool `xml:"useCriteriaStartTime,omitempty" json:"useCriteriaStartTime,omitempty"`
}

type EntitlementProcessMilestoneTimeTrigger struct {
	Actions []*WorkflowActionReference `xml:"actions,omitempty" json:"actions,omitempty"`

	TimeLength int32 `xml:"timeLength,omitempty" json:"timeLength,omitempty"`

	WorkflowTimeTriggerUnit *MilestoneTimeUnits `xml:"workflowTimeTriggerUnit,omitempty" json:"workflowTimeTriggerUnit,omitempty"`
}

type EntitlementSettings struct {
	*Metadata

	AssetLookupLimitedToActiveEntitlementsOnAccount bool `xml:"assetLookupLimitedToActiveEntitlementsOnAccount,omitempty" json:"assetLookupLimitedToActiveEntitlementsOnAccount,omitempty"`

	AssetLookupLimitedToActiveEntitlementsOnContact bool `xml:"assetLookupLimitedToActiveEntitlementsOnContact,omitempty" json:"assetLookupLimitedToActiveEntitlementsOnContact,omitempty"`

	AssetLookupLimitedToSameAccount bool `xml:"assetLookupLimitedToSameAccount,omitempty" json:"assetLookupLimitedToSameAccount,omitempty"`

	AssetLookupLimitedToSameContact bool `xml:"assetLookupLimitedToSameContact,omitempty" json:"assetLookupLimitedToSameContact,omitempty"`

	EnableEntitlementVersioning bool `xml:"enableEntitlementVersioning,omitempty" json:"enableEntitlementVersioning,omitempty"`

	EnableEntitlements bool `xml:"enableEntitlements,omitempty" json:"enableEntitlements,omitempty"`

	EnableMilestoneFeedItem bool `xml:"enableMilestoneFeedItem,omitempty" json:"enableMilestoneFeedItem,omitempty"`

	EnableMilestoneStoppedTime bool `xml:"enableMilestoneStoppedTime,omitempty" json:"enableMilestoneStoppedTime,omitempty"`

	EntitlementLookupLimitedToActiveStatus bool `xml:"entitlementLookupLimitedToActiveStatus,omitempty" json:"entitlementLookupLimitedToActiveStatus,omitempty"`

	EntitlementLookupLimitedToSameAccount bool `xml:"entitlementLookupLimitedToSameAccount,omitempty" json:"entitlementLookupLimitedToSameAccount,omitempty"`

	EntitlementLookupLimitedToSameAsset bool `xml:"entitlementLookupLimitedToSameAsset,omitempty" json:"entitlementLookupLimitedToSameAsset,omitempty"`

	EntitlementLookupLimitedToSameContact bool `xml:"entitlementLookupLimitedToSameContact,omitempty" json:"entitlementLookupLimitedToSameContact,omitempty"`

	IgnoreMilestoneBusinessHours bool `xml:"ignoreMilestoneBusinessHours,omitempty" json:"ignoreMilestoneBusinessHours,omitempty"`
}

type EntitlementTemplate struct {
	*Metadata

	BusinessHours string `xml:"businessHours,omitempty" json:"businessHours,omitempty"`

	CasesPerEntitlement int32 `xml:"casesPerEntitlement,omitempty" json:"casesPerEntitlement,omitempty"`

	EntitlementProcess string `xml:"entitlementProcess,omitempty" json:"entitlementProcess,omitempty"`

	IsPerIncident bool `xml:"isPerIncident,omitempty" json:"isPerIncident,omitempty"`

	Term int32 `xml:"term,omitempty" json:"term,omitempty"`

	Type_ string `xml:"type,omitempty" json:"type,omitempty"`
}

type EntityImplements struct {
	*Metadata

	FieldImplements []*FieldImplements `xml:"fieldImplements,omitempty" json:"fieldImplements,omitempty"`

	IsDefault bool `xml:"isDefault,omitempty" json:"isDefault,omitempty"`

	IsFullyMapped bool `xml:"isFullyMapped,omitempty" json:"isFullyMapped,omitempty"`
}

type FieldImplements struct {
	Field string `xml:"field,omitempty" json:"field,omitempty"`

	InterfaceField string `xml:"interfaceField,omitempty" json:"interfaceField,omitempty"`
}

type EscalationRule struct {
	*Metadata

	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	RuleEntry []*RuleEntry `xml:"ruleEntry,omitempty" json:"ruleEntry,omitempty"`
}

type EscalationRules struct {
	*Metadata

	EscalationRule []*EscalationRule `xml:"escalationRule,omitempty" json:"escalationRule,omitempty"`
}

type EssentialsSettings struct {
	*Metadata

	EmailConnectorEnabled bool `xml:"emailConnectorEnabled,omitempty" json:"emailConnectorEnabled,omitempty"`
}

type EventRelayConfig struct {
	*Metadata

	DestinationResourceName string `xml:"destinationResourceName,omitempty" json:"destinationResourceName,omitempty"`

	EventChannel string `xml:"eventChannel,omitempty" json:"eventChannel,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	RelayOption string `xml:"relayOption,omitempty" json:"relayOption,omitempty"`

	State *EventRelayAdminState `xml:"state,omitempty" json:"state,omitempty"`

	UsageType *EventRelayUsageType `xml:"usageType,omitempty" json:"usageType,omitempty"`
}

type EventSettings struct {
	*Metadata

	BypassMeteringBlock bool `xml:"bypassMeteringBlock,omitempty" json:"bypassMeteringBlock,omitempty"`

	EnableApexLimitEvents bool `xml:"enableApexLimitEvents,omitempty" json:"enableApexLimitEvents,omitempty"`

	EnableDeleteMonitoringData bool `xml:"enableDeleteMonitoringData,omitempty" json:"enableDeleteMonitoringData,omitempty"`

	EnableDynamicStreamingChannel bool `xml:"enableDynamicStreamingChannel,omitempty" json:"enableDynamicStreamingChannel,omitempty"`

	EnableEventLogGeneration bool `xml:"enableEventLogGeneration,omitempty" json:"enableEventLogGeneration,omitempty"`

	EnableEventLogWaveIntegration bool `xml:"enableEventLogWaveIntegration,omitempty" json:"enableEventLogWaveIntegration,omitempty"`

	EnableLoginForensics bool `xml:"enableLoginForensics,omitempty" json:"enableLoginForensics,omitempty"`

	EnableStreamingApi bool `xml:"enableStreamingApi,omitempty" json:"enableStreamingApi,omitempty"`

	EnableTransactionSecurityPolicies bool `xml:"enableTransactionSecurityPolicies,omitempty" json:"enableTransactionSecurityPolicies,omitempty"`
}

type ExperienceBundle struct {
	*Metadata

	ExperienceResources *ExperienceResources `xml:"experienceResources,omitempty" json:"experienceResources,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Type_ *SiteType `xml:"type,omitempty" json:"type,omitempty"`

	UrlPathPrefix string `xml:"urlPathPrefix,omitempty" json:"urlPathPrefix,omitempty"`
}

type ExperienceResources struct {
	ExperienceResource []*ExperienceResource `xml:"experienceResource,omitempty" json:"experienceResource,omitempty"`
}

type ExperienceResource struct {
	FileName string `xml:"fileName,omitempty" json:"fileName,omitempty"`

	Format string `xml:"format,omitempty" json:"format,omitempty"`

	Source []byte `xml:"source,omitempty" json:"source,omitempty"`

	Type_ string `xml:"type,omitempty" json:"type,omitempty"`
}

type ExperienceBundleSettings struct {
	*Metadata

	EnableExperienceBundleMetadata bool `xml:"enableExperienceBundleMetadata,omitempty" json:"enableExperienceBundleMetadata,omitempty"`
}

type ExperienceContainer struct {
	*Metadata

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	Space string `xml:"space,omitempty" json:"space,omitempty"`

	Type_ *ExperienceContainerType `xml:"type,omitempty" json:"type,omitempty"`
}

type ExperiencePropertyTypeBundle struct {
	*Metadata

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	Resources []*ExperiencePropertyTypeBundleResource `xml:"resources,omitempty" json:"resources,omitempty"`
}

type ExperiencePropertyTypeBundleResource struct {
	FileName string `xml:"fileName,omitempty" json:"fileName,omitempty"`

	FilePath string `xml:"filePath,omitempty" json:"filePath,omitempty"`

	Source []byte `xml:"source,omitempty" json:"source,omitempty"`
}

type ExternalClientAppSettings struct {
	*Metadata

	EnableConsumerSecretApiAccess bool `xml:"enableConsumerSecretApiAccess,omitempty" json:"enableConsumerSecretApiAccess,omitempty"`

	EnableExternalClientApps bool `xml:"enableExternalClientApps,omitempty" json:"enableExternalClientApps,omitempty"`
}

type ExternalCredential struct {
	*Metadata

	AuthenticationProtocol *AuthenticationProtocol `xml:"authenticationProtocol,omitempty" json:"authenticationProtocol,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	ExternalCredentialParameters []*ExternalCredentialParameter `xml:"externalCredentialParameters,omitempty" json:"externalCredentialParameters,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`
}

type ExternalCredentialParameter struct {
	AuthProvider string `xml:"authProvider,omitempty" json:"authProvider,omitempty"`

	Certificate string `xml:"certificate,omitempty" json:"certificate,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	ParameterGroup string `xml:"parameterGroup,omitempty" json:"parameterGroup,omitempty"`

	ParameterName string `xml:"parameterName,omitempty" json:"parameterName,omitempty"`

	ParameterType *ExternalCredentialParamType `xml:"parameterType,omitempty" json:"parameterType,omitempty"`

	ParameterValue string `xml:"parameterValue,omitempty" json:"parameterValue,omitempty"`

	SequenceNumber int32 `xml:"sequenceNumber,omitempty" json:"sequenceNumber,omitempty"`
}

type ExternalDataSource struct {
	*Metadata

	AuthProvider string `xml:"authProvider,omitempty" json:"authProvider,omitempty"`

	Certificate string `xml:"certificate,omitempty" json:"certificate,omitempty"`

	CustomConfiguration string `xml:"customConfiguration,omitempty" json:"customConfiguration,omitempty"`

	CustomHttpHeaders []*CustomHttpHeader `xml:"customHttpHeaders,omitempty" json:"customHttpHeaders,omitempty"`

	Endpoint string `xml:"endpoint,omitempty" json:"endpoint,omitempty"`

	ExternalDataSrcDescriptors []*ExternalDataSrcDescriptor `xml:"externalDataSrcDescriptors,omitempty" json:"externalDataSrcDescriptors,omitempty"`

	IsWritable bool `xml:"isWritable,omitempty" json:"isWritable,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	NamedCredential string `xml:"namedCredential,omitempty" json:"namedCredential,omitempty"`

	OauthRefreshToken string `xml:"oauthRefreshToken,omitempty" json:"oauthRefreshToken,omitempty"`

	OauthScope string `xml:"oauthScope,omitempty" json:"oauthScope,omitempty"`

	OauthToken string `xml:"oauthToken,omitempty" json:"oauthToken,omitempty"`

	Password string `xml:"password,omitempty" json:"password,omitempty"`

	PrincipalType *ExternalPrincipalType `xml:"principalType,omitempty" json:"principalType,omitempty"`

	Protocol *AuthenticationProtocol `xml:"protocol,omitempty" json:"protocol,omitempty"`

	Repository string `xml:"repository,omitempty" json:"repository,omitempty"`

	Type_ *ExternalDataSourceType `xml:"type,omitempty" json:"type,omitempty"`

	Username string `xml:"username,omitempty" json:"username,omitempty"`

	Version string `xml:"version,omitempty" json:"version,omitempty"`
}

type CustomHttpHeader struct {
	Description string `xml:"description,omitempty" json:"description,omitempty"`

	HeaderFieldName string `xml:"headerFieldName,omitempty" json:"headerFieldName,omitempty"`

	HeaderFieldValue string `xml:"headerFieldValue,omitempty" json:"headerFieldValue,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`
}

type ExternalDataSrcDescriptor struct {
	*Metadata

	CustomObject string `xml:"customObject,omitempty" json:"customObject,omitempty"`

	Descriptor string `xml:"descriptor,omitempty" json:"descriptor,omitempty"`

	DescriptorVersion string `xml:"descriptorVersion,omitempty" json:"descriptorVersion,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	ExternalDataSource string `xml:"externalDataSource,omitempty" json:"externalDataSource,omitempty"`

	Subtype *ExternalDataSrcDescSubtype `xml:"subtype,omitempty" json:"subtype,omitempty"`

	SystemVersion int32 `xml:"systemVersion,omitempty" json:"systemVersion,omitempty"`

	Type_ *ExternalDataSrcDescType `xml:"type,omitempty" json:"type,omitempty"`
}

type ExternalServiceRegistration struct {
	*Metadata

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	NamedCredential string `xml:"namedCredential,omitempty" json:"namedCredential,omitempty"`

	NamedCredentialReference string `xml:"namedCredentialReference,omitempty" json:"namedCredentialReference,omitempty"`

	Operations []*ExternalServiceOperation `xml:"operations,omitempty" json:"operations,omitempty"`

	ProviderAssetEndpoint string `xml:"providerAssetEndpoint,omitempty" json:"providerAssetEndpoint,omitempty"`

	RegistrationProviderType *ExternalServiceRegistrationProviderType `xml:"registrationProviderType,omitempty" json:"registrationProviderType,omitempty"`

	Schema string `xml:"schema,omitempty" json:"schema,omitempty"`

	SchemaAbsoluteUrl string `xml:"schemaAbsoluteUrl,omitempty" json:"schemaAbsoluteUrl,omitempty"`

	SchemaType string `xml:"schemaType,omitempty" json:"schemaType,omitempty"`

	SchemaUploadFileExtension string `xml:"schemaUploadFileExtension,omitempty" json:"schemaUploadFileExtension,omitempty"`

	SchemaUploadFileName string `xml:"schemaUploadFileName,omitempty" json:"schemaUploadFileName,omitempty"`

	SchemaUrl string `xml:"schemaUrl,omitempty" json:"schemaUrl,omitempty"`

	ServiceBinding string `xml:"serviceBinding,omitempty" json:"serviceBinding,omitempty"`

	ServiceDescriptor string `xml:"serviceDescriptor,omitempty" json:"serviceDescriptor,omitempty"`

	Status string `xml:"status,omitempty" json:"status,omitempty"`

	SystemVersion int32 `xml:"systemVersion,omitempty" json:"systemVersion,omitempty"`
}

type ExternalServiceOperation struct {
	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type FieldRestrictionRule struct {
	*Metadata

	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	Classification []string `xml:"classification,omitempty" json:"classification,omitempty"`

	ClassificationType *ClassificationType `xml:"classificationType,omitempty" json:"classificationType,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	EnforcementType *EnforcementType `xml:"enforcementType,omitempty" json:"enforcementType,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	RecordFilter string `xml:"recordFilter,omitempty" json:"recordFilter,omitempty"`

	TargetEntity string `xml:"targetEntity,omitempty" json:"targetEntity,omitempty"`

	UserCriteria string `xml:"userCriteria,omitempty" json:"userCriteria,omitempty"`

	Version int32 `xml:"version,omitempty" json:"version,omitempty"`
}

type FieldServiceSettings struct {
	*Metadata

	ApptAssistantExpiration int32 `xml:"apptAssistantExpiration,omitempty" json:"apptAssistantExpiration,omitempty"`

	ApptAssistantInfoUrl string `xml:"apptAssistantInfoUrl,omitempty" json:"apptAssistantInfoUrl,omitempty"`

	ApptAssistantRadiusUnitValue *ApptAssistantRadiusUnit `xml:"apptAssistantRadiusUnitValue,omitempty" json:"apptAssistantRadiusUnitValue,omitempty"`

	ApptAssistantRadiusValue int32 `xml:"apptAssistantRadiusValue,omitempty" json:"apptAssistantRadiusValue,omitempty"`

	ApptAssistantStatus string `xml:"apptAssistantStatus,omitempty" json:"apptAssistantStatus,omitempty"`

	CanPopulateGoogleAddress bool `xml:"canPopulateGoogleAddress,omitempty" json:"canPopulateGoogleAddress,omitempty"`

	CanSendAppCenterCrashReports bool `xml:"canSendAppCenterCrashReports,omitempty" json:"canSendAppCenterCrashReports,omitempty"`

	CanStoreMobileAnalytics bool `xml:"canStoreMobileAnalytics,omitempty" json:"canStoreMobileAnalytics,omitempty"`

	DeepLinkPublicSecurityKey string `xml:"deepLinkPublicSecurityKey,omitempty" json:"deepLinkPublicSecurityKey,omitempty"`

	DoesAllowEditSaForCrew bool `xml:"doesAllowEditSaForCrew,omitempty" json:"doesAllowEditSaForCrew,omitempty"`

	DoesAvlCalcInclOvertime bool `xml:"doesAvlCalcInclOvertime,omitempty" json:"doesAvlCalcInclOvertime,omitempty"`

	DoesAvlCalcInclPrimOnly bool `xml:"doesAvlCalcInclPrimOnly,omitempty" json:"doesAvlCalcInclPrimOnly,omitempty"`

	DoesShareSaParentWoWithAr bool `xml:"doesShareSaParentWoWithAr,omitempty" json:"doesShareSaParentWoWithAr,omitempty"`

	DoesShareSaWithAr bool `xml:"doesShareSaWithAr,omitempty" json:"doesShareSaWithAr,omitempty"`

	EnableBatchWindow bool `xml:"enableBatchWindow,omitempty" json:"enableBatchWindow,omitempty"`

	EnableFloatingWorkOrder bool `xml:"enableFloatingWorkOrder,omitempty" json:"enableFloatingWorkOrder,omitempty"`

	EnablePopulateWorkOrderAddress bool `xml:"enablePopulateWorkOrderAddress,omitempty" json:"enablePopulateWorkOrderAddress,omitempty"`

	EnableWorkOrders bool `xml:"enableWorkOrders,omitempty" json:"enableWorkOrders,omitempty"`

	EnableWorkPlansAutoGeneration bool `xml:"enableWorkPlansAutoGeneration,omitempty" json:"enableWorkPlansAutoGeneration,omitempty"`

	EnableWorkStepManualStatusUpdate bool `xml:"enableWorkStepManualStatusUpdate,omitempty" json:"enableWorkStepManualStatusUpdate,omitempty"`

	FieldServiceNotificationsOrgPref bool `xml:"fieldServiceNotificationsOrgPref,omitempty" json:"fieldServiceNotificationsOrgPref,omitempty"`

	FieldServiceOrgPref bool `xml:"fieldServiceOrgPref,omitempty" json:"fieldServiceOrgPref,omitempty"`

	IsGeoCodeSyncEnabled bool `xml:"isGeoCodeSyncEnabled,omitempty" json:"isGeoCodeSyncEnabled,omitempty"`

	IsLocationHistoryEnabled bool `xml:"isLocationHistoryEnabled,omitempty" json:"isLocationHistoryEnabled,omitempty"`

	MobileFeedbackEmails string `xml:"mobileFeedbackEmails,omitempty" json:"mobileFeedbackEmails,omitempty"`

	O2EngineEnabled bool `xml:"o2EngineEnabled,omitempty" json:"o2EngineEnabled,omitempty"`

	ObjectMappingItem []*ObjectMappingItem `xml:"objectMappingItem,omitempty" json:"objectMappingItem,omitempty"`

	OptimizationServiceAccess bool `xml:"optimizationServiceAccess,omitempty" json:"optimizationServiceAccess,omitempty"`

	ServiceAppointmentsDueDateOffsetOrgValue int32 `xml:"serviceAppointmentsDueDateOffsetOrgValue,omitempty" json:"serviceAppointmentsDueDateOffsetOrgValue,omitempty"`

	WorkOrderDurationSource *WorkOrderDurationSource `xml:"workOrderDurationSource,omitempty" json:"workOrderDurationSource,omitempty"`

	WorkOrderLineItemSearchFields []string `xml:"workOrderLineItemSearchFields,omitempty" json:"workOrderLineItemSearchFields,omitempty"`

	WorkOrderSearchFields []string `xml:"workOrderSearchFields,omitempty" json:"workOrderSearchFields,omitempty"`
}

type ObjectMappingItem struct {
	MappingType *MappingType `xml:"mappingType,omitempty" json:"mappingType,omitempty"`

	ObjectMapping *ObjectMapping `xml:"objectMapping,omitempty" json:"objectMapping,omitempty"`
}

type FileUploadAndDownloadSecuritySettings struct {
	*Metadata

	Dispositions []*FileTypeDispositionAssignmentBean `xml:"dispositions,omitempty" json:"dispositions,omitempty"`

	NoHtmlUploadAsAttachment bool `xml:"noHtmlUploadAsAttachment,omitempty" json:"noHtmlUploadAsAttachment,omitempty"`
}

type FileTypeDispositionAssignmentBean struct {
	Behavior *FileDownloadBehavior `xml:"behavior,omitempty" json:"behavior,omitempty"`

	FileType *FileType `xml:"fileType,omitempty" json:"fileType,omitempty"`

	SecurityRiskFileType bool `xml:"securityRiskFileType,omitempty" json:"securityRiskFileType,omitempty"`
}

type FilesConnectSettings struct {
	*Metadata

	EnableContentHubAllowed bool `xml:"enableContentHubAllowed,omitempty" json:"enableContentHubAllowed,omitempty"`

	EnableContentHubCvtLinksAllowed bool `xml:"enableContentHubCvtLinksAllowed,omitempty" json:"enableContentHubCvtLinksAllowed,omitempty"`

	EnableContentHubEOSearchLayout bool `xml:"enableContentHubEOSearchLayout,omitempty" json:"enableContentHubEOSearchLayout,omitempty"`
}

type FlexiPage struct {
	*Metadata

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Events []*FlexiPageEvent `xml:"events,omitempty" json:"events,omitempty"`

	FlexiPageRegions []*FlexiPageRegion `xml:"flexiPageRegions,omitempty" json:"flexiPageRegions,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	ParentFlexiPage string `xml:"parentFlexiPage,omitempty" json:"parentFlexiPage,omitempty"`

	PlatformActionlist *PlatformActionList `xml:"platformActionlist,omitempty" json:"platformActionlist,omitempty"`

	QuickActionList *QuickActionList `xml:"quickActionList,omitempty" json:"quickActionList,omitempty"`

	SobjectType string `xml:"sobjectType,omitempty" json:"sobjectType,omitempty"`

	Template *FlexiPageTemplateInstance `xml:"template,omitempty" json:"template,omitempty"`

	Type_ *FlexiPageType `xml:"type,omitempty" json:"type,omitempty"`
}

type FlexiPageEvent struct {
	SourceName string `xml:"sourceName,omitempty" json:"sourceName,omitempty"`

	SourceProperties []*FlexiPageEventSourceProperty `xml:"sourceProperties,omitempty" json:"sourceProperties,omitempty"`

	SourceType *FlexipageEventSourceTypeEnum `xml:"sourceType,omitempty" json:"sourceType,omitempty"`

	Targets []*FlexiPageEventTarget `xml:"targets,omitempty" json:"targets,omitempty"`
}

type FlexiPageEventSourceProperty struct {
	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type FlexiPageEventTarget struct {
	Mappings []*FlexiPageEventPropertyMapping `xml:"mappings,omitempty" json:"mappings,omitempty"`

	Method string `xml:"method,omitempty" json:"method,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Properties []*FlexiPageEventTargetProperty `xml:"properties,omitempty" json:"properties,omitempty"`

	Type_ *FlexipageEventTargetTypeEnum `xml:"type,omitempty" json:"type,omitempty"`
}

type FlexiPageEventPropertyMapping struct {
	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type FlexiPageEventTargetProperty struct {
	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type FlexiPageRegion struct {
	Appendable *RegionFlagStatus `xml:"appendable,omitempty" json:"appendable,omitempty"`

	ItemInstances []*ItemInstance `xml:"itemInstances,omitempty" json:"itemInstances,omitempty"`

	Mode *FlexiPageRegionMode `xml:"mode,omitempty" json:"mode,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Prependable *RegionFlagStatus `xml:"prependable,omitempty" json:"prependable,omitempty"`

	Replaceable *RegionFlagStatus `xml:"replaceable,omitempty" json:"replaceable,omitempty"`

	Type_ *FlexiPageRegionType `xml:"type,omitempty" json:"type,omitempty"`
}

type ItemInstance struct {
	ComponentInstance *ComponentInstance `xml:"componentInstance,omitempty" json:"componentInstance,omitempty"`

	FieldInstance *FieldInstance `xml:"fieldInstance,omitempty" json:"fieldInstance,omitempty"`
}

type ComponentInstance struct {
	ComponentInstanceProperties []*ComponentInstanceProperty `xml:"componentInstanceProperties,omitempty" json:"componentInstanceProperties,omitempty"`

	ComponentName string `xml:"componentName,omitempty" json:"componentName,omitempty"`

	ComponentType *ComponentInstanceType `xml:"componentType,omitempty" json:"componentType,omitempty"`

	Identifier string `xml:"identifier,omitempty" json:"identifier,omitempty"`

	VisibilityRule *UiFormulaRule `xml:"visibilityRule,omitempty" json:"visibilityRule,omitempty"`
}

type ComponentInstanceProperty struct {
	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Type_ *ComponentInstancePropertyTypeEnum `xml:"type,omitempty" json:"type,omitempty"`

	Value string `xml:"value,omitempty" json:"value,omitempty"`

	ValueList *ComponentInstancePropertyList `xml:"valueList,omitempty" json:"valueList,omitempty"`
}

type ComponentInstancePropertyList struct {
	ValueListItems []*ComponentInstancePropertyListItem `xml:"valueListItems,omitempty" json:"valueListItems,omitempty"`
}

type ComponentInstancePropertyListItem struct {
	Value string `xml:"value,omitempty" json:"value,omitempty"`

	VisibilityRule *UiFormulaRule `xml:"visibilityRule,omitempty" json:"visibilityRule,omitempty"`
}

type UiFormulaRule struct {
	BooleanFilter string `xml:"booleanFilter,omitempty" json:"booleanFilter,omitempty"`

	Criteria []*UiFormulaCriterion `xml:"criteria,omitempty" json:"criteria,omitempty"`
}

type UiFormulaCriterion struct {
	LeftValue string `xml:"leftValue,omitempty" json:"leftValue,omitempty"`

	Operator string `xml:"operator,omitempty" json:"operator,omitempty"`

	RightValue string `xml:"rightValue,omitempty" json:"rightValue,omitempty"`
}

type FieldInstance struct {
	FieldInstanceProperties []*FieldInstanceProperty `xml:"fieldInstanceProperties,omitempty" json:"fieldInstanceProperties,omitempty"`

	FieldItem string `xml:"fieldItem,omitempty" json:"fieldItem,omitempty"`

	Identifier string `xml:"identifier,omitempty" json:"identifier,omitempty"`

	VisibilityRule *UiFormulaRule `xml:"visibilityRule,omitempty" json:"visibilityRule,omitempty"`
}

type FieldInstanceProperty struct {
	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type PlatformActionList struct {
	ActionListContext *PlatformActionListContext `xml:"actionListContext,omitempty" json:"actionListContext,omitempty"`

	PlatformActionListItems []*PlatformActionListItem `xml:"platformActionListItems,omitempty" json:"platformActionListItems,omitempty"`

	RelatedSourceEntity string `xml:"relatedSourceEntity,omitempty" json:"relatedSourceEntity,omitempty"`
}

type PlatformActionListItem struct {
	ActionName string `xml:"actionName,omitempty" json:"actionName,omitempty"`

	ActionType *PlatformActionType `xml:"actionType,omitempty" json:"actionType,omitempty"`

	SortOrder int32 `xml:"sortOrder,omitempty" json:"sortOrder,omitempty"`

	Subtype string `xml:"subtype,omitempty" json:"subtype,omitempty"`
}

type QuickActionList struct {
	QuickActionListItems []*QuickActionListItem `xml:"quickActionListItems,omitempty" json:"quickActionListItems,omitempty"`
}

type QuickActionListItem struct {
	QuickActionName string `xml:"quickActionName,omitempty" json:"quickActionName,omitempty"`
}

type FlexiPageTemplateInstance struct {
	ComponentType *ComponentInstanceType `xml:"componentType,omitempty" json:"componentType,omitempty"`

	Identifier string `xml:"identifier,omitempty" json:"identifier,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Properties []*ComponentInstanceProperty `xml:"properties,omitempty" json:"properties,omitempty"`
}

type Flow struct {
	*Metadata

	ActionCalls []*FlowActionCall `xml:"actionCalls,omitempty" json:"actionCalls,omitempty"`

	ApexPluginCalls []*FlowApexPluginCall `xml:"apexPluginCalls,omitempty" json:"apexPluginCalls,omitempty"`

	ApiVersion *float64 `xml:"apiVersion,omitempty" json:"apiVersion,omitempty"`

	Assignments []*FlowAssignment `xml:"assignments,omitempty" json:"assignments,omitempty"`

	Choices []*FlowChoice `xml:"choices,omitempty" json:"choices,omitempty"`

	CollectionProcessors []*FlowCollectionProcessor `xml:"collectionProcessors,omitempty" json:"collectionProcessors,omitempty"`

	Constants []*FlowConstant `xml:"constants,omitempty" json:"constants,omitempty"`

	CustomErrors []*FlowCustomError `xml:"customErrors,omitempty" json:"customErrors,omitempty"`

	Decisions []*FlowDecision `xml:"decisions,omitempty" json:"decisions,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DynamicChoiceSets []*FlowDynamicChoiceSet `xml:"dynamicChoiceSets,omitempty" json:"dynamicChoiceSets,omitempty"`

	Environments []*FlowEnvironment `xml:"environments,omitempty" json:"environments,omitempty"`

	Formulas []*FlowFormula `xml:"formulas,omitempty" json:"formulas,omitempty"`

	InterviewLabel string `xml:"interviewLabel,omitempty" json:"interviewLabel,omitempty"`

	IsAdditionalPermissionRequiredToRun bool `xml:"isAdditionalPermissionRequiredToRun,omitempty" json:"isAdditionalPermissionRequiredToRun,omitempty"`

	IsOverridable bool `xml:"isOverridable,omitempty" json:"isOverridable,omitempty"`

	IsTemplate bool `xml:"isTemplate,omitempty" json:"isTemplate,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Loops []*FlowLoop `xml:"loops,omitempty" json:"loops,omitempty"`

	MigratedFromWorkflowRuleName string `xml:"migratedFromWorkflowRuleName,omitempty" json:"migratedFromWorkflowRuleName,omitempty"`

	OrchestratedStages []*FlowOrchestratedStage `xml:"orchestratedStages,omitempty" json:"orchestratedStages,omitempty"`

	OverriddenFlow string `xml:"overriddenFlow,omitempty" json:"overriddenFlow,omitempty"`

	ProcessMetadataValues []*FlowMetadataValue `xml:"processMetadataValues,omitempty" json:"processMetadataValues,omitempty"`

	ProcessType *FlowProcessType `xml:"processType,omitempty" json:"processType,omitempty"`

	RecordCreates []*FlowRecordCreate `xml:"recordCreates,omitempty" json:"recordCreates,omitempty"`

	RecordDeletes []*FlowRecordDelete `xml:"recordDeletes,omitempty" json:"recordDeletes,omitempty"`

	RecordLookups []*FlowRecordLookup `xml:"recordLookups,omitempty" json:"recordLookups,omitempty"`

	RecordRollbacks []*FlowRecordRollback `xml:"recordRollbacks,omitempty" json:"recordRollbacks,omitempty"`

	RecordUpdates []*FlowRecordUpdate `xml:"recordUpdates,omitempty" json:"recordUpdates,omitempty"`

	RunInMode *FlowRunInMode `xml:"runInMode,omitempty" json:"runInMode,omitempty"`

	Screens []*FlowScreen `xml:"screens,omitempty" json:"screens,omitempty"`

	SourceTemplate string `xml:"sourceTemplate,omitempty" json:"sourceTemplate,omitempty"`

	Stages []*FlowStage `xml:"stages,omitempty" json:"stages,omitempty"`

	Start *FlowStart `xml:"start,omitempty" json:"start,omitempty"`

	StartElementReference string `xml:"startElementReference,omitempty" json:"startElementReference,omitempty"`

	Status *FlowVersionStatus `xml:"status,omitempty" json:"status,omitempty"`

	Steps []*FlowStep `xml:"steps,omitempty" json:"steps,omitempty"`

	Subflows []*FlowSubflow `xml:"subflows,omitempty" json:"subflows,omitempty"`

	TextTemplates []*FlowTextTemplate `xml:"textTemplates,omitempty" json:"textTemplates,omitempty"`

	TimeZoneSidKey string `xml:"timeZoneSidKey,omitempty" json:"timeZoneSidKey,omitempty"`

	Transforms []*FlowTransform `xml:"transforms,omitempty" json:"transforms,omitempty"`

	TriggerOrder *int32 `xml:"triggerOrder,omitempty" json:"triggerOrder,omitempty"`

	Variables []*FlowVariable `xml:"variables,omitempty" json:"variables,omitempty"`

	Waits []*FlowWait `xml:"waits,omitempty" json:"waits,omitempty"`
}

type FlowActionCall struct {
	*FlowNode

	ActionName string `xml:"actionName,omitempty" json:"actionName,omitempty"`

	ActionType *InvocableActionType `xml:"actionType,omitempty" json:"actionType,omitempty"`

	Connector *FlowConnector `xml:"connector,omitempty" json:"connector,omitempty"`

	DataTypeMappings []*FlowDataTypeMapping `xml:"dataTypeMappings,omitempty" json:"dataTypeMappings,omitempty"`

	FaultConnector *FlowConnector `xml:"faultConnector,omitempty" json:"faultConnector,omitempty"`

	FlowTransactionModel *FlowTransactionModel `xml:"flowTransactionModel,omitempty" json:"flowTransactionModel,omitempty"`

	InputParameters []*FlowActionCallInputParameter `xml:"inputParameters,omitempty" json:"inputParameters,omitempty"`

	NameSegment string `xml:"nameSegment,omitempty" json:"nameSegment,omitempty"`

	OutputParameters []*FlowActionCallOutputParameter `xml:"outputParameters,omitempty" json:"outputParameters,omitempty"`

	StoreOutputAutomatically bool `xml:"storeOutputAutomatically,omitempty" json:"storeOutputAutomatically,omitempty"`

	VersionSegment int32 `xml:"versionSegment,omitempty" json:"versionSegment,omitempty"`
}

type FlowNode struct {
	*FlowElement

	ElementSubtype *FlowElementSubtype `xml:"elementSubtype,omitempty" json:"elementSubtype,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	LocationX int32 `xml:"locationX,omitempty" json:"locationX,omitempty"`

	LocationY int32 `xml:"locationY,omitempty" json:"locationY,omitempty"`
}

type FlowElement struct {
	*FlowBaseElement

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type FlowBaseElement struct {
	ProcessMetadataValues []*FlowMetadataValue `xml:"processMetadataValues,omitempty" json:"processMetadataValues,omitempty"`
}

type FlowMetadataValue struct {
	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Value *FlowElementReferenceOrValue `xml:"value,omitempty" json:"value,omitempty"`
}

type FlowElementReferenceOrValue struct {
	ApexValue *string `xml:"apexValue,omitempty" json:"apexValue,omitempty"`

	BooleanValue *bool `xml:"booleanValue,omitempty" json:"booleanValue,omitempty"`

	DateTimeValue soap.XSDDateTime `xml:"dateTimeValue,omitempty" json:"dateTimeValue,omitempty"`

	DateValue soap.XSDDate `xml:"dateValue,omitempty" json:"dateValue,omitempty"`

	ElementReference string `xml:"elementReference,omitempty" json:"elementReference,omitempty"`

	FormulaDataType *FlowDataType `xml:"formulaDataType,omitempty" json:"formulaDataType,omitempty"`

	FormulaExpression *string `xml:"formulaExpression,omitempty" json:"formulaExpression,omitempty"`

	NumberValue *float64 `xml:"numberValue,omitempty" json:"numberValue,omitempty"`

	SetupReference *string `xml:"setupReference,omitempty" json:"setupReference,omitempty"`

	SetupReferenceType *string `xml:"setupReferenceType,omitempty" json:"setupReferenceType,omitempty"`

	SobjectValue *string `xml:"sobjectValue,omitempty" json:"sobjectValue,omitempty"`

	StringValue string `xml:"stringValue,omitempty" json:"stringValue,omitempty"`
}

type FlowActionCallInputParameter struct {
	*FlowBaseElement

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Value *FlowElementReferenceOrValue `xml:"value,omitempty" json:"value,omitempty"`
}

type FlowActionCallOutputParameter struct {
	*FlowBaseElement

	AssignToReference string `xml:"assignToReference,omitempty" json:"assignToReference,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type FlowApexPluginCallInputParameter struct {
	*FlowBaseElement

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Value *FlowElementReferenceOrValue `xml:"value,omitempty" json:"value,omitempty"`
}

type FlowApexPluginCallOutputParameter struct {
	*FlowBaseElement

	AssignToReference string `xml:"assignToReference,omitempty" json:"assignToReference,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type FlowAssignmentItem struct {
	*FlowBaseElement

	AssignToReference string `xml:"assignToReference,omitempty" json:"assignToReference,omitempty"`

	Operator *FlowAssignmentOperator `xml:"operator,omitempty" json:"operator,omitempty"`

	Value *FlowElementReferenceOrValue `xml:"value,omitempty" json:"value,omitempty"`
}

type FlowChoiceUserInput struct {
	*FlowBaseElement

	IsRequired bool `xml:"isRequired,omitempty" json:"isRequired,omitempty"`

	PromptText string `xml:"promptText,omitempty" json:"promptText,omitempty"`

	ValidationRule *FlowInputValidationRule `xml:"validationRule,omitempty" json:"validationRule,omitempty"`
}

type FlowInputValidationRule struct {
	ErrorMessage string `xml:"errorMessage,omitempty" json:"errorMessage,omitempty"`

	FormulaExpression string `xml:"formulaExpression,omitempty" json:"formulaExpression,omitempty"`
}

type FlowCollectionMapItem struct {
	*FlowBaseElement

	AssignToFieldReference string `xml:"assignToFieldReference,omitempty" json:"assignToFieldReference,omitempty"`

	Operator *FlowAssignmentOperator `xml:"operator,omitempty" json:"operator,omitempty"`

	Value *FlowElementReferenceOrValue `xml:"value,omitempty" json:"value,omitempty"`
}

type FlowCollectionSortOption struct {
	*FlowBaseElement

	DoesPutEmptyStringAndNullFirst bool `xml:"doesPutEmptyStringAndNullFirst,omitempty" json:"doesPutEmptyStringAndNullFirst,omitempty"`

	SortField string `xml:"sortField,omitempty" json:"sortField,omitempty"`

	SortOrder *SortOrder `xml:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

type FlowCondition struct {
	*FlowBaseElement

	ConditionType string `xml:"conditionType,omitempty" json:"conditionType,omitempty"`

	LeftValueReference string `xml:"leftValueReference,omitempty" json:"leftValueReference,omitempty"`

	Operator *FlowComparisonOperator `xml:"operator,omitempty" json:"operator,omitempty"`

	RightValue *FlowElementReferenceOrValue `xml:"rightValue,omitempty" json:"rightValue,omitempty"`
}

type FlowConnector struct {
	*FlowBaseElement

	IsGoTo bool `xml:"isGoTo,omitempty" json:"isGoTo,omitempty"`

	TargetReference string `xml:"targetReference,omitempty" json:"targetReference,omitempty"`
}

type FlowCustomErrorMessage struct {
	*FlowBaseElement

	ErrorMessage string `xml:"errorMessage,omitempty" json:"errorMessage,omitempty"`

	FieldSelection string `xml:"fieldSelection,omitempty" json:"fieldSelection,omitempty"`

	IsFieldError bool `xml:"isFieldError,omitempty" json:"isFieldError,omitempty"`
}

type FlowDataTypeMapping struct {
	*FlowBaseElement

	TypeName string `xml:"typeName,omitempty" json:"typeName,omitempty"`

	TypeValue string `xml:"typeValue,omitempty" json:"typeValue,omitempty"`
}

type FlowInputFieldAssignment struct {
	*FlowBaseElement

	Field string `xml:"field,omitempty" json:"field,omitempty"`

	Value *FlowElementReferenceOrValue `xml:"value,omitempty" json:"value,omitempty"`
}

type FlowOutputFieldAssignment struct {
	*FlowBaseElement

	AssignToReference string `xml:"assignToReference,omitempty" json:"assignToReference,omitempty"`

	Field string `xml:"field,omitempty" json:"field,omitempty"`
}

type FlowRecordFilter struct {
	*FlowBaseElement

	Field string `xml:"field,omitempty" json:"field,omitempty"`

	Operator *FlowRecordFilterOperator `xml:"operator,omitempty" json:"operator,omitempty"`

	Value *FlowElementReferenceOrValue `xml:"value,omitempty" json:"value,omitempty"`
}

type FlowScreenActionInputParameter struct {
	*FlowBaseElement

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Value *FlowElementReferenceOrValue `xml:"value,omitempty" json:"value,omitempty"`
}

type FlowScreenFieldInputParameter struct {
	*FlowBaseElement

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Value *FlowElementReferenceOrValue `xml:"value,omitempty" json:"value,omitempty"`
}

type FlowScreenFieldOutputParameter struct {
	*FlowBaseElement

	AssignToReference string `xml:"assignToReference,omitempty" json:"assignToReference,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type FlowScreenRule struct {
	*FlowBaseElement

	ConditionLogic string `xml:"conditionLogic,omitempty" json:"conditionLogic,omitempty"`

	Conditions []*FlowCondition `xml:"conditions,omitempty" json:"conditions,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	RuleActions []*FlowScreenRuleAction `xml:"ruleActions,omitempty" json:"ruleActions,omitempty"`
}

type FlowScreenRuleAction struct {
	*FlowBaseElement

	Attribute string `xml:"attribute,omitempty" json:"attribute,omitempty"`

	FieldReference string `xml:"fieldReference,omitempty" json:"fieldReference,omitempty"`

	Value *FlowElementReferenceOrValue `xml:"value,omitempty" json:"value,omitempty"`
}

type FlowScreenTrigger struct {
	*FlowBaseElement

	EventName string `xml:"eventName,omitempty" json:"eventName,omitempty"`

	EventSource string `xml:"eventSource,omitempty" json:"eventSource,omitempty"`

	Handlers []*FlowScreenTriggerHandler `xml:"handlers,omitempty" json:"handlers,omitempty"`
}

type FlowScreenTriggerHandler struct {
	*FlowBaseElement

	ScreenActionName string `xml:"screenActionName,omitempty" json:"screenActionName,omitempty"`
}

type FlowStageStepAssignee struct {
	*FlowBaseElement

	Assignee *FlowElementReferenceOrValue `xml:"assignee,omitempty" json:"assignee,omitempty"`

	AssigneeType *FlowStageStepAssigneeType `xml:"assigneeType,omitempty" json:"assigneeType,omitempty"`
}

type FlowStageStepEntryActionInputParameter struct {
	*FlowBaseElement

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Value *FlowElementReferenceOrValue `xml:"value,omitempty" json:"value,omitempty"`
}

type FlowStageStepEntryActionOutputParameter struct {
	*FlowBaseElement

	AssignToReference string `xml:"assignToReference,omitempty" json:"assignToReference,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type FlowStageStepExitActionInputParameter struct {
	*FlowBaseElement

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Value *FlowElementReferenceOrValue `xml:"value,omitempty" json:"value,omitempty"`
}

type FlowStageStepExitActionOutputParameter struct {
	*FlowBaseElement

	AssignToReference string `xml:"assignToReference,omitempty" json:"assignToReference,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type FlowStageStepInputParameter struct {
	*FlowBaseElement

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Value *FlowElementReferenceOrValue `xml:"value,omitempty" json:"value,omitempty"`
}

type FlowStageStepOutputParameter struct {
	*FlowBaseElement

	AssignToReference string `xml:"assignToReference,omitempty" json:"assignToReference,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type FlowSubflowInputAssignment struct {
	*FlowBaseElement

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Value *FlowElementReferenceOrValue `xml:"value,omitempty" json:"value,omitempty"`
}

type FlowSubflowOutputAssignment struct {
	*FlowBaseElement

	AssignToReference string `xml:"assignToReference,omitempty" json:"assignToReference,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type FlowTransformValue struct {
	*FlowBaseElement

	TransformValueActions []*FlowTransformValueAction `xml:"transformValueActions,omitempty" json:"transformValueActions,omitempty"`
}

type FlowTransformValueAction struct {
	*FlowBaseElement

	OutputFieldApiName string `xml:"outputFieldApiName,omitempty" json:"outputFieldApiName,omitempty"`

	TransformType *FlowTransformValueActionType `xml:"transformType,omitempty" json:"transformType,omitempty"`

	Value *FlowElementReferenceOrValue `xml:"value,omitempty" json:"value,omitempty"`
}

type FlowVisibilityRule struct {
	*FlowBaseElement

	ConditionLogic string `xml:"conditionLogic,omitempty" json:"conditionLogic,omitempty"`

	Conditions []*FlowCondition `xml:"conditions,omitempty" json:"conditions,omitempty"`
}

type FlowWaitEventInputParameter struct {
	*FlowBaseElement

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Value *FlowElementReferenceOrValue `xml:"value,omitempty" json:"value,omitempty"`
}

type FlowWaitEventOutputParameter struct {
	*FlowBaseElement

	AssignToReference string `xml:"assignToReference,omitempty" json:"assignToReference,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type FlowChoice struct {
	*FlowElement

	ChoiceText string `xml:"choiceText,omitempty" json:"choiceText,omitempty"`

	DataType *FlowDataType `xml:"dataType,omitempty" json:"dataType,omitempty"`

	UserInput *FlowChoiceUserInput `xml:"userInput,omitempty" json:"userInput,omitempty"`

	Value *FlowElementReferenceOrValue `xml:"value,omitempty" json:"value,omitempty"`
}

type FlowConstant struct {
	*FlowElement

	DataType *FlowDataType `xml:"dataType,omitempty" json:"dataType,omitempty"`

	Value *FlowElementReferenceOrValue `xml:"value,omitempty" json:"value,omitempty"`
}

type FlowDynamicChoiceSet struct {
	*FlowElement

	CollectionReference string `xml:"collectionReference,omitempty" json:"collectionReference,omitempty"`

	DataType *FlowDataType `xml:"dataType,omitempty" json:"dataType,omitempty"`

	DisplayField string `xml:"displayField,omitempty" json:"displayField,omitempty"`

	FilterLogic string `xml:"filterLogic,omitempty" json:"filterLogic,omitempty"`

	Filters []*FlowRecordFilter `xml:"filters,omitempty" json:"filters,omitempty"`

	Limit *int32 `xml:"limit,omitempty" json:"limit,omitempty"`

	Object string `xml:"object,omitempty" json:"object,omitempty"`

	OutputAssignments []*FlowOutputFieldAssignment `xml:"outputAssignments,omitempty" json:"outputAssignments,omitempty"`

	PicklistField string `xml:"picklistField,omitempty" json:"picklistField,omitempty"`

	PicklistObject string `xml:"picklistObject,omitempty" json:"picklistObject,omitempty"`

	SortField string `xml:"sortField,omitempty" json:"sortField,omitempty"`

	SortOrder *SortOrder `xml:"sortOrder,omitempty" json:"sortOrder,omitempty"`

	ValueField string `xml:"valueField,omitempty" json:"valueField,omitempty"`
}

type FlowFormula struct {
	*FlowElement

	DataType *FlowDataType `xml:"dataType,omitempty" json:"dataType,omitempty"`

	Expression string `xml:"expression,omitempty" json:"expression,omitempty"`

	Scale *int32 `xml:"scale,omitempty" json:"scale,omitempty"`
}

type FlowRule struct {
	*FlowElement

	ConditionLogic string `xml:"conditionLogic,omitempty" json:"conditionLogic,omitempty"`

	Conditions []*FlowCondition `xml:"conditions,omitempty" json:"conditions,omitempty"`

	Connector *FlowConnector `xml:"connector,omitempty" json:"connector,omitempty"`

	DoesRequireRecordChangedToMeetCriteria bool `xml:"doesRequireRecordChangedToMeetCriteria,omitempty" json:"doesRequireRecordChangedToMeetCriteria,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`
}

type FlowScheduledPath struct {
	*FlowElement

	Connector *FlowConnector `xml:"connector,omitempty" json:"connector,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	MaxBatchSize int32 `xml:"maxBatchSize,omitempty" json:"maxBatchSize,omitempty"`

	OffsetNumber int32 `xml:"offsetNumber,omitempty" json:"offsetNumber,omitempty"`

	OffsetUnit *FlowScheduledPathOffsetUnit `xml:"offsetUnit,omitempty" json:"offsetUnit,omitempty"`

	PathType *FlowScheduledPathType `xml:"pathType,omitempty" json:"pathType,omitempty"`

	RecordField string `xml:"recordField,omitempty" json:"recordField,omitempty"`

	TimeSource *FlowScheduledPathTimeSource `xml:"timeSource,omitempty" json:"timeSource,omitempty"`
}

type FlowScreenAction struct {
	*FlowElement

	ActionName string `xml:"actionName,omitempty" json:"actionName,omitempty"`

	ActionType *InvocableActionType `xml:"actionType,omitempty" json:"actionType,omitempty"`

	InputParameters []*FlowScreenActionInputParameter `xml:"inputParameters,omitempty" json:"inputParameters,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	NameSegment string `xml:"nameSegment,omitempty" json:"nameSegment,omitempty"`

	VersionSegment int32 `xml:"versionSegment,omitempty" json:"versionSegment,omitempty"`
}

type FlowScreenField struct {
	*FlowElement

	ChoiceReferences []string `xml:"choiceReferences,omitempty" json:"choiceReferences,omitempty"`

	DataType *FlowDataType `xml:"dataType,omitempty" json:"dataType,omitempty"`

	DataTypeMappings []*FlowDataTypeMapping `xml:"dataTypeMappings,omitempty" json:"dataTypeMappings,omitempty"`

	DefaultSelectedChoiceReference string `xml:"defaultSelectedChoiceReference,omitempty" json:"defaultSelectedChoiceReference,omitempty"`

	DefaultValue *FlowElementReferenceOrValue `xml:"defaultValue,omitempty" json:"defaultValue,omitempty"`

	ExtensionName string `xml:"extensionName,omitempty" json:"extensionName,omitempty"`

	FieldText string `xml:"fieldText,omitempty" json:"fieldText,omitempty"`

	FieldType *FlowScreenFieldType `xml:"fieldType,omitempty" json:"fieldType,omitempty"`

	Fields []*FlowScreenField `xml:"fields,omitempty" json:"fields,omitempty"`

	HelpText string `xml:"helpText,omitempty" json:"helpText,omitempty"`

	InputParameters []*FlowScreenFieldInputParameter `xml:"inputParameters,omitempty" json:"inputParameters,omitempty"`

	InputsOnNextNavToAssocScrn *FlowScreenFieldInputsRevisited `xml:"inputsOnNextNavToAssocScrn,omitempty" json:"inputsOnNextNavToAssocScrn,omitempty"`

	IsRequired bool `xml:"isRequired,omitempty" json:"isRequired,omitempty"`

	IsVisible *bool `xml:"isVisible,omitempty" json:"isVisible,omitempty"`

	ObjectFieldReference string `xml:"objectFieldReference,omitempty" json:"objectFieldReference,omitempty"`

	OutputParameters []*FlowScreenFieldOutputParameter `xml:"outputParameters,omitempty" json:"outputParameters,omitempty"`

	RegionContainerType *FlowRegionContainerType `xml:"regionContainerType,omitempty" json:"regionContainerType,omitempty"`

	Scale *int32 `xml:"scale,omitempty" json:"scale,omitempty"`

	StoreOutputAutomatically bool `xml:"storeOutputAutomatically,omitempty" json:"storeOutputAutomatically,omitempty"`

	ValidationRule *FlowInputValidationRule `xml:"validationRule,omitempty" json:"validationRule,omitempty"`

	VisibilityRule *FlowVisibilityRule `xml:"visibilityRule,omitempty" json:"visibilityRule,omitempty"`
}

type FlowStage struct {
	*FlowElement

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	StageOrder int32 `xml:"stageOrder,omitempty" json:"stageOrder,omitempty"`
}

type FlowStageStep struct {
	*FlowElement

	ActionName string `xml:"actionName,omitempty" json:"actionName,omitempty"`

	ActionType *InvocableActionType `xml:"actionType,omitempty" json:"actionType,omitempty"`

	Assignees []*FlowStageStepAssignee `xml:"assignees,omitempty" json:"assignees,omitempty"`

	EntryActionInputParameters []*FlowStageStepEntryActionInputParameter `xml:"entryActionInputParameters,omitempty" json:"entryActionInputParameters,omitempty"`

	EntryActionName string `xml:"entryActionName,omitempty" json:"entryActionName,omitempty"`

	EntryActionOutputParameters []*FlowStageStepEntryActionOutputParameter `xml:"entryActionOutputParameters,omitempty" json:"entryActionOutputParameters,omitempty"`

	EntryActionType *InvocableActionType `xml:"entryActionType,omitempty" json:"entryActionType,omitempty"`

	EntryConditionLogic string `xml:"entryConditionLogic,omitempty" json:"entryConditionLogic,omitempty"`

	EntryConditions []*FlowCondition `xml:"entryConditions,omitempty" json:"entryConditions,omitempty"`

	ExitActionInputParameters []*FlowStageStepExitActionInputParameter `xml:"exitActionInputParameters,omitempty" json:"exitActionInputParameters,omitempty"`

	ExitActionName string `xml:"exitActionName,omitempty" json:"exitActionName,omitempty"`

	ExitActionOutputParameters []*FlowStageStepExitActionOutputParameter `xml:"exitActionOutputParameters,omitempty" json:"exitActionOutputParameters,omitempty"`

	ExitActionType *InvocableActionType `xml:"exitActionType,omitempty" json:"exitActionType,omitempty"`

	ExitConditionLogic string `xml:"exitConditionLogic,omitempty" json:"exitConditionLogic,omitempty"`

	ExitConditions []*FlowCondition `xml:"exitConditions,omitempty" json:"exitConditions,omitempty"`

	InputParameters []*FlowStageStepInputParameter `xml:"inputParameters,omitempty" json:"inputParameters,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	OutputParameters []*FlowStageStepOutputParameter `xml:"outputParameters,omitempty" json:"outputParameters,omitempty"`

	RequiresAsyncProcessing bool `xml:"requiresAsyncProcessing,omitempty" json:"requiresAsyncProcessing,omitempty"`

	RunAsUser bool `xml:"runAsUser,omitempty" json:"runAsUser,omitempty"`

	StepSubtype *FlowElementSubtype `xml:"stepSubtype,omitempty" json:"stepSubtype,omitempty"`
}

type FlowTextTemplate struct {
	*FlowElement

	IsViewedAsPlainText bool `xml:"isViewedAsPlainText,omitempty" json:"isViewedAsPlainText,omitempty"`

	Text string `xml:"text,omitempty" json:"text,omitempty"`
}

type FlowVariable struct {
	*FlowElement

	ApexClass string `xml:"apexClass,omitempty" json:"apexClass,omitempty"`

	DataType *FlowDataType `xml:"dataType,omitempty" json:"dataType,omitempty"`

	IsCollection bool `xml:"isCollection,omitempty" json:"isCollection,omitempty"`

	IsInput bool `xml:"isInput,omitempty" json:"isInput,omitempty"`

	IsOutput bool `xml:"isOutput,omitempty" json:"isOutput,omitempty"`

	ObjectType string `xml:"objectType,omitempty" json:"objectType,omitempty"`

	Scale *int32 `xml:"scale,omitempty" json:"scale,omitempty"`

	Value *FlowElementReferenceOrValue `xml:"value,omitempty" json:"value,omitempty"`
}

type FlowWaitEvent struct {
	*FlowElement

	ConditionLogic string `xml:"conditionLogic,omitempty" json:"conditionLogic,omitempty"`

	Conditions []*FlowCondition `xml:"conditions,omitempty" json:"conditions,omitempty"`

	Connector *FlowConnector `xml:"connector,omitempty" json:"connector,omitempty"`

	EventType string `xml:"eventType,omitempty" json:"eventType,omitempty"`

	InputParameters []*FlowWaitEventInputParameter `xml:"inputParameters,omitempty" json:"inputParameters,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	MaxBatchSize int32 `xml:"maxBatchSize,omitempty" json:"maxBatchSize,omitempty"`

	Offset int32 `xml:"offset,omitempty" json:"offset,omitempty"`

	OffsetUnit *FlowScheduledPathOffsetUnit `xml:"offsetUnit,omitempty" json:"offsetUnit,omitempty"`

	OutputParameters []*FlowWaitEventOutputParameter `xml:"outputParameters,omitempty" json:"outputParameters,omitempty"`

	ResumeDate soap.XSDDate `xml:"resumeDate,omitempty" json:"resumeDate,omitempty"`

	ResumeDateReference string `xml:"resumeDateReference,omitempty" json:"resumeDateReference,omitempty"`

	ResumeTime soap.XSDTime `xml:"resumeTime,omitempty" json:"resumeTime,omitempty"`
}

type FlowApexPluginCall struct {
	*FlowNode

	ApexClass string `xml:"apexClass,omitempty" json:"apexClass,omitempty"`

	Connector *FlowConnector `xml:"connector,omitempty" json:"connector,omitempty"`

	FaultConnector *FlowConnector `xml:"faultConnector,omitempty" json:"faultConnector,omitempty"`

	InputParameters []*FlowApexPluginCallInputParameter `xml:"inputParameters,omitempty" json:"inputParameters,omitempty"`

	OutputParameters []*FlowApexPluginCallOutputParameter `xml:"outputParameters,omitempty" json:"outputParameters,omitempty"`
}

type FlowAssignment struct {
	*FlowNode

	AssignmentItems []*FlowAssignmentItem `xml:"assignmentItems,omitempty" json:"assignmentItems,omitempty"`

	Connector *FlowConnector `xml:"connector,omitempty" json:"connector,omitempty"`
}

type FlowCollectionProcessor struct {
	*FlowNode

	AssignNextValueToReference string `xml:"assignNextValueToReference,omitempty" json:"assignNextValueToReference,omitempty"`

	CollectionProcessorType *FlowCollectionProcessorType `xml:"collectionProcessorType,omitempty" json:"collectionProcessorType,omitempty"`

	CollectionReference string `xml:"collectionReference,omitempty" json:"collectionReference,omitempty"`

	ConditionLogic string `xml:"conditionLogic,omitempty" json:"conditionLogic,omitempty"`

	Conditions []*FlowCondition `xml:"conditions,omitempty" json:"conditions,omitempty"`

	Connector *FlowConnector `xml:"connector,omitempty" json:"connector,omitempty"`

	Formula string `xml:"formula,omitempty" json:"formula,omitempty"`

	Limit *int32 `xml:"limit,omitempty" json:"limit,omitempty"`

	MapItems []*FlowCollectionMapItem `xml:"mapItems,omitempty" json:"mapItems,omitempty"`

	OutputSObjectType string `xml:"outputSObjectType,omitempty" json:"outputSObjectType,omitempty"`

	SortOptions []*FlowCollectionSortOption `xml:"sortOptions,omitempty" json:"sortOptions,omitempty"`
}

type FlowCustomError struct {
	*FlowNode

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Connector *FlowConnector `xml:"connector,omitempty" json:"connector,omitempty"`

	CustomErrorMessages []*FlowCustomErrorMessage `xml:"customErrorMessages,omitempty" json:"customErrorMessages,omitempty"`
}

type FlowDecision struct {
	*FlowNode

	DefaultConnector *FlowConnector `xml:"defaultConnector,omitempty" json:"defaultConnector,omitempty"`

	DefaultConnectorLabel string `xml:"defaultConnectorLabel,omitempty" json:"defaultConnectorLabel,omitempty"`

	Rules []*FlowRule `xml:"rules,omitempty" json:"rules,omitempty"`
}

type FlowLoop struct {
	*FlowNode

	AssignNextValueToReference string `xml:"assignNextValueToReference,omitempty" json:"assignNextValueToReference,omitempty"`

	CollectionReference string `xml:"collectionReference,omitempty" json:"collectionReference,omitempty"`

	IterationOrder *IterationOrder `xml:"iterationOrder,omitempty" json:"iterationOrder,omitempty"`

	NextValueConnector *FlowConnector `xml:"nextValueConnector,omitempty" json:"nextValueConnector,omitempty"`

	NoMoreValuesConnector *FlowConnector `xml:"noMoreValuesConnector,omitempty" json:"noMoreValuesConnector,omitempty"`
}

type FlowOrchestratedStage struct {
	*FlowNode

	Connector *FlowConnector `xml:"connector,omitempty" json:"connector,omitempty"`

	ExitActionInputParameters []*FlowStageStepExitActionInputParameter `xml:"exitActionInputParameters,omitempty" json:"exitActionInputParameters,omitempty"`

	ExitActionName string `xml:"exitActionName,omitempty" json:"exitActionName,omitempty"`

	ExitActionOutputParameters []*FlowStageStepExitActionOutputParameter `xml:"exitActionOutputParameters,omitempty" json:"exitActionOutputParameters,omitempty"`

	ExitActionType *InvocableActionType `xml:"exitActionType,omitempty" json:"exitActionType,omitempty"`

	ExitConditionLogic string `xml:"exitConditionLogic,omitempty" json:"exitConditionLogic,omitempty"`

	ExitConditions []*FlowCondition `xml:"exitConditions,omitempty" json:"exitConditions,omitempty"`

	FaultConnector *FlowConnector `xml:"faultConnector,omitempty" json:"faultConnector,omitempty"`

	StageSteps []*FlowStageStep `xml:"stageSteps,omitempty" json:"stageSteps,omitempty"`
}

type FlowRecordCreate struct {
	*FlowNode

	AssignRecordIdToReference string `xml:"assignRecordIdToReference,omitempty" json:"assignRecordIdToReference,omitempty"`

	Connector *FlowConnector `xml:"connector,omitempty" json:"connector,omitempty"`

	FaultConnector *FlowConnector `xml:"faultConnector,omitempty" json:"faultConnector,omitempty"`

	InputAssignments []*FlowInputFieldAssignment `xml:"inputAssignments,omitempty" json:"inputAssignments,omitempty"`

	InputReference string `xml:"inputReference,omitempty" json:"inputReference,omitempty"`

	Object string `xml:"object,omitempty" json:"object,omitempty"`

	StoreOutputAutomatically bool `xml:"storeOutputAutomatically,omitempty" json:"storeOutputAutomatically,omitempty"`
}

type FlowRecordDelete struct {
	*FlowNode

	Connector *FlowConnector `xml:"connector,omitempty" json:"connector,omitempty"`

	FaultConnector *FlowConnector `xml:"faultConnector,omitempty" json:"faultConnector,omitempty"`

	FilterLogic string `xml:"filterLogic,omitempty" json:"filterLogic,omitempty"`

	Filters []*FlowRecordFilter `xml:"filters,omitempty" json:"filters,omitempty"`

	InputReference string `xml:"inputReference,omitempty" json:"inputReference,omitempty"`

	Object string `xml:"object,omitempty" json:"object,omitempty"`
}

type FlowRecordLookup struct {
	*FlowNode

	AssignNullValuesIfNoRecordsFound bool `xml:"assignNullValuesIfNoRecordsFound,omitempty" json:"assignNullValuesIfNoRecordsFound,omitempty"`

	Connector *FlowConnector `xml:"connector,omitempty" json:"connector,omitempty"`

	FaultConnector *FlowConnector `xml:"faultConnector,omitempty" json:"faultConnector,omitempty"`

	FilterLogic string `xml:"filterLogic,omitempty" json:"filterLogic,omitempty"`

	Filters []*FlowRecordFilter `xml:"filters,omitempty" json:"filters,omitempty"`

	GetFirstRecordOnly bool `xml:"getFirstRecordOnly,omitempty" json:"getFirstRecordOnly,omitempty"`

	Object string `xml:"object,omitempty" json:"object,omitempty"`

	OutputAssignments []*FlowOutputFieldAssignment `xml:"outputAssignments,omitempty" json:"outputAssignments,omitempty"`

	OutputReference string `xml:"outputReference,omitempty" json:"outputReference,omitempty"`

	QueriedFields []string `xml:"queriedFields,omitempty" json:"queriedFields,omitempty"`

	SortField string `xml:"sortField,omitempty" json:"sortField,omitempty"`

	SortOrder *SortOrder `xml:"sortOrder,omitempty" json:"sortOrder,omitempty"`

	StoreOutputAutomatically bool `xml:"storeOutputAutomatically,omitempty" json:"storeOutputAutomatically,omitempty"`
}

type FlowRecordRollback struct {
	*FlowNode

	Connector *FlowConnector `xml:"connector,omitempty" json:"connector,omitempty"`
}

type FlowRecordUpdate struct {
	*FlowNode

	Connector *FlowConnector `xml:"connector,omitempty" json:"connector,omitempty"`

	FaultConnector *FlowConnector `xml:"faultConnector,omitempty" json:"faultConnector,omitempty"`

	FilterLogic string `xml:"filterLogic,omitempty" json:"filterLogic,omitempty"`

	Filters []*FlowRecordFilter `xml:"filters,omitempty" json:"filters,omitempty"`

	InputAssignments []*FlowInputFieldAssignment `xml:"inputAssignments,omitempty" json:"inputAssignments,omitempty"`

	InputReference string `xml:"inputReference,omitempty" json:"inputReference,omitempty"`

	Object string `xml:"object,omitempty" json:"object,omitempty"`
}

type FlowScreen struct {
	*FlowNode

	Actions []*FlowScreenAction `xml:"actions,omitempty" json:"actions,omitempty"`

	AllowBack bool `xml:"allowBack,omitempty" json:"allowBack,omitempty"`

	AllowFinish bool `xml:"allowFinish,omitempty" json:"allowFinish,omitempty"`

	AllowPause bool `xml:"allowPause,omitempty" json:"allowPause,omitempty"`

	BackButtonLabel string `xml:"backButtonLabel,omitempty" json:"backButtonLabel,omitempty"`

	Connector *FlowConnector `xml:"connector,omitempty" json:"connector,omitempty"`

	Fields []*FlowScreenField `xml:"fields,omitempty" json:"fields,omitempty"`

	HelpText string `xml:"helpText,omitempty" json:"helpText,omitempty"`

	NextOrFinishButtonLabel string `xml:"nextOrFinishButtonLabel,omitempty" json:"nextOrFinishButtonLabel,omitempty"`

	PauseButtonLabel string `xml:"pauseButtonLabel,omitempty" json:"pauseButtonLabel,omitempty"`

	PausedText string `xml:"pausedText,omitempty" json:"pausedText,omitempty"`

	Rules []*FlowScreenRule `xml:"rules,omitempty" json:"rules,omitempty"`

	ShowFooter bool `xml:"showFooter,omitempty" json:"showFooter,omitempty"`

	ShowHeader bool `xml:"showHeader,omitempty" json:"showHeader,omitempty"`

	Triggers []*FlowScreenTrigger `xml:"triggers,omitempty" json:"triggers,omitempty"`
}

type FlowStart struct {
	*FlowNode

	Connector *FlowConnector `xml:"connector,omitempty" json:"connector,omitempty"`

	DoesRequireRecordChangedToMeetCriteria bool `xml:"doesRequireRecordChangedToMeetCriteria,omitempty" json:"doesRequireRecordChangedToMeetCriteria,omitempty"`

	EntryType *FlowEntryType `xml:"entryType,omitempty" json:"entryType,omitempty"`

	FilterFormula string `xml:"filterFormula,omitempty" json:"filterFormula,omitempty"`

	FilterLogic string `xml:"filterLogic,omitempty" json:"filterLogic,omitempty"`

	Filters []*FlowRecordFilter `xml:"filters,omitempty" json:"filters,omitempty"`

	Form string `xml:"form,omitempty" json:"form,omitempty"`

	LandingPage string `xml:"landingPage,omitempty" json:"landingPage,omitempty"`

	Object string `xml:"object,omitempty" json:"object,omitempty"`

	ObjectContainer string `xml:"objectContainer,omitempty" json:"objectContainer,omitempty"`

	RecordTriggerType *RecordTriggerType `xml:"recordTriggerType,omitempty" json:"recordTriggerType,omitempty"`

	Schedule *FlowSchedule `xml:"schedule,omitempty" json:"schedule,omitempty"`

	ScheduledPaths []*FlowScheduledPath `xml:"scheduledPaths,omitempty" json:"scheduledPaths,omitempty"`

	Segment string `xml:"segment,omitempty" json:"segment,omitempty"`

	TriggerType *FlowTriggerType `xml:"triggerType,omitempty" json:"triggerType,omitempty"`
}

type FlowSchedule struct {
	Frequency *FlowStartFrequency `xml:"frequency,omitempty" json:"frequency,omitempty"`

	StartDate soap.XSDDate `xml:"startDate,omitempty" json:"startDate,omitempty"`

	StartTime soap.XSDTime `xml:"startTime,omitempty" json:"startTime,omitempty"`
}

type FlowStep struct {
	*FlowNode

	Connectors []*FlowConnector `xml:"connectors,omitempty" json:"connectors,omitempty"`
}

type FlowSubflow struct {
	*FlowNode

	Connector *FlowConnector `xml:"connector,omitempty" json:"connector,omitempty"`

	FlowName string `xml:"flowName,omitempty" json:"flowName,omitempty"`

	InputAssignments []*FlowSubflowInputAssignment `xml:"inputAssignments,omitempty" json:"inputAssignments,omitempty"`

	OutputAssignments []*FlowSubflowOutputAssignment `xml:"outputAssignments,omitempty" json:"outputAssignments,omitempty"`

	StoreOutputAutomatically bool `xml:"storeOutputAutomatically,omitempty" json:"storeOutputAutomatically,omitempty"`
}

type FlowTransform struct {
	*FlowNode

	ApexClass string `xml:"apexClass,omitempty" json:"apexClass,omitempty"`

	Connector *FlowConnector `xml:"connector,omitempty" json:"connector,omitempty"`

	DataType *FlowDataType `xml:"dataType,omitempty" json:"dataType,omitempty"`

	IsCollection bool `xml:"isCollection,omitempty" json:"isCollection,omitempty"`

	ObjectType string `xml:"objectType,omitempty" json:"objectType,omitempty"`

	Scale *int32 `xml:"scale,omitempty" json:"scale,omitempty"`

	TransformValues []*FlowTransformValue `xml:"transformValues,omitempty" json:"transformValues,omitempty"`
}

type FlowWait struct {
	*FlowNode

	DefaultConnector *FlowConnector `xml:"defaultConnector,omitempty" json:"defaultConnector,omitempty"`

	DefaultConnectorLabel string `xml:"defaultConnectorLabel,omitempty" json:"defaultConnectorLabel,omitempty"`

	FaultConnector *FlowConnector `xml:"faultConnector,omitempty" json:"faultConnector,omitempty"`

	TimeZoneId string `xml:"timeZoneId,omitempty" json:"timeZoneId,omitempty"`

	WaitEvents []*FlowWaitEvent `xml:"waitEvents,omitempty" json:"waitEvents,omitempty"`
}

type FlowCategory struct {
	*Metadata

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	FlowCategoryItems []*FlowCategoryItems `xml:"flowCategoryItems,omitempty" json:"flowCategoryItems,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type FlowCategoryItems struct {
	Flow string `xml:"flow,omitempty" json:"flow,omitempty"`
}

type FlowDefinition struct {
	*Metadata

	ActiveVersionNumber int32 `xml:"activeVersionNumber,omitempty" json:"activeVersionNumber,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type FlowSettings struct {
	*Metadata

	CanDebugFlowAsAnotherUser bool `xml:"canDebugFlowAsAnotherUser,omitempty" json:"canDebugFlowAsAnotherUser,omitempty"`

	DoesEnforceApexCpuTimeLimit bool `xml:"doesEnforceApexCpuTimeLimit,omitempty" json:"doesEnforceApexCpuTimeLimit,omitempty"`

	DoesFormulaEnforceDataAccess bool `xml:"doesFormulaEnforceDataAccess,omitempty" json:"doesFormulaEnforceDataAccess,omitempty"`

	DoesFormulaGenerateHtmlOutput bool `xml:"doesFormulaGenerateHtmlOutput,omitempty" json:"doesFormulaGenerateHtmlOutput,omitempty"`

	EnableEmailSimpleRespectProfiles bool `xml:"enableEmailSimpleRespectProfiles,omitempty" json:"enableEmailSimpleRespectProfiles,omitempty"`

	EnableFlowBREncodedFixEnabled bool `xml:"enableFlowBREncodedFixEnabled,omitempty" json:"enableFlowBREncodedFixEnabled,omitempty"`

	EnableFlowCustomPropertyEditor bool `xml:"enableFlowCustomPropertyEditor,omitempty" json:"enableFlowCustomPropertyEditor,omitempty"`

	EnableFlowDeployAsActiveEnabled bool `xml:"enableFlowDeployAsActiveEnabled,omitempty" json:"enableFlowDeployAsActiveEnabled,omitempty"`

	EnableFlowFieldFilterEnabled bool `xml:"enableFlowFieldFilterEnabled,omitempty" json:"enableFlowFieldFilterEnabled,omitempty"`

	EnableFlowFormulasFixEnabled bool `xml:"enableFlowFormulasFixEnabled,omitempty" json:"enableFlowFormulasFixEnabled,omitempty"`

	EnableFlowInterviewSharingEnabled bool `xml:"enableFlowInterviewSharingEnabled,omitempty" json:"enableFlowInterviewSharingEnabled,omitempty"`

	EnableFlowNullPreviousValueFix bool `xml:"enableFlowNullPreviousValueFix,omitempty" json:"enableFlowNullPreviousValueFix,omitempty"`

	EnableFlowPauseEnabled bool `xml:"enableFlowPauseEnabled,omitempty" json:"enableFlowPauseEnabled,omitempty"`

	EnableFlowReactiveDisplayText bool `xml:"enableFlowReactiveDisplayText,omitempty" json:"enableFlowReactiveDisplayText,omitempty"`

	EnableFlowReactiveScreens bool `xml:"enableFlowReactiveScreens,omitempty" json:"enableFlowReactiveScreens,omitempty"`

	EnableFlowUseApexExceptionEmail bool `xml:"enableFlowUseApexExceptionEmail,omitempty" json:"enableFlowUseApexExceptionEmail,omitempty"`

	EnableFlowViaRestUsesUserCtxt bool `xml:"enableFlowViaRestUsesUserCtxt,omitempty" json:"enableFlowViaRestUsesUserCtxt,omitempty"`

	EnableLightningRuntimeEnabled bool `xml:"enableLightningRuntimeEnabled,omitempty" json:"enableLightningRuntimeEnabled,omitempty"`

	IsApexPluginAccessModifierRespected bool `xml:"isApexPluginAccessModifierRespected,omitempty" json:"isApexPluginAccessModifierRespected,omitempty"`

	IsEnhancedFlowListViewVisible bool `xml:"isEnhancedFlowListViewVisible,omitempty" json:"isEnhancedFlowListViewVisible,omitempty"`

	IsFlowBlockAccessToSessionIDEnabled bool `xml:"isFlowBlockAccessToSessionIDEnabled,omitempty" json:"isFlowBlockAccessToSessionIDEnabled,omitempty"`

	IsManageFlowRequiredForAutomationCharts bool `xml:"isManageFlowRequiredForAutomationCharts,omitempty" json:"isManageFlowRequiredForAutomationCharts,omitempty"`

	IsSupportRollbackOnErrorForApexInvocableActionsEnabled bool `xml:"isSupportRollbackOnErrorForApexInvocableActionsEnabled,omitempty" json:"isSupportRollbackOnErrorForApexInvocableActionsEnabled,omitempty"`
}

type FlowTest struct {
	*Metadata

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	FlowApiName string `xml:"flowApiName,omitempty" json:"flowApiName,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	TestPoints []*FlowTestPoint `xml:"testPoints,omitempty" json:"testPoints,omitempty"`
}

type FlowTestPoint struct {
	Assertions []*FlowTestAssertion `xml:"assertions,omitempty" json:"assertions,omitempty"`

	ElementApiName string `xml:"elementApiName,omitempty" json:"elementApiName,omitempty"`

	Parameters []*FlowTestParameter `xml:"parameters,omitempty" json:"parameters,omitempty"`
}

type FlowTestAssertion struct {
	Conditions []*FlowTestCondition `xml:"conditions,omitempty" json:"conditions,omitempty"`

	ErrorMessage string `xml:"errorMessage,omitempty" json:"errorMessage,omitempty"`
}

type FlowTestCondition struct {
	LeftValueReference string `xml:"leftValueReference,omitempty" json:"leftValueReference,omitempty"`

	Operator *FlowComparisonOperator `xml:"operator,omitempty" json:"operator,omitempty"`

	RightValue *FlowTestReferenceOrValue `xml:"rightValue,omitempty" json:"rightValue,omitempty"`
}

type FlowTestReferenceOrValue struct {
	BooleanValue *bool `xml:"booleanValue,omitempty" json:"booleanValue,omitempty"`

	DateTimeValue soap.XSDDateTime `xml:"dateTimeValue,omitempty" json:"dateTimeValue,omitempty"`

	DateValue soap.XSDDate `xml:"dateValue,omitempty" json:"dateValue,omitempty"`

	NumberValue *float64 `xml:"numberValue,omitempty" json:"numberValue,omitempty"`

	SobjectValue *string `xml:"sobjectValue,omitempty" json:"sobjectValue,omitempty"`

	StringValue string `xml:"stringValue,omitempty" json:"stringValue,omitempty"`
}

type FlowTestParameter struct {
	LeftValueReference string `xml:"leftValueReference,omitempty" json:"leftValueReference,omitempty"`

	Type_ *FlowTestParameterType `xml:"type,omitempty" json:"type,omitempty"`

	Value *FlowTestReferenceOrValue `xml:"value,omitempty" json:"value,omitempty"`
}

type Folder struct {
	*Metadata

	AccessType *FolderAccessTypes `xml:"accessType,omitempty" json:"accessType,omitempty"`

	FolderShares []*FolderShare `xml:"folderShares,omitempty" json:"folderShares,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	PublicFolderAccess *PublicFolderAccess `xml:"publicFolderAccess,omitempty" json:"publicFolderAccess,omitempty"`

	SharedTo *SharedTo `xml:"sharedTo,omitempty" json:"sharedTo,omitempty"`
}

type FolderShare struct {
	AccessLevel *FolderShareAccessLevel `xml:"accessLevel,omitempty" json:"accessLevel,omitempty"`

	SharedTo string `xml:"sharedTo,omitempty" json:"sharedTo,omitempty"`

	SharedToType *FolderSharedToType `xml:"sharedToType,omitempty" json:"sharedToType,omitempty"`
}

type DashboardFolder struct {
	*Folder
}

type DocumentFolder struct {
	*Folder
}

type EmailFolder struct {
	*Folder
}

type EmailTemplateFolder struct {
	*Folder
}

type ReportFolder struct {
	*Folder
}

type ForecastingFilter struct {
	*Metadata

	FilterLogic string `xml:"filterLogic,omitempty" json:"filterLogic,omitempty"`

	ForecastingType string `xml:"forecastingType,omitempty" json:"forecastingType,omitempty"`

	ForecastingTypeSource string `xml:"forecastingTypeSource,omitempty" json:"forecastingTypeSource,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type ForecastingFilterCondition struct {
	*Metadata

	ColName string `xml:"colName,omitempty" json:"colName,omitempty"`

	FieldName string `xml:"fieldName,omitempty" json:"fieldName,omitempty"`

	ForecastingFilter string `xml:"forecastingFilter,omitempty" json:"forecastingFilter,omitempty"`

	ForecastingSourceDefinition string `xml:"forecastingSourceDefinition,omitempty" json:"forecastingSourceDefinition,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	Operation *FilterOperation `xml:"operation,omitempty" json:"operation,omitempty"`

	SortOrder int32 `xml:"sortOrder,omitempty" json:"sortOrder,omitempty"`

	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type ForecastingObjectListSettings struct {
	*Metadata

	ForecastingTypeObjectListSettings []*ForecastingTypeObjectListSettings `xml:"forecastingTypeObjectListSettings,omitempty" json:"forecastingTypeObjectListSettings,omitempty"`
}

type ForecastingTypeObjectListSettings struct {
	ForecastingObjectListLabelMappings []*ForecastingObjectListLabelMapping `xml:"forecastingObjectListLabelMappings,omitempty" json:"forecastingObjectListLabelMappings,omitempty"`

	ForecastingObjectListSelectedSettings *ForecastingObjectListSelectedSettings `xml:"forecastingObjectListSelectedSettings,omitempty" json:"forecastingObjectListSelectedSettings,omitempty"`

	ForecastingObjectListUnselectedSettings *ForecastingObjectListUnselectedSettings `xml:"forecastingObjectListUnselectedSettings,omitempty" json:"forecastingObjectListUnselectedSettings,omitempty"`

	ForecastingTypeDeveloperName string `xml:"forecastingTypeDeveloperName,omitempty" json:"forecastingTypeDeveloperName,omitempty"`
}

type ForecastingObjectListLabelMapping struct {
	Field string `xml:"field,omitempty" json:"field,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`
}

type ForecastingObjectListSelectedSettings struct {
	Field []string `xml:"field,omitempty" json:"field,omitempty"`
}

type ForecastingObjectListUnselectedSettings struct {
	Field []string `xml:"field,omitempty" json:"field,omitempty"`
}

type ForecastingSettings struct {
	*Metadata

	DefaultToPersonalCurrency bool `xml:"defaultToPersonalCurrency,omitempty" json:"defaultToPersonalCurrency,omitempty"`

	EnableForecasts bool `xml:"enableForecasts,omitempty" json:"enableForecasts,omitempty"`

	ForecastingCategoryMappings []*ForecastingCategoryMapping `xml:"forecastingCategoryMappings,omitempty" json:"forecastingCategoryMappings,omitempty"`

	ForecastingDisplayedFamilySettings []*ForecastingDisplayedFamilySettings `xml:"forecastingDisplayedFamilySettings,omitempty" json:"forecastingDisplayedFamilySettings,omitempty"`

	ForecastingTypeSettings []*ForecastingTypeSettings `xml:"forecastingTypeSettings,omitempty" json:"forecastingTypeSettings,omitempty"`

	GlobalAdjustmentsSettings *AdjustmentsSettings `xml:"globalAdjustmentsSettings,omitempty" json:"globalAdjustmentsSettings,omitempty"`

	GlobalForecastRangeSettings *ForecastRangeSettings `xml:"globalForecastRangeSettings,omitempty" json:"globalForecastRangeSettings,omitempty"`

	GlobalQuotasSettings *QuotasSettings `xml:"globalQuotasSettings,omitempty" json:"globalQuotasSettings,omitempty"`
}

type ForecastingCategoryMapping struct {
	ForecastingItemCategoryApiName string `xml:"forecastingItemCategoryApiName,omitempty" json:"forecastingItemCategoryApiName,omitempty"`

	WeightedSourceCategories []*WeightedSourceCategory `xml:"weightedSourceCategories,omitempty" json:"weightedSourceCategories,omitempty"`
}

type WeightedSourceCategory struct {
	SourceCategoryApiName string `xml:"sourceCategoryApiName,omitempty" json:"sourceCategoryApiName,omitempty"`

	Weight float64 `xml:"weight,omitempty" json:"weight,omitempty"`
}

type ForecastingDisplayedFamilySettings struct {
	ProductFamily string `xml:"productFamily,omitempty" json:"productFamily,omitempty"`
}

type ForecastingTypeSettings struct {
	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	DisplayedCategoryApiNames []string `xml:"displayedCategoryApiNames,omitempty" json:"displayedCategoryApiNames,omitempty"`

	ForecastedCategoryApiNames []string `xml:"forecastedCategoryApiNames,omitempty" json:"forecastedCategoryApiNames,omitempty"`

	ForecastingDateType *ForecastingDateType `xml:"forecastingDateType,omitempty" json:"forecastingDateType,omitempty"`

	HasProductFamily bool `xml:"hasProductFamily,omitempty" json:"hasProductFamily,omitempty"`

	IsAmount bool `xml:"isAmount,omitempty" json:"isAmount,omitempty"`

	IsAvailable bool `xml:"isAvailable,omitempty" json:"isAvailable,omitempty"`

	IsQuantity bool `xml:"isQuantity,omitempty" json:"isQuantity,omitempty"`

	ManagerAdjustableCategoryApiNames []string `xml:"managerAdjustableCategoryApiNames,omitempty" json:"managerAdjustableCategoryApiNames,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	OpportunityListFieldsLabelMappings []*OpportunityListFieldsLabelMapping `xml:"opportunityListFieldsLabelMappings,omitempty" json:"opportunityListFieldsLabelMappings,omitempty"`

	OpportunityListFieldsSelectedSettings *OpportunityListFieldsSelectedSettings `xml:"opportunityListFieldsSelectedSettings,omitempty" json:"opportunityListFieldsSelectedSettings,omitempty"`

	OpportunityListFieldsUnselectedSettings *OpportunityListFieldsUnselectedSettings `xml:"opportunityListFieldsUnselectedSettings,omitempty" json:"opportunityListFieldsUnselectedSettings,omitempty"`

	OpportunitySplitName string `xml:"opportunitySplitName,omitempty" json:"opportunitySplitName,omitempty"`

	OwnerAdjustableCategoryApiNames []string `xml:"ownerAdjustableCategoryApiNames,omitempty" json:"ownerAdjustableCategoryApiNames,omitempty"`

	Territory2ModelName string `xml:"territory2ModelName,omitempty" json:"territory2ModelName,omitempty"`
}

type OpportunityListFieldsLabelMapping struct {
	Field string `xml:"field,omitempty" json:"field,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`
}

type OpportunityListFieldsSelectedSettings struct {
	Field []string `xml:"field,omitempty" json:"field,omitempty"`
}

type OpportunityListFieldsUnselectedSettings struct {
	Field []string `xml:"field,omitempty" json:"field,omitempty"`
}

type AdjustmentsSettings struct {
	EnableAdjustments bool `xml:"enableAdjustments,omitempty" json:"enableAdjustments,omitempty"`

	EnableOwnerAdjustments bool `xml:"enableOwnerAdjustments,omitempty" json:"enableOwnerAdjustments,omitempty"`
}

type ForecastRangeSettings struct {
	Beginning int32 `xml:"beginning,omitempty" json:"beginning,omitempty"`

	Displaying int32 `xml:"displaying,omitempty" json:"displaying,omitempty"`

	PeriodType *PeriodTypes `xml:"periodType,omitempty" json:"periodType,omitempty"`
}

type QuotasSettings struct {
	ShowQuotas bool `xml:"showQuotas,omitempty" json:"showQuotas,omitempty"`
}

type ForecastingSourceDefinition struct {
	*Metadata

	CategoryField string `xml:"categoryField,omitempty" json:"categoryField,omitempty"`

	DateField string `xml:"dateField,omitempty" json:"dateField,omitempty"`

	FamilyField string `xml:"familyField,omitempty" json:"familyField,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	MeasureField string `xml:"measureField,omitempty" json:"measureField,omitempty"`

	SourceObject string `xml:"sourceObject,omitempty" json:"sourceObject,omitempty"`

	Territory2Field string `xml:"territory2Field,omitempty" json:"territory2Field,omitempty"`

	UserField string `xml:"userField,omitempty" json:"userField,omitempty"`
}

type ForecastingType struct {
	*Metadata

	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	Amount bool `xml:"amount,omitempty" json:"amount,omitempty"`

	DateType string `xml:"dateType,omitempty" json:"dateType,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	HasProductFamily bool `xml:"hasProductFamily,omitempty" json:"hasProductFamily,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	OpportunitySplitType string `xml:"opportunitySplitType,omitempty" json:"opportunitySplitType,omitempty"`

	OpptyLineItemSplitType string `xml:"opptyLineItemSplitType,omitempty" json:"opptyLineItemSplitType,omitempty"`

	Quantity bool `xml:"quantity,omitempty" json:"quantity,omitempty"`

	RoleType string `xml:"roleType,omitempty" json:"roleType,omitempty"`

	Territory2Model string `xml:"territory2Model,omitempty" json:"territory2Model,omitempty"`
}

type ForecastingTypeSource struct {
	*Metadata

	ForecastingSourceDefinition string `xml:"forecastingSourceDefinition,omitempty" json:"forecastingSourceDefinition,omitempty"`

	ForecastingType string `xml:"forecastingType,omitempty" json:"forecastingType,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	ParentSourceDefinition string `xml:"parentSourceDefinition,omitempty" json:"parentSourceDefinition,omitempty"`

	RelationField string `xml:"relationField,omitempty" json:"relationField,omitempty"`

	SourceGroup int32 `xml:"sourceGroup,omitempty" json:"sourceGroup,omitempty"`
}

type FormulaSettings struct {
	*Metadata

	EnableDSTAwareDatevalue bool `xml:"enableDSTAwareDatevalue,omitempty" json:"enableDSTAwareDatevalue,omitempty"`
}

type FulfillmentStepType struct {
	*Metadata

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	Handler string `xml:"handler,omitempty" json:"handler,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type GatewayProviderPaymentMethodType struct {
	*Metadata

	Comments string `xml:"comments,omitempty" json:"comments,omitempty"`

	GtwyProviderPaymentMethodType string `xml:"gtwyProviderPaymentMethodType,omitempty" json:"gtwyProviderPaymentMethodType,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	PaymentGatewayProvider string `xml:"paymentGatewayProvider,omitempty" json:"paymentGatewayProvider,omitempty"`

	PaymentMethodType string `xml:"paymentMethodType,omitempty" json:"paymentMethodType,omitempty"`

	RecordType string `xml:"recordType,omitempty" json:"recordType,omitempty"`
}

type GenAiFunction struct {
	*Metadata

	Attributes []*GenAiPlannerAttr `xml:"attributes,omitempty" json:"attributes,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	InvocationTarget string `xml:"invocationTarget,omitempty" json:"invocationTarget,omitempty"`

	InvocationTargetType *PlannerFunctionInvocableTargetType `xml:"invocationTargetType,omitempty" json:"invocationTargetType,omitempty"`

	IsConfirmationRequired bool `xml:"isConfirmationRequired,omitempty" json:"isConfirmationRequired,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type GenAiPlannerAttr struct {
	AllowedValues string `xml:"allowedValues,omitempty" json:"allowedValues,omitempty"`

	DataType *PlannerAttrDataType `xml:"dataType,omitempty" json:"dataType,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	IsDisplayable bool `xml:"isDisplayable,omitempty" json:"isDisplayable,omitempty"`

	IsPersIdentInfo bool `xml:"isPersIdentInfo,omitempty" json:"isPersIdentInfo,omitempty"`

	IsRequired bool `xml:"isRequired,omitempty" json:"isRequired,omitempty"`

	IsUserInput bool `xml:"isUserInput,omitempty" json:"isUserInput,omitempty"`

	MappingType *PlannerAttrMappingType `xml:"mappingType,omitempty" json:"mappingType,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	Pattern string `xml:"pattern,omitempty" json:"pattern,omitempty"`

	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type GenAiPlugin struct {
	*Metadata

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	GenAiFunctions []*GenAiPluginFunctionDef `xml:"genAiFunctions,omitempty" json:"genAiFunctions,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type GenAiPluginFunctionDef struct {
	FunctionName string `xml:"functionName,omitempty" json:"functionName,omitempty"`
}

type GlobalValueSet struct {
	*Metadata

	CustomValue []*CustomValue `xml:"customValue,omitempty" json:"customValue,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	Sorted bool `xml:"sorted,omitempty" json:"sorted,omitempty"`
}

type GlobalValueSetTranslation struct {
	*Metadata

	ValueTranslation []*ValueTranslation `xml:"valueTranslation,omitempty" json:"valueTranslation,omitempty"`
}

type ValueTranslation struct {
	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	Translation string `xml:"translation,omitempty" json:"translation,omitempty"`
}

type GoogleAppsSettings struct {
	*Metadata

	EnableGmailButtons bool `xml:"enableGmailButtons,omitempty" json:"enableGmailButtons,omitempty"`

	EnableGmailButtonsAndLinks bool `xml:"enableGmailButtonsAndLinks,omitempty" json:"enableGmailButtonsAndLinks,omitempty"`

	EnableGmailLinks bool `xml:"enableGmailLinks,omitempty" json:"enableGmailLinks,omitempty"`

	EnableGoogleDocs bool `xml:"enableGoogleDocs,omitempty" json:"enableGoogleDocs,omitempty"`

	EnableGoogleDocsTab bool `xml:"enableGoogleDocsTab,omitempty" json:"enableGoogleDocsTab,omitempty"`

	EnableGoogleTalk bool `xml:"enableGoogleTalk,omitempty" json:"enableGoogleTalk,omitempty"`

	GoogleAppsDomain string `xml:"googleAppsDomain,omitempty" json:"googleAppsDomain,omitempty"`

	GoogleAppsDomainLinked bool `xml:"googleAppsDomainLinked,omitempty" json:"googleAppsDomainLinked,omitempty"`

	GoogleAppsDomainValidated bool `xml:"googleAppsDomainValidated,omitempty" json:"googleAppsDomainValidated,omitempty"`
}

type Group struct {
	*Metadata

	DoesIncludeBosses bool `xml:"doesIncludeBosses,omitempty" json:"doesIncludeBosses,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type HighVelocitySalesSettings struct {
	*Metadata

	EnableACAutoSendEmail bool `xml:"enableACAutoSendEmail,omitempty" json:"enableACAutoSendEmail,omitempty"`

	EnableACChangeTargetAssignee bool `xml:"enableACChangeTargetAssignee,omitempty" json:"enableACChangeTargetAssignee,omitempty"`

	EnableACSkipWeekends bool `xml:"enableACSkipWeekends,omitempty" json:"enableACSkipWeekends,omitempty"`

	EnableBusinessHours bool `xml:"enableBusinessHours,omitempty" json:"enableBusinessHours,omitempty"`

	EnableCadenceVariantTestingPref bool `xml:"enableCadenceVariantTestingPref,omitempty" json:"enableCadenceVariantTestingPref,omitempty"`

	EnableChgTgtAssigneeUsrPermPref bool `xml:"enableChgTgtAssigneeUsrPermPref,omitempty" json:"enableChgTgtAssigneeUsrPermPref,omitempty"`

	EnableDispositionCategory bool `xml:"enableDispositionCategory,omitempty" json:"enableDispositionCategory,omitempty"`

	EnableEngagementWaveAnalyticsPref bool `xml:"enableEngagementWaveAnalyticsPref,omitempty" json:"enableEngagementWaveAnalyticsPref,omitempty"`

	EnableHighVelocitySales bool `xml:"enableHighVelocitySales,omitempty" json:"enableHighVelocitySales,omitempty"`

	EnableHighVelocitySalesSetup bool `xml:"enableHighVelocitySalesSetup,omitempty" json:"enableHighVelocitySalesSetup,omitempty"`

	EnableInvoiceAttributionPref bool `xml:"enableInvoiceAttributionPref,omitempty" json:"enableInvoiceAttributionPref,omitempty"`

	EnableLogACallForCTIPref bool `xml:"enableLogACallForCTIPref,omitempty" json:"enableLogACallForCTIPref,omitempty"`

	EnableLogTasksForLinkedInPref bool `xml:"enableLogTasksForLinkedInPref,omitempty" json:"enableLogTasksForLinkedInPref,omitempty"`

	EnableMultipleCadencesPref bool `xml:"enableMultipleCadencesPref,omitempty" json:"enableMultipleCadencesPref,omitempty"`

	EnableOpportunityAttributionPermPref bool `xml:"enableOpportunityAttributionPermPref,omitempty" json:"enableOpportunityAttributionPermPref,omitempty"`

	EnableQuickCadenceAutoSendEmail bool `xml:"enableQuickCadenceAutoSendEmail,omitempty" json:"enableQuickCadenceAutoSendEmail,omitempty"`

	EnableTaskLoggingPref bool `xml:"enableTaskLoggingPref,omitempty" json:"enableTaskLoggingPref,omitempty"`
}

type HomePageComponent struct {
	*Metadata

	Body string `xml:"body,omitempty" json:"body,omitempty"`

	Height int32 `xml:"height,omitempty" json:"height,omitempty"`

	Links []string `xml:"links,omitempty" json:"links,omitempty"`

	Page string `xml:"page,omitempty" json:"page,omitempty"`

	PageComponentType *PageComponentType `xml:"pageComponentType,omitempty" json:"pageComponentType,omitempty"`

	ShowLabel bool `xml:"showLabel,omitempty" json:"showLabel,omitempty"`

	ShowScrollbars bool `xml:"showScrollbars,omitempty" json:"showScrollbars,omitempty"`

	Width *PageComponentWidth `xml:"width,omitempty" json:"width,omitempty"`
}

type HomePageLayout struct {
	*Metadata

	NarrowComponents []string `xml:"narrowComponents,omitempty" json:"narrowComponents,omitempty"`

	WideComponents []string `xml:"wideComponents,omitempty" json:"wideComponents,omitempty"`
}

type IPAddressRange struct {
	*Metadata

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	EndIpAddress string `xml:"endIpAddress,omitempty" json:"endIpAddress,omitempty"`

	IpAddressFeature *IPAddressFeature `xml:"ipAddressFeature,omitempty" json:"ipAddressFeature,omitempty"`

	IpAddressUsageScope *IPAddressUsageScope `xml:"ipAddressUsageScope,omitempty" json:"ipAddressUsageScope,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	StartIpAddress string `xml:"startIpAddress,omitempty" json:"startIpAddress,omitempty"`
}

type IdeasSettings struct {
	*Metadata

	EnableChatterProfile bool `xml:"enableChatterProfile,omitempty" json:"enableChatterProfile,omitempty"`

	EnableHtmlIdea bool `xml:"enableHtmlIdea,omitempty" json:"enableHtmlIdea,omitempty"`

	EnableIdeaMultipleCategory bool `xml:"enableIdeaMultipleCategory,omitempty" json:"enableIdeaMultipleCategory,omitempty"`

	EnableIdeaThemes bool `xml:"enableIdeaThemes,omitempty" json:"enableIdeaThemes,omitempty"`

	EnableIdeas bool `xml:"enableIdeas,omitempty" json:"enableIdeas,omitempty"`

	EnableIdeasControllerExtensions bool `xml:"enableIdeasControllerExtensions,omitempty" json:"enableIdeasControllerExtensions,omitempty"`

	EnableIdeasReputation bool `xml:"enableIdeasReputation,omitempty" json:"enableIdeasReputation,omitempty"`

	HalfLife float64 `xml:"halfLife,omitempty" json:"halfLife,omitempty"`

	IdeasProfilePage string `xml:"ideasProfilePage,omitempty" json:"ideasProfilePage,omitempty"`
}

type IdentityProviderSettings struct {
	*Metadata

	CertificateName string `xml:"certificateName,omitempty" json:"certificateName,omitempty"`

	EnableIdentityProvider bool `xml:"enableIdentityProvider,omitempty" json:"enableIdentityProvider,omitempty"`
}

type IdentityVerificationProcDef struct {
	*Metadata

	IdentityVerificationProcDtls []*IdentityVerificationProcDtl `xml:"identityVerificationProcDtls,omitempty" json:"identityVerificationProcDtls,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	SearchLayoutType *IdentityVerificationSearchLayoutType `xml:"searchLayoutType,omitempty" json:"searchLayoutType,omitempty"`
}

type IdentityVerificationProcDtl struct {
	*Metadata

	ApexClass string `xml:"apexClass,omitempty" json:"apexClass,omitempty"`

	DataSourceType *IdentityVerificationDataSourceType `xml:"dataSourceType,omitempty" json:"dataSourceType,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	DisplayRecordFieldName string `xml:"displayRecordFieldName,omitempty" json:"displayRecordFieldName,omitempty"`

	IdentityVerificationProcFlds []*IdentityVerificationProcFld `xml:"identityVerificationProcFlds,omitempty" json:"identityVerificationProcFlds,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	IsRetryAllowedAfterLimit bool `xml:"isRetryAllowedAfterLimit,omitempty" json:"isRetryAllowedAfterLimit,omitempty"`

	LinkedIdVerfProcessDet string `xml:"linkedIdVerfProcessDet,omitempty" json:"linkedIdVerfProcessDet,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	ObjectName string `xml:"objectName,omitempty" json:"objectName,omitempty"`

	OptionalVerifiersMinVerfCount int32 `xml:"optionalVerifiersMinVerfCount,omitempty" json:"optionalVerifiersMinVerfCount,omitempty"`

	RetryLimit int32 `xml:"retryLimit,omitempty" json:"retryLimit,omitempty"`

	SearchFilter string `xml:"searchFilter,omitempty" json:"searchFilter,omitempty"`

	SearchRecordUniqueIdField string `xml:"searchRecordUniqueIdField,omitempty" json:"searchRecordUniqueIdField,omitempty"`

	SearchResultSortBy string `xml:"searchResultSortBy,omitempty" json:"searchResultSortBy,omitempty"`

	SearchSequenceNumber int32 `xml:"searchSequenceNumber,omitempty" json:"searchSequenceNumber,omitempty"`

	SearchType *IdentityVerificationSearchType `xml:"searchType,omitempty" json:"searchType,omitempty"`
}

type IdentityVerificationProcFld struct {
	*Metadata

	CustomFieldLabel string `xml:"customFieldLabel,omitempty" json:"customFieldLabel,omitempty"`

	DataSourceType *IdentityVerificationProcFldDataSourceType `xml:"dataSourceType,omitempty" json:"dataSourceType,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	FieldDataType *IdentityVerificationProcFldFieldDataType `xml:"fieldDataType,omitempty" json:"fieldDataType,omitempty"`

	FieldName string `xml:"fieldName,omitempty" json:"fieldName,omitempty"`

	FieldType *IdentityVerificationProcFldFieldType `xml:"fieldType,omitempty" json:"fieldType,omitempty"`

	FieldValueFormula string `xml:"fieldValueFormula,omitempty" json:"fieldValueFormula,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	IsManualInput bool `xml:"isManualInput,omitempty" json:"isManualInput,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	SequenceNumber int32 `xml:"sequenceNumber,omitempty" json:"sequenceNumber,omitempty"`
}

type IframeWhiteListUrlSettings struct {
	*Metadata

	IframeWhiteListUrls []*IframeWhiteListUrl `xml:"iframeWhiteListUrls,omitempty" json:"iframeWhiteListUrls,omitempty"`
}

type IframeWhiteListUrl struct {
	Context *IFrameWhitelistContext `xml:"context,omitempty" json:"context,omitempty"`

	Url string `xml:"url,omitempty" json:"url,omitempty"`
}

type InboundNetworkConnection struct {
	*Metadata

	ConnectionType *ExternalConnectionType `xml:"connectionType,omitempty" json:"connectionType,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	InboundNetworkConnProperties []*InboundNetworkConnProperty `xml:"inboundNetworkConnProperties,omitempty" json:"inboundNetworkConnProperties,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Status *ExternalConnectionStatus `xml:"status,omitempty" json:"status,omitempty"`
}

type InboundNetworkConnProperty struct {
	PropertyName *InboundConnPropertyName `xml:"propertyName,omitempty" json:"propertyName,omitempty"`

	PropertyValue string `xml:"propertyValue,omitempty" json:"propertyValue,omitempty"`
}

type IncidentMgmtSettings struct {
	*Metadata

	EnableAlertBroadcastType bool `xml:"enableAlertBroadcastType,omitempty" json:"enableAlertBroadcastType,omitempty"`

	EnableEmailBroadcastType bool `xml:"enableEmailBroadcastType,omitempty" json:"enableEmailBroadcastType,omitempty"`

	EnableIncidentMgmt bool `xml:"enableIncidentMgmt,omitempty" json:"enableIncidentMgmt,omitempty"`

	EnableSiteBannerBroadcastType bool `xml:"enableSiteBannerBroadcastType,omitempty" json:"enableSiteBannerBroadcastType,omitempty"`

	EnableSlackBroadcastType bool `xml:"enableSlackBroadcastType,omitempty" json:"enableSlackBroadcastType,omitempty"`
}

type IndustriesAutomotiveSettings struct {
	*Metadata

	EnableAutomotiveCloud bool `xml:"enableAutomotiveCloud,omitempty" json:"enableAutomotiveCloud,omitempty"`

	EnableAutomotiveScheduler bool `xml:"enableAutomotiveScheduler,omitempty" json:"enableAutomotiveScheduler,omitempty"`

	EnableAutomotiveServiceExcellence bool `xml:"enableAutomotiveServiceExcellence,omitempty" json:"enableAutomotiveServiceExcellence,omitempty"`
}

type IndustriesEinsteinFeatureSettings struct {
	*Metadata

	DocumentReaderConfidenceOrgValue float64 `xml:"documentReaderConfidenceOrgValue,omitempty" json:"documentReaderConfidenceOrgValue,omitempty"`
}

type IndustriesManufacturingSettings struct {
	*Metadata

	EnableFleetManagement bool `xml:"enableFleetManagement,omitempty" json:"enableFleetManagement,omitempty"`

	EnableIndManufacturing bool `xml:"enableIndManufacturing,omitempty" json:"enableIndManufacturing,omitempty"`

	EnableIndustriesMfgAccountForecast bool `xml:"enableIndustriesMfgAccountForecast,omitempty" json:"enableIndustriesMfgAccountForecast,omitempty"`

	EnableIndustriesMfgAdvForecast bool `xml:"enableIndustriesMfgAdvForecast,omitempty" json:"enableIndustriesMfgAdvForecast,omitempty"`

	EnableIndustriesMfgIAS bool `xml:"enableIndustriesMfgIAS,omitempty" json:"enableIndustriesMfgIAS,omitempty"`

	EnableIndustriesMfgProgram bool `xml:"enableIndustriesMfgProgram,omitempty" json:"enableIndustriesMfgProgram,omitempty"`

	EnableIndustriesMfgTargets bool `xml:"enableIndustriesMfgTargets,omitempty" json:"enableIndustriesMfgTargets,omitempty"`

	EnablePartnerLeadManagement bool `xml:"enablePartnerLeadManagement,omitempty" json:"enablePartnerLeadManagement,omitempty"`

	EnablePartnerPerformanceManagement bool `xml:"enablePartnerPerformanceManagement,omitempty" json:"enablePartnerPerformanceManagement,omitempty"`

	EnablePartnerVisitManagement bool `xml:"enablePartnerVisitManagement,omitempty" json:"enablePartnerVisitManagement,omitempty"`

	EnableRevMgmtForSlsAgr bool `xml:"enableRevMgmtForSlsAgr,omitempty" json:"enableRevMgmtForSlsAgr,omitempty"`
}

type IndustriesSettings struct {
	*Metadata

	AllowMultipleProducersToWorkOnSamePolicy bool `xml:"allowMultipleProducersToWorkOnSamePolicy,omitempty" json:"allowMultipleProducersToWorkOnSamePolicy,omitempty"`

	AppointmentDistributionOrgPref bool `xml:"appointmentDistributionOrgPref,omitempty" json:"appointmentDistributionOrgPref,omitempty"`

	CaptureResourceUtilizationOrgPref bool `xml:"captureResourceUtilizationOrgPref,omitempty" json:"captureResourceUtilizationOrgPref,omitempty"`

	CreateCustomerPropertyFromLAProperty bool `xml:"createCustomerPropertyFromLAProperty,omitempty" json:"createCustomerPropertyFromLAProperty,omitempty"`

	CreateFSCAssetFromLAAsset bool `xml:"createFSCAssetFromLAAsset,omitempty" json:"createFSCAssetFromLAAsset,omitempty"`

	CreateFSCAssetFromLAProperty bool `xml:"createFSCAssetFromLAProperty,omitempty" json:"createFSCAssetFromLAProperty,omitempty"`

	CreateFSCLiabilityFromLAFinancial bool `xml:"createFSCLiabilityFromLAFinancial,omitempty" json:"createFSCLiabilityFromLAFinancial,omitempty"`

	CreateFSCLiabilityFromLALiability bool `xml:"createFSCLiabilityFromLALiability,omitempty" json:"createFSCLiabilityFromLALiability,omitempty"`

	CreateFinancialAccountFromLAAsset bool `xml:"createFinancialAccountFromLAAsset,omitempty" json:"createFinancialAccountFromLAAsset,omitempty"`

	CreateFinancialAccountFromLALiability bool `xml:"createFinancialAccountFromLALiability,omitempty" json:"createFinancialAccountFromLALiability,omitempty"`

	CreateFinancialAccountsFromLAFinancials bool `xml:"createFinancialAccountsFromLAFinancials,omitempty" json:"createFinancialAccountsFromLAFinancials,omitempty"`

	CreateFinancialAccountsFromLAProperty bool `xml:"createFinancialAccountsFromLAProperty,omitempty" json:"createFinancialAccountsFromLAProperty,omitempty"`

	EnableAIAccelerator bool `xml:"enableAIAccelerator,omitempty" json:"enableAIAccelerator,omitempty"`

	EnableAWSTextractAnalyzeIDPref bool `xml:"enableAWSTextractAnalyzeIDPref,omitempty" json:"enableAWSTextractAnalyzeIDPref,omitempty"`

	EnableAcademicOperations bool `xml:"enableAcademicOperations,omitempty" json:"enableAcademicOperations,omitempty"`

	EnableAccessToMasterListOfCoverageTypes bool `xml:"enableAccessToMasterListOfCoverageTypes,omitempty" json:"enableAccessToMasterListOfCoverageTypes,omitempty"`

	EnableAccountScoreEnabled bool `xml:"enableAccountScoreEnabled,omitempty" json:"enableAccountScoreEnabled,omitempty"`

	EnableActionableList bool `xml:"enableActionableList,omitempty" json:"enableActionableList,omitempty"`

	EnableActionableListOrgPref bool `xml:"enableActionableListOrgPref,omitempty" json:"enableActionableListOrgPref,omitempty"`

	EnableAdvancedScheduling bool `xml:"enableAdvancedScheduling,omitempty" json:"enableAdvancedScheduling,omitempty"`

	EnableAlumniRelations bool `xml:"enableAlumniRelations,omitempty" json:"enableAlumniRelations,omitempty"`

	EnableAnyResourceTypeOrgPref bool `xml:"enableAnyResourceTypeOrgPref,omitempty" json:"enableAnyResourceTypeOrgPref,omitempty"`

	EnableAppFrmAnywhereOrgPref bool `xml:"enableAppFrmAnywhereOrgPref,omitempty" json:"enableAppFrmAnywhereOrgPref,omitempty"`

	EnableAppInviteOrgPref bool `xml:"enableAppInviteOrgPref,omitempty" json:"enableAppInviteOrgPref,omitempty"`

	EnableBehavioralHealthAppPref bool `xml:"enableBehavioralHealthAppPref,omitempty" json:"enableBehavioralHealthAppPref,omitempty"`

	EnableBenefitAndGoalSharingPref bool `xml:"enableBenefitAndGoalSharingPref,omitempty" json:"enableBenefitAndGoalSharingPref,omitempty"`

	EnableBenefitManagementPreference bool `xml:"enableBenefitManagementPreference,omitempty" json:"enableBenefitManagementPreference,omitempty"`

	EnableBlockResourceAvailabilityOrgPref bool `xml:"enableBlockResourceAvailabilityOrgPref,omitempty" json:"enableBlockResourceAvailabilityOrgPref,omitempty"`

	EnableBusinessMessenger bool `xml:"enableBusinessMessenger,omitempty" json:"enableBusinessMessenger,omitempty"`

	EnableCalculationUsingParentPolicyOnly bool `xml:"enableCalculationUsingParentPolicyOnly,omitempty" json:"enableCalculationUsingParentPolicyOnly,omitempty"`

	EnableCallReportAdminContextPref bool `xml:"enableCallReportAdminContextPref,omitempty" json:"enableCallReportAdminContextPref,omitempty"`

	EnableCareGapPrefSetting bool `xml:"enableCareGapPrefSetting,omitempty" json:"enableCareGapPrefSetting,omitempty"`

	EnableCareMgmtSlackAccess bool `xml:"enableCareMgmtSlackAccess,omitempty" json:"enableCareMgmtSlackAccess,omitempty"`

	EnableCarePlansPreference bool `xml:"enableCarePlansPreference,omitempty" json:"enableCarePlansPreference,omitempty"`

	EnableCdpSalesExcellence bool `xml:"enableCdpSalesExcellence,omitempty" json:"enableCdpSalesExcellence,omitempty"`

	EnableChurnPredictionRT bool `xml:"enableChurnPredictionRT,omitempty" json:"enableChurnPredictionRT,omitempty"`

	EnableClaimMgmt bool `xml:"enableClaimMgmt,omitempty" json:"enableClaimMgmt,omitempty"`

	EnableClinicalDataModel bool `xml:"enableClinicalDataModel,omitempty" json:"enableClinicalDataModel,omitempty"`

	EnableCompliantDataSharingForAccount bool `xml:"enableCompliantDataSharingForAccount,omitempty" json:"enableCompliantDataSharingForAccount,omitempty"`

	EnableCompliantDataSharingForBudget bool `xml:"enableCompliantDataSharingForBudget,omitempty" json:"enableCompliantDataSharingForBudget,omitempty"`

	EnableCompliantDataSharingForBudgetSiteUsers bool `xml:"enableCompliantDataSharingForBudgetSiteUsers,omitempty" json:"enableCompliantDataSharingForBudgetSiteUsers,omitempty"`

	EnableCompliantDataSharingForCustomObjects bool `xml:"enableCompliantDataSharingForCustomObjects,omitempty" json:"enableCompliantDataSharingForCustomObjects,omitempty"`

	EnableCompliantDataSharingForFinancialDeal bool `xml:"enableCompliantDataSharingForFinancialDeal,omitempty" json:"enableCompliantDataSharingForFinancialDeal,omitempty"`

	EnableCompliantDataSharingForFundingAward bool `xml:"enableCompliantDataSharingForFundingAward,omitempty" json:"enableCompliantDataSharingForFundingAward,omitempty"`

	EnableCompliantDataSharingForFundingAwardSiteUsers bool `xml:"enableCompliantDataSharingForFundingAwardSiteUsers,omitempty" json:"enableCompliantDataSharingForFundingAwardSiteUsers,omitempty"`

	EnableCompliantDataSharingForFundingOpportunity bool `xml:"enableCompliantDataSharingForFundingOpportunity,omitempty" json:"enableCompliantDataSharingForFundingOpportunity,omitempty"`

	EnableCompliantDataSharingForFundingOpportunitySiteUsers bool `xml:"enableCompliantDataSharingForFundingOpportunitySiteUsers,omitempty" json:"enableCompliantDataSharingForFundingOpportunitySiteUsers,omitempty"`

	EnableCompliantDataSharingForIndividualApplication bool `xml:"enableCompliantDataSharingForIndividualApplication,omitempty" json:"enableCompliantDataSharingForIndividualApplication,omitempty"`

	EnableCompliantDataSharingForIndividualApplicationSiteUsers bool `xml:"enableCompliantDataSharingForIndividualApplicationSiteUsers,omitempty" json:"enableCompliantDataSharingForIndividualApplicationSiteUsers,omitempty"`

	EnableCompliantDataSharingForInteraction bool `xml:"enableCompliantDataSharingForInteraction,omitempty" json:"enableCompliantDataSharingForInteraction,omitempty"`

	EnableCompliantDataSharingForInteractionSummary bool `xml:"enableCompliantDataSharingForInteractionSummary,omitempty" json:"enableCompliantDataSharingForInteractionSummary,omitempty"`

	EnableCompliantDataSharingForOpportunity bool `xml:"enableCompliantDataSharingForOpportunity,omitempty" json:"enableCompliantDataSharingForOpportunity,omitempty"`

	EnableCompliantDataSharingForPreliminaryApplicationRef bool `xml:"enableCompliantDataSharingForPreliminaryApplicationRef,omitempty" json:"enableCompliantDataSharingForPreliminaryApplicationRef,omitempty"`

	EnableCompliantDataSharingForPreliminaryApplicationRefSiteUsers bool `xml:"enableCompliantDataSharingForPreliminaryApplicationRefSiteUsers,omitempty" json:"enableCompliantDataSharingForPreliminaryApplicationRefSiteUsers,omitempty"`

	EnableComprehendMedical bool `xml:"enableComprehendMedical,omitempty" json:"enableComprehendMedical,omitempty"`

	EnableContactCenterAccess bool `xml:"enableContactCenterAccess,omitempty" json:"enableContactCenterAccess,omitempty"`

	EnableCreateMultiAttendeeEventOrgPref bool `xml:"enableCreateMultiAttendeeEventOrgPref,omitempty" json:"enableCreateMultiAttendeeEventOrgPref,omitempty"`

	EnableCrisisCenterAccess bool `xml:"enableCrisisCenterAccess,omitempty" json:"enableCrisisCenterAccess,omitempty"`

	EnableCriteriaBasedSearchAndFilter bool `xml:"enableCriteriaBasedSearchAndFilter,omitempty" json:"enableCriteriaBasedSearchAndFilter,omitempty"`

	EnableCustomFlowsOnCycleCount bool `xml:"enableCustomFlowsOnCycleCount,omitempty" json:"enableCustomFlowsOnCycleCount,omitempty"`

	EnableCustomFlowsOnExpiryPage bool `xml:"enableCustomFlowsOnExpiryPage,omitempty" json:"enableCustomFlowsOnExpiryPage,omitempty"`

	EnableDataCloudEventsOnTimeline bool `xml:"enableDataCloudEventsOnTimeline,omitempty" json:"enableDataCloudEventsOnTimeline,omitempty"`

	EnableDealManagement bool `xml:"enableDealManagement,omitempty" json:"enableDealManagement,omitempty"`

	EnableDiscoveryFrameworkMetadata bool `xml:"enableDiscoveryFrameworkMetadata,omitempty" json:"enableDiscoveryFrameworkMetadata,omitempty"`

	EnableDiscoveryFrwrkSampleTemplate bool `xml:"enableDiscoveryFrwrkSampleTemplate,omitempty" json:"enableDiscoveryFrwrkSampleTemplate,omitempty"`

	EnableDpeProviderSearchSettingsOrgPref bool `xml:"enableDpeProviderSearchSettingsOrgPref,omitempty" json:"enableDpeProviderSearchSettingsOrgPref,omitempty"`

	EnableDropInAppointmentsOrgPref bool `xml:"enableDropInAppointmentsOrgPref,omitempty" json:"enableDropInAppointmentsOrgPref,omitempty"`

	EnableDropInFallbackMechOrgPref bool `xml:"enableDropInFallbackMechOrgPref,omitempty" json:"enableDropInFallbackMechOrgPref,omitempty"`

	EnableDropInSkillMatchingOrgPref bool `xml:"enableDropInSkillMatchingOrgPref,omitempty" json:"enableDropInSkillMatchingOrgPref,omitempty"`

	EnableEducationCloud bool `xml:"enableEducationCloud,omitempty" json:"enableEducationCloud,omitempty"`

	EnableEinsteinDocReader bool `xml:"enableEinsteinDocReader,omitempty" json:"enableEinsteinDocReader,omitempty"`

	EnableEinsteinVisits bool `xml:"enableEinsteinVisits,omitempty" json:"enableEinsteinVisits,omitempty"`

	EnableEnhancedQuestionCreation bool `xml:"enableEnhancedQuestionCreation,omitempty" json:"enableEnhancedQuestionCreation,omitempty"`

	EnableEpcDeleteAccess bool `xml:"enableEpcDeleteAccess,omitempty" json:"enableEpcDeleteAccess,omitempty"`

	EnableEventManagementOrgPref bool `xml:"enableEventManagementOrgPref,omitempty" json:"enableEventManagementOrgPref,omitempty"`

	EnableEventWriteOrgPref bool `xml:"enableEventWriteOrgPref,omitempty" json:"enableEventWriteOrgPref,omitempty"`

	EnableExistingHealthCloudOrg bool `xml:"enableExistingHealthCloudOrg,omitempty" json:"enableExistingHealthCloudOrg,omitempty"`

	EnableFSCInsuranceReport bool `xml:"enableFSCInsuranceReport,omitempty" json:"enableFSCInsuranceReport,omitempty"`

	EnableFSCInsuranceServiceConsole bool `xml:"enableFSCInsuranceServiceConsole,omitempty" json:"enableFSCInsuranceServiceConsole,omitempty"`

	EnableFinancialAccountMgmt bool `xml:"enableFinancialAccountMgmt,omitempty" json:"enableFinancialAccountMgmt,omitempty"`

	EnableFinancialDealCallReportCmpPref bool `xml:"enableFinancialDealCallReportCmpPref,omitempty" json:"enableFinancialDealCallReportCmpPref,omitempty"`

	EnableFinancialDealCallReportPref bool `xml:"enableFinancialDealCallReportPref,omitempty" json:"enableFinancialDealCallReportPref,omitempty"`

	EnableFinancialDealRoleHierarchy bool `xml:"enableFinancialDealRoleHierarchy,omitempty" json:"enableFinancialDealRoleHierarchy,omitempty"`

	EnableFundraising bool `xml:"enableFundraising,omitempty" json:"enableFundraising,omitempty"`

	EnableGnrcDisclsFrmwrk bool `xml:"enableGnrcDisclsFrmwrk,omitempty" json:"enableGnrcDisclsFrmwrk,omitempty"`

	EnableGrantmaking bool `xml:"enableGrantmaking,omitempty" json:"enableGrantmaking,omitempty"`

	EnableHCReferralScoring bool `xml:"enableHCReferralScoring,omitempty" json:"enableHCReferralScoring,omitempty"`

	EnableHomeHealth bool `xml:"enableHomeHealth,omitempty" json:"enableHomeHealth,omitempty"`

	EnableIESentimentAnalysis bool `xml:"enableIESentimentAnalysis,omitempty" json:"enableIESentimentAnalysis,omitempty"`

	EnableIndustriesAssessment bool `xml:"enableIndustriesAssessment,omitempty" json:"enableIndustriesAssessment,omitempty"`

	EnableIndustriesAssessmentGuestOrgPref bool `xml:"enableIndustriesAssessmentGuestOrgPref,omitempty" json:"enableIndustriesAssessmentGuestOrgPref,omitempty"`

	EnableIndustriesKYC bool `xml:"enableIndustriesKYC,omitempty" json:"enableIndustriesKYC,omitempty"`

	EnableIndustriesOnboarding bool `xml:"enableIndustriesOnboarding,omitempty" json:"enableIndustriesOnboarding,omitempty"`

	EnableIndustriesRebates bool `xml:"enableIndustriesRebates,omitempty" json:"enableIndustriesRebates,omitempty"`

	EnableIndustriesShipAndDebit bool `xml:"enableIndustriesShipAndDebit,omitempty" json:"enableIndustriesShipAndDebit,omitempty"`

	EnableIntegratedCareManagementSetting bool `xml:"enableIntegratedCareManagementSetting,omitempty" json:"enableIntegratedCareManagementSetting,omitempty"`

	EnableInteractionCstmSharingPref bool `xml:"enableInteractionCstmSharingPref,omitempty" json:"enableInteractionCstmSharingPref,omitempty"`

	EnableInteractionRoleHierarchy bool `xml:"enableInteractionRoleHierarchy,omitempty" json:"enableInteractionRoleHierarchy,omitempty"`

	EnableInteractionSummaryPref bool `xml:"enableInteractionSummaryPref,omitempty" json:"enableInteractionSummaryPref,omitempty"`

	EnableInteractionSummaryRoleHierarchy bool `xml:"enableInteractionSummaryRoleHierarchy,omitempty" json:"enableInteractionSummaryRoleHierarchy,omitempty"`

	EnableManyToManyRelationships bool `xml:"enableManyToManyRelationships,omitempty" json:"enableManyToManyRelationships,omitempty"`

	EnableMaterialityAssessment bool `xml:"enableMaterialityAssessment,omitempty" json:"enableMaterialityAssessment,omitempty"`

	EnableMedRecSetting bool `xml:"enableMedRecSetting,omitempty" json:"enableMedRecSetting,omitempty"`

	EnableMedicalDeviceEnabled bool `xml:"enableMedicalDeviceEnabled,omitempty" json:"enableMedicalDeviceEnabled,omitempty"`

	EnableMedicationManagementEnabled bool `xml:"enableMedicationManagementEnabled,omitempty" json:"enableMedicationManagementEnabled,omitempty"`

	EnableMicrosoftWordAddInEnabled bool `xml:"enableMicrosoftWordAddInEnabled,omitempty" json:"enableMicrosoftWordAddInEnabled,omitempty"`

	EnableMortgageRlaTotalsOrgPref bool `xml:"enableMortgageRlaTotalsOrgPref,omitempty" json:"enableMortgageRlaTotalsOrgPref,omitempty"`

	EnableMulesoftFhirR4Apis bool `xml:"enableMulesoftFhirR4Apis,omitempty" json:"enableMulesoftFhirR4Apis,omitempty"`

	EnableMultiResourceOrgPref bool `xml:"enableMultiResourceOrgPref,omitempty" json:"enableMultiResourceOrgPref,omitempty"`

	EnableMultipleCareProgramEnrolleeOrgPref bool `xml:"enableMultipleCareProgramEnrolleeOrgPref,omitempty" json:"enableMultipleCareProgramEnrolleeOrgPref,omitempty"`

	EnableMultipleTopicsForShiftsOrgPref bool `xml:"enableMultipleTopicsForShiftsOrgPref,omitempty" json:"enableMultipleTopicsForShiftsOrgPref,omitempty"`

	EnableNZCMngEnrgyAttrCr bool `xml:"enableNZCMngEnrgyAttrCr,omitempty" json:"enableNZCMngEnrgyAttrCr,omitempty"`

	EnableNZCMngEsgPgm bool `xml:"enableNZCMngEsgPgm,omitempty" json:"enableNZCMngEsgPgm,omitempty"`

	EnableObjectDetection bool `xml:"enableObjectDetection,omitempty" json:"enableObjectDetection,omitempty"`

	EnableOutcomes bool `xml:"enableOutcomes,omitempty" json:"enableOutcomes,omitempty"`

	EnableOverbookingOrgPref bool `xml:"enableOverbookingOrgPref,omitempty" json:"enableOverbookingOrgPref,omitempty"`

	EnablePatientAppointmentSchedulingOrgPref bool `xml:"enablePatientAppointmentSchedulingOrgPref,omitempty" json:"enablePatientAppointmentSchedulingOrgPref,omitempty"`

	EnablePatientServicesOrchestration bool `xml:"enablePatientServicesOrchestration,omitempty" json:"enablePatientServicesOrchestration,omitempty"`

	EnablePolicyAdministration bool `xml:"enablePolicyAdministration,omitempty" json:"enablePolicyAdministration,omitempty"`

	EnablePreBookedFallbackMechOrgPref bool `xml:"enablePreBookedFallbackMechOrgPref,omitempty" json:"enablePreBookedFallbackMechOrgPref,omitempty"`

	EnableProviderSearchForGuestUser bool `xml:"enableProviderSearchForGuestUser,omitempty" json:"enableProviderSearchForGuestUser,omitempty"`

	EnableProviderSearchSyncOrgPref bool `xml:"enableProviderSearchSyncOrgPref,omitempty" json:"enableProviderSearchSyncOrgPref,omitempty"`

	EnableRBLUsingCalcService bool `xml:"enableRBLUsingCalcService,omitempty" json:"enableRBLUsingCalcService,omitempty"`

	EnableRecordRollup bool `xml:"enableRecordRollup,omitempty" json:"enableRecordRollup,omitempty"`

	EnableReferralScoring bool `xml:"enableReferralScoring,omitempty" json:"enableReferralScoring,omitempty"`

	EnableSCAssignFootprint bool `xml:"enableSCAssignFootprint,omitempty" json:"enableSCAssignFootprint,omitempty"`

	EnableSCBEIEnabled bool `xml:"enableSCBEIEnabled,omitempty" json:"enableSCBEIEnabled,omitempty"`

	EnableSCCarbonAccounting bool `xml:"enableSCCarbonAccounting,omitempty" json:"enableSCCarbonAccounting,omitempty"`

	EnableSCCarbonCreditAlloc bool `xml:"enableSCCarbonCreditAlloc,omitempty" json:"enableSCCarbonCreditAlloc,omitempty"`

	EnableSCCreateFootprint bool `xml:"enableSCCreateFootprint,omitempty" json:"enableSCCreateFootprint,omitempty"`

	EnableSCDGF bool `xml:"enableSCDGF,omitempty" json:"enableSCDGF,omitempty"`

	EnableSCEmssnsForecasting bool `xml:"enableSCEmssnsForecasting,omitempty" json:"enableSCEmssnsForecasting,omitempty"`

	EnableSCExpansionUseCase bool `xml:"enableSCExpansionUseCase,omitempty" json:"enableSCExpansionUseCase,omitempty"`

	EnableSCExternalEngMgmt bool `xml:"enableSCExternalEngMgmt,omitempty" json:"enableSCExternalEngMgmt,omitempty"`

	EnableSCGenrateCnsmpRcd bool `xml:"enableSCGenrateCnsmpRcd,omitempty" json:"enableSCGenrateCnsmpRcd,omitempty"`

	EnableSCSNGManagement bool `xml:"enableSCSNGManagement,omitempty" json:"enableSCSNGManagement,omitempty"`

	EnableSCScope3HubEnabled bool `xml:"enableSCScope3HubEnabled,omitempty" json:"enableSCScope3HubEnabled,omitempty"`

	EnableSCSnGAffiliates bool `xml:"enableSCSnGAffiliates,omitempty" json:"enableSCSnGAffiliates,omitempty"`

	EnableSCSplitCnsmpRcd bool `xml:"enableSCSplitCnsmpRcd,omitempty" json:"enableSCSplitCnsmpRcd,omitempty"`

	EnableSCTargetSetting bool `xml:"enableSCTargetSetting,omitempty" json:"enableSCTargetSetting,omitempty"`

	EnableSCWasteManagement bool `xml:"enableSCWasteManagement,omitempty" json:"enableSCWasteManagement,omitempty"`

	EnableSCWaterManagement bool `xml:"enableSCWaterManagement,omitempty" json:"enableSCWaterManagement,omitempty"`

	EnableScoringFrameworkCRMAPref bool `xml:"enableScoringFrameworkCRMAPref,omitempty" json:"enableScoringFrameworkCRMAPref,omitempty"`

	EnableScoringFrameworkOrgPref bool `xml:"enableScoringFrameworkOrgPref,omitempty" json:"enableScoringFrameworkOrgPref,omitempty"`

	EnableSentimentAnalysis bool `xml:"enableSentimentAnalysis,omitempty" json:"enableSentimentAnalysis,omitempty"`

	EnableShareSaWithArOrgPref bool `xml:"enableShareSaWithArOrgPref,omitempty" json:"enableShareSaWithArOrgPref,omitempty"`

	EnableSlackForCib bool `xml:"enableSlackForCib,omitempty" json:"enableSlackForCib,omitempty"`

	EnableSmartTags bool `xml:"enableSmartTags,omitempty" json:"enableSmartTags,omitempty"`

	EnableStudentSuccess bool `xml:"enableStudentSuccess,omitempty" json:"enableStudentSuccess,omitempty"`

	EnableSustainabilityCloud bool `xml:"enableSustainabilityCloud,omitempty" json:"enableSustainabilityCloud,omitempty"`

	EnableSyncInteractionsPref bool `xml:"enableSyncInteractionsPref,omitempty" json:"enableSyncInteractionsPref,omitempty"`

	EnableTearSheetPref bool `xml:"enableTearSheetPref,omitempty" json:"enableTearSheetPref,omitempty"`

	EnableTextExtract bool `xml:"enableTextExtract,omitempty" json:"enableTextExtract,omitempty"`

	EnableTimelinePref bool `xml:"enableTimelinePref,omitempty" json:"enableTimelinePref,omitempty"`

	EnableTopicOrTemplate bool `xml:"enableTopicOrTemplate,omitempty" json:"enableTopicOrTemplate,omitempty"`

	EnableTopicTimeSlot bool `xml:"enableTopicTimeSlot,omitempty" json:"enableTopicTimeSlot,omitempty"`

	EnableTurnOffDsclsReprtPbsrName bool `xml:"enableTurnOffDsclsReprtPbsrName,omitempty" json:"enableTurnOffDsclsReprtPbsrName,omitempty"`

	EnableUMPayerAppAccessOrgPreference bool `xml:"enableUMPayerAppAccessOrgPreference,omitempty" json:"enableUMPayerAppAccessOrgPreference,omitempty"`

	EnableVideoVisitsOrgPref bool `xml:"enableVideoVisitsOrgPref,omitempty" json:"enableVideoVisitsOrgPref,omitempty"`

	EnableVisitCalendarSync bool `xml:"enableVisitCalendarSync,omitempty" json:"enableVisitCalendarSync,omitempty"`

	EnableVisitInventoryEnabled bool `xml:"enableVisitInventoryEnabled,omitempty" json:"enableVisitInventoryEnabled,omitempty"`

	LoanApplicantAddressAutoCreation bool `xml:"loanApplicantAddressAutoCreation,omitempty" json:"loanApplicantAddressAutoCreation,omitempty"`

	LoanApplicantAutoCreation bool `xml:"loanApplicantAutoCreation,omitempty" json:"loanApplicantAutoCreation,omitempty"`

	RlaEditIfAccHasEdit bool `xml:"rlaEditIfAccHasEdit,omitempty" json:"rlaEditIfAccHasEdit,omitempty"`

	TransformRBLtoDPE bool `xml:"transformRBLtoDPE,omitempty" json:"transformRBLtoDPE,omitempty"`
}

type InstalledPackage struct {
	*Metadata

	ActivateRSS bool `xml:"activateRSS,omitempty" json:"activateRSS,omitempty"`

	Password string `xml:"password,omitempty" json:"password,omitempty"`

	SecurityType string `xml:"securityType,omitempty" json:"securityType,omitempty"`

	VersionNumber string `xml:"versionNumber,omitempty" json:"versionNumber,omitempty"`
}

type InventorySettings struct {
	*Metadata

	EnableOCIB2CIntegration bool `xml:"enableOCIB2CIntegration,omitempty" json:"enableOCIB2CIntegration,omitempty"`

	EnableOmniChannelInventory bool `xml:"enableOmniChannelInventory,omitempty" json:"enableOmniChannelInventory,omitempty"`
}

type InvocableActionSettings struct {
	*Metadata

	IsPartialSaveAllowed bool `xml:"isPartialSaveAllowed,omitempty" json:"isPartialSaveAllowed,omitempty"`
}

type IoTSettings struct {
	*Metadata

	EnableIoT bool `xml:"enableIoT,omitempty" json:"enableIoT,omitempty"`

	EnableIoTInsightsPilot bool `xml:"enableIoTInsightsPilot,omitempty" json:"enableIoTInsightsPilot,omitempty"`

	EnableIoTUsageEmail bool `xml:"enableIoTUsageEmail,omitempty" json:"enableIoTUsageEmail,omitempty"`
}

type KeywordList struct {
	*Metadata

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Keywords []*Keyword `xml:"keywords,omitempty" json:"keywords,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type Keyword struct {
	Keyword string `xml:"keyword,omitempty" json:"keyword,omitempty"`
}

type KnowledgeSettings struct {
	*Metadata

	Answers *KnowledgeAnswerSettings `xml:"answers,omitempty" json:"answers,omitempty"`

	Cases *KnowledgeCaseSettings `xml:"cases,omitempty" json:"cases,omitempty"`

	DefaultLanguage string `xml:"defaultLanguage,omitempty" json:"defaultLanguage,omitempty"`

	EnableChatterQuestionKBDeflection bool `xml:"enableChatterQuestionKBDeflection,omitempty" json:"enableChatterQuestionKBDeflection,omitempty"`

	EnableCreateEditOnArticlesTab bool `xml:"enableCreateEditOnArticlesTab,omitempty" json:"enableCreateEditOnArticlesTab,omitempty"`

	EnableExternalMediaContent bool `xml:"enableExternalMediaContent,omitempty" json:"enableExternalMediaContent,omitempty"`

	EnableKbStandardSharing bool `xml:"enableKbStandardSharing,omitempty" json:"enableKbStandardSharing,omitempty"`

	EnableKnowledge bool `xml:"enableKnowledge,omitempty" json:"enableKnowledge,omitempty"`

	EnableKnowledgeAgentContribution bool `xml:"enableKnowledgeAgentContribution,omitempty" json:"enableKnowledgeAgentContribution,omitempty"`

	EnableKnowledgeAnswersPromotion bool `xml:"enableKnowledgeAnswersPromotion,omitempty" json:"enableKnowledgeAnswersPromotion,omitempty"`

	EnableKnowledgeArticleTextHighlights bool `xml:"enableKnowledgeArticleTextHighlights,omitempty" json:"enableKnowledgeArticleTextHighlights,omitempty"`

	EnableKnowledgeCaseRL bool `xml:"enableKnowledgeCaseRL,omitempty" json:"enableKnowledgeCaseRL,omitempty"`

	EnableKnowledgeKeywordAutoComplete bool `xml:"enableKnowledgeKeywordAutoComplete,omitempty" json:"enableKnowledgeKeywordAutoComplete,omitempty"`

	EnableKnowledgeTitleAutoComplete bool `xml:"enableKnowledgeTitleAutoComplete,omitempty" json:"enableKnowledgeTitleAutoComplete,omitempty"`

	EnableLightningKbAutoLoadRichTextField bool `xml:"enableLightningKbAutoLoadRichTextField,omitempty" json:"enableLightningKbAutoLoadRichTextField,omitempty"`

	EnableLightningKnowledge bool `xml:"enableLightningKnowledge,omitempty" json:"enableLightningKnowledge,omitempty"`

	Languages *KnowledgeLanguageSettings `xml:"languages,omitempty" json:"languages,omitempty"`

	ShowArticleSummariesCustomerPortal bool `xml:"showArticleSummariesCustomerPortal,omitempty" json:"showArticleSummariesCustomerPortal,omitempty"`

	ShowArticleSummariesInternalApp bool `xml:"showArticleSummariesInternalApp,omitempty" json:"showArticleSummariesInternalApp,omitempty"`

	ShowArticleSummariesPartnerPortal bool `xml:"showArticleSummariesPartnerPortal,omitempty" json:"showArticleSummariesPartnerPortal,omitempty"`

	ShowValidationStatusField bool `xml:"showValidationStatusField,omitempty" json:"showValidationStatusField,omitempty"`

	SuggestedArticles *KnowledgeSuggestedArticlesSettings `xml:"suggestedArticles,omitempty" json:"suggestedArticles,omitempty"`

	VotingEnabled bool `xml:"votingEnabled,omitempty" json:"votingEnabled,omitempty"`
}

type KnowledgeAnswerSettings struct {
	AssignTo string `xml:"assignTo,omitempty" json:"assignTo,omitempty"`

	DefaultArticleType string `xml:"defaultArticleType,omitempty" json:"defaultArticleType,omitempty"`

	EnableArticleCreation bool `xml:"enableArticleCreation,omitempty" json:"enableArticleCreation,omitempty"`
}

type KnowledgeCaseSettings struct {
	ArticlePDFCreationProfile string `xml:"articlePDFCreationProfile,omitempty" json:"articlePDFCreationProfile,omitempty"`

	ArticlePublicSharingCommunities *KnowledgeCommunitiesSettings `xml:"articlePublicSharingCommunities,omitempty" json:"articlePublicSharingCommunities,omitempty"`

	ArticlePublicSharingSites *KnowledgeSitesSettings `xml:"articlePublicSharingSites,omitempty" json:"articlePublicSharingSites,omitempty"`

	ArticlePublicSharingSitesChatterAnswers *KnowledgeSitesSettings `xml:"articlePublicSharingSitesChatterAnswers,omitempty" json:"articlePublicSharingSitesChatterAnswers,omitempty"`

	AssignTo string `xml:"assignTo,omitempty" json:"assignTo,omitempty"`

	CustomizationClass string `xml:"customizationClass,omitempty" json:"customizationClass,omitempty"`

	DefaultContributionArticleType string `xml:"defaultContributionArticleType,omitempty" json:"defaultContributionArticleType,omitempty"`

	Editor *KnowledgeCaseEditor `xml:"editor,omitempty" json:"editor,omitempty"`

	EnableArticleCreation bool `xml:"enableArticleCreation,omitempty" json:"enableArticleCreation,omitempty"`

	EnableArticlePublicSharingSites bool `xml:"enableArticlePublicSharingSites,omitempty" json:"enableArticlePublicSharingSites,omitempty"`

	EnableCaseDataCategoryMapping bool `xml:"enableCaseDataCategoryMapping,omitempty" json:"enableCaseDataCategoryMapping,omitempty"`

	UseProfileForPDFCreation bool `xml:"useProfileForPDFCreation,omitempty" json:"useProfileForPDFCreation,omitempty"`
}

type KnowledgeCommunitiesSettings struct {
	Community []string `xml:"community,omitempty" json:"community,omitempty"`
}

type KnowledgeSitesSettings struct {
	Site []string `xml:"site,omitempty" json:"site,omitempty"`
}

type KnowledgeLanguageSettings struct {
	Language []*KnowledgeLanguage `xml:"language,omitempty" json:"language,omitempty"`
}

type KnowledgeLanguage struct {
	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	DefaultAssignee string `xml:"defaultAssignee,omitempty" json:"defaultAssignee,omitempty"`

	DefaultAssigneeType *KnowledgeLanguageLookupValueType `xml:"defaultAssigneeType,omitempty" json:"defaultAssigneeType,omitempty"`

	DefaultReviewer string `xml:"defaultReviewer,omitempty" json:"defaultReviewer,omitempty"`

	DefaultReviewerType *KnowledgeLanguageLookupValueType `xml:"defaultReviewerType,omitempty" json:"defaultReviewerType,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type KnowledgeSuggestedArticlesSettings struct {
	CaseFields *KnowledgeCaseFieldsSettings `xml:"caseFields,omitempty" json:"caseFields,omitempty"`

	UseSuggestedArticlesForCase bool `xml:"useSuggestedArticlesForCase,omitempty" json:"useSuggestedArticlesForCase,omitempty"`

	WorkOrderFields *KnowledgeWorkOrderFieldsSettings `xml:"workOrderFields,omitempty" json:"workOrderFields,omitempty"`

	WorkOrderLineItemFields *KnowledgeWorkOrderLineItemFieldsSettings `xml:"workOrderLineItemFields,omitempty" json:"workOrderLineItemFields,omitempty"`
}

type KnowledgeCaseFieldsSettings struct {
	Field []*KnowledgeCaseField `xml:"field,omitempty" json:"field,omitempty"`
}

type KnowledgeCaseField struct {
	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type KnowledgeWorkOrderFieldsSettings struct {
	Field []*KnowledgeWorkOrderField `xml:"field,omitempty" json:"field,omitempty"`
}

type KnowledgeWorkOrderField struct {
	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type KnowledgeWorkOrderLineItemFieldsSettings struct {
	Field []*KnowledgeWorkOrderLineItemField `xml:"field,omitempty" json:"field,omitempty"`
}

type KnowledgeWorkOrderLineItemField struct {
	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type LanguageSettings struct {
	*Metadata

	EnableCanadaIcuFormat bool `xml:"enableCanadaIcuFormat,omitempty" json:"enableCanadaIcuFormat,omitempty"`

	EnableDataTranslation bool `xml:"enableDataTranslation,omitempty" json:"enableDataTranslation,omitempty"`

	EnableEndUserLanguages bool `xml:"enableEndUserLanguages,omitempty" json:"enableEndUserLanguages,omitempty"`

	EnableICULocaleDateFormat bool `xml:"enableICULocaleDateFormat,omitempty" json:"enableICULocaleDateFormat,omitempty"`

	EnableLanguageExtensionPackage bool `xml:"enableLanguageExtensionPackage,omitempty" json:"enableLanguageExtensionPackage,omitempty"`

	EnableLocalNamesForStdObjects bool `xml:"enableLocalNamesForStdObjects,omitempty" json:"enableLocalNamesForStdObjects,omitempty"`

	EnableLocaleInsensitiveFiltering bool `xml:"enableLocaleInsensitiveFiltering,omitempty" json:"enableLocaleInsensitiveFiltering,omitempty"`

	EnablePlatformLanguages bool `xml:"enablePlatformLanguages,omitempty" json:"enablePlatformLanguages,omitempty"`

	EnableTranslationWorkbench bool `xml:"enableTranslationWorkbench,omitempty" json:"enableTranslationWorkbench,omitempty"`

	UseLanguageFallback bool `xml:"useLanguageFallback,omitempty" json:"useLanguageFallback,omitempty"`
}

type Layout struct {
	*Metadata

	CustomButtons []string `xml:"customButtons,omitempty" json:"customButtons,omitempty"`

	CustomConsoleComponents *CustomConsoleComponents `xml:"customConsoleComponents,omitempty" json:"customConsoleComponents,omitempty"`

	EmailDefault bool `xml:"emailDefault,omitempty" json:"emailDefault,omitempty"`

	ExcludeButtons []string `xml:"excludeButtons,omitempty" json:"excludeButtons,omitempty"`

	FeedLayout *FeedLayout `xml:"feedLayout,omitempty" json:"feedLayout,omitempty"`

	Headers []*LayoutHeader `xml:"headers,omitempty" json:"headers,omitempty"`

	LayoutSections []*LayoutSection `xml:"layoutSections,omitempty" json:"layoutSections,omitempty"`

	MiniLayout *MiniLayout `xml:"miniLayout,omitempty" json:"miniLayout,omitempty"`

	MultilineLayoutFields []string `xml:"multilineLayoutFields,omitempty" json:"multilineLayoutFields,omitempty"`

	PlatformActionList *PlatformActionList `xml:"platformActionList,omitempty" json:"platformActionList,omitempty"`

	QuickActionList *QuickActionList `xml:"quickActionList,omitempty" json:"quickActionList,omitempty"`

	RelatedContent *RelatedContent `xml:"relatedContent,omitempty" json:"relatedContent,omitempty"`

	RelatedLists []*RelatedListItem `xml:"relatedLists,omitempty" json:"relatedLists,omitempty"`

	RelatedObjects []string `xml:"relatedObjects,omitempty" json:"relatedObjects,omitempty"`

	RunAssignmentRulesDefault bool `xml:"runAssignmentRulesDefault,omitempty" json:"runAssignmentRulesDefault,omitempty"`

	ShowEmailCheckbox bool `xml:"showEmailCheckbox,omitempty" json:"showEmailCheckbox,omitempty"`

	ShowHighlightsPanel bool `xml:"showHighlightsPanel,omitempty" json:"showHighlightsPanel,omitempty"`

	ShowInteractionLogPanel bool `xml:"showInteractionLogPanel,omitempty" json:"showInteractionLogPanel,omitempty"`

	ShowKnowledgeComponent bool `xml:"showKnowledgeComponent,omitempty" json:"showKnowledgeComponent,omitempty"`

	ShowRunAssignmentRulesCheckbox bool `xml:"showRunAssignmentRulesCheckbox,omitempty" json:"showRunAssignmentRulesCheckbox,omitempty"`

	ShowSolutionSection bool `xml:"showSolutionSection,omitempty" json:"showSolutionSection,omitempty"`

	ShowSubmitAndAttachButton bool `xml:"showSubmitAndAttachButton,omitempty" json:"showSubmitAndAttachButton,omitempty"`

	SummaryLayout *SummaryLayout `xml:"summaryLayout,omitempty" json:"summaryLayout,omitempty"`
}

type CustomConsoleComponents struct {
	PrimaryTabComponents *PrimaryTabComponents `xml:"primaryTabComponents,omitempty" json:"primaryTabComponents,omitempty"`

	SubtabComponents *SubtabComponents `xml:"subtabComponents,omitempty" json:"subtabComponents,omitempty"`
}

type PrimaryTabComponents struct {
	Containers []*Container `xml:"containers,omitempty" json:"containers,omitempty"`
}

type Container struct {
	Height int32 `xml:"height,omitempty" json:"height,omitempty"`

	IsContainerAutoSizeEnabled bool `xml:"isContainerAutoSizeEnabled,omitempty" json:"isContainerAutoSizeEnabled,omitempty"`

	Region string `xml:"region,omitempty" json:"region,omitempty"`

	SidebarComponents []*SidebarComponent `xml:"sidebarComponents,omitempty" json:"sidebarComponents,omitempty"`

	Style string `xml:"style,omitempty" json:"style,omitempty"`

	Unit string `xml:"unit,omitempty" json:"unit,omitempty"`

	Width int32 `xml:"width,omitempty" json:"width,omitempty"`
}

type SidebarComponent struct {
	ComponentType string `xml:"componentType,omitempty" json:"componentType,omitempty"`

	CreateAction string `xml:"createAction,omitempty" json:"createAction,omitempty"`

	EnableLinking bool `xml:"enableLinking,omitempty" json:"enableLinking,omitempty"`

	Height int32 `xml:"height,omitempty" json:"height,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Lookup string `xml:"lookup,omitempty" json:"lookup,omitempty"`

	Page string `xml:"page,omitempty" json:"page,omitempty"`

	RelatedLists []*RelatedList `xml:"relatedLists,omitempty" json:"relatedLists,omitempty"`

	Unit string `xml:"unit,omitempty" json:"unit,omitempty"`

	UpdateAction string `xml:"updateAction,omitempty" json:"updateAction,omitempty"`

	Width int32 `xml:"width,omitempty" json:"width,omitempty"`
}

type RelatedList struct {
	HideOnDetail bool `xml:"hideOnDetail,omitempty" json:"hideOnDetail,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type SubtabComponents struct {
	Containers []*Container `xml:"containers,omitempty" json:"containers,omitempty"`
}

type FeedLayout struct {
	AutocollapsePublisher bool `xml:"autocollapsePublisher,omitempty" json:"autocollapsePublisher,omitempty"`

	CompactFeed bool `xml:"compactFeed,omitempty" json:"compactFeed,omitempty"`

	FeedFilterPosition *FeedLayoutFilterPosition `xml:"feedFilterPosition,omitempty" json:"feedFilterPosition,omitempty"`

	FeedFilters []*FeedLayoutFilter `xml:"feedFilters,omitempty" json:"feedFilters,omitempty"`

	FullWidthFeed bool `xml:"fullWidthFeed,omitempty" json:"fullWidthFeed,omitempty"`

	HideSidebar bool `xml:"hideSidebar,omitempty" json:"hideSidebar,omitempty"`

	HighlightExternalFeedItems bool `xml:"highlightExternalFeedItems,omitempty" json:"highlightExternalFeedItems,omitempty"`

	LeftComponents []*FeedLayoutComponent `xml:"leftComponents,omitempty" json:"leftComponents,omitempty"`

	RightComponents []*FeedLayoutComponent `xml:"rightComponents,omitempty" json:"rightComponents,omitempty"`

	UseInlineFiltersInConsole bool `xml:"useInlineFiltersInConsole,omitempty" json:"useInlineFiltersInConsole,omitempty"`
}

type FeedLayoutFilter struct {
	FeedFilterName string `xml:"feedFilterName,omitempty" json:"feedFilterName,omitempty"`

	FeedFilterType *FeedLayoutFilterType `xml:"feedFilterType,omitempty" json:"feedFilterType,omitempty"`

	FeedItemType *FeedItemType `xml:"feedItemType,omitempty" json:"feedItemType,omitempty"`
}

type FeedLayoutComponent struct {
	ComponentType *FeedLayoutComponentType `xml:"componentType,omitempty" json:"componentType,omitempty"`

	Height int32 `xml:"height,omitempty" json:"height,omitempty"`

	Page string `xml:"page,omitempty" json:"page,omitempty"`
}

type LayoutSection struct {
	CustomLabel bool `xml:"customLabel,omitempty" json:"customLabel,omitempty"`

	DetailHeading bool `xml:"detailHeading,omitempty" json:"detailHeading,omitempty"`

	EditHeading bool `xml:"editHeading,omitempty" json:"editHeading,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	LayoutColumns []*LayoutColumn `xml:"layoutColumns,omitempty" json:"layoutColumns,omitempty"`

	Style *LayoutSectionStyle `xml:"style,omitempty" json:"style,omitempty"`
}

type LayoutColumn struct {
	LayoutItems []*LayoutItem `xml:"layoutItems,omitempty" json:"layoutItems,omitempty"`

	Reserved string `xml:"reserved,omitempty" json:"reserved,omitempty"`
}

type LayoutItem struct {
	AnalyticsCloudComponent *AnalyticsCloudComponentLayoutItem `xml:"analyticsCloudComponent,omitempty" json:"analyticsCloudComponent,omitempty"`

	Behavior *UiBehavior `xml:"behavior,omitempty" json:"behavior,omitempty"`

	Canvas string `xml:"canvas,omitempty" json:"canvas,omitempty"`

	Component string `xml:"component,omitempty" json:"component,omitempty"`

	CustomLink string `xml:"customLink,omitempty" json:"customLink,omitempty"`

	EmptySpace bool `xml:"emptySpace,omitempty" json:"emptySpace,omitempty"`

	Field string `xml:"field,omitempty" json:"field,omitempty"`

	Height int32 `xml:"height,omitempty" json:"height,omitempty"`

	Page string `xml:"page,omitempty" json:"page,omitempty"`

	ReportChartComponent *ReportChartComponentLayoutItem `xml:"reportChartComponent,omitempty" json:"reportChartComponent,omitempty"`

	Scontrol string `xml:"scontrol,omitempty" json:"scontrol,omitempty"`

	ShowLabel bool `xml:"showLabel,omitempty" json:"showLabel,omitempty"`

	ShowScrollbars bool `xml:"showScrollbars,omitempty" json:"showScrollbars,omitempty"`

	Width string `xml:"width,omitempty" json:"width,omitempty"`
}

type AnalyticsCloudComponentLayoutItem struct {
	AssetType string `xml:"assetType,omitempty" json:"assetType,omitempty"`

	DevName string `xml:"devName,omitempty" json:"devName,omitempty"`

	Error string `xml:"error,omitempty" json:"error,omitempty"`

	Filter string `xml:"filter,omitempty" json:"filter,omitempty"`

	Height int32 `xml:"height,omitempty" json:"height,omitempty"`

	HideOnError bool `xml:"hideOnError,omitempty" json:"hideOnError,omitempty"`

	ShowHeader bool `xml:"showHeader,omitempty" json:"showHeader,omitempty"`

	ShowSharing bool `xml:"showSharing,omitempty" json:"showSharing,omitempty"`

	ShowTitle bool `xml:"showTitle,omitempty" json:"showTitle,omitempty"`

	Width string `xml:"width,omitempty" json:"width,omitempty"`
}

type ReportChartComponentLayoutItem struct {
	CacheData bool `xml:"cacheData,omitempty" json:"cacheData,omitempty"`

	ContextFilterableField string `xml:"contextFilterableField,omitempty" json:"contextFilterableField,omitempty"`

	Error string `xml:"error,omitempty" json:"error,omitempty"`

	HideOnError bool `xml:"hideOnError,omitempty" json:"hideOnError,omitempty"`

	IncludeContext bool `xml:"includeContext,omitempty" json:"includeContext,omitempty"`

	ReportName string `xml:"reportName,omitempty" json:"reportName,omitempty"`

	ShowTitle bool `xml:"showTitle,omitempty" json:"showTitle,omitempty"`

	Size *ReportChartComponentSize `xml:"size,omitempty" json:"size,omitempty"`
}

type MiniLayout struct {
	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`

	RelatedLists []*RelatedListItem `xml:"relatedLists,omitempty" json:"relatedLists,omitempty"`
}

type RelatedListItem struct {
	CustomButtons []string `xml:"customButtons,omitempty" json:"customButtons,omitempty"`

	ExcludeButtons []string `xml:"excludeButtons,omitempty" json:"excludeButtons,omitempty"`

	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`

	QuickActions []string `xml:"quickActions,omitempty" json:"quickActions,omitempty"`

	RelatedList string `xml:"relatedList,omitempty" json:"relatedList,omitempty"`

	SortField string `xml:"sortField,omitempty" json:"sortField,omitempty"`

	SortOrder *SortOrder `xml:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

type RelatedContent struct {
	RelatedContentItems []*RelatedContentItem `xml:"relatedContentItems,omitempty" json:"relatedContentItems,omitempty"`
}

type RelatedContentItem struct {
	LayoutItem *LayoutItem `xml:"layoutItem,omitempty" json:"layoutItem,omitempty"`
}

type SummaryLayout struct {
	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	SizeX int32 `xml:"sizeX,omitempty" json:"sizeX,omitempty"`

	SizeY int32 `xml:"sizeY,omitempty" json:"sizeY,omitempty"`

	SizeZ int32 `xml:"sizeZ,omitempty" json:"sizeZ,omitempty"`

	SummaryLayoutItems []*SummaryLayoutItem `xml:"summaryLayoutItems,omitempty" json:"summaryLayoutItems,omitempty"`

	SummaryLayoutStyle *SummaryLayoutStyle `xml:"summaryLayoutStyle,omitempty" json:"summaryLayoutStyle,omitempty"`
}

type SummaryLayoutItem struct {
	CustomLink string `xml:"customLink,omitempty" json:"customLink,omitempty"`

	Field string `xml:"field,omitempty" json:"field,omitempty"`

	PosX int32 `xml:"posX,omitempty" json:"posX,omitempty"`

	PosY int32 `xml:"posY,omitempty" json:"posY,omitempty"`

	PosZ int32 `xml:"posZ,omitempty" json:"posZ,omitempty"`
}

type LeadConfigSettings struct {
	*Metadata

	DoesEnableLeadConvertDefaultSubjectBlankTaskCreation bool `xml:"doesEnableLeadConvertDefaultSubjectBlankTaskCreation,omitempty" json:"doesEnableLeadConvertDefaultSubjectBlankTaskCreation,omitempty"`

	DoesHideOpportunityInConvertLeadWindow bool `xml:"doesHideOpportunityInConvertLeadWindow,omitempty" json:"doesHideOpportunityInConvertLeadWindow,omitempty"`

	DoesPreserveLeadStatus bool `xml:"doesPreserveLeadStatus,omitempty" json:"doesPreserveLeadStatus,omitempty"`

	DoesSelectNoOpportunityOnConvertLead bool `xml:"doesSelectNoOpportunityOnConvertLead,omitempty" json:"doesSelectNoOpportunityOnConvertLead,omitempty"`

	DoesTrackHistory bool `xml:"doesTrackHistory,omitempty" json:"doesTrackHistory,omitempty"`

	EnableConversionsOnMobile bool `xml:"enableConversionsOnMobile,omitempty" json:"enableConversionsOnMobile,omitempty"`

	EnableOrgWideMergeAndDelete bool `xml:"enableOrgWideMergeAndDelete,omitempty" json:"enableOrgWideMergeAndDelete,omitempty"`

	ShouldLeadConvertRequireValidation bool `xml:"shouldLeadConvertRequireValidation,omitempty" json:"shouldLeadConvertRequireValidation,omitempty"`

	ShouldSendNotificationEmailWhenLeadOwnerUpdatesViaApexInLEX bool `xml:"shouldSendNotificationEmailWhenLeadOwnerUpdatesViaApexInLEX,omitempty" json:"shouldSendNotificationEmailWhenLeadOwnerUpdatesViaApexInLEX,omitempty"`
}

type LeadConvertSettings struct {
	*Metadata

	AllowOwnerChange bool `xml:"allowOwnerChange,omitempty" json:"allowOwnerChange,omitempty"`

	ObjectMapping []*ObjectMapping `xml:"objectMapping,omitempty" json:"objectMapping,omitempty"`

	OpportunityCreationOptions *VisibleOrRequired `xml:"opportunityCreationOptions,omitempty" json:"opportunityCreationOptions,omitempty"`
}

type Letterhead struct {
	*Metadata

	Available bool `xml:"available,omitempty" json:"available,omitempty"`

	BackgroundColor string `xml:"backgroundColor,omitempty" json:"backgroundColor,omitempty"`

	BodyColor string `xml:"bodyColor,omitempty" json:"bodyColor,omitempty"`

	BottomLine *LetterheadLine `xml:"bottomLine,omitempty" json:"bottomLine,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Footer *LetterheadHeaderFooter `xml:"footer,omitempty" json:"footer,omitempty"`

	Header *LetterheadHeaderFooter `xml:"header,omitempty" json:"header,omitempty"`

	MiddleLine *LetterheadLine `xml:"middleLine,omitempty" json:"middleLine,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	TopLine *LetterheadLine `xml:"topLine,omitempty" json:"topLine,omitempty"`
}

type LetterheadLine struct {
	Color string `xml:"color,omitempty" json:"color,omitempty"`

	Height int32 `xml:"height,omitempty" json:"height,omitempty"`
}

type LetterheadHeaderFooter struct {
	BackgroundColor string `xml:"backgroundColor,omitempty" json:"backgroundColor,omitempty"`

	Height int32 `xml:"height,omitempty" json:"height,omitempty"`

	HorizontalAlignment *LetterheadHorizontalAlignment `xml:"horizontalAlignment,omitempty" json:"horizontalAlignment,omitempty"`

	Logo string `xml:"logo,omitempty" json:"logo,omitempty"`

	VerticalAlignment *LetterheadVerticalAlignment `xml:"verticalAlignment,omitempty" json:"verticalAlignment,omitempty"`
}

type LicenseDefinition struct {
	*Metadata

	AggregationGroup string `xml:"aggregationGroup,omitempty" json:"aggregationGroup,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	IsPublished bool `xml:"isPublished,omitempty" json:"isPublished,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	LicensedCustomPermissions []*LicensedCustomPermissions `xml:"licensedCustomPermissions,omitempty" json:"licensedCustomPermissions,omitempty"`

	LicensingAuthority string `xml:"licensingAuthority,omitempty" json:"licensingAuthority,omitempty"`

	LicensingAuthorityProvider string `xml:"licensingAuthorityProvider,omitempty" json:"licensingAuthorityProvider,omitempty"`

	MinPlatformVersion int32 `xml:"minPlatformVersion,omitempty" json:"minPlatformVersion,omitempty"`

	Origin string `xml:"origin,omitempty" json:"origin,omitempty"`

	Revision int32 `xml:"revision,omitempty" json:"revision,omitempty"`

	TrialLicenseDuration int32 `xml:"trialLicenseDuration,omitempty" json:"trialLicenseDuration,omitempty"`

	TrialLicenseQuantity int32 `xml:"trialLicenseQuantity,omitempty" json:"trialLicenseQuantity,omitempty"`
}

type LicensedCustomPermissions struct {
	CustomPermission string `xml:"customPermission,omitempty" json:"customPermission,omitempty"`

	LicenseDefinition string `xml:"licenseDefinition,omitempty" json:"licenseDefinition,omitempty"`
}

type LicensingSettings struct {
	*Metadata

	EnableAutoCreateLicenseDefinition bool `xml:"enableAutoCreateLicenseDefinition,omitempty" json:"enableAutoCreateLicenseDefinition,omitempty"`
}

type LightningBolt struct {
	*Metadata

	Category *LightningBoltCategory `xml:"category,omitempty" json:"category,omitempty"`

	LightningBoltFeatures []*LightningBoltFeatures `xml:"lightningBoltFeatures,omitempty" json:"lightningBoltFeatures,omitempty"`

	LightningBoltImages []*LightningBoltImages `xml:"lightningBoltImages,omitempty" json:"lightningBoltImages,omitempty"`

	LightningBoltItems []*LightningBoltItems `xml:"lightningBoltItems,omitempty" json:"lightningBoltItems,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	Publisher string `xml:"publisher,omitempty" json:"publisher,omitempty"`

	Summary string `xml:"summary,omitempty" json:"summary,omitempty"`
}

type LightningBoltFeatures struct {
	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Order int32 `xml:"order,omitempty" json:"order,omitempty"`

	Title string `xml:"title,omitempty" json:"title,omitempty"`
}

type LightningBoltImages struct {
	Image string `xml:"image,omitempty" json:"image,omitempty"`

	Order int32 `xml:"order,omitempty" json:"order,omitempty"`
}

type LightningBoltItems struct {
	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Type_ string `xml:"type,omitempty" json:"type,omitempty"`
}

type LightningComponentBundle struct {
	*Metadata

	ApiVersion float64 `xml:"apiVersion,omitempty" json:"apiVersion,omitempty"`

	Capabilities *Capabilities `xml:"capabilities,omitempty" json:"capabilities,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	IsExplicitImport bool `xml:"isExplicitImport,omitempty" json:"isExplicitImport,omitempty"`

	IsExposed bool `xml:"isExposed,omitempty" json:"isExposed,omitempty"`

	LwcResources *LwcResources `xml:"lwcResources,omitempty" json:"lwcResources,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	RuntimeNamespace string `xml:"runtimeNamespace,omitempty" json:"runtimeNamespace,omitempty"`

	TargetConfigs []byte `xml:"targetConfigs,omitempty" json:"targetConfigs,omitempty"`

	Targets *Targets `xml:"targets,omitempty" json:"targets,omitempty"`
}

type Capabilities struct {
	Capability []string `xml:"capability,omitempty" json:"capability,omitempty"`
}

type LwcResources struct {
	LwcResource []*LwcResource `xml:"lwcResource,omitempty" json:"lwcResource,omitempty"`
}

type LwcResource struct {
	FilePath string `xml:"filePath,omitempty" json:"filePath,omitempty"`

	Source []byte `xml:"source,omitempty" json:"source,omitempty"`
}

type Targets struct {
	Target []string `xml:"target,omitempty" json:"target,omitempty"`
}

type LightningExperienceSettings struct {
	*Metadata

	ActiveThemeName string `xml:"activeThemeName,omitempty" json:"activeThemeName,omitempty"`

	EnableAccessCheckCrucPref bool `xml:"enableAccessCheckCrucPref,omitempty" json:"enableAccessCheckCrucPref,omitempty"`

	EnableApiUserLtngOutAccessPref bool `xml:"enableApiUserLtngOutAccessPref,omitempty" json:"enableApiUserLtngOutAccessPref,omitempty"`

	EnableAuraCDNPref bool `xml:"enableAuraCDNPref,omitempty" json:"enableAuraCDNPref,omitempty"`

	EnableAuraSecStaticResCRUCPref bool `xml:"enableAuraSecStaticResCRUCPref,omitempty" json:"enableAuraSecStaticResCRUCPref,omitempty"`

	EnableErrorExperienceEnabled bool `xml:"enableErrorExperienceEnabled,omitempty" json:"enableErrorExperienceEnabled,omitempty"`

	EnableFeedbackInMobile bool `xml:"enableFeedbackInMobile,omitempty" json:"enableFeedbackInMobile,omitempty"`

	EnableGoogleSheetsForSfdcEnabled bool `xml:"enableGoogleSheetsForSfdcEnabled,omitempty" json:"enableGoogleSheetsForSfdcEnabled,omitempty"`

	EnableHideOpenInQuip bool `xml:"enableHideOpenInQuip,omitempty" json:"enableHideOpenInQuip,omitempty"`

	EnableIE11DeprecationMsgHidden bool `xml:"enableIE11DeprecationMsgHidden,omitempty" json:"enableIE11DeprecationMsgHidden,omitempty"`

	EnableIE11LEXCrucPref bool `xml:"enableIE11LEXCrucPref,omitempty" json:"enableIE11LEXCrucPref,omitempty"`

	EnableInAppLearning bool `xml:"enableInAppLearning,omitempty" json:"enableInAppLearning,omitempty"`

	EnableInAppTooltips bool `xml:"enableInAppTooltips,omitempty" json:"enableInAppTooltips,omitempty"`

	EnableLEXExtensionComponentCustomization bool `xml:"enableLEXExtensionComponentCustomization,omitempty" json:"enableLEXExtensionComponentCustomization,omitempty"`

	EnableLEXExtensionDarkMode bool `xml:"enableLEXExtensionDarkMode,omitempty" json:"enableLEXExtensionDarkMode,omitempty"`

	EnableLEXExtensionInlineEditModifier bool `xml:"enableLEXExtensionInlineEditModifier,omitempty" json:"enableLEXExtensionInlineEditModifier,omitempty"`

	EnableLEXExtensionLinkGrabber bool `xml:"enableLEXExtensionLinkGrabber,omitempty" json:"enableLEXExtensionLinkGrabber,omitempty"`

	EnableLEXExtensionRelatedLists bool `xml:"enableLEXExtensionRelatedLists,omitempty" json:"enableLEXExtensionRelatedLists,omitempty"`

	EnableLEXExtensionRequiredFields bool `xml:"enableLEXExtensionRequiredFields,omitempty" json:"enableLEXExtensionRequiredFields,omitempty"`

	EnableLEXExtensionTrailhead bool `xml:"enableLEXExtensionTrailhead,omitempty" json:"enableLEXExtensionTrailhead,omitempty"`

	EnableLEXOnIpadEnabled bool `xml:"enableLEXOnIpadEnabled,omitempty" json:"enableLEXOnIpadEnabled,omitempty"`

	EnableLexEndUsersNoSwitching bool `xml:"enableLexEndUsersNoSwitching,omitempty" json:"enableLexEndUsersNoSwitching,omitempty"`

	EnableNavPersonalizationOptOut bool `xml:"enableNavPersonalizationOptOut,omitempty" json:"enableNavPersonalizationOptOut,omitempty"`

	EnableNoBackgroundNavigations bool `xml:"enableNoBackgroundNavigations,omitempty" json:"enableNoBackgroundNavigations,omitempty"`

	EnableQuip bool `xml:"enableQuip,omitempty" json:"enableQuip,omitempty"`

	EnableRemoveThemeBrandBanner bool `xml:"enableRemoveThemeBrandBanner,omitempty" json:"enableRemoveThemeBrandBanner,omitempty"`

	EnableS1BannerPref bool `xml:"enableS1BannerPref,omitempty" json:"enableS1BannerPref,omitempty"`

	EnableS1BrowserEnabled bool `xml:"enableS1BrowserEnabled,omitempty" json:"enableS1BrowserEnabled,omitempty"`

	EnableS1DesktopEnabled bool `xml:"enableS1DesktopEnabled,omitempty" json:"enableS1DesktopEnabled,omitempty"`

	EnableS1UiLoggingEnabled bool `xml:"enableS1UiLoggingEnabled,omitempty" json:"enableS1UiLoggingEnabled,omitempty"`

	EnableSalesforceNext bool `xml:"enableSalesforceNext,omitempty" json:"enableSalesforceNext,omitempty"`

	EnableSidToken3rdPartyAuraApp bool `xml:"enableSidToken3rdPartyAuraApp,omitempty" json:"enableSidToken3rdPartyAuraApp,omitempty"`

	EnableSkypeChatEnabled bool `xml:"enableSkypeChatEnabled,omitempty" json:"enableSkypeChatEnabled,omitempty"`

	EnableSparkAllUsers bool `xml:"enableSparkAllUsers,omitempty" json:"enableSparkAllUsers,omitempty"`

	EnableSparkConversationEnabled bool `xml:"enableSparkConversationEnabled,omitempty" json:"enableSparkConversationEnabled,omitempty"`

	EnableTryLightningOptOut bool `xml:"enableTryLightningOptOut,omitempty" json:"enableTryLightningOptOut,omitempty"`

	EnableUseS1AlohaDesktop bool `xml:"enableUseS1AlohaDesktop,omitempty" json:"enableUseS1AlohaDesktop,omitempty"`

	EnableUsersAreLightningOnly bool `xml:"enableUsersAreLightningOnly,omitempty" json:"enableUsersAreLightningOnly,omitempty"`

	EnableWebExEnabled bool `xml:"enableWebExEnabled,omitempty" json:"enableWebExEnabled,omitempty"`

	EnableWebexAllUsers bool `xml:"enableWebexAllUsers,omitempty" json:"enableWebexAllUsers,omitempty"`

	IsLEXExtensionComponentCustomizationOff bool `xml:"isLEXExtensionComponentCustomizationOff,omitempty" json:"isLEXExtensionComponentCustomizationOff,omitempty"`

	IsLEXExtensionDarkModeOff bool `xml:"isLEXExtensionDarkModeOff,omitempty" json:"isLEXExtensionDarkModeOff,omitempty"`

	IsLEXExtensionLinkGrabberOff bool `xml:"isLEXExtensionLinkGrabberOff,omitempty" json:"isLEXExtensionLinkGrabberOff,omitempty"`

	IsLEXExtensionOff bool `xml:"isLEXExtensionOff,omitempty" json:"isLEXExtensionOff,omitempty"`
}

type LightningExperienceTheme struct {
	*Metadata

	DefaultBrandingSet string `xml:"defaultBrandingSet,omitempty" json:"defaultBrandingSet,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	ShouldOverrideLoadingImage bool `xml:"shouldOverrideLoadingImage,omitempty" json:"shouldOverrideLoadingImage,omitempty"`
}

type LightningMessageChannel struct {
	*Metadata

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	IsExposed bool `xml:"isExposed,omitempty" json:"isExposed,omitempty"`

	LightningMessageFields []*LightningMessageField `xml:"lightningMessageFields,omitempty" json:"lightningMessageFields,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type LightningMessageField struct {
	Description string `xml:"description,omitempty" json:"description,omitempty"`

	FieldName string `xml:"fieldName,omitempty" json:"fieldName,omitempty"`
}

type LightningOnboardingConfig struct {
	*Metadata

	CollaborationGroup *string `xml:"collaborationGroup,omitempty" json:"collaborationGroup,omitempty"`

	CustomQuestion string `xml:"customQuestion,omitempty" json:"customQuestion,omitempty"`

	FeedbackFormDaysFrequency *int32 `xml:"feedbackFormDaysFrequency,omitempty" json:"feedbackFormDaysFrequency,omitempty"`

	IsCustom bool `xml:"isCustom,omitempty" json:"isCustom,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	PromptDelayTime *int32 `xml:"promptDelayTime,omitempty" json:"promptDelayTime,omitempty"`

	SendFeedbackToSalesforce bool `xml:"sendFeedbackToSalesforce,omitempty" json:"sendFeedbackToSalesforce,omitempty"`
}

type LiveAgentSettings struct {
	*Metadata

	EnableChatFindOrCreateEnable bool `xml:"enableChatFindOrCreateEnable,omitempty" json:"enableChatFindOrCreateEnable,omitempty"`

	EnableLiveAgent bool `xml:"enableLiveAgent,omitempty" json:"enableLiveAgent,omitempty"`

	EnableQuickTextEnabled bool `xml:"enableQuickTextEnabled,omitempty" json:"enableQuickTextEnabled,omitempty"`
}

type LiveChatAgentConfig struct {
	*Metadata

	Assignments *AgentConfigAssignments `xml:"assignments,omitempty" json:"assignments,omitempty"`

	AutoGreeting string `xml:"autoGreeting,omitempty" json:"autoGreeting,omitempty"`

	Capacity int32 `xml:"capacity,omitempty" json:"capacity,omitempty"`

	CriticalWaitTime int32 `xml:"criticalWaitTime,omitempty" json:"criticalWaitTime,omitempty"`

	CustomAgentName string `xml:"customAgentName,omitempty" json:"customAgentName,omitempty"`

	DisableTransferConferenceGreeting bool `xml:"disableTransferConferenceGreeting,omitempty" json:"disableTransferConferenceGreeting,omitempty"`

	EnableAgentFileTransfer bool `xml:"enableAgentFileTransfer,omitempty" json:"enableAgentFileTransfer,omitempty"`

	EnableAgentSneakPeek bool `xml:"enableAgentSneakPeek,omitempty" json:"enableAgentSneakPeek,omitempty"`

	EnableAssistanceFlag bool `xml:"enableAssistanceFlag,omitempty" json:"enableAssistanceFlag,omitempty"`

	EnableAutoAwayOnDecline bool `xml:"enableAutoAwayOnDecline,omitempty" json:"enableAutoAwayOnDecline,omitempty"`

	EnableAutoAwayOnPushTimeout bool `xml:"enableAutoAwayOnPushTimeout,omitempty" json:"enableAutoAwayOnPushTimeout,omitempty"`

	EnableChatConferencing bool `xml:"enableChatConferencing,omitempty" json:"enableChatConferencing,omitempty"`

	EnableChatMonitoring bool `xml:"enableChatMonitoring,omitempty" json:"enableChatMonitoring,omitempty"`

	EnableChatTransferToAgent bool `xml:"enableChatTransferToAgent,omitempty" json:"enableChatTransferToAgent,omitempty"`

	EnableChatTransferToButton bool `xml:"enableChatTransferToButton,omitempty" json:"enableChatTransferToButton,omitempty"`

	EnableChatTransferToSkill bool `xml:"enableChatTransferToSkill,omitempty" json:"enableChatTransferToSkill,omitempty"`

	EnableLogoutSound bool `xml:"enableLogoutSound,omitempty" json:"enableLogoutSound,omitempty"`

	EnableNotifications bool `xml:"enableNotifications,omitempty" json:"enableNotifications,omitempty"`

	EnableRequestSound bool `xml:"enableRequestSound,omitempty" json:"enableRequestSound,omitempty"`

	EnableSneakPeek bool `xml:"enableSneakPeek,omitempty" json:"enableSneakPeek,omitempty"`

	EnableVisitorBlocking bool `xml:"enableVisitorBlocking,omitempty" json:"enableVisitorBlocking,omitempty"`

	EnableWhisperMessage bool `xml:"enableWhisperMessage,omitempty" json:"enableWhisperMessage,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	SupervisorDefaultAgentStatusFilter *SupervisorAgentStatusFilter `xml:"supervisorDefaultAgentStatusFilter,omitempty" json:"supervisorDefaultAgentStatusFilter,omitempty"`

	SupervisorDefaultButtonFilter string `xml:"supervisorDefaultButtonFilter,omitempty" json:"supervisorDefaultButtonFilter,omitempty"`

	SupervisorDefaultSkillFilter string `xml:"supervisorDefaultSkillFilter,omitempty" json:"supervisorDefaultSkillFilter,omitempty"`

	SupervisorSkills *SupervisorAgentConfigSkills `xml:"supervisorSkills,omitempty" json:"supervisorSkills,omitempty"`

	TransferableButtons *AgentConfigButtons `xml:"transferableButtons,omitempty" json:"transferableButtons,omitempty"`

	TransferableSkills *AgentConfigSkills `xml:"transferableSkills,omitempty" json:"transferableSkills,omitempty"`
}

type AgentConfigAssignments struct {
	Profiles *AgentConfigProfileAssignments `xml:"profiles,omitempty" json:"profiles,omitempty"`

	Users *AgentConfigUserAssignments `xml:"users,omitempty" json:"users,omitempty"`
}

type AgentConfigProfileAssignments struct {
	Profile []string `xml:"profile,omitempty" json:"profile,omitempty"`
}

type AgentConfigUserAssignments struct {
	User []string `xml:"user,omitempty" json:"user,omitempty"`
}

type SupervisorAgentConfigSkills struct {
	Skill []string `xml:"skill,omitempty" json:"skill,omitempty"`
}

type AgentConfigButtons struct {
	Button []string `xml:"button,omitempty" json:"button,omitempty"`
}

type AgentConfigSkills struct {
	Skill []string `xml:"skill,omitempty" json:"skill,omitempty"`
}

type LiveChatButton struct {
	*Metadata

	Animation *LiveChatButtonPresentation `xml:"animation,omitempty" json:"animation,omitempty"`

	AutoGreeting string `xml:"autoGreeting,omitempty" json:"autoGreeting,omitempty"`

	ChasitorIdleTimeout int32 `xml:"chasitorIdleTimeout,omitempty" json:"chasitorIdleTimeout,omitempty"`

	ChasitorIdleTimeoutWarning int32 `xml:"chasitorIdleTimeoutWarning,omitempty" json:"chasitorIdleTimeoutWarning,omitempty"`

	ChatPage string `xml:"chatPage,omitempty" json:"chatPage,omitempty"`

	CustomAgentName string `xml:"customAgentName,omitempty" json:"customAgentName,omitempty"`

	Deployments *LiveChatButtonDeployments `xml:"deployments,omitempty" json:"deployments,omitempty"`

	EnableQueue bool `xml:"enableQueue,omitempty" json:"enableQueue,omitempty"`

	InviteEndPosition *LiveChatButtonInviteEndPosition `xml:"inviteEndPosition,omitempty" json:"inviteEndPosition,omitempty"`

	InviteImage string `xml:"inviteImage,omitempty" json:"inviteImage,omitempty"`

	InviteStartPosition *LiveChatButtonInviteStartPosition `xml:"inviteStartPosition,omitempty" json:"inviteStartPosition,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	NumberOfReroutingAttempts int32 `xml:"numberOfReroutingAttempts,omitempty" json:"numberOfReroutingAttempts,omitempty"`

	OfflineImage string `xml:"offlineImage,omitempty" json:"offlineImage,omitempty"`

	OnlineImage string `xml:"onlineImage,omitempty" json:"onlineImage,omitempty"`

	OptionsCustomRoutingIsEnabled bool `xml:"optionsCustomRoutingIsEnabled,omitempty" json:"optionsCustomRoutingIsEnabled,omitempty"`

	OptionsHasChasitorIdleTimeout bool `xml:"optionsHasChasitorIdleTimeout,omitempty" json:"optionsHasChasitorIdleTimeout,omitempty"`

	OptionsHasInviteAfterAccept bool `xml:"optionsHasInviteAfterAccept,omitempty" json:"optionsHasInviteAfterAccept,omitempty"`

	OptionsHasInviteAfterReject bool `xml:"optionsHasInviteAfterReject,omitempty" json:"optionsHasInviteAfterReject,omitempty"`

	OptionsHasRerouteDeclinedRequest bool `xml:"optionsHasRerouteDeclinedRequest,omitempty" json:"optionsHasRerouteDeclinedRequest,omitempty"`

	OptionsIsAutoAccept bool `xml:"optionsIsAutoAccept,omitempty" json:"optionsIsAutoAccept,omitempty"`

	OptionsIsInviteAutoRemove bool `xml:"optionsIsInviteAutoRemove,omitempty" json:"optionsIsInviteAutoRemove,omitempty"`

	OverallQueueLength int32 `xml:"overallQueueLength,omitempty" json:"overallQueueLength,omitempty"`

	PerAgentQueueLength int32 `xml:"perAgentQueueLength,omitempty" json:"perAgentQueueLength,omitempty"`

	PostChatPage string `xml:"postChatPage,omitempty" json:"postChatPage,omitempty"`

	PostChatUrl string `xml:"postChatUrl,omitempty" json:"postChatUrl,omitempty"`

	PreChatFormPage string `xml:"preChatFormPage,omitempty" json:"preChatFormPage,omitempty"`

	PreChatFormUrl string `xml:"preChatFormUrl,omitempty" json:"preChatFormUrl,omitempty"`

	PushTimeOut int32 `xml:"pushTimeOut,omitempty" json:"pushTimeOut,omitempty"`

	RoutingType *LiveChatButtonRoutingType `xml:"routingType,omitempty" json:"routingType,omitempty"`

	Site string `xml:"site,omitempty" json:"site,omitempty"`

	Skills *LiveChatButtonSkills `xml:"skills,omitempty" json:"skills,omitempty"`

	TimeToRemoveInvite int32 `xml:"timeToRemoveInvite,omitempty" json:"timeToRemoveInvite,omitempty"`

	Type_ *LiveChatButtonType `xml:"type,omitempty" json:"type,omitempty"`

	WindowLanguage *Language `xml:"windowLanguage,omitempty" json:"windowLanguage,omitempty"`
}

type LiveChatButtonDeployments struct {
	Deployment []string `xml:"deployment,omitempty" json:"deployment,omitempty"`
}

type LiveChatButtonSkills struct {
	Skill []string `xml:"skill,omitempty" json:"skill,omitempty"`
}

type LiveChatDeployment struct {
	*Metadata

	BrandingImage string `xml:"brandingImage,omitempty" json:"brandingImage,omitempty"`

	ConnectionTimeoutDuration int32 `xml:"connectionTimeoutDuration,omitempty" json:"connectionTimeoutDuration,omitempty"`

	ConnectionWarningDuration int32 `xml:"connectionWarningDuration,omitempty" json:"connectionWarningDuration,omitempty"`

	DisplayQueuePosition bool `xml:"displayQueuePosition,omitempty" json:"displayQueuePosition,omitempty"`

	DomainWhiteList *LiveChatDeploymentDomainWhitelist `xml:"domainWhiteList,omitempty" json:"domainWhiteList,omitempty"`

	EnablePrechatApi bool `xml:"enablePrechatApi,omitempty" json:"enablePrechatApi,omitempty"`

	EnableTranscriptSave bool `xml:"enableTranscriptSave,omitempty" json:"enableTranscriptSave,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	MobileBrandingImage string `xml:"mobileBrandingImage,omitempty" json:"mobileBrandingImage,omitempty"`

	Site string `xml:"site,omitempty" json:"site,omitempty"`

	WindowTitle string `xml:"windowTitle,omitempty" json:"windowTitle,omitempty"`
}

type LiveChatDeploymentDomainWhitelist struct {
	Domain []string `xml:"domain,omitempty" json:"domain,omitempty"`
}

type LiveChatSensitiveDataRule struct {
	*Metadata

	ActionType *SensitiveDataActionType `xml:"actionType,omitempty" json:"actionType,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	EnforceOn int32 `xml:"enforceOn,omitempty" json:"enforceOn,omitempty"`

	IsEnabled bool `xml:"isEnabled,omitempty" json:"isEnabled,omitempty"`

	Pattern string `xml:"pattern,omitempty" json:"pattern,omitempty"`

	Priority int32 `xml:"priority,omitempty" json:"priority,omitempty"`

	Replacement string `xml:"replacement,omitempty" json:"replacement,omitempty"`
}

type LiveMessageSettings struct {
	*Metadata

	EnableCheckCEUserPerm bool `xml:"enableCheckCEUserPerm,omitempty" json:"enableCheckCEUserPerm,omitempty"`

	EnableLiveMessage bool `xml:"enableLiveMessage,omitempty" json:"enableLiveMessage,omitempty"`
}

type MLDataDefinition struct {
	*Metadata

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	EntityDeveloperName string `xml:"entityDeveloperName,omitempty" json:"entityDeveloperName,omitempty"`

	ExcludedFields []string `xml:"excludedFields,omitempty" json:"excludedFields,omitempty"`

	IncludedFields []string `xml:"includedFields,omitempty" json:"includedFields,omitempty"`

	JoinFields []*MLField `xml:"joinFields,omitempty" json:"joinFields,omitempty"`

	ParentDefinitionDevName string `xml:"parentDefinitionDevName,omitempty" json:"parentDefinitionDevName,omitempty"`

	ScoringFilter *MLFilter `xml:"scoringFilter,omitempty" json:"scoringFilter,omitempty"`

	SegmentFilter *MLFilter `xml:"segmentFilter,omitempty" json:"segmentFilter,omitempty"`

	TrainingFilter *MLFilter `xml:"trainingFilter,omitempty" json:"trainingFilter,omitempty"`

	Type_ *MLDataDefinitionType `xml:"type,omitempty" json:"type,omitempty"`
}

type MLField struct {
	Entity string `xml:"entity,omitempty" json:"entity,omitempty"`

	Field string `xml:"field,omitempty" json:"field,omitempty"`

	RelatedField *MLField `xml:"relatedField,omitempty" json:"relatedField,omitempty"`

	RelationType *MLRelationType `xml:"relationType,omitempty" json:"relationType,omitempty"`

	Type_ *MLFieldType `xml:"type,omitempty" json:"type,omitempty"`
}

type MLFilter struct {
	FilterName string `xml:"filterName,omitempty" json:"filterName,omitempty"`

	LhFilter *MLFilter `xml:"lhFilter,omitempty" json:"lhFilter,omitempty"`

	LhPredictionField string `xml:"lhPredictionField,omitempty" json:"lhPredictionField,omitempty"`

	LhType *AIValueType `xml:"lhType,omitempty" json:"lhType,omitempty"`

	LhUnit *AIFilterUnit `xml:"lhUnit,omitempty" json:"lhUnit,omitempty"`

	LhValue string `xml:"lhValue,omitempty" json:"lhValue,omitempty"`

	Operation *AIFilterOperation `xml:"operation,omitempty" json:"operation,omitempty"`

	RhFilter *MLFilter `xml:"rhFilter,omitempty" json:"rhFilter,omitempty"`

	RhPredictionField string `xml:"rhPredictionField,omitempty" json:"rhPredictionField,omitempty"`

	RhType *AIValueType `xml:"rhType,omitempty" json:"rhType,omitempty"`

	RhUnit *AIFilterUnit `xml:"rhUnit,omitempty" json:"rhUnit,omitempty"`

	RhValue string `xml:"rhValue,omitempty" json:"rhValue,omitempty"`

	SortOrder int32 `xml:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

type MLPredictionDefinition struct {
	*Metadata

	AiApplicationDeveloperName string `xml:"aiApplicationDeveloperName,omitempty" json:"aiApplicationDeveloperName,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	NegativeExpression *MLFilter `xml:"negativeExpression,omitempty" json:"negativeExpression,omitempty"`

	PositiveExpression *MLFilter `xml:"positiveExpression,omitempty" json:"positiveExpression,omitempty"`

	PredictionField string `xml:"predictionField,omitempty" json:"predictionField,omitempty"`

	Priority *int32 `xml:"priority,omitempty" json:"priority,omitempty"`

	PushbackField string `xml:"pushbackField,omitempty" json:"pushbackField,omitempty"`

	Status *MLPredictionDefinitionStatus `xml:"status,omitempty" json:"status,omitempty"`

	Type_ *AIPredictionType `xml:"type,omitempty" json:"type,omitempty"`
}

type MLRecommendationDefinition struct {
	*Metadata

	AiApplicationDeveloperName string `xml:"aiApplicationDeveloperName,omitempty" json:"aiApplicationDeveloperName,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	ExternalId string `xml:"externalId,omitempty" json:"externalId,omitempty"`

	InteractionDateTimeField string `xml:"interactionDateTimeField,omitempty" json:"interactionDateTimeField,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	NegativeExpression *MLFilter `xml:"negativeExpression,omitempty" json:"negativeExpression,omitempty"`

	PositiveExpression *MLFilter `xml:"positiveExpression,omitempty" json:"positiveExpression,omitempty"`

	Status *MLRecommendationDefinitionStatus `xml:"status,omitempty" json:"status,omitempty"`
}

type MacroSettings struct {
	*Metadata

	ContextualMacroFiltering bool `xml:"contextualMacroFiltering,omitempty" json:"contextualMacroFiltering,omitempty"`

	EnableAdvancedSearch bool `xml:"enableAdvancedSearch,omitempty" json:"enableAdvancedSearch,omitempty"`

	MacrosInFolders bool `xml:"macrosInFolders,omitempty" json:"macrosInFolders,omitempty"`
}

type ManagedContentType struct {
	*Metadata

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	ManagedContentNodeTypes []*ManagedContentNodeType `xml:"managedContentNodeTypes,omitempty" json:"managedContentNodeTypes,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type ManagedContentNodeType struct {
	HelpText string `xml:"helpText,omitempty" json:"helpText,omitempty"`

	IsLocalizable bool `xml:"isLocalizable,omitempty" json:"isLocalizable,omitempty"`

	IsRequired bool `xml:"isRequired,omitempty" json:"isRequired,omitempty"`

	NodeLabel string `xml:"nodeLabel,omitempty" json:"nodeLabel,omitempty"`

	NodeName string `xml:"nodeName,omitempty" json:"nodeName,omitempty"`

	NodeType *MCNodeType `xml:"nodeType,omitempty" json:"nodeType,omitempty"`

	PlaceholderText string `xml:"placeholderText,omitempty" json:"placeholderText,omitempty"`
}

type ManagedTopic struct {
	*Metadata

	ManagedTopicType string `xml:"managedTopicType,omitempty" json:"managedTopicType,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	ParentName string `xml:"parentName,omitempty" json:"parentName,omitempty"`

	Position int32 `xml:"position,omitempty" json:"position,omitempty"`

	TopicDescription string `xml:"topicDescription,omitempty" json:"topicDescription,omitempty"`
}

type ManagedTopics struct {
	*Metadata

	ManagedTopic []*ManagedTopic `xml:"managedTopic,omitempty" json:"managedTopic,omitempty"`
}

type MatchingRule struct {
	*Metadata

	BooleanFilter string `xml:"booleanFilter,omitempty" json:"booleanFilter,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	MatchingRuleItems []*MatchingRuleItem `xml:"matchingRuleItems,omitempty" json:"matchingRuleItems,omitempty"`

	RuleStatus *MatchingRuleStatus `xml:"ruleStatus,omitempty" json:"ruleStatus,omitempty"`
}

type MatchingRuleItem struct {
	BlankValueBehavior *BlankValueBehavior `xml:"blankValueBehavior,omitempty" json:"blankValueBehavior,omitempty"`

	FieldName string `xml:"fieldName,omitempty" json:"fieldName,omitempty"`

	MatchingMethod *MatchingMethod `xml:"matchingMethod,omitempty" json:"matchingMethod,omitempty"`
}

type MatchingRules struct {
	*Metadata

	MatchingRules []*MatchingRule `xml:"matchingRules,omitempty" json:"matchingRules,omitempty"`
}

type MeetingsSettings struct {
	*Metadata

	EnableSalesforceMeetings bool `xml:"enableSalesforceMeetings,omitempty" json:"enableSalesforceMeetings,omitempty"`

	EnableSalesforceMeetingsSyncCheck bool `xml:"enableSalesforceMeetingsSyncCheck,omitempty" json:"enableSalesforceMeetingsSyncCheck,omitempty"`

	EnableZoomVideoConference bool `xml:"enableZoomVideoConference,omitempty" json:"enableZoomVideoConference,omitempty"`
}

type MessagingChannel struct {
	*Metadata

	AutomatedResponses []*MessagingAutoResponse `xml:"automatedResponses,omitempty" json:"automatedResponses,omitempty"`

	CustomParameters []*MessagingChannelCustomParameter `xml:"customParameters,omitempty" json:"customParameters,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	MessagingChannelType *MessagingChannelType `xml:"messagingChannelType,omitempty" json:"messagingChannelType,omitempty"`

	SessionHandlerFlow string `xml:"sessionHandlerFlow,omitempty" json:"sessionHandlerFlow,omitempty"`

	SessionHandlerQueue string `xml:"sessionHandlerQueue,omitempty" json:"sessionHandlerQueue,omitempty"`

	SessionHandlerType *MessagingSessionHandlerType `xml:"sessionHandlerType,omitempty" json:"sessionHandlerType,omitempty"`

	StandardParameters []*MessagingChannelStandardParameter `xml:"standardParameters,omitempty" json:"standardParameters,omitempty"`
}

type MessagingAutoResponse struct {
	Response string `xml:"response,omitempty" json:"response,omitempty"`

	Type_ *MessagingAutoResponseType `xml:"type,omitempty" json:"type,omitempty"`
}

type MessagingChannelCustomParameter struct {
	ActionParameterMappings []*MessagingChannelActionParameterMapping `xml:"actionParameterMappings,omitempty" json:"actionParameterMappings,omitempty"`

	ExternalParameterName string `xml:"externalParameterName,omitempty" json:"externalParameterName,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	MaxLength int32 `xml:"maxLength,omitempty" json:"maxLength,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	ParameterDataType *FlowDataType `xml:"parameterDataType,omitempty" json:"parameterDataType,omitempty"`
}

type MessagingChannelActionParameterMapping struct {
	ActionParameterName string `xml:"actionParameterName,omitempty" json:"actionParameterName,omitempty"`
}

type MessagingChannelStandardParameter struct {
	ActionParameterMappings []*MessagingChannelActionParameterMapping `xml:"actionParameterMappings,omitempty" json:"actionParameterMappings,omitempty"`

	ParameterType *MessagingChannelStandardParameterType `xml:"parameterType,omitempty" json:"parameterType,omitempty"`
}

type MfgServiceConsoleSettings struct {
	*Metadata

	EnableMfgServiceConsole bool `xml:"enableMfgServiceConsole,omitempty" json:"enableMfgServiceConsole,omitempty"`
}

type MilestoneType struct {
	*Metadata

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	RecurrenceType *MilestoneTypeRecurrenceType `xml:"recurrenceType,omitempty" json:"recurrenceType,omitempty"`
}

type MlDomain struct {
	*Metadata

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	MlIntents []*MlIntent `xml:"mlIntents,omitempty" json:"mlIntents,omitempty"`

	MlSlotClasses []*MlSlotClass `xml:"mlSlotClasses,omitempty" json:"mlSlotClasses,omitempty"`
}

type MobileApplicationDetail struct {
	*Metadata

	ApplicationBinaryFile []byte `xml:"applicationBinaryFile,omitempty" json:"applicationBinaryFile,omitempty"`

	ApplicationBinaryFileName string `xml:"applicationBinaryFileName,omitempty" json:"applicationBinaryFileName,omitempty"`

	ApplicationBundleIdentifier string `xml:"applicationBundleIdentifier,omitempty" json:"applicationBundleIdentifier,omitempty"`

	ApplicationFileLength int32 `xml:"applicationFileLength,omitempty" json:"applicationFileLength,omitempty"`

	ApplicationIconFile string `xml:"applicationIconFile,omitempty" json:"applicationIconFile,omitempty"`

	ApplicationIconFileName string `xml:"applicationIconFileName,omitempty" json:"applicationIconFileName,omitempty"`

	ApplicationInstallUrl string `xml:"applicationInstallUrl,omitempty" json:"applicationInstallUrl,omitempty"`

	DevicePlatform *DevicePlatformType `xml:"devicePlatform,omitempty" json:"devicePlatform,omitempty"`

	DeviceType string `xml:"deviceType,omitempty" json:"deviceType,omitempty"`

	MinimumOsVersion string `xml:"minimumOsVersion,omitempty" json:"minimumOsVersion,omitempty"`

	PrivateApp bool `xml:"privateApp,omitempty" json:"privateApp,omitempty"`

	Version string `xml:"version,omitempty" json:"version,omitempty"`
}

type MobileSettings struct {
	*Metadata

	DashboardMobile *DashboardMobileSettings `xml:"dashboardMobile,omitempty" json:"dashboardMobile,omitempty"`

	EnableImportContactFromDevice bool `xml:"enableImportContactFromDevice,omitempty" json:"enableImportContactFromDevice,omitempty"`

	EnableOfflineDraftsEnabled bool `xml:"enableOfflineDraftsEnabled,omitempty" json:"enableOfflineDraftsEnabled,omitempty"`

	EnablePopulateNameManuallyInToday bool `xml:"enablePopulateNameManuallyInToday,omitempty" json:"enablePopulateNameManuallyInToday,omitempty"`

	EnableS1EncryptedStoragePref2 bool `xml:"enableS1EncryptedStoragePref2,omitempty" json:"enableS1EncryptedStoragePref2,omitempty"`

	EnableS1OfflinePref bool `xml:"enableS1OfflinePref,omitempty" json:"enableS1OfflinePref,omitempty"`
}

type DashboardMobileSettings struct {
	EnableDashboardIPadApp bool `xml:"enableDashboardIPadApp,omitempty" json:"enableDashboardIPadApp,omitempty"`
}

type ModerationRule struct {
	*Metadata

	Action *ModerationRuleAction `xml:"action,omitempty" json:"action,omitempty"`

	ActionLimit int32 `xml:"actionLimit,omitempty" json:"actionLimit,omitempty"`

	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	EntitiesAndFields []*ModeratedEntityField `xml:"entitiesAndFields,omitempty" json:"entitiesAndFields,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	NotifyLimit int32 `xml:"notifyLimit,omitempty" json:"notifyLimit,omitempty"`

	TimePeriod *RateLimitTimePeriod `xml:"timePeriod,omitempty" json:"timePeriod,omitempty"`

	Type_ *ModerationRuleType `xml:"type,omitempty" json:"type,omitempty"`

	UserCriteria []string `xml:"userCriteria,omitempty" json:"userCriteria,omitempty"`

	UserMessage string `xml:"userMessage,omitempty" json:"userMessage,omitempty"`
}

type ModeratedEntityField struct {
	EntityName string `xml:"entityName,omitempty" json:"entityName,omitempty"`

	FieldName string `xml:"fieldName,omitempty" json:"fieldName,omitempty"`

	KeywordList string `xml:"keywordList,omitempty" json:"keywordList,omitempty"`
}

type MyDomainDiscoverableLogin struct {
	*Metadata

	ApexHandler string `xml:"apexHandler,omitempty" json:"apexHandler,omitempty"`

	ExecuteApexHandlerAs string `xml:"executeApexHandlerAs,omitempty" json:"executeApexHandlerAs,omitempty"`

	UsernameLabel string `xml:"usernameLabel,omitempty" json:"usernameLabel,omitempty"`
}

type MyDomainSettings struct {
	*Metadata

	CanOnlyLoginWithMyDomainUrl bool `xml:"canOnlyLoginWithMyDomainUrl,omitempty" json:"canOnlyLoginWithMyDomainUrl,omitempty"`

	DoesApiLoginRequireOrgDomain bool `xml:"doesApiLoginRequireOrgDomain,omitempty" json:"doesApiLoginRequireOrgDomain,omitempty"`

	DoesWarnOnForceComRedirect bool `xml:"doesWarnOnForceComRedirect,omitempty" json:"doesWarnOnForceComRedirect,omitempty"`

	DoesWarnOnRedirect bool `xml:"doesWarnOnRedirect,omitempty" json:"doesWarnOnRedirect,omitempty"`

	DomainPartition *OrgDomainShard `xml:"domainPartition,omitempty" json:"domainPartition,omitempty"`

	EnableEdgeDuringRollout bool `xml:"enableEdgeDuringRollout,omitempty" json:"enableEdgeDuringRollout,omitempty"`

	EnableNativeBrowserForAuthOnAndroid bool `xml:"enableNativeBrowserForAuthOnAndroid,omitempty" json:"enableNativeBrowserForAuthOnAndroid,omitempty"`

	EnableNativeBrowserForAuthOnIos bool `xml:"enableNativeBrowserForAuthOnIos,omitempty" json:"enableNativeBrowserForAuthOnIos,omitempty"`

	EnableShareBrowserSessionAndroidForAuth bool `xml:"enableShareBrowserSessionAndroidForAuth,omitempty" json:"enableShareBrowserSessionAndroidForAuth,omitempty"`

	EnableShareBrowserSessionIOSForAuth bool `xml:"enableShareBrowserSessionIOSForAuth,omitempty" json:"enableShareBrowserSessionIOSForAuth,omitempty"`

	InstancedUrlRedirectHandling *OrgDomainRedirectOption `xml:"instancedUrlRedirectHandling,omitempty" json:"instancedUrlRedirectHandling,omitempty"`

	LogRedirections bool `xml:"logRedirections,omitempty" json:"logRedirections,omitempty"`

	MyDomainName string `xml:"myDomainName,omitempty" json:"myDomainName,omitempty"`

	MyDomainSuffix *OrgDomainProdSuffix `xml:"myDomainSuffix,omitempty" json:"myDomainSuffix,omitempty"`

	RedirectForceComSiteUrls bool `xml:"redirectForceComSiteUrls,omitempty" json:"redirectForceComSiteUrls,omitempty"`

	RedirectPriorMyDomain bool `xml:"redirectPriorMyDomain,omitempty" json:"redirectPriorMyDomain,omitempty"`

	Use3rdPartyCookieBlockingCompatibleHostnames bool `xml:"use3rdPartyCookieBlockingCompatibleHostnames,omitempty" json:"use3rdPartyCookieBlockingCompatibleHostnames,omitempty"`

	UseEdge bool `xml:"useEdge,omitempty" json:"useEdge,omitempty"`

	UseEnhancedDomainsInSandbox bool `xml:"useEnhancedDomainsInSandbox,omitempty" json:"useEnhancedDomainsInSandbox,omitempty"`

	UseStabilizedMyDomainHostnames bool `xml:"useStabilizedMyDomainHostnames,omitempty" json:"useStabilizedMyDomainHostnames,omitempty"`

	UseStabilizedSandboxMyDomainHostnames bool `xml:"useStabilizedSandboxMyDomainHostnames,omitempty" json:"useStabilizedSandboxMyDomainHostnames,omitempty"`
}

type NameSettings struct {
	*Metadata

	EnableInformalName bool `xml:"enableInformalName,omitempty" json:"enableInformalName,omitempty"`

	EnableMiddleName bool `xml:"enableMiddleName,omitempty" json:"enableMiddleName,omitempty"`

	EnableNameSuffix bool `xml:"enableNameSuffix,omitempty" json:"enableNameSuffix,omitempty"`
}

type NamedCredential struct {
	*Metadata

	AllowMergeFieldsInBody bool `xml:"allowMergeFieldsInBody,omitempty" json:"allowMergeFieldsInBody,omitempty"`

	AllowMergeFieldsInHeader bool `xml:"allowMergeFieldsInHeader,omitempty" json:"allowMergeFieldsInHeader,omitempty"`

	AuthProvider string `xml:"authProvider,omitempty" json:"authProvider,omitempty"`

	AuthTokenEndpointUrl string `xml:"authTokenEndpointUrl,omitempty" json:"authTokenEndpointUrl,omitempty"`

	AwsAccessKey string `xml:"awsAccessKey,omitempty" json:"awsAccessKey,omitempty"`

	AwsAccessSecret string `xml:"awsAccessSecret,omitempty" json:"awsAccessSecret,omitempty"`

	AwsRegion string `xml:"awsRegion,omitempty" json:"awsRegion,omitempty"`

	AwsService string `xml:"awsService,omitempty" json:"awsService,omitempty"`

	CalloutStatus *CalloutStatus `xml:"calloutStatus,omitempty" json:"calloutStatus,omitempty"`

	Certificate string `xml:"certificate,omitempty" json:"certificate,omitempty"`

	Endpoint string `xml:"endpoint,omitempty" json:"endpoint,omitempty"`

	GenerateAuthorizationHeader bool `xml:"generateAuthorizationHeader,omitempty" json:"generateAuthorizationHeader,omitempty"`

	JwtAudience string `xml:"jwtAudience,omitempty" json:"jwtAudience,omitempty"`

	JwtFormulaSubject string `xml:"jwtFormulaSubject,omitempty" json:"jwtFormulaSubject,omitempty"`

	JwtIssuer string `xml:"jwtIssuer,omitempty" json:"jwtIssuer,omitempty"`

	JwtSigningCertificate string `xml:"jwtSigningCertificate,omitempty" json:"jwtSigningCertificate,omitempty"`

	JwtTextSubject string `xml:"jwtTextSubject,omitempty" json:"jwtTextSubject,omitempty"`

	JwtValidityPeriodSeconds int32 `xml:"jwtValidityPeriodSeconds,omitempty" json:"jwtValidityPeriodSeconds,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	NamedCredentialParameters []*NamedCredentialParameter `xml:"namedCredentialParameters,omitempty" json:"namedCredentialParameters,omitempty"`

	NamedCredentialType *NamedCredentialType `xml:"namedCredentialType,omitempty" json:"namedCredentialType,omitempty"`

	OauthRefreshToken string `xml:"oauthRefreshToken,omitempty" json:"oauthRefreshToken,omitempty"`

	OauthScope string `xml:"oauthScope,omitempty" json:"oauthScope,omitempty"`

	OauthToken string `xml:"oauthToken,omitempty" json:"oauthToken,omitempty"`

	OutboundNetworkConnection string `xml:"outboundNetworkConnection,omitempty" json:"outboundNetworkConnection,omitempty"`

	Password string `xml:"password,omitempty" json:"password,omitempty"`

	PrincipalType *ExternalPrincipalType `xml:"principalType,omitempty" json:"principalType,omitempty"`

	Protocol *AuthenticationProtocol `xml:"protocol,omitempty" json:"protocol,omitempty"`

	Username string `xml:"username,omitempty" json:"username,omitempty"`
}

type NamedCredentialParameter struct {
	Certificate string `xml:"certificate,omitempty" json:"certificate,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	ExternalCredential string `xml:"externalCredential,omitempty" json:"externalCredential,omitempty"`

	OutboundNetworkConnection string `xml:"outboundNetworkConnection,omitempty" json:"outboundNetworkConnection,omitempty"`

	ParameterName string `xml:"parameterName,omitempty" json:"parameterName,omitempty"`

	ParameterType *NamedCredentialParamType `xml:"parameterType,omitempty" json:"parameterType,omitempty"`

	ParameterValue string `xml:"parameterValue,omitempty" json:"parameterValue,omitempty"`

	SequenceNumber int32 `xml:"sequenceNumber,omitempty" json:"sequenceNumber,omitempty"`
}

type NavigationMenu struct {
	*Metadata

	Container string `xml:"container,omitempty" json:"container,omitempty"`

	ContainerType string `xml:"containerType,omitempty" json:"containerType,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	NavigationMenuItem []*NavigationMenuItem `xml:"navigationMenuItem,omitempty" json:"navigationMenuItem,omitempty"`
}

type Network struct {
	*Metadata

	AllowInternalUserLogin bool `xml:"allowInternalUserLogin,omitempty" json:"allowInternalUserLogin,omitempty"`

	AllowMembersToFlag bool `xml:"allowMembersToFlag,omitempty" json:"allowMembersToFlag,omitempty"`

	AllowedExtensions string `xml:"allowedExtensions,omitempty" json:"allowedExtensions,omitempty"`

	CaseCommentEmailTemplate string `xml:"caseCommentEmailTemplate,omitempty" json:"caseCommentEmailTemplate,omitempty"`

	ChangePasswordTemplate string `xml:"changePasswordTemplate,omitempty" json:"changePasswordTemplate,omitempty"`

	ChgEmailVerNewTemplate string `xml:"chgEmailVerNewTemplate,omitempty" json:"chgEmailVerNewTemplate,omitempty"`

	ChgEmailVerOldTemplate string `xml:"chgEmailVerOldTemplate,omitempty" json:"chgEmailVerOldTemplate,omitempty"`

	CommunityRoles *CommunityRoles `xml:"communityRoles,omitempty" json:"communityRoles,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DeviceActEmailTemplate string `xml:"deviceActEmailTemplate,omitempty" json:"deviceActEmailTemplate,omitempty"`

	DisableReputationRecordConversations bool `xml:"disableReputationRecordConversations,omitempty" json:"disableReputationRecordConversations,omitempty"`

	EmailFooterLogo string `xml:"emailFooterLogo,omitempty" json:"emailFooterLogo,omitempty"`

	EmailFooterText string `xml:"emailFooterText,omitempty" json:"emailFooterText,omitempty"`

	EmailSenderAddress string `xml:"emailSenderAddress,omitempty" json:"emailSenderAddress,omitempty"`

	EmailSenderName string `xml:"emailSenderName,omitempty" json:"emailSenderName,omitempty"`

	EnableApexCDNCaching bool `xml:"enableApexCDNCaching,omitempty" json:"enableApexCDNCaching,omitempty"`

	EnableCustomVFErrorPageOverrides bool `xml:"enableCustomVFErrorPageOverrides,omitempty" json:"enableCustomVFErrorPageOverrides,omitempty"`

	EnableDirectMessages bool `xml:"enableDirectMessages,omitempty" json:"enableDirectMessages,omitempty"`

	EnableExpFriendlyUrlsAsDefault bool `xml:"enableExpFriendlyUrlsAsDefault,omitempty" json:"enableExpFriendlyUrlsAsDefault,omitempty"`

	EnableExperienceBundleBasedSnaOverrideEnabled bool `xml:"enableExperienceBundleBasedSnaOverrideEnabled,omitempty" json:"enableExperienceBundleBasedSnaOverrideEnabled,omitempty"`

	EnableGuestChatter bool `xml:"enableGuestChatter,omitempty" json:"enableGuestChatter,omitempty"`

	EnableGuestFileAccess bool `xml:"enableGuestFileAccess,omitempty" json:"enableGuestFileAccess,omitempty"`

	EnableGuestMemberVisibility bool `xml:"enableGuestMemberVisibility,omitempty" json:"enableGuestMemberVisibility,omitempty"`

	EnableImageOptimizationCDN bool `xml:"enableImageOptimizationCDN,omitempty" json:"enableImageOptimizationCDN,omitempty"`

	EnableInvitation bool `xml:"enableInvitation,omitempty" json:"enableInvitation,omitempty"`

	EnableKnowledgeable bool `xml:"enableKnowledgeable,omitempty" json:"enableKnowledgeable,omitempty"`

	EnableLWRExperienceConnectedApp bool `xml:"enableLWRExperienceConnectedApp,omitempty" json:"enableLWRExperienceConnectedApp,omitempty"`

	EnableMemberVisibility bool `xml:"enableMemberVisibility,omitempty" json:"enableMemberVisibility,omitempty"`

	EnableNicknameDisplay bool `xml:"enableNicknameDisplay,omitempty" json:"enableNicknameDisplay,omitempty"`

	EnablePrivateMessages bool `xml:"enablePrivateMessages,omitempty" json:"enablePrivateMessages,omitempty"`

	EnableReputation bool `xml:"enableReputation,omitempty" json:"enableReputation,omitempty"`

	EnableShowAllNetworkSettings bool `xml:"enableShowAllNetworkSettings,omitempty" json:"enableShowAllNetworkSettings,omitempty"`

	EnableSiteAsContainer bool `xml:"enableSiteAsContainer,omitempty" json:"enableSiteAsContainer,omitempty"`

	EnableTalkingAboutStats bool `xml:"enableTalkingAboutStats,omitempty" json:"enableTalkingAboutStats,omitempty"`

	EnableTopicAssignmentRules bool `xml:"enableTopicAssignmentRules,omitempty" json:"enableTopicAssignmentRules,omitempty"`

	EnableTopicSuggestions bool `xml:"enableTopicSuggestions,omitempty" json:"enableTopicSuggestions,omitempty"`

	EnableUpDownVote bool `xml:"enableUpDownVote,omitempty" json:"enableUpDownVote,omitempty"`

	FeedChannel string `xml:"feedChannel,omitempty" json:"feedChannel,omitempty"`

	ForgotPasswordTemplate string `xml:"forgotPasswordTemplate,omitempty" json:"forgotPasswordTemplate,omitempty"`

	GatherCustomerSentimentData bool `xml:"gatherCustomerSentimentData,omitempty" json:"gatherCustomerSentimentData,omitempty"`

	HeadlessForgotPasswordTemplate string `xml:"headlessForgotPasswordTemplate,omitempty" json:"headlessForgotPasswordTemplate,omitempty"`

	HeadlessRegistrationTemplate string `xml:"headlessRegistrationTemplate,omitempty" json:"headlessRegistrationTemplate,omitempty"`

	LockoutTemplate string `xml:"lockoutTemplate,omitempty" json:"lockoutTemplate,omitempty"`

	LogoutUrl string `xml:"logoutUrl,omitempty" json:"logoutUrl,omitempty"`

	MaxFileSizeKb int32 `xml:"maxFileSizeKb,omitempty" json:"maxFileSizeKb,omitempty"`

	NavigationLinkSet *NavigationLinkSet `xml:"navigationLinkSet,omitempty" json:"navigationLinkSet,omitempty"`

	NetworkMemberGroups *NetworkMemberGroup `xml:"networkMemberGroups,omitempty" json:"networkMemberGroups,omitempty"`

	NetworkPageOverrides *NetworkPageOverride `xml:"networkPageOverrides,omitempty" json:"networkPageOverrides,omitempty"`

	NewSenderAddress string `xml:"newSenderAddress,omitempty" json:"newSenderAddress,omitempty"`

	PicassoSite string `xml:"picassoSite,omitempty" json:"picassoSite,omitempty"`

	RecommendationAudience *RecommendationAudience `xml:"recommendationAudience,omitempty" json:"recommendationAudience,omitempty"`

	RecommendationDefinition *RecommendationDefinition `xml:"recommendationDefinition,omitempty" json:"recommendationDefinition,omitempty"`

	ReputationLevels *ReputationLevelDefinitions `xml:"reputationLevels,omitempty" json:"reputationLevels,omitempty"`

	ReputationPointsRules *ReputationPointsRules `xml:"reputationPointsRules,omitempty" json:"reputationPointsRules,omitempty"`

	SelfRegMicroBatchSubErrorEmailTemplate string `xml:"selfRegMicroBatchSubErrorEmailTemplate,omitempty" json:"selfRegMicroBatchSubErrorEmailTemplate,omitempty"`

	SelfRegProfile string `xml:"selfRegProfile,omitempty" json:"selfRegProfile,omitempty"`

	SelfRegistration bool `xml:"selfRegistration,omitempty" json:"selfRegistration,omitempty"`

	SendWelcomeEmail bool `xml:"sendWelcomeEmail,omitempty" json:"sendWelcomeEmail,omitempty"`

	Site string `xml:"site,omitempty" json:"site,omitempty"`

	SiteArchiveStatus *SitesArchiveStatus `xml:"siteArchiveStatus,omitempty" json:"siteArchiveStatus,omitempty"`

	Status *NetworkStatus `xml:"status,omitempty" json:"status,omitempty"`

	Tabs *NetworkTabSet `xml:"tabs,omitempty" json:"tabs,omitempty"`

	UrlPathPrefix string `xml:"urlPathPrefix,omitempty" json:"urlPathPrefix,omitempty"`

	VerificationTemplate string `xml:"verificationTemplate,omitempty" json:"verificationTemplate,omitempty"`

	WelcomeTemplate string `xml:"welcomeTemplate,omitempty" json:"welcomeTemplate,omitempty"`
}

type CommunityRoles struct {
	CustomerUserRole string `xml:"customerUserRole,omitempty" json:"customerUserRole,omitempty"`

	EmployeeUserRole string `xml:"employeeUserRole,omitempty" json:"employeeUserRole,omitempty"`

	PartnerUserRole string `xml:"partnerUserRole,omitempty" json:"partnerUserRole,omitempty"`
}

type NetworkMemberGroup struct {
	PermissionSet []string `xml:"permissionSet,omitempty" json:"permissionSet,omitempty"`

	Profile []string `xml:"profile,omitempty" json:"profile,omitempty"`
}

type NetworkPageOverride struct {
	ChangePasswordPageOverrideSetting *NetworkPageOverrideSetting `xml:"changePasswordPageOverrideSetting,omitempty" json:"changePasswordPageOverrideSetting,omitempty"`

	ForgotPasswordPageOverrideSetting *NetworkPageOverrideSetting `xml:"forgotPasswordPageOverrideSetting,omitempty" json:"forgotPasswordPageOverrideSetting,omitempty"`

	HomePageOverrideSetting *NetworkPageOverrideSetting `xml:"homePageOverrideSetting,omitempty" json:"homePageOverrideSetting,omitempty"`

	LoginPageOverrideSetting *NetworkPageOverrideSetting `xml:"loginPageOverrideSetting,omitempty" json:"loginPageOverrideSetting,omitempty"`

	SelfRegProfilePageOverrideSetting *NetworkPageOverrideSetting `xml:"selfRegProfilePageOverrideSetting,omitempty" json:"selfRegProfilePageOverrideSetting,omitempty"`
}

type RecommendationAudience struct {
	RecommendationAudienceDetails []*RecommendationAudienceDetail `xml:"recommendationAudienceDetails,omitempty" json:"recommendationAudienceDetails,omitempty"`
}

type RecommendationAudienceDetail struct {
	AudienceCriteriaType *AudienceCriteriaType `xml:"audienceCriteriaType,omitempty" json:"audienceCriteriaType,omitempty"`

	AudienceCriteriaValue string `xml:"audienceCriteriaValue,omitempty" json:"audienceCriteriaValue,omitempty"`

	SetupName string `xml:"setupName,omitempty" json:"setupName,omitempty"`
}

type RecommendationDefinition struct {
	RecommendationDefinitionDetails []*RecommendationDefinitionDetail `xml:"recommendationDefinitionDetails,omitempty" json:"recommendationDefinitionDetails,omitempty"`
}

type RecommendationDefinitionDetail struct {
	ActionUrl string `xml:"actionUrl,omitempty" json:"actionUrl,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	LinkText string `xml:"linkText,omitempty" json:"linkText,omitempty"`

	ScheduledRecommendations *ScheduledRecommendation `xml:"scheduledRecommendations,omitempty" json:"scheduledRecommendations,omitempty"`

	SetupName string `xml:"setupName,omitempty" json:"setupName,omitempty"`

	Title string `xml:"title,omitempty" json:"title,omitempty"`
}

type ScheduledRecommendation struct {
	ScheduledRecommendationDetails []*ScheduledRecommendationDetail `xml:"scheduledRecommendationDetails,omitempty" json:"scheduledRecommendationDetails,omitempty"`
}

type ScheduledRecommendationDetail struct {
	Channel *RecommendationChannel `xml:"channel,omitempty" json:"channel,omitempty"`

	Enabled bool `xml:"enabled,omitempty" json:"enabled,omitempty"`

	Rank int32 `xml:"rank,omitempty" json:"rank,omitempty"`

	RecommendationAudience string `xml:"recommendationAudience,omitempty" json:"recommendationAudience,omitempty"`
}

type ReputationLevelDefinitions struct {
	Level []*ReputationLevel `xml:"level,omitempty" json:"level,omitempty"`
}

type ReputationLevel struct {
	Branding *ReputationBranding `xml:"branding,omitempty" json:"branding,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	LowerThreshold float64 `xml:"lowerThreshold,omitempty" json:"lowerThreshold,omitempty"`
}

type ReputationBranding struct {
	SmallImage string `xml:"smallImage,omitempty" json:"smallImage,omitempty"`
}

type ReputationPointsRules struct {
	PointsRule []*ReputationPointsRule `xml:"pointsRule,omitempty" json:"pointsRule,omitempty"`
}

type ReputationPointsRule struct {
	EventType string `xml:"eventType,omitempty" json:"eventType,omitempty"`

	Points int32 `xml:"points,omitempty" json:"points,omitempty"`
}

type NetworkTabSet struct {
	CustomTab []string `xml:"customTab,omitempty" json:"customTab,omitempty"`

	DefaultTab string `xml:"defaultTab,omitempty" json:"defaultTab,omitempty"`

	StandardTab []string `xml:"standardTab,omitempty" json:"standardTab,omitempty"`
}

type NotificationTypeConfig struct {
	*Metadata

	NotificationTypeSettings []*NotificationTypeSettings `xml:"notificationTypeSettings,omitempty" json:"notificationTypeSettings,omitempty"`
}

type NotificationTypeSettings struct {
	AppSettings []*AppSettings `xml:"appSettings,omitempty" json:"appSettings,omitempty"`

	NotificationChannels *NotificationChannels `xml:"notificationChannels,omitempty" json:"notificationChannels,omitempty"`

	NotificationType string `xml:"notificationType,omitempty" json:"notificationType,omitempty"`
}

type AppSettings struct {
	ConnectedAppName string `xml:"connectedAppName,omitempty" json:"connectedAppName,omitempty"`

	Enabled bool `xml:"enabled,omitempty" json:"enabled,omitempty"`
}

type NotificationChannels struct {
	DesktopEnabled bool `xml:"desktopEnabled,omitempty" json:"desktopEnabled,omitempty"`

	MobileEnabled bool `xml:"mobileEnabled,omitempty" json:"mobileEnabled,omitempty"`

	SlackEnabled bool `xml:"slackEnabled,omitempty" json:"slackEnabled,omitempty"`
}

type NotificationsSettings struct {
	*Metadata

	EnableActvityReminderBrowserNotifs bool `xml:"enableActvityReminderBrowserNotifs,omitempty" json:"enableActvityReminderBrowserNotifs,omitempty"`

	EnableMobileAppPushNotifications bool `xml:"enableMobileAppPushNotifications,omitempty" json:"enableMobileAppPushNotifications,omitempty"`

	EnableNotifications bool `xml:"enableNotifications,omitempty" json:"enableNotifications,omitempty"`
}

type OauthCustomScope struct {
	*Metadata

	AssignedTo []*OauthCustomScopeApp `xml:"assignedTo,omitempty" json:"assignedTo,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	IsPublic bool `xml:"isPublic,omitempty" json:"isPublic,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type OauthCustomScopeApp struct {
	ConnectedApp string `xml:"connectedApp,omitempty" json:"connectedApp,omitempty"`
}

type OauthOidcSettings struct {
	*Metadata

	BlockOAuthUnPwFlow bool `xml:"blockOAuthUnPwFlow,omitempty" json:"blockOAuthUnPwFlow,omitempty"`

	BlockOAuthUsrAgtFlow bool `xml:"blockOAuthUsrAgtFlow,omitempty" json:"blockOAuthUsrAgtFlow,omitempty"`

	IsPkceRequired bool `xml:"isPkceRequired,omitempty" json:"isPkceRequired,omitempty"`

	OAuthCdCrdtFlowEnable bool `xml:"oAuthCdCrdtFlowEnable,omitempty" json:"oAuthCdCrdtFlowEnable,omitempty"`
}

type ObjectLinkingSettings struct {
	*Metadata

	EnableObjectLinking bool `xml:"enableObjectLinking,omitempty" json:"enableObjectLinking,omitempty"`
}

type OmniChannelPricingSettings struct {
	*Metadata

	EnableOmniChannelPricing bool `xml:"enableOmniChannelPricing,omitempty" json:"enableOmniChannelPricing,omitempty"`
}

type OmniChannelSettings struct {
	*Metadata

	EnableOmniAutoLoginPrompt bool `xml:"enableOmniAutoLoginPrompt,omitempty" json:"enableOmniAutoLoginPrompt,omitempty"`

	EnableOmniChannel bool `xml:"enableOmniChannel,omitempty" json:"enableOmniChannel,omitempty"`

	EnableOmniSecondaryRoutingPriority bool `xml:"enableOmniSecondaryRoutingPriority,omitempty" json:"enableOmniSecondaryRoutingPriority,omitempty"`

	EnableOmniSkillsRouting bool `xml:"enableOmniSkillsRouting,omitempty" json:"enableOmniSkillsRouting,omitempty"`
}

type OmniDataTransform struct {
	*Metadata

	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	AssignmentRulesUsed bool `xml:"assignmentRulesUsed,omitempty" json:"assignmentRulesUsed,omitempty"`

	DeletedOnSuccess bool `xml:"deletedOnSuccess,omitempty" json:"deletedOnSuccess,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	ErrorIgnored bool `xml:"errorIgnored,omitempty" json:"errorIgnored,omitempty"`

	ExpectedInputJson string `xml:"expectedInputJson,omitempty" json:"expectedInputJson,omitempty"`

	ExpectedInputOtherData string `xml:"expectedInputOtherData,omitempty" json:"expectedInputOtherData,omitempty"`

	ExpectedInputXml string `xml:"expectedInputXml,omitempty" json:"expectedInputXml,omitempty"`

	ExpectedOutputJson string `xml:"expectedOutputJson,omitempty" json:"expectedOutputJson,omitempty"`

	ExpectedOutputOtherData string `xml:"expectedOutputOtherData,omitempty" json:"expectedOutputOtherData,omitempty"`

	ExpectedOutputXml string `xml:"expectedOutputXml,omitempty" json:"expectedOutputXml,omitempty"`

	FieldLevelSecurityEnabled bool `xml:"fieldLevelSecurityEnabled,omitempty" json:"fieldLevelSecurityEnabled,omitempty"`

	InputParsingClass string `xml:"inputParsingClass,omitempty" json:"inputParsingClass,omitempty"`

	InputType *OmniDataTransformInputType `xml:"inputType,omitempty" json:"inputType,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Namespace string `xml:"namespace,omitempty" json:"namespace,omitempty"`

	NullInputsIncludedInOutput bool `xml:"nullInputsIncludedInOutput,omitempty" json:"nullInputsIncludedInOutput,omitempty"`

	OmniDataTransformItem []*OmniDataTransformItem `xml:"omniDataTransformItem,omitempty" json:"omniDataTransformItem,omitempty"`

	OutputParsingClass string `xml:"outputParsingClass,omitempty" json:"outputParsingClass,omitempty"`

	OutputType string `xml:"outputType,omitempty" json:"outputType,omitempty"`

	OverrideKey string `xml:"overrideKey,omitempty" json:"overrideKey,omitempty"`

	PreprocessorClassName string `xml:"preprocessorClassName,omitempty" json:"preprocessorClassName,omitempty"`

	PreviewJsonData string `xml:"previewJsonData,omitempty" json:"previewJsonData,omitempty"`

	PreviewOtherData string `xml:"previewOtherData,omitempty" json:"previewOtherData,omitempty"`

	PreviewSourceObjectData string `xml:"previewSourceObjectData,omitempty" json:"previewSourceObjectData,omitempty"`

	PreviewXmlData string `xml:"previewXmlData,omitempty" json:"previewXmlData,omitempty"`

	ProcessSuperBulk bool `xml:"processSuperBulk,omitempty" json:"processSuperBulk,omitempty"`

	RequiredPermission string `xml:"requiredPermission,omitempty" json:"requiredPermission,omitempty"`

	ResponseCacheTtlMinutes float64 `xml:"responseCacheTtlMinutes,omitempty" json:"responseCacheTtlMinutes,omitempty"`

	ResponseCacheType string `xml:"responseCacheType,omitempty" json:"responseCacheType,omitempty"`

	RollbackOnError bool `xml:"rollbackOnError,omitempty" json:"rollbackOnError,omitempty"`

	SourceObject string `xml:"sourceObject,omitempty" json:"sourceObject,omitempty"`

	SourceObjectDefault bool `xml:"sourceObjectDefault,omitempty" json:"sourceObjectDefault,omitempty"`

	SynchronousProcessThreshold float64 `xml:"synchronousProcessThreshold,omitempty" json:"synchronousProcessThreshold,omitempty"`

	TargetOutputDocumentIdentifier string `xml:"targetOutputDocumentIdentifier,omitempty" json:"targetOutputDocumentIdentifier,omitempty"`

	TargetOutputFileName string `xml:"targetOutputFileName,omitempty" json:"targetOutputFileName,omitempty"`

	Type_ string `xml:"type,omitempty" json:"type,omitempty"`

	UniqueName string `xml:"uniqueName,omitempty" json:"uniqueName,omitempty"`

	VersionNumber float64 `xml:"versionNumber,omitempty" json:"versionNumber,omitempty"`

	XmlDeclarationRemoved bool `xml:"xmlDeclarationRemoved,omitempty" json:"xmlDeclarationRemoved,omitempty"`

	XmlOutputTagsOrder string `xml:"xmlOutputTagsOrder,omitempty" json:"xmlOutputTagsOrder,omitempty"`
}

type OmniDataTransformItem struct {
	DefaultValue string `xml:"defaultValue,omitempty" json:"defaultValue,omitempty"`

	Disabled bool `xml:"disabled,omitempty" json:"disabled,omitempty"`

	FilterDataType *ODTItemFilterDataType `xml:"filterDataType,omitempty" json:"filterDataType,omitempty"`

	FilterGroup float64 `xml:"filterGroup,omitempty" json:"filterGroup,omitempty"`

	FilterOperator string `xml:"filterOperator,omitempty" json:"filterOperator,omitempty"`

	FilterValue string `xml:"filterValue,omitempty" json:"filterValue,omitempty"`

	FormulaConverted string `xml:"formulaConverted,omitempty" json:"formulaConverted,omitempty"`

	FormulaExpression string `xml:"formulaExpression,omitempty" json:"formulaExpression,omitempty"`

	FormulaResultPath string `xml:"formulaResultPath,omitempty" json:"formulaResultPath,omitempty"`

	FormulaSequence float64 `xml:"formulaSequence,omitempty" json:"formulaSequence,omitempty"`

	GlobalKey string `xml:"globalKey,omitempty" json:"globalKey,omitempty"`

	InputFieldName string `xml:"inputFieldName,omitempty" json:"inputFieldName,omitempty"`

	InputObjectName string `xml:"inputObjectName,omitempty" json:"inputObjectName,omitempty"`

	InputObjectQuerySequence float64 `xml:"inputObjectQuerySequence,omitempty" json:"inputObjectQuerySequence,omitempty"`

	LinkedFieldName string `xml:"linkedFieldName,omitempty" json:"linkedFieldName,omitempty"`

	LinkedObjectSequence float64 `xml:"linkedObjectSequence,omitempty" json:"linkedObjectSequence,omitempty"`

	LookupByFieldName string `xml:"lookupByFieldName,omitempty" json:"lookupByFieldName,omitempty"`

	LookupObjectName string `xml:"lookupObjectName,omitempty" json:"lookupObjectName,omitempty"`

	LookupReturnedFieldName string `xml:"lookupReturnedFieldName,omitempty" json:"lookupReturnedFieldName,omitempty"`

	MigrationAttribute string `xml:"migrationAttribute,omitempty" json:"migrationAttribute,omitempty"`

	MigrationCategory string `xml:"migrationCategory,omitempty" json:"migrationCategory,omitempty"`

	MigrationGroup string `xml:"migrationGroup,omitempty" json:"migrationGroup,omitempty"`

	MigrationKey string `xml:"migrationKey,omitempty" json:"migrationKey,omitempty"`

	MigrationPattern string `xml:"migrationPattern,omitempty" json:"migrationPattern,omitempty"`

	MigrationProcess string `xml:"migrationProcess,omitempty" json:"migrationProcess,omitempty"`

	MigrationType string `xml:"migrationType,omitempty" json:"migrationType,omitempty"`

	MigrationValue string `xml:"migrationValue,omitempty" json:"migrationValue,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	OmniDataTransformation string `xml:"omniDataTransformation,omitempty" json:"omniDataTransformation,omitempty"`

	OmniDataTransformationId string `xml:"omniDataTransformationId,omitempty" json:"omniDataTransformationId,omitempty"`

	OutputCreationSequence float64 `xml:"outputCreationSequence,omitempty" json:"outputCreationSequence,omitempty"`

	OutputFieldFormat string `xml:"outputFieldFormat,omitempty" json:"outputFieldFormat,omitempty"`

	OutputFieldName string `xml:"outputFieldName,omitempty" json:"outputFieldName,omitempty"`

	OutputObjectName string `xml:"outputObjectName,omitempty" json:"outputObjectName,omitempty"`

	RequiredForUpsert bool `xml:"requiredForUpsert,omitempty" json:"requiredForUpsert,omitempty"`

	TransformValuesMappings string `xml:"transformValuesMappings,omitempty" json:"transformValuesMappings,omitempty"`

	UpsertKey bool `xml:"upsertKey,omitempty" json:"upsertKey,omitempty"`
}

type OmniIntegrationProcedure struct {
	*Metadata

	CustomHtmlTemplates string `xml:"customHtmlTemplates,omitempty" json:"customHtmlTemplates,omitempty"`

	CustomJavaScript string `xml:"customJavaScript,omitempty" json:"customJavaScript,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DesignerCustomizationType string `xml:"designerCustomizationType,omitempty" json:"designerCustomizationType,omitempty"`

	ElementTypeComponentMapping string `xml:"elementTypeComponentMapping,omitempty" json:"elementTypeComponentMapping,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	IsIntegrationProcedure bool `xml:"isIntegrationProcedure,omitempty" json:"isIntegrationProcedure,omitempty"`

	IsMetadataCacheDisabled bool `xml:"isMetadataCacheDisabled,omitempty" json:"isMetadataCacheDisabled,omitempty"`

	IsOmniScriptEmbeddable bool `xml:"isOmniScriptEmbeddable,omitempty" json:"isOmniScriptEmbeddable,omitempty"`

	IsTestProcedure bool `xml:"isTestProcedure,omitempty" json:"isTestProcedure,omitempty"`

	IsWebCompEnabled bool `xml:"isWebCompEnabled,omitempty" json:"isWebCompEnabled,omitempty"`

	Language string `xml:"language,omitempty" json:"language,omitempty"`

	LastPreviewPage string `xml:"lastPreviewPage,omitempty" json:"lastPreviewPage,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	NameSpace string `xml:"nameSpace,omitempty" json:"nameSpace,omitempty"`

	OmniProcessElements []*OmniProcessElement `xml:"omniProcessElements,omitempty" json:"omniProcessElements,omitempty"`

	OmniProcessKey string `xml:"omniProcessKey,omitempty" json:"omniProcessKey,omitempty"`

	OmniProcessType *OmniProcessType `xml:"omniProcessType,omitempty" json:"omniProcessType,omitempty"`

	OverrideKey string `xml:"overrideKey,omitempty" json:"overrideKey,omitempty"`

	PropertySetConfig string `xml:"propertySetConfig,omitempty" json:"propertySetConfig,omitempty"`

	RequiredPermission string `xml:"requiredPermission,omitempty" json:"requiredPermission,omitempty"`

	ResponseCacheType string `xml:"responseCacheType,omitempty" json:"responseCacheType,omitempty"`

	SubType string `xml:"subType,omitempty" json:"subType,omitempty"`

	Type_ string `xml:"type,omitempty" json:"type,omitempty"`

	UniqueName string `xml:"uniqueName,omitempty" json:"uniqueName,omitempty"`

	VersionNumber float64 `xml:"versionNumber,omitempty" json:"versionNumber,omitempty"`

	WebComponentKey string `xml:"webComponentKey,omitempty" json:"webComponentKey,omitempty"`
}

type OmniProcessElement struct {
	ChildElements []*OmniProcessElement `xml:"childElements,omitempty" json:"childElements,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DesignerCustomizationType string `xml:"designerCustomizationType,omitempty" json:"designerCustomizationType,omitempty"`

	DiscoveryFrameworkUsageType string `xml:"discoveryFrameworkUsageType,omitempty" json:"discoveryFrameworkUsageType,omitempty"`

	EmbeddedOmniScriptKey string `xml:"embeddedOmniScriptKey,omitempty" json:"embeddedOmniScriptKey,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	IsOmniScriptEmbeddable bool `xml:"isOmniScriptEmbeddable,omitempty" json:"isOmniScriptEmbeddable,omitempty"`

	Level float64 `xml:"level,omitempty" json:"level,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	OmniProcessVersionNumber float64 `xml:"omniProcessVersionNumber,omitempty" json:"omniProcessVersionNumber,omitempty"`

	ParentElementName string `xml:"parentElementName,omitempty" json:"parentElementName,omitempty"`

	ParentElementType string `xml:"parentElementType,omitempty" json:"parentElementType,omitempty"`

	PropertySetConfig string `xml:"propertySetConfig,omitempty" json:"propertySetConfig,omitempty"`

	SequenceNumber float64 `xml:"sequenceNumber,omitempty" json:"sequenceNumber,omitempty"`

	Type_ string `xml:"type,omitempty" json:"type,omitempty"`

	UniqueIndex string `xml:"uniqueIndex,omitempty" json:"uniqueIndex,omitempty"`
}

type OmniScript struct {
	*Metadata

	CustomHtmlTemplates string `xml:"customHtmlTemplates,omitempty" json:"customHtmlTemplates,omitempty"`

	CustomJavaScript string `xml:"customJavaScript,omitempty" json:"customJavaScript,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DesignerCustomizationType string `xml:"designerCustomizationType,omitempty" json:"designerCustomizationType,omitempty"`

	DiscoveryFrameworkUsageType string `xml:"discoveryFrameworkUsageType,omitempty" json:"discoveryFrameworkUsageType,omitempty"`

	ElementTypeComponentMapping string `xml:"elementTypeComponentMapping,omitempty" json:"elementTypeComponentMapping,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	IsIntegrationProcedure bool `xml:"isIntegrationProcedure,omitempty" json:"isIntegrationProcedure,omitempty"`

	IsMetadataCacheDisabled bool `xml:"isMetadataCacheDisabled,omitempty" json:"isMetadataCacheDisabled,omitempty"`

	IsOmniScriptEmbeddable bool `xml:"isOmniScriptEmbeddable,omitempty" json:"isOmniScriptEmbeddable,omitempty"`

	IsTestProcedure bool `xml:"isTestProcedure,omitempty" json:"isTestProcedure,omitempty"`

	IsWebCompEnabled bool `xml:"isWebCompEnabled,omitempty" json:"isWebCompEnabled,omitempty"`

	Language string `xml:"language,omitempty" json:"language,omitempty"`

	LastPreviewPage string `xml:"lastPreviewPage,omitempty" json:"lastPreviewPage,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	NameSpace string `xml:"nameSpace,omitempty" json:"nameSpace,omitempty"`

	OmniProcessElements []*OmniProcessElement `xml:"omniProcessElements,omitempty" json:"omniProcessElements,omitempty"`

	OmniProcessKey string `xml:"omniProcessKey,omitempty" json:"omniProcessKey,omitempty"`

	OmniProcessType *OmniProcessType `xml:"omniProcessType,omitempty" json:"omniProcessType,omitempty"`

	OverrideKey string `xml:"overrideKey,omitempty" json:"overrideKey,omitempty"`

	PropertySetConfig string `xml:"propertySetConfig,omitempty" json:"propertySetConfig,omitempty"`

	RequiredPermission string `xml:"requiredPermission,omitempty" json:"requiredPermission,omitempty"`

	ResponseCacheType string `xml:"responseCacheType,omitempty" json:"responseCacheType,omitempty"`

	SubType string `xml:"subType,omitempty" json:"subType,omitempty"`

	Type_ string `xml:"type,omitempty" json:"type,omitempty"`

	UniqueName string `xml:"uniqueName,omitempty" json:"uniqueName,omitempty"`

	VersionNumber float64 `xml:"versionNumber,omitempty" json:"versionNumber,omitempty"`

	WebComponentKey string `xml:"webComponentKey,omitempty" json:"webComponentKey,omitempty"`
}

type OmniSupervisorConfig struct {
	*Metadata

	IsTimelineHidden bool `xml:"isTimelineHidden,omitempty" json:"isTimelineHidden,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	OmniSupervisorConfigAction []*OmniSupervisorConfigAction `xml:"omniSupervisorConfigAction,omitempty" json:"omniSupervisorConfigAction,omitempty"`

	OmniSupervisorConfigGroup []*OmniSupervisorConfigGroup `xml:"omniSupervisorConfigGroup,omitempty" json:"omniSupervisorConfigGroup,omitempty"`

	OmniSupervisorConfigProfile []*OmniSupervisorConfigProfile `xml:"omniSupervisorConfigProfile,omitempty" json:"omniSupervisorConfigProfile,omitempty"`

	OmniSupervisorConfigQueue []*OmniSupervisorConfigQueue `xml:"omniSupervisorConfigQueue,omitempty" json:"omniSupervisorConfigQueue,omitempty"`

	OmniSupervisorConfigSkill []*OmniSupervisorConfigSkill `xml:"omniSupervisorConfigSkill,omitempty" json:"omniSupervisorConfigSkill,omitempty"`

	SkillVisibility *OmniSuperSkillVisibilityType `xml:"skillVisibility,omitempty" json:"skillVisibility,omitempty"`
}

type OmniSupervisorConfigAction struct {
	ActionName *OmniSupervisorActionName `xml:"actionName,omitempty" json:"actionName,omitempty"`

	ActionTab *OmniSupervisorActionTab `xml:"actionTab,omitempty" json:"actionTab,omitempty"`

	CustomActionFlow string `xml:"customActionFlow,omitempty" json:"customActionFlow,omitempty"`

	DisplayOrder int32 `xml:"displayOrder,omitempty" json:"displayOrder,omitempty"`
}

type OmniSupervisorConfigGroup struct {
	Group string `xml:"group,omitempty" json:"group,omitempty"`
}

type OmniSupervisorConfigProfile struct {
	Profile string `xml:"profile,omitempty" json:"profile,omitempty"`
}

type OmniSupervisorConfigQueue struct {
	Queue string `xml:"queue,omitempty" json:"queue,omitempty"`
}

type OmniSupervisorConfigSkill struct {
	Skill string `xml:"skill,omitempty" json:"skill,omitempty"`
}

type OmniUiCard struct {
	*Metadata

	AuthorName string `xml:"authorName,omitempty" json:"authorName,omitempty"`

	ClonedFromOmniUiCardKey string `xml:"clonedFromOmniUiCardKey,omitempty" json:"clonedFromOmniUiCardKey,omitempty"`

	DataSourceConfig string `xml:"dataSourceConfig,omitempty" json:"dataSourceConfig,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	OmniUiCardType *OmniUiCardType `xml:"omniUiCardType,omitempty" json:"omniUiCardType,omitempty"`

	OverrideKey string `xml:"overrideKey,omitempty" json:"overrideKey,omitempty"`

	PropertySetConfig string `xml:"propertySetConfig,omitempty" json:"propertySetConfig,omitempty"`

	SampleDataSourceResponse string `xml:"sampleDataSourceResponse,omitempty" json:"sampleDataSourceResponse,omitempty"`

	StylingConfiguration string `xml:"stylingConfiguration,omitempty" json:"stylingConfiguration,omitempty"`

	VersionNumber string `xml:"versionNumber,omitempty" json:"versionNumber,omitempty"`
}

type OpportunityScoreSettings struct {
	*Metadata

	EnableOpportunityScoring bool `xml:"enableOpportunityScoring,omitempty" json:"enableOpportunityScoring,omitempty"`
}

type OpportunitySettings struct {
	*Metadata

	AutoActivateNewReminders bool `xml:"autoActivateNewReminders,omitempty" json:"autoActivateNewReminders,omitempty"`

	CustomizableProductSchedulesEnabled bool `xml:"customizableProductSchedulesEnabled,omitempty" json:"customizableProductSchedulesEnabled,omitempty"`

	DoesEnforceStandardOpportunitySaveLogic bool `xml:"doesEnforceStandardOpportunitySaveLogic,omitempty" json:"doesEnforceStandardOpportunitySaveLogic,omitempty"`

	EnableExpandedPipelineInspectionSetup bool `xml:"enableExpandedPipelineInspectionSetup,omitempty" json:"enableExpandedPipelineInspectionSetup,omitempty"`

	EnableFindSimilarOpportunities bool `xml:"enableFindSimilarOpportunities,omitempty" json:"enableFindSimilarOpportunities,omitempty"`

	EnableForecastCategoryMetrics bool `xml:"enableForecastCategoryMetrics,omitempty" json:"enableForecastCategoryMetrics,omitempty"`

	EnableOpportunityFieldHistoryTracking bool `xml:"enableOpportunityFieldHistoryTracking,omitempty" json:"enableOpportunityFieldHistoryTracking,omitempty"`

	EnableOpportunityInsightsInMobile bool `xml:"enableOpportunityInsightsInMobile,omitempty" json:"enableOpportunityInsightsInMobile,omitempty"`

	EnableOpportunityTeam bool `xml:"enableOpportunityTeam,omitempty" json:"enableOpportunityTeam,omitempty"`

	EnablePipelineChangesMetrics bool `xml:"enablePipelineChangesMetrics,omitempty" json:"enablePipelineChangesMetrics,omitempty"`

	EnablePipelineInspection bool `xml:"enablePipelineInspection,omitempty" json:"enablePipelineInspection,omitempty"`

	EnablePipelineInspectionFlow bool `xml:"enablePipelineInspectionFlow,omitempty" json:"enablePipelineInspectionFlow,omitempty"`

	EnablePipelineInspectionSingleCategoryRollup bool `xml:"enablePipelineInspectionSingleCategoryRollup,omitempty" json:"enablePipelineInspectionSingleCategoryRollup,omitempty"`

	EnableRevenueInsights bool `xml:"enableRevenueInsights,omitempty" json:"enableRevenueInsights,omitempty"`

	EnableServiceCaseInsights bool `xml:"enableServiceCaseInsights,omitempty" json:"enableServiceCaseInsights,omitempty"`

	EnableUpdateReminders bool `xml:"enableUpdateReminders,omitempty" json:"enableUpdateReminders,omitempty"`

	FindSimilarOppFilter *FindSimilarOppFilter `xml:"findSimilarOppFilter,omitempty" json:"findSimilarOppFilter,omitempty"`

	OppAmountDealMotionEnabled bool `xml:"oppAmountDealMotionEnabled,omitempty" json:"oppAmountDealMotionEnabled,omitempty"`

	OppCloseDateDealMotionEnabled bool `xml:"oppCloseDateDealMotionEnabled,omitempty" json:"oppCloseDateDealMotionEnabled,omitempty"`

	PromptToAddProducts bool `xml:"promptToAddProducts,omitempty" json:"promptToAddProducts,omitempty"`

	PushCountEnabled bool `xml:"pushCountEnabled,omitempty" json:"pushCountEnabled,omitempty"`

	SimpleOppCreateFromContact bool `xml:"simpleOppCreateFromContact,omitempty" json:"simpleOppCreateFromContact,omitempty"`

	SimpleOppCreateFromEvent bool `xml:"simpleOppCreateFromEvent,omitempty" json:"simpleOppCreateFromEvent,omitempty"`
}

type FindSimilarOppFilter struct {
	SimilarOpportunitiesDisplayColumns []string `xml:"similarOpportunitiesDisplayColumns,omitempty" json:"similarOpportunitiesDisplayColumns,omitempty"`

	SimilarOpportunitiesMatchFields []string `xml:"similarOpportunitiesMatchFields,omitempty" json:"similarOpportunitiesMatchFields,omitempty"`
}

type OrchestrationContext struct {
	*Metadata

	Datasets []*OrchestrationContextDataset `xml:"datasets,omitempty" json:"datasets,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Events []*OrchestrationContextEvent `xml:"events,omitempty" json:"events,omitempty"`

	ImageFile string `xml:"imageFile,omitempty" json:"imageFile,omitempty"`

	ImageScale int32 `xml:"imageScale,omitempty" json:"imageScale,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	RuntimeType string `xml:"runtimeType,omitempty" json:"runtimeType,omitempty"`

	SalesforceObject string `xml:"salesforceObject,omitempty" json:"salesforceObject,omitempty"`

	SalesforceObjectPrimaryKey string `xml:"salesforceObjectPrimaryKey,omitempty" json:"salesforceObjectPrimaryKey,omitempty"`
}

type OrchestrationContextDataset struct {
	DatasetType string `xml:"datasetType,omitempty" json:"datasetType,omitempty"`

	OrchestrationDataset string `xml:"orchestrationDataset,omitempty" json:"orchestrationDataset,omitempty"`
}

type OrchestrationContextEvent struct {
	EventType string `xml:"eventType,omitempty" json:"eventType,omitempty"`

	OrchestrationEvent string `xml:"orchestrationEvent,omitempty" json:"orchestrationEvent,omitempty"`

	PlatformEvent string `xml:"platformEvent,omitempty" json:"platformEvent,omitempty"`

	PlatformEventPrimaryKey string `xml:"platformEventPrimaryKey,omitempty" json:"platformEventPrimaryKey,omitempty"`
}

type OrderManagementSettings struct {
	*Metadata

	EnableB2CHighScaleOrders bool `xml:"enableB2CHighScaleOrders,omitempty" json:"enableB2CHighScaleOrders,omitempty"`

	EnableB2CIntegration bool `xml:"enableB2CIntegration,omitempty" json:"enableB2CIntegration,omitempty"`

	EnableDuplicateManagement bool `xml:"enableDuplicateManagement,omitempty" json:"enableDuplicateManagement,omitempty"`

	EnableHighScaleOrders bool `xml:"enableHighScaleOrders,omitempty" json:"enableHighScaleOrders,omitempty"`

	EnableIndividualOrderItemTaxAdjustments bool `xml:"enableIndividualOrderItemTaxAdjustments,omitempty" json:"enableIndividualOrderItemTaxAdjustments,omitempty"`

	EnableOMAutomation bool `xml:"enableOMAutomation,omitempty" json:"enableOMAutomation,omitempty"`

	EnableOrderManagement bool `xml:"enableOrderManagement,omitempty" json:"enableOrderManagement,omitempty"`

	EnablePersonAccountsForShoppers bool `xml:"enablePersonAccountsForShoppers,omitempty" json:"enablePersonAccountsForShoppers,omitempty"`

	InitOMAutomation bool `xml:"initOMAutomation,omitempty" json:"initOMAutomation,omitempty"`
}

type OrderSettings struct {
	*Metadata

	EnableEnhancedCommerceOrders bool `xml:"enableEnhancedCommerceOrders,omitempty" json:"enableEnhancedCommerceOrders,omitempty"`

	EnableNegativeQuantity bool `xml:"enableNegativeQuantity,omitempty" json:"enableNegativeQuantity,omitempty"`

	EnableOptionalPricebook bool `xml:"enableOptionalPricebook,omitempty" json:"enableOptionalPricebook,omitempty"`

	EnableOrderEvents bool `xml:"enableOrderEvents,omitempty" json:"enableOrderEvents,omitempty"`

	EnableOrders bool `xml:"enableOrders,omitempty" json:"enableOrders,omitempty"`

	EnableReductionOrders bool `xml:"enableReductionOrders,omitempty" json:"enableReductionOrders,omitempty"`

	EnableZeroQuantity bool `xml:"enableZeroQuantity,omitempty" json:"enableZeroQuantity,omitempty"`
}

type OutboundNetworkConnection struct {
	*Metadata

	ConnectionType *ExternalConnectionType `xml:"connectionType,omitempty" json:"connectionType,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	OutboundNetworkConnProperties []*OutboundNetworkConnProperty `xml:"outboundNetworkConnProperties,omitempty" json:"outboundNetworkConnProperties,omitempty"`

	Status *ExternalConnectionStatus `xml:"status,omitempty" json:"status,omitempty"`
}

type OutboundNetworkConnProperty struct {
	PropertyName *OutboundConnPropertyName `xml:"propertyName,omitempty" json:"propertyName,omitempty"`

	PropertyValue string `xml:"propertyValue,omitempty" json:"propertyValue,omitempty"`
}

type Package struct {
	*Metadata

	ApiAccessLevel *APIAccessLevel `xml:"apiAccessLevel,omitempty" json:"apiAccessLevel,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	NamespacePrefix string `xml:"namespacePrefix,omitempty" json:"namespacePrefix,omitempty"`

	ObjectPermissions []*ProfileObjectPermissions `xml:"objectPermissions,omitempty" json:"objectPermissions,omitempty"`

	PackageType string `xml:"packageType,omitempty" json:"packageType,omitempty"`

	PostInstallClass string `xml:"postInstallClass,omitempty" json:"postInstallClass,omitempty"`

	SetupWeblink string `xml:"setupWeblink,omitempty" json:"setupWeblink,omitempty"`

	Types []*PackageTypeMembers `xml:"types,omitempty" json:"types,omitempty"`

	UninstallClass string `xml:"uninstallClass,omitempty" json:"uninstallClass,omitempty"`

	Version string `xml:"version,omitempty" json:"version,omitempty"`
}

type ProfileObjectPermissions struct {
	AllowCreate bool `xml:"allowCreate,omitempty" json:"allowCreate,omitempty"`

	AllowDelete bool `xml:"allowDelete,omitempty" json:"allowDelete,omitempty"`

	AllowEdit bool `xml:"allowEdit,omitempty" json:"allowEdit,omitempty"`

	AllowRead bool `xml:"allowRead,omitempty" json:"allowRead,omitempty"`

	ModifyAllRecords bool `xml:"modifyAllRecords,omitempty" json:"modifyAllRecords,omitempty"`

	Object string `xml:"object,omitempty" json:"object,omitempty"`

	ViewAllRecords bool `xml:"viewAllRecords,omitempty" json:"viewAllRecords,omitempty"`
}

type PackageTypeMembers struct {
	Members []string `xml:"members,omitempty" json:"members,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type PardotEinsteinSettings struct {
	*Metadata

	EnableCampaignInsight bool `xml:"enableCampaignInsight,omitempty" json:"enableCampaignInsight,omitempty"`

	EnableEngagementScore bool `xml:"enableEngagementScore,omitempty" json:"enableEngagementScore,omitempty"`
}

type PardotSettings struct {
	*Metadata

	EnableAIEinsteinEngageFreq bool `xml:"enableAIEinsteinEngageFreq,omitempty" json:"enableAIEinsteinEngageFreq,omitempty"`

	EnableAIOptimizedSendTime bool `xml:"enableAIOptimizedSendTime,omitempty" json:"enableAIOptimizedSendTime,omitempty"`

	EnableB2bmaAppEnabled bool `xml:"enableB2bmaAppEnabled,omitempty" json:"enableB2bmaAppEnabled,omitempty"`

	EnableEngagementHistoryDashboards bool `xml:"enableEngagementHistoryDashboards,omitempty" json:"enableEngagementHistoryDashboards,omitempty"`

	EnableEnhancedProspectCustomFieldsSync bool `xml:"enableEnhancedProspectCustomFieldsSync,omitempty" json:"enableEnhancedProspectCustomFieldsSync,omitempty"`

	EnablePardotAppV1Enabled bool `xml:"enablePardotAppV1Enabled,omitempty" json:"enablePardotAppV1Enabled,omitempty"`

	EnablePardotEnabled bool `xml:"enablePardotEnabled,omitempty" json:"enablePardotEnabled,omitempty"`

	EnablePardotObjectSync bool `xml:"enablePardotObjectSync,omitempty" json:"enablePardotObjectSync,omitempty"`

	EnableProspectActivityDataset bool `xml:"enableProspectActivityDataset,omitempty" json:"enableProspectActivityDataset,omitempty"`
}

type ParticipantRole struct {
	*Metadata

	DefaultAccessLevel *ParticipantRoleAccessLevel `xml:"defaultAccessLevel,omitempty" json:"defaultAccessLevel,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	ParentObject string `xml:"parentObject,omitempty" json:"parentObject,omitempty"`
}

type PartyDataModelSettings struct {
	*Metadata

	EnableAutoSelectIndividualOnMerge bool `xml:"enableAutoSelectIndividualOnMerge,omitempty" json:"enableAutoSelectIndividualOnMerge,omitempty"`

	EnableConsentManagement bool `xml:"enableConsentManagement,omitempty" json:"enableConsentManagement,omitempty"`

	EnableIndividualAutoCreate bool `xml:"enableIndividualAutoCreate,omitempty" json:"enableIndividualAutoCreate,omitempty"`
}

type PathAssistant struct {
	*Metadata

	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	EntityName string `xml:"entityName,omitempty" json:"entityName,omitempty"`

	FieldName string `xml:"fieldName,omitempty" json:"fieldName,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	PathAssistantSteps []*PathAssistantStep `xml:"pathAssistantSteps,omitempty" json:"pathAssistantSteps,omitempty"`

	RecordTypeName string `xml:"recordTypeName,omitempty" json:"recordTypeName,omitempty"`
}

type PathAssistantStep struct {
	FieldNames []string `xml:"fieldNames,omitempty" json:"fieldNames,omitempty"`

	Info string `xml:"info,omitempty" json:"info,omitempty"`

	PicklistValueName string `xml:"picklistValueName,omitempty" json:"picklistValueName,omitempty"`
}

type PathAssistantSettings struct {
	*Metadata

	CanOverrideAutoPathCollapseWithUserPref bool `xml:"canOverrideAutoPathCollapseWithUserPref,omitempty" json:"canOverrideAutoPathCollapseWithUserPref,omitempty"`

	PathAssistantEnabled bool `xml:"pathAssistantEnabled,omitempty" json:"pathAssistantEnabled,omitempty"`
}

type PaymentGatewayProvider struct {
	*Metadata

	ApexAdapter string `xml:"apexAdapter,omitempty" json:"apexAdapter,omitempty"`

	Comments string `xml:"comments,omitempty" json:"comments,omitempty"`

	IdempotencySupported *IdempotencySupportStatus `xml:"idempotencySupported,omitempty" json:"idempotencySupported,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type PaymentsSettings struct {
	*Metadata

	EnablePayments bool `xml:"enablePayments,omitempty" json:"enablePayments,omitempty"`
}

type PermissionSet struct {
	*Metadata

	ApplicationVisibilities []*PermissionSetApplicationVisibility `xml:"applicationVisibilities,omitempty" json:"applicationVisibilities,omitempty"`

	ClassAccesses []*PermissionSetApexClassAccess `xml:"classAccesses,omitempty" json:"classAccesses,omitempty"`

	CustomMetadataTypeAccesses []*PermissionSetCustomMetadataTypeAccess `xml:"customMetadataTypeAccesses,omitempty" json:"customMetadataTypeAccesses,omitempty"`

	CustomPermissions []*PermissionSetCustomPermissions `xml:"customPermissions,omitempty" json:"customPermissions,omitempty"`

	CustomSettingAccesses []*PermissionSetCustomSettingAccess `xml:"customSettingAccesses,omitempty" json:"customSettingAccesses,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	ExternalCredentialPrincipalAccesses []*PermissionSetExternalCredentialPrincipalAccess `xml:"externalCredentialPrincipalAccesses,omitempty" json:"externalCredentialPrincipalAccesses,omitempty"`

	ExternalDataSourceAccesses []*PermissionSetExternalDataSourceAccess `xml:"externalDataSourceAccesses,omitempty" json:"externalDataSourceAccesses,omitempty"`

	FieldPermissions []*PermissionSetFieldPermissions `xml:"fieldPermissions,omitempty" json:"fieldPermissions,omitempty"`

	FlowAccesses []*PermissionSetFlowAccess `xml:"flowAccesses,omitempty" json:"flowAccesses,omitempty"`

	HasActivationRequired bool `xml:"hasActivationRequired,omitempty" json:"hasActivationRequired,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	License string `xml:"license,omitempty" json:"license,omitempty"`

	ObjectPermissions []*PermissionSetObjectPermissions `xml:"objectPermissions,omitempty" json:"objectPermissions,omitempty"`

	PageAccesses []*PermissionSetApexPageAccess `xml:"pageAccesses,omitempty" json:"pageAccesses,omitempty"`

	RecordTypeVisibilities []*PermissionSetRecordTypeVisibility `xml:"recordTypeVisibilities,omitempty" json:"recordTypeVisibilities,omitempty"`

	TabSettings []*PermissionSetTabSetting `xml:"tabSettings,omitempty" json:"tabSettings,omitempty"`

	UserPermissions []*PermissionSetUserPermission `xml:"userPermissions,omitempty" json:"userPermissions,omitempty"`
}

type PermissionSetApplicationVisibility struct {
	Application string `xml:"application,omitempty" json:"application,omitempty"`

	Visible bool `xml:"visible,omitempty" json:"visible,omitempty"`
}

type PermissionSetApexClassAccess struct {
	ApexClass string `xml:"apexClass,omitempty" json:"apexClass,omitempty"`

	Enabled bool `xml:"enabled,omitempty" json:"enabled,omitempty"`
}

type PermissionSetCustomMetadataTypeAccess struct {
	Enabled bool `xml:"enabled,omitempty" json:"enabled,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type PermissionSetCustomPermissions struct {
	Enabled bool `xml:"enabled,omitempty" json:"enabled,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type PermissionSetCustomSettingAccess struct {
	Enabled bool `xml:"enabled,omitempty" json:"enabled,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type PermissionSetExternalCredentialPrincipalAccess struct {
	Enabled bool `xml:"enabled,omitempty" json:"enabled,omitempty"`

	ExternalCredentialPrincipal string `xml:"externalCredentialPrincipal,omitempty" json:"externalCredentialPrincipal,omitempty"`
}

type PermissionSetExternalDataSourceAccess struct {
	Enabled bool `xml:"enabled,omitempty" json:"enabled,omitempty"`

	ExternalDataSource string `xml:"externalDataSource,omitempty" json:"externalDataSource,omitempty"`
}

type PermissionSetFieldPermissions struct {
	Editable bool `xml:"editable,omitempty" json:"editable,omitempty"`

	Field string `xml:"field,omitempty" json:"field,omitempty"`

	Readable bool `xml:"readable,omitempty" json:"readable,omitempty"`
}

type PermissionSetFlowAccess struct {
	Enabled bool `xml:"enabled,omitempty" json:"enabled,omitempty"`

	Flow string `xml:"flow,omitempty" json:"flow,omitempty"`
}

type PermissionSetObjectPermissions struct {
	AllowCreate bool `xml:"allowCreate,omitempty" json:"allowCreate,omitempty"`

	AllowDelete bool `xml:"allowDelete,omitempty" json:"allowDelete,omitempty"`

	AllowEdit bool `xml:"allowEdit,omitempty" json:"allowEdit,omitempty"`

	AllowRead bool `xml:"allowRead,omitempty" json:"allowRead,omitempty"`

	ModifyAllRecords bool `xml:"modifyAllRecords,omitempty" json:"modifyAllRecords,omitempty"`

	Object string `xml:"object,omitempty" json:"object,omitempty"`

	ViewAllRecords bool `xml:"viewAllRecords,omitempty" json:"viewAllRecords,omitempty"`
}

type PermissionSetApexPageAccess struct {
	ApexPage string `xml:"apexPage,omitempty" json:"apexPage,omitempty"`

	Enabled bool `xml:"enabled,omitempty" json:"enabled,omitempty"`
}

type PermissionSetRecordTypeVisibility struct {
	RecordType string `xml:"recordType,omitempty" json:"recordType,omitempty"`

	Visible bool `xml:"visible,omitempty" json:"visible,omitempty"`
}

type PermissionSetTabSetting struct {
	Tab string `xml:"tab,omitempty" json:"tab,omitempty"`

	Visibility *PermissionSetTabVisibility `xml:"visibility,omitempty" json:"visibility,omitempty"`
}

type PermissionSetUserPermission struct {
	Enabled bool `xml:"enabled,omitempty" json:"enabled,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type MutingPermissionSet struct {
	*PermissionSet

	Label string `xml:"label,omitempty" json:"label,omitempty"`
}

type PermissionSetGroup struct {
	*Metadata

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	HasActivationRequired bool `xml:"hasActivationRequired,omitempty" json:"hasActivationRequired,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	MutingPermissionSets []string `xml:"mutingPermissionSets,omitempty" json:"mutingPermissionSets,omitempty"`

	PermissionSets []string `xml:"permissionSets,omitempty" json:"permissionSets,omitempty"`

	Status string `xml:"status,omitempty" json:"status,omitempty"`
}

type PermissionSetLicenseDefinition struct {
	*Metadata

	CustomPermissions []*PermissionSetLicenseDefinitionCustomPermission `xml:"customPermissions,omitempty" json:"customPermissions,omitempty"`

	IsSupplementLicense bool `xml:"isSupplementLicense,omitempty" json:"isSupplementLicense,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	LicenseExpirationPolicy *LicenseExpirationPolicy `xml:"licenseExpirationPolicy,omitempty" json:"licenseExpirationPolicy,omitempty"`

	UserLicenseRestrictions string `xml:"userLicenseRestrictions,omitempty" json:"userLicenseRestrictions,omitempty"`
}

type PermissionSetLicenseDefinitionCustomPermission struct {
	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type PersonAccountOwnerPowerUser struct {
	*Metadata

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	PortalType string `xml:"portalType,omitempty" json:"portalType,omitempty"`

	User string `xml:"user,omitempty" json:"user,omitempty"`
}

type PicklistSettings struct {
	*Metadata

	IsPicklistApiNameEditDisabled bool `xml:"isPicklistApiNameEditDisabled,omitempty" json:"isPicklistApiNameEditDisabled,omitempty"`
}

type PlatformCachePartition struct {
	*Metadata

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	IsDefaultPartition bool `xml:"isDefaultPartition,omitempty" json:"isDefaultPartition,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	PlatformCachePartitionTypes []*PlatformCachePartitionType `xml:"platformCachePartitionTypes,omitempty" json:"platformCachePartitionTypes,omitempty"`
}

type PlatformCachePartitionType struct {
	AllocatedCapacity int32 `xml:"allocatedCapacity,omitempty" json:"allocatedCapacity,omitempty"`

	AllocatedPartnerCapacity int32 `xml:"allocatedPartnerCapacity,omitempty" json:"allocatedPartnerCapacity,omitempty"`

	AllocatedPurchasedCapacity int32 `xml:"allocatedPurchasedCapacity,omitempty" json:"allocatedPurchasedCapacity,omitempty"`

	AllocatedTrialCapacity int32 `xml:"allocatedTrialCapacity,omitempty" json:"allocatedTrialCapacity,omitempty"`

	CacheType *PlatformCacheType `xml:"cacheType,omitempty" json:"cacheType,omitempty"`
}

type PlatformEncryptionSettings struct {
	*Metadata

	CanEncryptManagedPackageFields bool `xml:"canEncryptManagedPackageFields,omitempty" json:"canEncryptManagedPackageFields,omitempty"`

	EnableDeterministicEncryption bool `xml:"enableDeterministicEncryption,omitempty" json:"enableDeterministicEncryption,omitempty"`

	EnableEncryptFieldHistory bool `xml:"enableEncryptFieldHistory,omitempty" json:"enableEncryptFieldHistory,omitempty"`

	EnableEncryptionSearchEnabled bool `xml:"enableEncryptionSearchEnabled,omitempty" json:"enableEncryptionSearchEnabled,omitempty"`

	EnableEventBusEncryption bool `xml:"enableEventBusEncryption,omitempty" json:"enableEventBusEncryption,omitempty"`

	IsMEKForEncryptionRequired bool `xml:"isMEKForEncryptionRequired,omitempty" json:"isMEKForEncryptionRequired,omitempty"`

	IsUseHighAssuranceKeysRequired bool `xml:"isUseHighAssuranceKeysRequired,omitempty" json:"isUseHighAssuranceKeysRequired,omitempty"`
}

type PlatformEventChannel struct {
	*Metadata

	ChannelType *PlatformEventChannelType `xml:"channelType,omitempty" json:"channelType,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`
}

type PlatformEventChannelMember struct {
	*Metadata

	EnrichedFields []*EnrichedField `xml:"enrichedFields,omitempty" json:"enrichedFields,omitempty"`

	EventChannel string `xml:"eventChannel,omitempty" json:"eventChannel,omitempty"`

	FilterExpression string `xml:"filterExpression,omitempty" json:"filterExpression,omitempty"`

	SelectedEntity string `xml:"selectedEntity,omitempty" json:"selectedEntity,omitempty"`
}

type EnrichedField struct {
	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type Portal struct {
	*Metadata

	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	Admin string `xml:"admin,omitempty" json:"admin,omitempty"`

	DefaultLanguage string `xml:"defaultLanguage,omitempty" json:"defaultLanguage,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	EmailSenderAddress string `xml:"emailSenderAddress,omitempty" json:"emailSenderAddress,omitempty"`

	EmailSenderName string `xml:"emailSenderName,omitempty" json:"emailSenderName,omitempty"`

	EnableSelfCloseCase bool `xml:"enableSelfCloseCase,omitempty" json:"enableSelfCloseCase,omitempty"`

	FooterDocument string `xml:"footerDocument,omitempty" json:"footerDocument,omitempty"`

	ForgotPassTemplate string `xml:"forgotPassTemplate,omitempty" json:"forgotPassTemplate,omitempty"`

	HeaderDocument string `xml:"headerDocument,omitempty" json:"headerDocument,omitempty"`

	IsSelfRegistrationActivated bool `xml:"isSelfRegistrationActivated,omitempty" json:"isSelfRegistrationActivated,omitempty"`

	LoginHeaderDocument string `xml:"loginHeaderDocument,omitempty" json:"loginHeaderDocument,omitempty"`

	LogoDocument string `xml:"logoDocument,omitempty" json:"logoDocument,omitempty"`

	LogoutUrl string `xml:"logoutUrl,omitempty" json:"logoutUrl,omitempty"`

	NewCommentTemplate string `xml:"newCommentTemplate,omitempty" json:"newCommentTemplate,omitempty"`

	NewPassTemplate string `xml:"newPassTemplate,omitempty" json:"newPassTemplate,omitempty"`

	NewUserTemplate string `xml:"newUserTemplate,omitempty" json:"newUserTemplate,omitempty"`

	OwnerNotifyTemplate string `xml:"ownerNotifyTemplate,omitempty" json:"ownerNotifyTemplate,omitempty"`

	SelfRegNewUserUrl string `xml:"selfRegNewUserUrl,omitempty" json:"selfRegNewUserUrl,omitempty"`

	SelfRegUserDefaultProfile string `xml:"selfRegUserDefaultProfile,omitempty" json:"selfRegUserDefaultProfile,omitempty"`

	SelfRegUserDefaultRole *PortalRoles `xml:"selfRegUserDefaultRole,omitempty" json:"selfRegUserDefaultRole,omitempty"`

	SelfRegUserTemplate string `xml:"selfRegUserTemplate,omitempty" json:"selfRegUserTemplate,omitempty"`

	ShowActionConfirmation bool `xml:"showActionConfirmation,omitempty" json:"showActionConfirmation,omitempty"`

	StylesheetDocument string `xml:"stylesheetDocument,omitempty" json:"stylesheetDocument,omitempty"`

	Type_ *PortalType `xml:"type,omitempty" json:"type,omitempty"`
}

type PortalsSettings struct {
	*Metadata

	ClickjackSSPLoginPage bool `xml:"clickjackSSPLoginPage,omitempty" json:"clickjackSSPLoginPage,omitempty"`

	RedirectPortalLoginToHttps bool `xml:"redirectPortalLoginToHttps,omitempty" json:"redirectPortalLoginToHttps,omitempty"`
}

type PostTemplate struct {
	*Metadata

	Default_ bool `xml:"default,omitempty" json:"default,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`
}

type PredictionBuilderSettings struct {
	*Metadata

	EnablePredictionBuilder bool `xml:"enablePredictionBuilder,omitempty" json:"enablePredictionBuilder,omitempty"`

	IsPredictionBuilderStarted bool `xml:"isPredictionBuilderStarted,omitempty" json:"isPredictionBuilderStarted,omitempty"`
}

type PresenceDeclineReason struct {
	*Metadata

	Label string `xml:"label,omitempty" json:"label,omitempty"`
}

type PresenceUserConfig struct {
	*Metadata

	Assignments *PresenceConfigAssignments `xml:"assignments,omitempty" json:"assignments,omitempty"`

	Capacity int32 `xml:"capacity,omitempty" json:"capacity,omitempty"`

	DeclineReasons []string `xml:"declineReasons,omitempty" json:"declineReasons,omitempty"`

	EnableAutoAccept bool `xml:"enableAutoAccept,omitempty" json:"enableAutoAccept,omitempty"`

	EnableDecline bool `xml:"enableDecline,omitempty" json:"enableDecline,omitempty"`

	EnableDeclineReason bool `xml:"enableDeclineReason,omitempty" json:"enableDeclineReason,omitempty"`

	EnableDisconnectSound bool `xml:"enableDisconnectSound,omitempty" json:"enableDisconnectSound,omitempty"`

	EnableRequestSound bool `xml:"enableRequestSound,omitempty" json:"enableRequestSound,omitempty"`

	InterruptibleCapacity int32 `xml:"interruptibleCapacity,omitempty" json:"interruptibleCapacity,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	PresenceStatusOnDecline string `xml:"presenceStatusOnDecline,omitempty" json:"presenceStatusOnDecline,omitempty"`

	PresenceStatusOnPushTimeout string `xml:"presenceStatusOnPushTimeout,omitempty" json:"presenceStatusOnPushTimeout,omitempty"`
}

type PresenceConfigAssignments struct {
	Profiles *PresenceConfigProfileAssignments `xml:"profiles,omitempty" json:"profiles,omitempty"`

	Users *PresenceConfigUserAssignments `xml:"users,omitempty" json:"users,omitempty"`
}

type PresenceConfigProfileAssignments struct {
	Profile []string `xml:"profile,omitempty" json:"profile,omitempty"`
}

type PresenceConfigUserAssignments struct {
	User []string `xml:"user,omitempty" json:"user,omitempty"`
}

type PriceRule struct {
	*Metadata

	ConditionLogic *ConditionLogic `xml:"conditionLogic,omitempty" json:"conditionLogic,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	EffectiveDate soap.XSDDateTime `xml:"effectiveDate,omitempty" json:"effectiveDate,omitempty"`

	ExpirationDate soap.XSDDateTime `xml:"expirationDate,omitempty" json:"expirationDate,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	PriceRuleActions []*PriceRuleAction `xml:"priceRuleActions,omitempty" json:"priceRuleActions,omitempty"`

	PriceRuleConditions []*PriceRuleCondition `xml:"priceRuleConditions,omitempty" json:"priceRuleConditions,omitempty"`

	PriceRuleExecutionStages []*PriceRuleExecutionStage `xml:"priceRuleExecutionStages,omitempty" json:"priceRuleExecutionStages,omitempty"`

	Sequence int32 `xml:"sequence,omitempty" json:"sequence,omitempty"`

	Status *RuleStatus `xml:"status,omitempty" json:"status,omitempty"`
}

type PriceRuleAction struct {
	ConditionVariable string `xml:"conditionVariable,omitempty" json:"conditionVariable,omitempty"`

	PriceRuleActionItems []*PriceRuleActionItem `xml:"priceRuleActionItems,omitempty" json:"priceRuleActionItems,omitempty"`

	Sequence int32 `xml:"sequence,omitempty" json:"sequence,omitempty"`

	TargetObject string `xml:"targetObject,omitempty" json:"targetObject,omitempty"`

	Type_ *TypeOfAction `xml:"type,omitempty" json:"type,omitempty"`
}

type PriceRuleActionItem struct {
	Field string `xml:"field,omitempty" json:"field,omitempty"`

	FieldValue string `xml:"fieldValue,omitempty" json:"fieldValue,omitempty"`

	FieldValueType *InputValueType `xml:"fieldValueType,omitempty" json:"fieldValueType,omitempty"`

	Sequence int32 `xml:"sequence,omitempty" json:"sequence,omitempty"`
}

type PriceRuleCondition struct {
	AccumulateResultCondInput string `xml:"accumulateResultCondInput,omitempty" json:"accumulateResultCondInput,omitempty"`

	AccumulateResultCondInputType *AccumulateResultCondInputType `xml:"accumulateResultCondInputType,omitempty" json:"accumulateResultCondInputType,omitempty"`

	AccumulateResultOperator *AccumulateResultOperator `xml:"accumulateResultOperator,omitempty" json:"accumulateResultOperator,omitempty"`

	AggregatedConditionVariable string `xml:"aggregatedConditionVariable,omitempty" json:"aggregatedConditionVariable,omitempty"`

	AggregationType *ConditionAggregationFunction `xml:"aggregationType,omitempty" json:"aggregationType,omitempty"`

	ConditionVariable string `xml:"conditionVariable,omitempty" json:"conditionVariable,omitempty"`

	MatchType *TargetEntityMatchType `xml:"matchType,omitempty" json:"matchType,omitempty"`

	PriceRuleConditionFilters []*PriceRuleConditionFilter `xml:"priceRuleConditionFilters,omitempty" json:"priceRuleConditionFilters,omitempty"`

	Scope *ConditionType `xml:"scope,omitempty" json:"scope,omitempty"`

	Sequence int32 `xml:"sequence,omitempty" json:"sequence,omitempty"`

	TargetObject string `xml:"targetObject,omitempty" json:"targetObject,omitempty"`
}

type PriceRuleConditionFilter struct {
	Field string `xml:"field,omitempty" json:"field,omitempty"`

	FieldValue string `xml:"fieldValue,omitempty" json:"fieldValue,omitempty"`

	FieldValueType *ConditionFilterInputValueType `xml:"fieldValueType,omitempty" json:"fieldValueType,omitempty"`

	Operator *ConditionFilterOperator `xml:"operator,omitempty" json:"operator,omitempty"`

	Sequence int32 `xml:"sequence,omitempty" json:"sequence,omitempty"`

	Variable string `xml:"variable,omitempty" json:"variable,omitempty"`
}

type PriceRuleExecutionStage struct {
	Stage *ExecutionStageOfPriceRule `xml:"stage,omitempty" json:"stage,omitempty"`
}

type PrivacySettings struct {
	*Metadata

	AuthorizationCaptureBrowser bool `xml:"authorizationCaptureBrowser,omitempty" json:"authorizationCaptureBrowser,omitempty"`

	AuthorizationCaptureEmail bool `xml:"authorizationCaptureEmail,omitempty" json:"authorizationCaptureEmail,omitempty"`

	AuthorizationCaptureIp bool `xml:"authorizationCaptureIp,omitempty" json:"authorizationCaptureIp,omitempty"`

	AuthorizationCaptureLocation bool `xml:"authorizationCaptureLocation,omitempty" json:"authorizationCaptureLocation,omitempty"`

	AuthorizationCustomSharing bool `xml:"authorizationCustomSharing,omitempty" json:"authorizationCustomSharing,omitempty"`

	AuthorizationLockingAndVersioning bool `xml:"authorizationLockingAndVersioning,omitempty" json:"authorizationLockingAndVersioning,omitempty"`

	EnableConfigurableUserPIIActive bool `xml:"enableConfigurableUserPIIActive,omitempty" json:"enableConfigurableUserPIIActive,omitempty"`

	EnableConsentAuditTrail bool `xml:"enableConsentAuditTrail,omitempty" json:"enableConsentAuditTrail,omitempty"`

	EnableConsentEventStream bool `xml:"enableConsentEventStream,omitempty" json:"enableConsentEventStream,omitempty"`

	EnableDefaultMetadataValues bool `xml:"enableDefaultMetadataValues,omitempty" json:"enableDefaultMetadataValues,omitempty"`

	UseUmaDefaultConsentRecs bool `xml:"useUmaDefaultConsentRecs,omitempty" json:"useUmaDefaultConsentRecs,omitempty"`
}

type ProcessFlowMigration struct {
	*Metadata

	DestinationFlowDefinition string `xml:"destinationFlowDefinition,omitempty" json:"destinationFlowDefinition,omitempty"`

	DestinationFlowVersion string `xml:"destinationFlowVersion,omitempty" json:"destinationFlowVersion,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	MigratedCriteriaLabel string `xml:"migratedCriteriaLabel,omitempty" json:"migratedCriteriaLabel,omitempty"`

	MigratedCriteriaName string `xml:"migratedCriteriaName,omitempty" json:"migratedCriteriaName,omitempty"`

	ProcessVersion string `xml:"processVersion,omitempty" json:"processVersion,omitempty"`
}

type ProductAttrDisplayConfig struct {
	*Metadata

	DataType string `xml:"dataType,omitempty" json:"dataType,omitempty"`

	DisplayType string `xml:"displayType,omitempty" json:"displayType,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	Status string `xml:"status,omitempty" json:"status,omitempty"`
}

type ProductAttributeSet struct {
	*Metadata

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	ProductAttributeSetItems []*ProductAttributeSetItem `xml:"productAttributeSetItems,omitempty" json:"productAttributeSetItems,omitempty"`
}

type ProductAttributeSetItem struct {
	Field string `xml:"field,omitempty" json:"field,omitempty"`

	Sequence int32 `xml:"sequence,omitempty" json:"sequence,omitempty"`
}

type ProductSettings struct {
	*Metadata

	EnableCascadeActivateToRelatedPrices bool `xml:"enableCascadeActivateToRelatedPrices,omitempty" json:"enableCascadeActivateToRelatedPrices,omitempty"`

	EnableMySettings bool `xml:"enableMySettings,omitempty" json:"enableMySettings,omitempty"`

	EnableQuantitySchedule bool `xml:"enableQuantitySchedule,omitempty" json:"enableQuantitySchedule,omitempty"`

	EnableRevenueSchedule bool `xml:"enableRevenueSchedule,omitempty" json:"enableRevenueSchedule,omitempty"`
}

type ProductSpecificationRecType struct {
	*Metadata

	IsCommercial bool `xml:"isCommercial,omitempty" json:"isCommercial,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	ProductSpecificationType string `xml:"productSpecificationType,omitempty" json:"productSpecificationType,omitempty"`

	RecordType string `xml:"recordType,omitempty" json:"recordType,omitempty"`
}

type ProductSpecificationType struct {
	*Metadata

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type Profile struct {
	*Metadata

	ApplicationVisibilities []*ProfileApplicationVisibility `xml:"applicationVisibilities,omitempty" json:"applicationVisibilities,omitempty"`

	CategoryGroupVisibilities []*ProfileCategoryGroupVisibility `xml:"categoryGroupVisibilities,omitempty" json:"categoryGroupVisibilities,omitempty"`

	ClassAccesses []*ProfileApexClassAccess `xml:"classAccesses,omitempty" json:"classAccesses,omitempty"`

	Custom bool `xml:"custom,omitempty" json:"custom,omitempty"`

	CustomMetadataTypeAccesses []*ProfileCustomMetadataTypeAccess `xml:"customMetadataTypeAccesses,omitempty" json:"customMetadataTypeAccesses,omitempty"`

	CustomPermissions []*ProfileCustomPermissions `xml:"customPermissions,omitempty" json:"customPermissions,omitempty"`

	CustomSettingAccesses []*ProfileCustomSettingAccess `xml:"customSettingAccesses,omitempty" json:"customSettingAccesses,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	ExternalDataSourceAccesses []*ProfileExternalDataSourceAccess `xml:"externalDataSourceAccesses,omitempty" json:"externalDataSourceAccesses,omitempty"`

	FieldPermissions []*ProfileFieldLevelSecurity `xml:"fieldPermissions,omitempty" json:"fieldPermissions,omitempty"`

	FlowAccesses []*ProfileFlowAccess `xml:"flowAccesses,omitempty" json:"flowAccesses,omitempty"`

	LayoutAssignments []*ProfileLayoutAssignment `xml:"layoutAssignments,omitempty" json:"layoutAssignments,omitempty"`

	LoginFlows []*LoginFlow `xml:"loginFlows,omitempty" json:"loginFlows,omitempty"`

	LoginHours *ProfileLoginHours `xml:"loginHours,omitempty" json:"loginHours,omitempty"`

	LoginIpRanges []*ProfileLoginIpRange `xml:"loginIpRanges,omitempty" json:"loginIpRanges,omitempty"`

	ObjectPermissions []*ProfileObjectPermissions `xml:"objectPermissions,omitempty" json:"objectPermissions,omitempty"`

	PageAccesses []*ProfileApexPageAccess `xml:"pageAccesses,omitempty" json:"pageAccesses,omitempty"`

	ProfileActionOverrides []*ProfileActionOverride `xml:"profileActionOverrides,omitempty" json:"profileActionOverrides,omitempty"`

	RecordTypeVisibilities []*ProfileRecordTypeVisibility `xml:"recordTypeVisibilities,omitempty" json:"recordTypeVisibilities,omitempty"`

	TabVisibilities []*ProfileTabVisibility `xml:"tabVisibilities,omitempty" json:"tabVisibilities,omitempty"`

	UserLicense string `xml:"userLicense,omitempty" json:"userLicense,omitempty"`

	UserPermissions []*ProfileUserPermission `xml:"userPermissions,omitempty" json:"userPermissions,omitempty"`
}

type ProfileApplicationVisibility struct {
	Application string `xml:"application,omitempty" json:"application,omitempty"`

	Default_ bool `xml:"default,omitempty" json:"default,omitempty"`

	Visible bool `xml:"visible,omitempty" json:"visible,omitempty"`
}

type ProfileCategoryGroupVisibility struct {
	DataCategories []string `xml:"dataCategories,omitempty" json:"dataCategories,omitempty"`

	DataCategoryGroup string `xml:"dataCategoryGroup,omitempty" json:"dataCategoryGroup,omitempty"`

	Visibility *CategoryGroupVisibility `xml:"visibility,omitempty" json:"visibility,omitempty"`
}

type ProfileApexClassAccess struct {
	ApexClass string `xml:"apexClass,omitempty" json:"apexClass,omitempty"`

	Enabled bool `xml:"enabled,omitempty" json:"enabled,omitempty"`
}

type ProfileCustomMetadataTypeAccess struct {
	Enabled bool `xml:"enabled,omitempty" json:"enabled,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type ProfileCustomPermissions struct {
	Enabled bool `xml:"enabled,omitempty" json:"enabled,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type ProfileCustomSettingAccess struct {
	Enabled bool `xml:"enabled,omitempty" json:"enabled,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type ProfileExternalDataSourceAccess struct {
	Enabled bool `xml:"enabled,omitempty" json:"enabled,omitempty"`

	ExternalDataSource string `xml:"externalDataSource,omitempty" json:"externalDataSource,omitempty"`
}

type ProfileFieldLevelSecurity struct {
	Editable bool `xml:"editable,omitempty" json:"editable,omitempty"`

	Field string `xml:"field,omitempty" json:"field,omitempty"`

	Readable bool `xml:"readable,omitempty" json:"readable,omitempty"`
}

type ProfileFlowAccess struct {
	Enabled bool `xml:"enabled,omitempty" json:"enabled,omitempty"`

	Flow string `xml:"flow,omitempty" json:"flow,omitempty"`
}

type ProfileLayoutAssignment struct {
	Layout string `xml:"layout,omitempty" json:"layout,omitempty"`

	RecordType string `xml:"recordType,omitempty" json:"recordType,omitempty"`
}

type LoginFlow struct {
	Flow string `xml:"flow,omitempty" json:"flow,omitempty"`

	FlowType *LoginFlowType `xml:"flowType,omitempty" json:"flowType,omitempty"`

	FriendlyName string `xml:"friendlyName,omitempty" json:"friendlyName,omitempty"`

	UiLoginFlowType *UiLoginFlowType `xml:"uiLoginFlowType,omitempty" json:"uiLoginFlowType,omitempty"`

	UseLightningRuntime bool `xml:"useLightningRuntime,omitempty" json:"useLightningRuntime,omitempty"`

	VfFlowPage string `xml:"vfFlowPage,omitempty" json:"vfFlowPage,omitempty"`

	VfFlowPageTitle string `xml:"vfFlowPageTitle,omitempty" json:"vfFlowPageTitle,omitempty"`
}

type ProfileLoginHours struct {
	FridayEnd string `xml:"fridayEnd,omitempty" json:"fridayEnd,omitempty"`

	FridayStart string `xml:"fridayStart,omitempty" json:"fridayStart,omitempty"`

	MondayEnd string `xml:"mondayEnd,omitempty" json:"mondayEnd,omitempty"`

	MondayStart string `xml:"mondayStart,omitempty" json:"mondayStart,omitempty"`

	SaturdayEnd string `xml:"saturdayEnd,omitempty" json:"saturdayEnd,omitempty"`

	SaturdayStart string `xml:"saturdayStart,omitempty" json:"saturdayStart,omitempty"`

	SundayEnd string `xml:"sundayEnd,omitempty" json:"sundayEnd,omitempty"`

	SundayStart string `xml:"sundayStart,omitempty" json:"sundayStart,omitempty"`

	ThursdayEnd string `xml:"thursdayEnd,omitempty" json:"thursdayEnd,omitempty"`

	ThursdayStart string `xml:"thursdayStart,omitempty" json:"thursdayStart,omitempty"`

	TuesdayEnd string `xml:"tuesdayEnd,omitempty" json:"tuesdayEnd,omitempty"`

	TuesdayStart string `xml:"tuesdayStart,omitempty" json:"tuesdayStart,omitempty"`

	WednesdayEnd string `xml:"wednesdayEnd,omitempty" json:"wednesdayEnd,omitempty"`

	WednesdayStart string `xml:"wednesdayStart,omitempty" json:"wednesdayStart,omitempty"`
}

type ProfileLoginIpRange struct {
	Description string `xml:"description,omitempty" json:"description,omitempty"`

	EndAddress string `xml:"endAddress,omitempty" json:"endAddress,omitempty"`

	StartAddress string `xml:"startAddress,omitempty" json:"startAddress,omitempty"`
}

type ProfileApexPageAccess struct {
	ApexPage string `xml:"apexPage,omitempty" json:"apexPage,omitempty"`

	Enabled bool `xml:"enabled,omitempty" json:"enabled,omitempty"`
}

type ProfileRecordTypeVisibility struct {
	Default_ bool `xml:"default,omitempty" json:"default,omitempty"`

	PersonAccountDefault bool `xml:"personAccountDefault,omitempty" json:"personAccountDefault,omitempty"`

	RecordType string `xml:"recordType,omitempty" json:"recordType,omitempty"`

	Visible bool `xml:"visible,omitempty" json:"visible,omitempty"`
}

type ProfileTabVisibility struct {
	Tab string `xml:"tab,omitempty" json:"tab,omitempty"`

	Visibility *TabVisibility `xml:"visibility,omitempty" json:"visibility,omitempty"`
}

type ProfileUserPermission struct {
	Enabled bool `xml:"enabled,omitempty" json:"enabled,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type ProfilePasswordPolicy struct {
	*Metadata

	ForgotPasswordRedirect bool `xml:"forgotPasswordRedirect,omitempty" json:"forgotPasswordRedirect,omitempty"`

	LockoutInterval int32 `xml:"lockoutInterval,omitempty" json:"lockoutInterval,omitempty"`

	MaxLoginAttempts int32 `xml:"maxLoginAttempts,omitempty" json:"maxLoginAttempts,omitempty"`

	MinimumPasswordLength int32 `xml:"minimumPasswordLength,omitempty" json:"minimumPasswordLength,omitempty"`

	MinimumPasswordLifetime bool `xml:"minimumPasswordLifetime,omitempty" json:"minimumPasswordLifetime,omitempty"`

	Obscure bool `xml:"obscure,omitempty" json:"obscure,omitempty"`

	PasswordComplexity int32 `xml:"passwordComplexity,omitempty" json:"passwordComplexity,omitempty"`

	PasswordExpiration int32 `xml:"passwordExpiration,omitempty" json:"passwordExpiration,omitempty"`

	PasswordHistory int32 `xml:"passwordHistory,omitempty" json:"passwordHistory,omitempty"`

	PasswordQuestion int32 `xml:"passwordQuestion,omitempty" json:"passwordQuestion,omitempty"`

	Profile string `xml:"profile,omitempty" json:"profile,omitempty"`
}

type ProfileSessionSetting struct {
	*Metadata

	ExternalCommunityUserIdentityVerif bool `xml:"externalCommunityUserIdentityVerif,omitempty" json:"externalCommunityUserIdentityVerif,omitempty"`

	ForceLogout bool `xml:"forceLogout,omitempty" json:"forceLogout,omitempty"`

	Profile string `xml:"profile,omitempty" json:"profile,omitempty"`

	RequiredSessionLevel *SessionSecurityLevel `xml:"requiredSessionLevel,omitempty" json:"requiredSessionLevel,omitempty"`

	SessionPersistence bool `xml:"sessionPersistence,omitempty" json:"sessionPersistence,omitempty"`

	SessionTimeout int32 `xml:"sessionTimeout,omitempty" json:"sessionTimeout,omitempty"`

	SessionTimeoutWarning bool `xml:"sessionTimeoutWarning,omitempty" json:"sessionTimeoutWarning,omitempty"`
}

type Prompt struct {
	*Metadata

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	PromptVersions []*PromptVersion `xml:"promptVersions,omitempty" json:"promptVersions,omitempty"`
}

type PromptVersion struct {
	ActionButtonLabel string `xml:"actionButtonLabel,omitempty" json:"actionButtonLabel,omitempty"`

	ActionButtonLink string `xml:"actionButtonLink,omitempty" json:"actionButtonLink,omitempty"`

	Body string `xml:"body,omitempty" json:"body,omitempty"`

	CustomApplication string `xml:"customApplication,omitempty" json:"customApplication,omitempty"`

	DelayDays int32 `xml:"delayDays,omitempty" json:"delayDays,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DismissButtonLabel string `xml:"dismissButtonLabel,omitempty" json:"dismissButtonLabel,omitempty"`

	DisplayPosition *PromptDisplayPosition `xml:"displayPosition,omitempty" json:"displayPosition,omitempty"`

	DisplayType *PromptDisplayType `xml:"displayType,omitempty" json:"displayType,omitempty"`

	ElementRelativePosition *PromptElementRelativePosition `xml:"elementRelativePosition,omitempty" json:"elementRelativePosition,omitempty"`

	EndDate soap.XSDDate `xml:"endDate,omitempty" json:"endDate,omitempty"`

	Experience *PromptExperience `xml:"experience,omitempty" json:"experience,omitempty"`

	ExperienceContext string `xml:"experienceContext,omitempty" json:"experienceContext,omitempty"`

	Header string `xml:"header,omitempty" json:"header,omitempty"`

	Icon string `xml:"icon,omitempty" json:"icon,omitempty"`

	Image string `xml:"image,omitempty" json:"image,omitempty"`

	ImageAltText string `xml:"imageAltText,omitempty" json:"imageAltText,omitempty"`

	ImageLink string `xml:"imageLink,omitempty" json:"imageLink,omitempty"`

	ImageLocation *PromptImageLocation `xml:"imageLocation,omitempty" json:"imageLocation,omitempty"`

	IndexWithIsPublished string `xml:"indexWithIsPublished,omitempty" json:"indexWithIsPublished,omitempty"`

	IndexWithoutIsPublished string `xml:"indexWithoutIsPublished,omitempty" json:"indexWithoutIsPublished,omitempty"`

	IsPublished bool `xml:"isPublished,omitempty" json:"isPublished,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	PublishedByUser string `xml:"publishedByUser,omitempty" json:"publishedByUser,omitempty"`

	PublishedDate soap.XSDDate `xml:"publishedDate,omitempty" json:"publishedDate,omitempty"`

	ReferenceElementContext string `xml:"referenceElementContext,omitempty" json:"referenceElementContext,omitempty"`

	ShouldDisplayActionButton bool `xml:"shouldDisplayActionButton,omitempty" json:"shouldDisplayActionButton,omitempty"`

	ShouldIgnoreGlobalDelay bool `xml:"shouldIgnoreGlobalDelay,omitempty" json:"shouldIgnoreGlobalDelay,omitempty"`

	StartDate soap.XSDDate `xml:"startDate,omitempty" json:"startDate,omitempty"`

	StepNumber int32 `xml:"stepNumber,omitempty" json:"stepNumber,omitempty"`

	TargetAppDeveloperName string `xml:"targetAppDeveloperName,omitempty" json:"targetAppDeveloperName,omitempty"`

	TargetAppNamespacePrefix string `xml:"targetAppNamespacePrefix,omitempty" json:"targetAppNamespacePrefix,omitempty"`

	TargetPageKey1 string `xml:"targetPageKey1,omitempty" json:"targetPageKey1,omitempty"`

	TargetPageKey2 string `xml:"targetPageKey2,omitempty" json:"targetPageKey2,omitempty"`

	TargetPageKey3 string `xml:"targetPageKey3,omitempty" json:"targetPageKey3,omitempty"`

	TargetPageKey4 string `xml:"targetPageKey4,omitempty" json:"targetPageKey4,omitempty"`

	TargetPageType string `xml:"targetPageType,omitempty" json:"targetPageType,omitempty"`

	TargetRecordType string `xml:"targetRecordType,omitempty" json:"targetRecordType,omitempty"`

	ThemeColor *PromptThemeColor `xml:"themeColor,omitempty" json:"themeColor,omitempty"`

	ThemeSaturation *PromptThemeSaturation `xml:"themeSaturation,omitempty" json:"themeSaturation,omitempty"`

	TimesToDisplay int32 `xml:"timesToDisplay,omitempty" json:"timesToDisplay,omitempty"`

	Title string `xml:"title,omitempty" json:"title,omitempty"`

	UiFormulaRule *UiFormulaRule `xml:"uiFormulaRule,omitempty" json:"uiFormulaRule,omitempty"`

	UserAccess *PromptUserAccess `xml:"userAccess,omitempty" json:"userAccess,omitempty"`

	UserProfileAccess *PromptUserProfileAccess `xml:"userProfileAccess,omitempty" json:"userProfileAccess,omitempty"`

	VersionNumber int32 `xml:"versionNumber,omitempty" json:"versionNumber,omitempty"`

	VideoLink string `xml:"videoLink,omitempty" json:"videoLink,omitempty"`
}

type Queue struct {
	*Metadata

	DoesSendEmailToMembers bool `xml:"doesSendEmailToMembers,omitempty" json:"doesSendEmailToMembers,omitempty"`

	Email string `xml:"email,omitempty" json:"email,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	QueueMembers *QueueMembers `xml:"queueMembers,omitempty" json:"queueMembers,omitempty"`

	QueueRoutingConfig string `xml:"queueRoutingConfig,omitempty" json:"queueRoutingConfig,omitempty"`

	QueueSobject []*QueueSobject `xml:"queueSobject,omitempty" json:"queueSobject,omitempty"`
}

type QueueMembers struct {
	PublicGroups *PublicGroups `xml:"publicGroups,omitempty" json:"publicGroups,omitempty"`

	RoleAndSubordinates *RoleAndSubordinates `xml:"roleAndSubordinates,omitempty" json:"roleAndSubordinates,omitempty"`

	RoleAndSubordinatesInternal *RoleAndSubordinatesInternal `xml:"roleAndSubordinatesInternal,omitempty" json:"roleAndSubordinatesInternal,omitempty"`

	Roles *Roles `xml:"roles,omitempty" json:"roles,omitempty"`

	Users *Users `xml:"users,omitempty" json:"users,omitempty"`
}

type PublicGroups struct {
	PublicGroup []string `xml:"publicGroup,omitempty" json:"publicGroup,omitempty"`
}

type RoleAndSubordinates struct {
	RoleAndSubordinate []string `xml:"roleAndSubordinate,omitempty" json:"roleAndSubordinate,omitempty"`
}

type RoleAndSubordinatesInternal struct {
	RoleAndSubordinateInternal []string `xml:"roleAndSubordinateInternal,omitempty" json:"roleAndSubordinateInternal,omitempty"`
}

type Roles struct {
	Role []string `xml:"role,omitempty" json:"role,omitempty"`
}

type Users struct {
	User []string `xml:"user,omitempty" json:"user,omitempty"`
}

type QueueSobject struct {
	SobjectType string `xml:"sobjectType,omitempty" json:"sobjectType,omitempty"`
}

type QueueRoutingConfig struct {
	*Metadata

	CapacityPercentage float64 `xml:"capacityPercentage,omitempty" json:"capacityPercentage,omitempty"`

	CapacityType *CapacityType `xml:"capacityType,omitempty" json:"capacityType,omitempty"`

	CapacityWeight float64 `xml:"capacityWeight,omitempty" json:"capacityWeight,omitempty"`

	DropAdditionalSkillsTimeout int32 `xml:"dropAdditionalSkillsTimeout,omitempty" json:"dropAdditionalSkillsTimeout,omitempty"`

	IsAttributeBased bool `xml:"isAttributeBased,omitempty" json:"isAttributeBased,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	PushTimeout int32 `xml:"pushTimeout,omitempty" json:"pushTimeout,omitempty"`

	QueueOverflowAssignee string `xml:"queueOverflowAssignee,omitempty" json:"queueOverflowAssignee,omitempty"`

	RoutingModel *RoutingModel `xml:"routingModel,omitempty" json:"routingModel,omitempty"`

	RoutingPriority int32 `xml:"routingPriority,omitempty" json:"routingPriority,omitempty"`

	Skills []*QueueRoutingConfigSkill `xml:"skills,omitempty" json:"skills,omitempty"`

	UserOverflowAssignee string `xml:"userOverflowAssignee,omitempty" json:"userOverflowAssignee,omitempty"`
}

type QueueRoutingConfigSkill struct {
	Skill string `xml:"skill,omitempty" json:"skill,omitempty"`
}

type QuickAction struct {
	*Metadata

	ActionSubtype *ActionSubtype `xml:"actionSubtype,omitempty" json:"actionSubtype,omitempty"`

	Canvas string `xml:"canvas,omitempty" json:"canvas,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	FieldOverrides []*FieldOverride `xml:"fieldOverrides,omitempty" json:"fieldOverrides,omitempty"`

	FlowDefinition string `xml:"flowDefinition,omitempty" json:"flowDefinition,omitempty"`

	Height int32 `xml:"height,omitempty" json:"height,omitempty"`

	Icon string `xml:"icon,omitempty" json:"icon,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	LightningComponent string `xml:"lightningComponent,omitempty" json:"lightningComponent,omitempty"`

	LightningWebComponent string `xml:"lightningWebComponent,omitempty" json:"lightningWebComponent,omitempty"`

	OptionsCreateFeedItem bool `xml:"optionsCreateFeedItem,omitempty" json:"optionsCreateFeedItem,omitempty"`

	Page string `xml:"page,omitempty" json:"page,omitempty"`

	QuickActionLayout *QuickActionLayout `xml:"quickActionLayout,omitempty" json:"quickActionLayout,omitempty"`

	QuickActionSendEmailOptions *QuickActionSendEmailOptions `xml:"quickActionSendEmailOptions,omitempty" json:"quickActionSendEmailOptions,omitempty"`

	StandardLabel *QuickActionLabel `xml:"standardLabel,omitempty" json:"standardLabel,omitempty"`

	SuccessMessage string `xml:"successMessage,omitempty" json:"successMessage,omitempty"`

	TargetObject string `xml:"targetObject,omitempty" json:"targetObject,omitempty"`

	TargetParentField string `xml:"targetParentField,omitempty" json:"targetParentField,omitempty"`

	TargetRecordType string `xml:"targetRecordType,omitempty" json:"targetRecordType,omitempty"`

	Type_ *QuickActionType `xml:"type,omitempty" json:"type,omitempty"`

	Width int32 `xml:"width,omitempty" json:"width,omitempty"`
}

type FieldOverride struct {
	Field string `xml:"field,omitempty" json:"field,omitempty"`

	Formula string `xml:"formula,omitempty" json:"formula,omitempty"`

	LiteralValue string `xml:"literalValue,omitempty" json:"literalValue,omitempty"`
}

type QuickActionLayout struct {
	LayoutSectionStyle *LayoutSectionStyle `xml:"layoutSectionStyle,omitempty" json:"layoutSectionStyle,omitempty"`

	QuickActionLayoutColumns []*QuickActionLayoutColumn `xml:"quickActionLayoutColumns,omitempty" json:"quickActionLayoutColumns,omitempty"`
}

type QuickActionLayoutColumn struct {
	QuickActionLayoutItems []*QuickActionLayoutItem `xml:"quickActionLayoutItems,omitempty" json:"quickActionLayoutItems,omitempty"`
}

type QuickActionLayoutItem struct {
	EmptySpace bool `xml:"emptySpace,omitempty" json:"emptySpace,omitempty"`

	Field string `xml:"field,omitempty" json:"field,omitempty"`

	UiBehavior *UiBehavior `xml:"uiBehavior,omitempty" json:"uiBehavior,omitempty"`
}

type QuickActionSendEmailOptions struct {
	DefaultEmailTemplateName string `xml:"defaultEmailTemplateName,omitempty" json:"defaultEmailTemplateName,omitempty"`

	IgnoreDefaultEmailTemplateSubject bool `xml:"ignoreDefaultEmailTemplateSubject,omitempty" json:"ignoreDefaultEmailTemplateSubject,omitempty"`
}

type QuickTextSettings struct {
	*Metadata

	HideQuickTextUiInLtng bool `xml:"hideQuickTextUiInLtng,omitempty" json:"hideQuickTextUiInLtng,omitempty"`

	LightningQuickTextEnabled bool `xml:"lightningQuickTextEnabled,omitempty" json:"lightningQuickTextEnabled,omitempty"`

	QuickTextsInFolders bool `xml:"quickTextsInFolders,omitempty" json:"quickTextsInFolders,omitempty"`
}

type QuoteSettings struct {
	*Metadata

	EnableQuote bool `xml:"enableQuote,omitempty" json:"enableQuote,omitempty"`

	EnableQuotesWithoutOppEnabled bool `xml:"enableQuotesWithoutOppEnabled,omitempty" json:"enableQuotesWithoutOppEnabled,omitempty"`
}

type RealTimeEventSettings struct {
	*Metadata

	RealTimeEvents []*RealTimeEvent `xml:"realTimeEvents,omitempty" json:"realTimeEvents,omitempty"`
}

type RealTimeEvent struct {
	EntityName string `xml:"entityName,omitempty" json:"entityName,omitempty"`

	IsEnabled bool `xml:"isEnabled,omitempty" json:"isEnabled,omitempty"`
}

type RecommendationBuilderSettings struct {
	*Metadata

	EnableErbEnabledPref bool `xml:"enableErbEnabledPref,omitempty" json:"enableErbEnabledPref,omitempty"`

	EnableErbStartedPref bool `xml:"enableErbStartedPref,omitempty" json:"enableErbStartedPref,omitempty"`
}

type RecommendationStrategy struct {
	*Metadata

	ActionContext []*StrategyAction `xml:"actionContext,omitempty" json:"actionContext,omitempty"`

	ContextRecordType string `xml:"contextRecordType,omitempty" json:"contextRecordType,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Filter []*StrategyNodeFilter `xml:"filter,omitempty" json:"filter,omitempty"`

	If_ []*StrategyNodeIf `xml:"if,omitempty" json:"if,omitempty"`

	InvocableAction []*StrategyNodeInvocableAction `xml:"invocableAction,omitempty" json:"invocableAction,omitempty"`

	IsTemplate bool `xml:"isTemplate,omitempty" json:"isTemplate,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Map_ []*StrategyNodeMap `xml:"map,omitempty" json:"map,omitempty"`

	MutuallyExclusive []*StrategyNodeExclusive `xml:"mutuallyExclusive,omitempty" json:"mutuallyExclusive,omitempty"`

	OnBehalfOfExpression string `xml:"onBehalfOfExpression,omitempty" json:"onBehalfOfExpression,omitempty"`

	RecommendationLimit []*StrategyNodeRecommendationLimit `xml:"recommendationLimit,omitempty" json:"recommendationLimit,omitempty"`

	RecommendationLoad []*StrategyNodeRecommendationLoad `xml:"recommendationLoad,omitempty" json:"recommendationLoad,omitempty"`

	Sort []*StrategyNodeSort `xml:"sort,omitempty" json:"sort,omitempty"`

	Union []*StrategyNodeUnion `xml:"union,omitempty" json:"union,omitempty"`
}

type StrategyAction struct {
	Action string `xml:"action,omitempty" json:"action,omitempty"`

	Argument []*StrategyActionArg `xml:"argument,omitempty" json:"argument,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Type_ *InvocableActionType `xml:"type,omitempty" json:"type,omitempty"`
}

type StrategyActionArg struct {
	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type StrategyNodeFilter struct {
	*StrategyNodeUnionBase

	Expression string `xml:"expression,omitempty" json:"expression,omitempty"`
}

type StrategyNodeUnionBase struct {
	*StrategyNodeBase

	Limit int32 `xml:"limit,omitempty" json:"limit,omitempty"`
}

type StrategyNodeBase struct {
	ChildNode []string `xml:"childNode,omitempty" json:"childNode,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type StrategyNodeAiLoad struct {
	*StrategyNodeUnionBase

	AcceptanceLabel string `xml:"acceptanceLabel,omitempty" json:"acceptanceLabel,omitempty"`

	ActionReference string `xml:"actionReference,omitempty" json:"actionReference,omitempty"`

	DescriptionField string `xml:"descriptionField,omitempty" json:"descriptionField,omitempty"`

	RecommendationDefinitionDevName string `xml:"recommendationDefinitionDevName,omitempty" json:"recommendationDefinitionDevName,omitempty"`

	RejectionLabel string `xml:"rejectionLabel,omitempty" json:"rejectionLabel,omitempty"`

	TitleField string `xml:"titleField,omitempty" json:"titleField,omitempty"`
}

type StrategyNodeAiSort struct {
	*StrategyNodeUnionBase
}

type StrategyNodeExclusive struct {
	*StrategyNodeUnionBase
}

type StrategyNodeIf struct {
	*StrategyNodeUnionBase

	ChildNodeExpression []*IfExpression `xml:"childNodeExpression,omitempty" json:"childNodeExpression,omitempty"`

	OnlyFirstMatch bool `xml:"onlyFirstMatch,omitempty" json:"onlyFirstMatch,omitempty"`
}

type IfExpression struct {
	ChildName string `xml:"childName,omitempty" json:"childName,omitempty"`

	Expression string `xml:"expression,omitempty" json:"expression,omitempty"`
}

type StrategyNodeInvocableAction struct {
	*StrategyNodeUnionBase

	Action string `xml:"action,omitempty" json:"action,omitempty"`

	Argument []*StrategyNodeInvocableActionArg `xml:"argument,omitempty" json:"argument,omitempty"`

	IsGenerator bool `xml:"isGenerator,omitempty" json:"isGenerator,omitempty"`

	Type_ *InvocableActionType `xml:"type,omitempty" json:"type,omitempty"`
}

type StrategyNodeInvocableActionArg struct {
	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type StrategyNodeMap struct {
	*StrategyNodeUnionBase

	MapExpression []*MapExpression `xml:"mapExpression,omitempty" json:"mapExpression,omitempty"`
}

type MapExpression struct {
	Expression string `xml:"expression,omitempty" json:"expression,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Type_ string `xml:"type,omitempty" json:"type,omitempty"`
}

type StrategyNodeRecommendationLimit struct {
	*StrategyNodeUnionBase

	FilterMode []*StrategyReactionType `xml:"filterMode,omitempty" json:"filterMode,omitempty"`

	LookbackDuration int32 `xml:"lookbackDuration,omitempty" json:"lookbackDuration,omitempty"`

	MaxRecommendationCount int32 `xml:"maxRecommendationCount,omitempty" json:"maxRecommendationCount,omitempty"`
}

type StrategyNodeRecommendationLoad struct {
	*StrategyNodeUnionBase

	Condition []*RecommendationLoadCondition `xml:"condition,omitempty" json:"condition,omitempty"`

	ConditionLogic string `xml:"conditionLogic,omitempty" json:"conditionLogic,omitempty"`

	Object string `xml:"object,omitempty" json:"object,omitempty"`

	SortField []*StrategyNodeSortField `xml:"sortField,omitempty" json:"sortField,omitempty"`
}

type RecommendationLoadCondition struct {
	Field string `xml:"field,omitempty" json:"field,omitempty"`

	Operator *RecommendationConditionOperator `xml:"operator,omitempty" json:"operator,omitempty"`

	Value *RecommendationConditionValue `xml:"value,omitempty" json:"value,omitempty"`
}

type RecommendationConditionValue struct {
	Type_ *RecommendationConditionValueType `xml:"type,omitempty" json:"type,omitempty"`

	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type StrategyNodeSortField struct {
	Name string `xml:"name,omitempty" json:"name,omitempty"`

	NullsFirst bool `xml:"nullsFirst,omitempty" json:"nullsFirst,omitempty"`

	Order *SortOrder `xml:"order,omitempty" json:"order,omitempty"`
}

type StrategyNodeSort struct {
	*StrategyNodeUnionBase

	Field []*StrategyNodeSortField `xml:"field,omitempty" json:"field,omitempty"`
}

type StrategyNodeUnion struct {
	*StrategyNodeUnionBase
}

type RecordActionDeployment struct {
	*Metadata

	ChannelConfigurations []*RecordActionDeploymentChannel `xml:"channelConfigurations,omitempty" json:"channelConfigurations,omitempty"`

	ComponentName *ComponentName `xml:"componentName,omitempty" json:"componentName,omitempty"`

	DeploymentContexts []*RecordActionDeploymentContext `xml:"deploymentContexts,omitempty" json:"deploymentContexts,omitempty"`

	HasGuidedActions bool `xml:"hasGuidedActions,omitempty" json:"hasGuidedActions,omitempty"`

	HasOmniscripts bool `xml:"hasOmniscripts,omitempty" json:"hasOmniscripts,omitempty"`

	HasRecommendations bool `xml:"hasRecommendations,omitempty" json:"hasRecommendations,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	Recommendation *RecordActionRecommendation `xml:"recommendation,omitempty" json:"recommendation,omitempty"`

	SelectableItems []*RecordActionSelectableItem `xml:"selectableItems,omitempty" json:"selectableItems,omitempty"`
}

type RecordActionDeploymentChannel struct {
	Channel *ChannelSource `xml:"channel,omitempty" json:"channel,omitempty"`

	ChannelItems []*RecordActionDefaultItem `xml:"channelItems,omitempty" json:"channelItems,omitempty"`

	IsAutopopEnabled bool `xml:"isAutopopEnabled,omitempty" json:"isAutopopEnabled,omitempty"`
}

type RecordActionDefaultItem struct {
	Action string `xml:"action,omitempty" json:"action,omitempty"`

	IsMandatory bool `xml:"isMandatory,omitempty" json:"isMandatory,omitempty"`

	IsUiRemoveHidden bool `xml:"isUiRemoveHidden,omitempty" json:"isUiRemoveHidden,omitempty"`

	Pinned *PinnedAction `xml:"pinned,omitempty" json:"pinned,omitempty"`

	Position int32 `xml:"position,omitempty" json:"position,omitempty"`

	Type_ *RecordActionType `xml:"type,omitempty" json:"type,omitempty"`
}

type RecordActionDeploymentContext struct {
	EntityName string `xml:"entityName,omitempty" json:"entityName,omitempty"`

	RecommendationStrategy string `xml:"recommendationStrategy,omitempty" json:"recommendationStrategy,omitempty"`
}

type RecordActionRecommendation struct {
	DefaultStrategy string `xml:"defaultStrategy,omitempty" json:"defaultStrategy,omitempty"`

	HasDescription bool `xml:"hasDescription,omitempty" json:"hasDescription,omitempty"`

	HasImage bool `xml:"hasImage,omitempty" json:"hasImage,omitempty"`

	HasRejectAction bool `xml:"hasRejectAction,omitempty" json:"hasRejectAction,omitempty"`

	HasTitle bool `xml:"hasTitle,omitempty" json:"hasTitle,omitempty"`

	MaxDisplayRecommendations int32 `xml:"maxDisplayRecommendations,omitempty" json:"maxDisplayRecommendations,omitempty"`

	ShouldLaunchActionOnReject bool `xml:"shouldLaunchActionOnReject,omitempty" json:"shouldLaunchActionOnReject,omitempty"`
}

type RecordActionSelectableItem struct {
	Action string `xml:"action,omitempty" json:"action,omitempty"`

	FrequentActionSequenceNbr int32 `xml:"frequentActionSequenceNbr,omitempty" json:"frequentActionSequenceNbr,omitempty"`

	IsFrequentAction bool `xml:"isFrequentAction,omitempty" json:"isFrequentAction,omitempty"`

	Type_ *RecordActionType `xml:"type,omitempty" json:"type,omitempty"`
}

type RecordAlertCategory struct {
	*Metadata

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	Severity string `xml:"severity,omitempty" json:"severity,omitempty"`
}

type RecordPageSettings struct {
	*Metadata

	EnableActivityRelatedList bool `xml:"enableActivityRelatedList,omitempty" json:"enableActivityRelatedList,omitempty"`

	EnableFullRecordView bool `xml:"enableFullRecordView,omitempty" json:"enableFullRecordView,omitempty"`
}

type RedirectWhitelistUrl struct {
	*Metadata

	Url string `xml:"url,omitempty" json:"url,omitempty"`
}

type ReferencedDashboard struct {
	*Metadata

	Application string `xml:"application,omitempty" json:"application,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	EmbedUrl string `xml:"embedUrl,omitempty" json:"embedUrl,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	TemplateAssetSourceName string `xml:"templateAssetSourceName,omitempty" json:"templateAssetSourceName,omitempty"`

	Visibility string `xml:"visibility,omitempty" json:"visibility,omitempty"`
}

type RelationshipGraphDefinition struct {
	*Metadata

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	IsTemplate bool `xml:"isTemplate,omitempty" json:"isTemplate,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	RelationshipGraphDefVersions []*RelationshipGraphDefVersion `xml:"relationshipGraphDefVersions,omitempty" json:"relationshipGraphDefVersions,omitempty"`
}

type RelationshipGraphDefVersion struct {
	GraphDefinition string `xml:"graphDefinition,omitempty" json:"graphDefinition,omitempty"`

	GraphType string `xml:"graphType,omitempty" json:"graphType,omitempty"`
}

type RemoteSiteSetting struct {
	*Metadata

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DisableProtocolSecurity bool `xml:"disableProtocolSecurity,omitempty" json:"disableProtocolSecurity,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	Url string `xml:"url,omitempty" json:"url,omitempty"`
}

type Report struct {
	*Metadata

	Aggregates []*ReportAggregate `xml:"aggregates,omitempty" json:"aggregates,omitempty"`

	Block []*Report `xml:"block,omitempty" json:"block,omitempty"`

	BlockInfo *ReportBlockInfo `xml:"blockInfo,omitempty" json:"blockInfo,omitempty"`

	Buckets []*ReportBucketField `xml:"buckets,omitempty" json:"buckets,omitempty"`

	Chart *ReportChart `xml:"chart,omitempty" json:"chart,omitempty"`

	ColorRanges []*ReportColorRange `xml:"colorRanges,omitempty" json:"colorRanges,omitempty"`

	Columns []*ReportColumn `xml:"columns,omitempty" json:"columns,omitempty"`

	CrossFilters []*ReportCrossFilter `xml:"crossFilters,omitempty" json:"crossFilters,omitempty"`

	Currency *CurrencyIsoCode `xml:"currency,omitempty" json:"currency,omitempty"`

	CustomDetailFormulas []*ReportCustomDetailFormula `xml:"customDetailFormulas,omitempty" json:"customDetailFormulas,omitempty"`

	DataCategoryFilters []*ReportDataCategoryFilter `xml:"dataCategoryFilters,omitempty" json:"dataCategoryFilters,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Division string `xml:"division,omitempty" json:"division,omitempty"`

	Filter *ReportFilter `xml:"filter,omitempty" json:"filter,omitempty"`

	FolderName string `xml:"folderName,omitempty" json:"folderName,omitempty"`

	Format *ReportFormat `xml:"format,omitempty" json:"format,omitempty"`

	FormattingRules []*ReportFormattingRule `xml:"formattingRules,omitempty" json:"formattingRules,omitempty"`

	GroupingsAcross []*ReportGrouping `xml:"groupingsAcross,omitempty" json:"groupingsAcross,omitempty"`

	GroupingsDown []*ReportGrouping `xml:"groupingsDown,omitempty" json:"groupingsDown,omitempty"`

	HistoricalSelector *ReportHistoricalSelector `xml:"historicalSelector,omitempty" json:"historicalSelector,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	NumSubscriptions int32 `xml:"numSubscriptions,omitempty" json:"numSubscriptions,omitempty"`

	Params []*ReportParam `xml:"params,omitempty" json:"params,omitempty"`

	ReportType string `xml:"reportType,omitempty" json:"reportType,omitempty"`

	ReportTypeApiName string `xml:"reportTypeApiName,omitempty" json:"reportTypeApiName,omitempty"`

	RoleHierarchyFilter string `xml:"roleHierarchyFilter,omitempty" json:"roleHierarchyFilter,omitempty"`

	RowLimit int32 `xml:"rowLimit,omitempty" json:"rowLimit,omitempty"`

	Scope string `xml:"scope,omitempty" json:"scope,omitempty"`

	ShowCurrentDate bool `xml:"showCurrentDate,omitempty" json:"showCurrentDate,omitempty"`

	ShowDetails bool `xml:"showDetails,omitempty" json:"showDetails,omitempty"`

	ShowGrandTotal bool `xml:"showGrandTotal,omitempty" json:"showGrandTotal,omitempty"`

	ShowSubTotals bool `xml:"showSubTotals,omitempty" json:"showSubTotals,omitempty"`

	SortColumn string `xml:"sortColumn,omitempty" json:"sortColumn,omitempty"`

	SortOrder *SortOrder `xml:"sortOrder,omitempty" json:"sortOrder,omitempty"`

	TerritoryHierarchyFilter string `xml:"territoryHierarchyFilter,omitempty" json:"territoryHierarchyFilter,omitempty"`

	TimeFrameFilter *ReportTimeFrameFilter `xml:"timeFrameFilter,omitempty" json:"timeFrameFilter,omitempty"`

	UserFilter string `xml:"userFilter,omitempty" json:"userFilter,omitempty"`
}

type ReportAggregate struct {
	AcrossGroupingContext string `xml:"acrossGroupingContext,omitempty" json:"acrossGroupingContext,omitempty"`

	CalculatedFormula string `xml:"calculatedFormula,omitempty" json:"calculatedFormula,omitempty"`

	Datatype *ReportAggregateDatatype `xml:"datatype,omitempty" json:"datatype,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	DownGroupingContext string `xml:"downGroupingContext,omitempty" json:"downGroupingContext,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	IsCrossBlock bool `xml:"isCrossBlock,omitempty" json:"isCrossBlock,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	ReportType string `xml:"reportType,omitempty" json:"reportType,omitempty"`

	Scale *int32 `xml:"scale,omitempty" json:"scale,omitempty"`
}

type ReportBlockInfo struct {
	AggregateReferences []*ReportAggregateReference `xml:"aggregateReferences,omitempty" json:"aggregateReferences,omitempty"`

	BlockId string `xml:"blockId,omitempty" json:"blockId,omitempty"`

	JoinTable string `xml:"joinTable,omitempty" json:"joinTable,omitempty"`
}

type ReportAggregateReference struct {
	Aggregate string `xml:"aggregate,omitempty" json:"aggregate,omitempty"`
}

type ReportBucketField struct {
	BucketType *ReportBucketFieldType `xml:"bucketType,omitempty" json:"bucketType,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	NullTreatment *ReportFormulaNullTreatment `xml:"nullTreatment,omitempty" json:"nullTreatment,omitempty"`

	OtherBucketLabel string `xml:"otherBucketLabel,omitempty" json:"otherBucketLabel,omitempty"`

	SourceColumnName string `xml:"sourceColumnName,omitempty" json:"sourceColumnName,omitempty"`

	UseOther bool `xml:"useOther,omitempty" json:"useOther,omitempty"`

	Values []*ReportBucketFieldValue `xml:"values,omitempty" json:"values,omitempty"`
}

type ReportBucketFieldValue struct {
	SourceValues []*ReportBucketFieldSourceValue `xml:"sourceValues,omitempty" json:"sourceValues,omitempty"`

	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type ReportBucketFieldSourceValue struct {
	From string `xml:"from,omitempty" json:"from,omitempty"`

	SourceValue string `xml:"sourceValue,omitempty" json:"sourceValue,omitempty"`

	To string `xml:"to,omitempty" json:"to,omitempty"`
}

type ReportChart struct {
	BackgroundColor1 string `xml:"backgroundColor1,omitempty" json:"backgroundColor1,omitempty"`

	BackgroundColor2 string `xml:"backgroundColor2,omitempty" json:"backgroundColor2,omitempty"`

	BackgroundFadeDir *ChartBackgroundDirection `xml:"backgroundFadeDir,omitempty" json:"backgroundFadeDir,omitempty"`

	ChartSummaries []*ChartSummary `xml:"chartSummaries,omitempty" json:"chartSummaries,omitempty"`

	ChartType *ChartType `xml:"chartType,omitempty" json:"chartType,omitempty"`

	EnableHoverLabels bool `xml:"enableHoverLabels,omitempty" json:"enableHoverLabels,omitempty"`

	ExpandOthers bool `xml:"expandOthers,omitempty" json:"expandOthers,omitempty"`

	GroupingColumn string `xml:"groupingColumn,omitempty" json:"groupingColumn,omitempty"`

	LegendPosition *ChartLegendPosition `xml:"legendPosition,omitempty" json:"legendPosition,omitempty"`

	Location *ChartPosition `xml:"location,omitempty" json:"location,omitempty"`

	SecondaryGroupingColumn string `xml:"secondaryGroupingColumn,omitempty" json:"secondaryGroupingColumn,omitempty"`

	ShowAxisLabels bool `xml:"showAxisLabels,omitempty" json:"showAxisLabels,omitempty"`

	ShowPercentage bool `xml:"showPercentage,omitempty" json:"showPercentage,omitempty"`

	ShowTotal bool `xml:"showTotal,omitempty" json:"showTotal,omitempty"`

	ShowValues bool `xml:"showValues,omitempty" json:"showValues,omitempty"`

	Size *ReportChartSize `xml:"size,omitempty" json:"size,omitempty"`

	SummaryAxisManualRangeEnd float64 `xml:"summaryAxisManualRangeEnd,omitempty" json:"summaryAxisManualRangeEnd,omitempty"`

	SummaryAxisManualRangeStart float64 `xml:"summaryAxisManualRangeStart,omitempty" json:"summaryAxisManualRangeStart,omitempty"`

	SummaryAxisRange *ChartRangeType `xml:"summaryAxisRange,omitempty" json:"summaryAxisRange,omitempty"`

	TextColor string `xml:"textColor,omitempty" json:"textColor,omitempty"`

	TextSize int32 `xml:"textSize,omitempty" json:"textSize,omitempty"`

	Title string `xml:"title,omitempty" json:"title,omitempty"`

	TitleColor string `xml:"titleColor,omitempty" json:"titleColor,omitempty"`

	TitleSize int32 `xml:"titleSize,omitempty" json:"titleSize,omitempty"`
}

type ReportColorRange struct {
	Aggregate *ReportSummaryType `xml:"aggregate,omitempty" json:"aggregate,omitempty"`

	ColumnName string `xml:"columnName,omitempty" json:"columnName,omitempty"`

	HighBreakpoint float64 `xml:"highBreakpoint,omitempty" json:"highBreakpoint,omitempty"`

	HighColor string `xml:"highColor,omitempty" json:"highColor,omitempty"`

	LowBreakpoint float64 `xml:"lowBreakpoint,omitempty" json:"lowBreakpoint,omitempty"`

	LowColor string `xml:"lowColor,omitempty" json:"lowColor,omitempty"`

	MidColor string `xml:"midColor,omitempty" json:"midColor,omitempty"`
}

type ReportColumn struct {
	AggregateTypes []*ReportSummaryType `xml:"aggregateTypes,omitempty" json:"aggregateTypes,omitempty"`

	Field string `xml:"field,omitempty" json:"field,omitempty"`

	ReverseColors bool `xml:"reverseColors,omitempty" json:"reverseColors,omitempty"`

	ShowChanges bool `xml:"showChanges,omitempty" json:"showChanges,omitempty"`
}

type ReportCrossFilter struct {
	CriteriaItems []*ReportFilterItem `xml:"criteriaItems,omitempty" json:"criteriaItems,omitempty"`

	Operation *ObjectFilterOperator `xml:"operation,omitempty" json:"operation,omitempty"`

	PrimaryTableColumn string `xml:"primaryTableColumn,omitempty" json:"primaryTableColumn,omitempty"`

	RelatedTable string `xml:"relatedTable,omitempty" json:"relatedTable,omitempty"`

	RelatedTableJoinColumn string `xml:"relatedTableJoinColumn,omitempty" json:"relatedTableJoinColumn,omitempty"`
}

type ReportFilterItem struct {
	Column string `xml:"column,omitempty" json:"column,omitempty"`

	ColumnToColumn bool `xml:"columnToColumn,omitempty" json:"columnToColumn,omitempty"`

	IsUnlocked bool `xml:"isUnlocked,omitempty" json:"isUnlocked,omitempty"`

	Operator *FilterOperation `xml:"operator,omitempty" json:"operator,omitempty"`

	Snapshot string `xml:"snapshot,omitempty" json:"snapshot,omitempty"`

	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type ReportCustomDetailFormula struct {
	CalculatedFormula string `xml:"calculatedFormula,omitempty" json:"calculatedFormula,omitempty"`

	DataType string `xml:"dataType,omitempty" json:"dataType,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Scale *int32 `xml:"scale,omitempty" json:"scale,omitempty"`
}

type ReportDataCategoryFilter struct {
	DataCategory string `xml:"dataCategory,omitempty" json:"dataCategory,omitempty"`

	DataCategoryGroup string `xml:"dataCategoryGroup,omitempty" json:"dataCategoryGroup,omitempty"`

	Operator *DataCategoryFilterOperation `xml:"operator,omitempty" json:"operator,omitempty"`
}

type ReportFilter struct {
	BooleanFilter string `xml:"booleanFilter,omitempty" json:"booleanFilter,omitempty"`

	CriteriaItems []*ReportFilterItem `xml:"criteriaItems,omitempty" json:"criteriaItems,omitempty"`

	Language *Language `xml:"language,omitempty" json:"language,omitempty"`
}

type ReportFormattingRule struct {
	Aggregate *ReportSummaryType `xml:"aggregate,omitempty" json:"aggregate,omitempty"`

	ColumnName string `xml:"columnName,omitempty" json:"columnName,omitempty"`

	Values []*ReportFormattingRuleValue `xml:"values,omitempty" json:"values,omitempty"`
}

type ReportFormattingRuleValue struct {
	BackgroundColor string `xml:"backgroundColor,omitempty" json:"backgroundColor,omitempty"`

	RangeUpperBound float64 `xml:"rangeUpperBound,omitempty" json:"rangeUpperBound,omitempty"`
}

type ReportGrouping struct {
	AggregateType *ReportAggrType `xml:"aggregateType,omitempty" json:"aggregateType,omitempty"`

	DateGranularity *UserDateGranularity `xml:"dateGranularity,omitempty" json:"dateGranularity,omitempty"`

	Field string `xml:"field,omitempty" json:"field,omitempty"`

	SortByName string `xml:"sortByName,omitempty" json:"sortByName,omitempty"`

	SortOrder *SortOrder `xml:"sortOrder,omitempty" json:"sortOrder,omitempty"`

	SortType *ReportSortType `xml:"sortType,omitempty" json:"sortType,omitempty"`
}

type ReportHistoricalSelector struct {
	Snapshot []string `xml:"snapshot,omitempty" json:"snapshot,omitempty"`
}

type ReportParam struct {
	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type ReportTimeFrameFilter struct {
	DateColumn string `xml:"dateColumn,omitempty" json:"dateColumn,omitempty"`

	EndDate soap.XSDDate `xml:"endDate,omitempty" json:"endDate,omitempty"`

	Interval *UserDateInterval `xml:"interval,omitempty" json:"interval,omitempty"`

	StartDate soap.XSDDate `xml:"startDate,omitempty" json:"startDate,omitempty"`
}

type ReportType struct {
	*Metadata

	Autogenerated bool `xml:"autogenerated,omitempty" json:"autogenerated,omitempty"`

	BaseObject string `xml:"baseObject,omitempty" json:"baseObject,omitempty"`

	Category *ReportTypeCategory `xml:"category,omitempty" json:"category,omitempty"`

	Deployed bool `xml:"deployed,omitempty" json:"deployed,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Join *ObjectRelationship `xml:"join,omitempty" json:"join,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Sections []*ReportLayoutSection `xml:"sections,omitempty" json:"sections,omitempty"`
}

type ObjectRelationship struct {
	Join *ObjectRelationship `xml:"join,omitempty" json:"join,omitempty"`

	OuterJoin bool `xml:"outerJoin,omitempty" json:"outerJoin,omitempty"`

	Relationship string `xml:"relationship,omitempty" json:"relationship,omitempty"`
}

type ReportLayoutSection struct {
	Columns []*ReportTypeColumn `xml:"columns,omitempty" json:"columns,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type ReportTypeColumn struct {
	CheckedByDefault bool `xml:"checkedByDefault,omitempty" json:"checkedByDefault,omitempty"`

	DisplayNameOverride string `xml:"displayNameOverride,omitempty" json:"displayNameOverride,omitempty"`

	Field string `xml:"field,omitempty" json:"field,omitempty"`

	Table string `xml:"table,omitempty" json:"table,omitempty"`
}

type RestrictionRule struct {
	*Metadata

	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	DataspaceScope string `xml:"dataspaceScope,omitempty" json:"dataspaceScope,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	EnforcementType *EnforcementType `xml:"enforcementType,omitempty" json:"enforcementType,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	RecordFilter string `xml:"recordFilter,omitempty" json:"recordFilter,omitempty"`

	TargetEntity string `xml:"targetEntity,omitempty" json:"targetEntity,omitempty"`

	UserCriteria string `xml:"userCriteria,omitempty" json:"userCriteria,omitempty"`

	Version int32 `xml:"version,omitempty" json:"version,omitempty"`
}

type RetailExecutionSettings struct {
	*Metadata

	EnableProductHierarchy bool `xml:"enableProductHierarchy,omitempty" json:"enableProductHierarchy,omitempty"`

	EnableRetailExecution bool `xml:"enableRetailExecution,omitempty" json:"enableRetailExecution,omitempty"`

	EnableVisitSharing bool `xml:"enableVisitSharing,omitempty" json:"enableVisitSharing,omitempty"`
}

type RoleOrTerritory struct {
	*Metadata

	CaseAccessLevel string `xml:"caseAccessLevel,omitempty" json:"caseAccessLevel,omitempty"`

	ContactAccessLevel string `xml:"contactAccessLevel,omitempty" json:"contactAccessLevel,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	MayForecastManagerShare bool `xml:"mayForecastManagerShare,omitempty" json:"mayForecastManagerShare,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	OpportunityAccessLevel string `xml:"opportunityAccessLevel,omitempty" json:"opportunityAccessLevel,omitempty"`
}

type Role struct {
	*RoleOrTerritory

	ParentRole string `xml:"parentRole,omitempty" json:"parentRole,omitempty"`
}

type Territory struct {
	*RoleOrTerritory

	AccountAccessLevel string `xml:"accountAccessLevel,omitempty" json:"accountAccessLevel,omitempty"`

	ParentTerritory string `xml:"parentTerritory,omitempty" json:"parentTerritory,omitempty"`
}

type RuleDefinition struct {
	*Metadata
}

type RuleLibraryDefinition struct {
	*Metadata
}

type RulesetDefinition struct {
	*Metadata
}

type SalesWorkQueueSettings struct {
	*Metadata

	FeatureName string `xml:"featureName,omitempty" json:"featureName,omitempty"`

	TargetEntity string `xml:"targetEntity,omitempty" json:"targetEntity,omitempty"`

	TargetField string `xml:"targetField,omitempty" json:"targetField,omitempty"`
}

type SamlSsoConfig struct {
	*Metadata

	AttributeName string `xml:"attributeName,omitempty" json:"attributeName,omitempty"`

	AttributeNameIdFormat string `xml:"attributeNameIdFormat,omitempty" json:"attributeNameIdFormat,omitempty"`

	DecryptionCertificate string `xml:"decryptionCertificate,omitempty" json:"decryptionCertificate,omitempty"`

	ErrorUrl string `xml:"errorUrl,omitempty" json:"errorUrl,omitempty"`

	ExecutionUserId string `xml:"executionUserId,omitempty" json:"executionUserId,omitempty"`

	IdentityLocation *SamlIdentityLocationType `xml:"identityLocation,omitempty" json:"identityLocation,omitempty"`

	IdentityMapping *SamlIdentityType `xml:"identityMapping,omitempty" json:"identityMapping,omitempty"`

	Issuer string `xml:"issuer,omitempty" json:"issuer,omitempty"`

	LoginUrl string `xml:"loginUrl,omitempty" json:"loginUrl,omitempty"`

	LogoutUrl string `xml:"logoutUrl,omitempty" json:"logoutUrl,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	OauthTokenEndpoint string `xml:"oauthTokenEndpoint,omitempty" json:"oauthTokenEndpoint,omitempty"`

	RedirectBinding bool `xml:"redirectBinding,omitempty" json:"redirectBinding,omitempty"`

	RequestSignatureMethod string `xml:"requestSignatureMethod,omitempty" json:"requestSignatureMethod,omitempty"`

	RequestSigningCertId string `xml:"requestSigningCertId,omitempty" json:"requestSigningCertId,omitempty"`

	SalesforceLoginUrl string `xml:"salesforceLoginUrl,omitempty" json:"salesforceLoginUrl,omitempty"`

	SamlEntityId string `xml:"samlEntityId,omitempty" json:"samlEntityId,omitempty"`

	SamlJitHandlerId string `xml:"samlJitHandlerId,omitempty" json:"samlJitHandlerId,omitempty"`

	SamlVersion *SamlType `xml:"samlVersion,omitempty" json:"samlVersion,omitempty"`

	SingleLogoutBinding *SamlSpSLOBinding `xml:"singleLogoutBinding,omitempty" json:"singleLogoutBinding,omitempty"`

	SingleLogoutUrl string `xml:"singleLogoutUrl,omitempty" json:"singleLogoutUrl,omitempty"`

	UseConfigRequestMethod bool `xml:"useConfigRequestMethod,omitempty" json:"useConfigRequestMethod,omitempty"`

	UseSameDigestAlgoForSigning bool `xml:"useSameDigestAlgoForSigning,omitempty" json:"useSameDigestAlgoForSigning,omitempty"`

	UserProvisioning bool `xml:"userProvisioning,omitempty" json:"userProvisioning,omitempty"`

	ValidationCert string `xml:"validationCert,omitempty" json:"validationCert,omitempty"`
}

type SchemaSettings struct {
	*Metadata

	EnableAdvancedCMTSecurity bool `xml:"enableAdvancedCMTSecurity,omitempty" json:"enableAdvancedCMTSecurity,omitempty"`

	EnableAdvancedCSSecurity bool `xml:"enableAdvancedCSSecurity,omitempty" json:"enableAdvancedCSSecurity,omitempty"`

	EnableListCustomSettingCreation bool `xml:"enableListCustomSettingCreation,omitempty" json:"enableListCustomSettingCreation,omitempty"`

	EnableSOSLOnCustomSettings bool `xml:"enableSOSLOnCustomSettings,omitempty" json:"enableSOSLOnCustomSettings,omitempty"`
}

type SearchCriteriaConfiguration struct {
	*Metadata

	ActionList string `xml:"actionList,omitempty" json:"actionList,omitempty"`

	AggrCriteriaFieldset *FieldSet `xml:"aggrCriteriaFieldset,omitempty" json:"aggrCriteriaFieldset,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DistanceCriteria string `xml:"distanceCriteria,omitempty" json:"distanceCriteria,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	ResultFieldset *FieldSet `xml:"resultFieldset,omitempty" json:"resultFieldset,omitempty"`

	SearchCriteriaFieldset *FieldSet `xml:"searchCriteriaFieldset,omitempty" json:"searchCriteriaFieldset,omitempty"`

	SearchableObjDataSyncInfo string `xml:"searchableObjDataSyncInfo,omitempty" json:"searchableObjDataSyncInfo,omitempty"`

	SearchableObject string `xml:"searchableObject,omitempty" json:"searchableObject,omitempty"`

	SortingCriteriaFieldset *FieldSet `xml:"sortingCriteriaFieldset,omitempty" json:"sortingCriteriaFieldset,omitempty"`
}

type SearchCustomization struct {
	*Metadata

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type SearchSettings struct {
	*Metadata

	DocumentContentSearchEnabled bool `xml:"documentContentSearchEnabled,omitempty" json:"documentContentSearchEnabled,omitempty"`

	EnableAdvancedSearchInAlohaSidebar bool `xml:"enableAdvancedSearchInAlohaSidebar,omitempty" json:"enableAdvancedSearchInAlohaSidebar,omitempty"`

	EnableEinsteinSearchAssistantDialog bool `xml:"enableEinsteinSearchAssistantDialog,omitempty" json:"enableEinsteinSearchAssistantDialog,omitempty"`

	EnableEinsteinSearchEs4kPilot bool `xml:"enableEinsteinSearchEs4kPilot,omitempty" json:"enableEinsteinSearchEs4kPilot,omitempty"`

	EnableEinsteinSearchNLSFilters bool `xml:"enableEinsteinSearchNLSFilters,omitempty" json:"enableEinsteinSearchNLSFilters,omitempty"`

	EnableEinsteinSearchNaturalLanguage bool `xml:"enableEinsteinSearchNaturalLanguage,omitempty" json:"enableEinsteinSearchNaturalLanguage,omitempty"`

	EnableEinsteinSearchPersonalization bool `xml:"enableEinsteinSearchPersonalization,omitempty" json:"enableEinsteinSearchPersonalization,omitempty"`

	EnableEinsteinSearchQA bool `xml:"enableEinsteinSearchQA,omitempty" json:"enableEinsteinSearchQA,omitempty"`

	EnablePersonalTagging bool `xml:"enablePersonalTagging,omitempty" json:"enablePersonalTagging,omitempty"`

	EnablePublicTagging bool `xml:"enablePublicTagging,omitempty" json:"enablePublicTagging,omitempty"`

	EnableQuerySuggestionPigOn bool `xml:"enableQuerySuggestionPigOn,omitempty" json:"enableQuerySuggestionPigOn,omitempty"`

	EnableSalesforceGeneratedSynonyms bool `xml:"enableSalesforceGeneratedSynonyms,omitempty" json:"enableSalesforceGeneratedSynonyms,omitempty"`

	EnableSearchTermHistory bool `xml:"enableSearchTermHistory,omitempty" json:"enableSearchTermHistory,omitempty"`

	EnableSetupSearch bool `xml:"enableSetupSearch,omitempty" json:"enableSetupSearch,omitempty"`

	EnableSuggestArticlesLinksOnly bool `xml:"enableSuggestArticlesLinksOnly,omitempty" json:"enableSuggestArticlesLinksOnly,omitempty"`

	EnableUseDefaultSearchEntity bool `xml:"enableUseDefaultSearchEntity,omitempty" json:"enableUseDefaultSearchEntity,omitempty"`

	OptimizeSearchForCJKEnabled bool `xml:"optimizeSearchForCJKEnabled,omitempty" json:"optimizeSearchForCJKEnabled,omitempty"`

	RecentlyViewedUsersForBlankLookupEnabled bool `xml:"recentlyViewedUsersForBlankLookupEnabled,omitempty" json:"recentlyViewedUsersForBlankLookupEnabled,omitempty"`

	SearchSettingsByObject *SearchSettingsByObject `xml:"searchSettingsByObject,omitempty" json:"searchSettingsByObject,omitempty"`

	SidebarAutoCompleteEnabled bool `xml:"sidebarAutoCompleteEnabled,omitempty" json:"sidebarAutoCompleteEnabled,omitempty"`

	SidebarDropDownListEnabled bool `xml:"sidebarDropDownListEnabled,omitempty" json:"sidebarDropDownListEnabled,omitempty"`

	SidebarLimitToItemsIOwnCheckboxEnabled bool `xml:"sidebarLimitToItemsIOwnCheckboxEnabled,omitempty" json:"sidebarLimitToItemsIOwnCheckboxEnabled,omitempty"`

	SingleSearchResultShortcutEnabled bool `xml:"singleSearchResultShortcutEnabled,omitempty" json:"singleSearchResultShortcutEnabled,omitempty"`

	SpellCorrectKnowledgeSearchEnabled bool `xml:"spellCorrectKnowledgeSearchEnabled,omitempty" json:"spellCorrectKnowledgeSearchEnabled,omitempty"`
}

type SearchSettingsByObject struct {
	SearchSettingsByObject []*ObjectSearchSetting `xml:"searchSettingsByObject,omitempty" json:"searchSettingsByObject,omitempty"`
}

type ObjectSearchSetting struct {
	EnhancedLookupEnabled bool `xml:"enhancedLookupEnabled,omitempty" json:"enhancedLookupEnabled,omitempty"`

	LookupAutoCompleteEnabled bool `xml:"lookupAutoCompleteEnabled,omitempty" json:"lookupAutoCompleteEnabled,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	ResultsPerPageCount int32 `xml:"resultsPerPageCount,omitempty" json:"resultsPerPageCount,omitempty"`
}

type SecuritySettings struct {
	*Metadata

	CanUsersGrantLoginAccess bool `xml:"canUsersGrantLoginAccess,omitempty" json:"canUsersGrantLoginAccess,omitempty"`

	EnableAdminLoginAsAnyUser bool `xml:"enableAdminLoginAsAnyUser,omitempty" json:"enableAdminLoginAsAnyUser,omitempty"`

	EnableAuditFieldsInactiveOwner bool `xml:"enableAuditFieldsInactiveOwner,omitempty" json:"enableAuditFieldsInactiveOwner,omitempty"`

	EnableAuraSecureEvalPref bool `xml:"enableAuraSecureEvalPref,omitempty" json:"enableAuraSecureEvalPref,omitempty"`

	EnableCoepHeader bool `xml:"enableCoepHeader,omitempty" json:"enableCoepHeader,omitempty"`

	EnableCoopHeader bool `xml:"enableCoopHeader,omitempty" json:"enableCoopHeader,omitempty"`

	EnableCrossOrgRedirects bool `xml:"enableCrossOrgRedirects,omitempty" json:"enableCrossOrgRedirects,omitempty"`

	EnablePermissionsPolicy bool `xml:"enablePermissionsPolicy,omitempty" json:"enablePermissionsPolicy,omitempty"`

	EnableRequireHttpsConnection bool `xml:"enableRequireHttpsConnection,omitempty" json:"enableRequireHttpsConnection,omitempty"`

	NetworkAccess *NetworkAccess `xml:"networkAccess,omitempty" json:"networkAccess,omitempty"`

	PasswordPolicies *PasswordPolicies `xml:"passwordPolicies,omitempty" json:"passwordPolicies,omitempty"`

	RedirectBlockModeEnabled bool `xml:"redirectBlockModeEnabled,omitempty" json:"redirectBlockModeEnabled,omitempty"`

	SendCspForUncommonClients bool `xml:"sendCspForUncommonClients,omitempty" json:"sendCspForUncommonClients,omitempty"`

	SessionSettings *SessionSettings `xml:"sessionSettings,omitempty" json:"sessionSettings,omitempty"`

	SingleSignOnSettings *SingleSignOnSettings `xml:"singleSignOnSettings,omitempty" json:"singleSignOnSettings,omitempty"`
}

type NetworkAccess struct {
	IpRanges []*IpRange `xml:"ipRanges,omitempty" json:"ipRanges,omitempty"`
}

type IpRange struct {
	Description string `xml:"description,omitempty" json:"description,omitempty"`

	End string `xml:"end,omitempty" json:"end,omitempty"`

	Start string `xml:"start,omitempty" json:"start,omitempty"`
}

type PasswordPolicies struct {
	ApiOnlyUserHomePageURL string `xml:"apiOnlyUserHomePageURL,omitempty" json:"apiOnlyUserHomePageURL,omitempty"`

	Complexity *Complexity `xml:"complexity,omitempty" json:"complexity,omitempty"`

	Expiration *Expiration `xml:"expiration,omitempty" json:"expiration,omitempty"`

	HistoryRestriction string `xml:"historyRestriction,omitempty" json:"historyRestriction,omitempty"`

	LockoutInterval *LockoutInterval `xml:"lockoutInterval,omitempty" json:"lockoutInterval,omitempty"`

	MaxLoginAttempts *MaxLoginAttempts `xml:"maxLoginAttempts,omitempty" json:"maxLoginAttempts,omitempty"`

	MinimumPasswordLength string `xml:"minimumPasswordLength,omitempty" json:"minimumPasswordLength,omitempty"`

	MinimumPasswordLifetime bool `xml:"minimumPasswordLifetime,omitempty" json:"minimumPasswordLifetime,omitempty"`

	ObscureSecretAnswer bool `xml:"obscureSecretAnswer,omitempty" json:"obscureSecretAnswer,omitempty"`

	PasswordAssistanceMessage string `xml:"passwordAssistanceMessage,omitempty" json:"passwordAssistanceMessage,omitempty"`

	PasswordAssistanceURL string `xml:"passwordAssistanceURL,omitempty" json:"passwordAssistanceURL,omitempty"`

	QuestionRestriction *QuestionRestriction `xml:"questionRestriction,omitempty" json:"questionRestriction,omitempty"`
}

type SessionSettings struct {
	AllowUserAuthenticationByCertificate bool `xml:"allowUserAuthenticationByCertificate,omitempty" json:"allowUserAuthenticationByCertificate,omitempty"`

	AllowUserCertBasedAuthenticationWithOcspValidation bool `xml:"allowUserCertBasedAuthenticationWithOcspValidation,omitempty" json:"allowUserCertBasedAuthenticationWithOcspValidation,omitempty"`

	CanConfirmEmailChangeInLightningCommunities bool `xml:"canConfirmEmailChangeInLightningCommunities,omitempty" json:"canConfirmEmailChangeInLightningCommunities,omitempty"`

	CanConfirmIdentityBySmsOnly bool `xml:"canConfirmIdentityBySmsOnly,omitempty" json:"canConfirmIdentityBySmsOnly,omitempty"`

	DisableTimeoutWarning bool `xml:"disableTimeoutWarning,omitempty" json:"disableTimeoutWarning,omitempty"`

	EnableBuiltInAuthenticator bool `xml:"enableBuiltInAuthenticator,omitempty" json:"enableBuiltInAuthenticator,omitempty"`

	EnableCSPOnEmail bool `xml:"enableCSPOnEmail,omitempty" json:"enableCSPOnEmail,omitempty"`

	EnableCSRFOnGet bool `xml:"enableCSRFOnGet,omitempty" json:"enableCSRFOnGet,omitempty"`

	EnableCSRFOnPost bool `xml:"enableCSRFOnPost,omitempty" json:"enableCSRFOnPost,omitempty"`

	EnableCacheAndAutocomplete bool `xml:"enableCacheAndAutocomplete,omitempty" json:"enableCacheAndAutocomplete,omitempty"`

	EnableClickjackNonsetupSFDC bool `xml:"enableClickjackNonsetupSFDC,omitempty" json:"enableClickjackNonsetupSFDC,omitempty"`

	EnableClickjackNonsetupUser bool `xml:"enableClickjackNonsetupUser,omitempty" json:"enableClickjackNonsetupUser,omitempty"`

	EnableClickjackNonsetupUserHeaderless bool `xml:"enableClickjackNonsetupUserHeaderless,omitempty" json:"enableClickjackNonsetupUserHeaderless,omitempty"`

	EnableClickjackSetup bool `xml:"enableClickjackSetup,omitempty" json:"enableClickjackSetup,omitempty"`

	EnableCoepHeader bool `xml:"enableCoepHeader,omitempty" json:"enableCoepHeader,omitempty"`

	EnableContentSniffingProtection bool `xml:"enableContentSniffingProtection,omitempty" json:"enableContentSniffingProtection,omitempty"`

	EnableCoopHeader bool `xml:"enableCoopHeader,omitempty" json:"enableCoopHeader,omitempty"`

	EnableLightningLogin bool `xml:"enableLightningLogin,omitempty" json:"enableLightningLogin,omitempty"`

	EnableLightningLoginOnlyWithUserPerm bool `xml:"enableLightningLoginOnlyWithUserPerm,omitempty" json:"enableLightningLoginOnlyWithUserPerm,omitempty"`

	EnableMFADirectUILoginOptIn bool `xml:"enableMFADirectUILoginOptIn,omitempty" json:"enableMFADirectUILoginOptIn,omitempty"`

	EnableOauthCorsPolicy bool `xml:"enableOauthCorsPolicy,omitempty" json:"enableOauthCorsPolicy,omitempty"`

	EnablePermissionsPolicy bool `xml:"enablePermissionsPolicy,omitempty" json:"enablePermissionsPolicy,omitempty"`

	EnablePostForSessions bool `xml:"enablePostForSessions,omitempty" json:"enablePostForSessions,omitempty"`

	EnableSMSIdentity bool `xml:"enableSMSIdentity,omitempty" json:"enableSMSIdentity,omitempty"`

	EnableU2F bool `xml:"enableU2F,omitempty" json:"enableU2F,omitempty"`

	EnableUpgradeInsecureRequests bool `xml:"enableUpgradeInsecureRequests,omitempty" json:"enableUpgradeInsecureRequests,omitempty"`

	EnableXssProtection bool `xml:"enableXssProtection,omitempty" json:"enableXssProtection,omitempty"`

	EnforceIpRangesEveryRequest bool `xml:"enforceIpRangesEveryRequest,omitempty" json:"enforceIpRangesEveryRequest,omitempty"`

	EnforceUserDeviceRevoked bool `xml:"enforceUserDeviceRevoked,omitempty" json:"enforceUserDeviceRevoked,omitempty"`

	ForceLogoutOnSessionTimeout bool `xml:"forceLogoutOnSessionTimeout,omitempty" json:"forceLogoutOnSessionTimeout,omitempty"`

	ForceRelogin bool `xml:"forceRelogin,omitempty" json:"forceRelogin,omitempty"`

	GrantCameraAccess string `xml:"grantCameraAccess,omitempty" json:"grantCameraAccess,omitempty"`

	GrantMicrophoneAccess string `xml:"grantMicrophoneAccess,omitempty" json:"grantMicrophoneAccess,omitempty"`

	HasRetainedLoginHints bool `xml:"hasRetainedLoginHints,omitempty" json:"hasRetainedLoginHints,omitempty"`

	HasUserSwitching bool `xml:"hasUserSwitching,omitempty" json:"hasUserSwitching,omitempty"`

	HstsOnForcecomSites bool `xml:"hstsOnForcecomSites,omitempty" json:"hstsOnForcecomSites,omitempty"`

	IdentityConfirmationOnEmailChange bool `xml:"identityConfirmationOnEmailChange,omitempty" json:"identityConfirmationOnEmailChange,omitempty"`

	IdentityConfirmationOnTwoFactorRegistrationEnabled bool `xml:"identityConfirmationOnTwoFactorRegistrationEnabled,omitempty" json:"identityConfirmationOnTwoFactorRegistrationEnabled,omitempty"`

	LockSessionsToDomain bool `xml:"lockSessionsToDomain,omitempty" json:"lockSessionsToDomain,omitempty"`

	LockSessionsToIp bool `xml:"lockSessionsToIp,omitempty" json:"lockSessionsToIp,omitempty"`

	LockerServiceAPIVersion string `xml:"lockerServiceAPIVersion,omitempty" json:"lockerServiceAPIVersion,omitempty"`

	LockerServiceCSP bool `xml:"lockerServiceCSP,omitempty" json:"lockerServiceCSP,omitempty"`

	LockerServiceNext bool `xml:"lockerServiceNext,omitempty" json:"lockerServiceNext,omitempty"`

	LockerServiceNextControl bool `xml:"lockerServiceNextControl,omitempty" json:"lockerServiceNextControl,omitempty"`

	LogoutURL string `xml:"logoutURL,omitempty" json:"logoutURL,omitempty"`

	RedirectBlockModeEnabled bool `xml:"redirectBlockModeEnabled,omitempty" json:"redirectBlockModeEnabled,omitempty"`

	RedirectionWarning bool `xml:"redirectionWarning,omitempty" json:"redirectionWarning,omitempty"`

	ReferrerPolicy bool `xml:"referrerPolicy,omitempty" json:"referrerPolicy,omitempty"`

	ReferrerPolicyDirective string `xml:"referrerPolicyDirective,omitempty" json:"referrerPolicyDirective,omitempty"`

	RequireHttpOnly bool `xml:"requireHttpOnly,omitempty" json:"requireHttpOnly,omitempty"`

	RequireHttps bool `xml:"requireHttps,omitempty" json:"requireHttps,omitempty"`

	SendCspForUncommonClients bool `xml:"sendCspForUncommonClients,omitempty" json:"sendCspForUncommonClients,omitempty"`

	SessionTimeout *SessionTimeout `xml:"sessionTimeout,omitempty" json:"sessionTimeout,omitempty"`

	SidToken3rdPartyAuraApp bool `xml:"sidToken3rdPartyAuraApp,omitempty" json:"sidToken3rdPartyAuraApp,omitempty"`

	SkipSFAWhenMFADirectUILogin bool `xml:"skipSFAWhenMFADirectUILogin,omitempty" json:"skipSFAWhenMFADirectUILogin,omitempty"`

	UseEAPIRateLimitForConnectAPI bool `xml:"useEAPIRateLimitForConnectAPI,omitempty" json:"useEAPIRateLimitForConnectAPI,omitempty"`

	UseLocalStorageForLogoutUrl bool `xml:"useLocalStorageForLogoutUrl,omitempty" json:"useLocalStorageForLogoutUrl,omitempty"`
}

type SingleSignOnSettings struct {
	EnableCaseInsensitiveFederationID bool `xml:"enableCaseInsensitiveFederationID,omitempty" json:"enableCaseInsensitiveFederationID,omitempty"`

	EnableForceDelegatedCallout bool `xml:"enableForceDelegatedCallout,omitempty" json:"enableForceDelegatedCallout,omitempty"`

	EnableMultipleSamlConfigs bool `xml:"enableMultipleSamlConfigs,omitempty" json:"enableMultipleSamlConfigs,omitempty"`

	EnableSamlJitProvisioning bool `xml:"enableSamlJitProvisioning,omitempty" json:"enableSamlJitProvisioning,omitempty"`

	EnableSamlLogin bool `xml:"enableSamlLogin,omitempty" json:"enableSamlLogin,omitempty"`

	IsLoginWithSalesforceCredentialsDisabled bool `xml:"isLoginWithSalesforceCredentialsDisabled,omitempty" json:"isLoginWithSalesforceCredentialsDisabled,omitempty"`
}

type ServiceAISetupDefinition struct {
	*Metadata

	AppSourceType *ApplicationSourceType `xml:"appSourceType,omitempty" json:"appSourceType,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	SetupStatus *ServiceAISetupDefStatus `xml:"setupStatus,omitempty" json:"setupStatus,omitempty"`

	SupportedLanguages string `xml:"supportedLanguages,omitempty" json:"supportedLanguages,omitempty"`
}

type ServiceAISetupField struct {
	*Metadata

	Entity string `xml:"entity,omitempty" json:"entity,omitempty"`

	Field string `xml:"field,omitempty" json:"field,omitempty"`

	FieldMappingType *ServiceAISetupFieldType `xml:"fieldMappingType,omitempty" json:"fieldMappingType,omitempty"`

	FieldPosition int32 `xml:"fieldPosition,omitempty" json:"fieldPosition,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	SetupDefinition string `xml:"setupDefinition,omitempty" json:"setupDefinition,omitempty"`
}

type ServiceChannel struct {
	*Metadata

	AcwExtensionDuration int32 `xml:"acwExtensionDuration,omitempty" json:"acwExtensionDuration,omitempty"`

	AfterConvoWorkMaxTime int32 `xml:"afterConvoWorkMaxTime,omitempty" json:"afterConvoWorkMaxTime,omitempty"`

	DoesMinimizeWidgetOnAccept bool `xml:"doesMinimizeWidgetOnAccept,omitempty" json:"doesMinimizeWidgetOnAccept,omitempty"`

	HasAcwExtensionEnabled bool `xml:"hasAcwExtensionEnabled,omitempty" json:"hasAcwExtensionEnabled,omitempty"`

	HasAfterConvoWorkTimer bool `xml:"hasAfterConvoWorkTimer,omitempty" json:"hasAfterConvoWorkTimer,omitempty"`

	HasAutoAcceptEnabled bool `xml:"hasAutoAcceptEnabled,omitempty" json:"hasAutoAcceptEnabled,omitempty"`

	InteractionComponent string `xml:"interactionComponent,omitempty" json:"interactionComponent,omitempty"`

	IsInterruptible bool `xml:"isInterruptible,omitempty" json:"isInterruptible,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	MaxExtensions string `xml:"maxExtensions,omitempty" json:"maxExtensions,omitempty"`

	RelatedEntityType string `xml:"relatedEntityType,omitempty" json:"relatedEntityType,omitempty"`

	SecondaryRoutingPriorityField string `xml:"secondaryRoutingPriorityField,omitempty" json:"secondaryRoutingPriorityField,omitempty"`

	ServiceChannelFieldPriorities []*ServiceChannelFieldPriority `xml:"serviceChannelFieldPriorities,omitempty" json:"serviceChannelFieldPriorities,omitempty"`
}

type ServiceChannelFieldPriority struct {
	Priority int32 `xml:"priority,omitempty" json:"priority,omitempty"`

	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type ServiceCloudVoiceSettings struct {
	*Metadata

	EnableAmazonQueueManagement bool `xml:"enableAmazonQueueManagement,omitempty" json:"enableAmazonQueueManagement,omitempty"`

	EnableDefaultChannelForSCV bool `xml:"enableDefaultChannelForSCV,omitempty" json:"enableDefaultChannelForSCV,omitempty"`

	EnableEndUserForSCV bool `xml:"enableEndUserForSCV,omitempty" json:"enableEndUserForSCV,omitempty"`

	EnableOmniCapacityForSCV bool `xml:"enableOmniCapacityForSCV,omitempty" json:"enableOmniCapacityForSCV,omitempty"`

	EnablePTQueueManagement bool `xml:"enablePTQueueManagement,omitempty" json:"enablePTQueueManagement,omitempty"`

	EnableSCVBYOT bool `xml:"enableSCVBYOT,omitempty" json:"enableSCVBYOT,omitempty"`

	EnableSCVExternalTelephony bool `xml:"enableSCVExternalTelephony,omitempty" json:"enableSCVExternalTelephony,omitempty"`

	EnableSCVSupportBannerDisplayed bool `xml:"enableSCVSupportBannerDisplayed,omitempty" json:"enableSCVSupportBannerDisplayed,omitempty"`

	EnableServiceCloudVoice bool `xml:"enableServiceCloudVoice,omitempty" json:"enableServiceCloudVoice,omitempty"`

	EnableVoiceInGovCloudOptIn bool `xml:"enableVoiceInGovCloudOptIn,omitempty" json:"enableVoiceInGovCloudOptIn,omitempty"`
}

type ServicePresenceStatus struct {
	*Metadata

	Channels *ServiceChannelStatus `xml:"channels,omitempty" json:"channels,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`
}

type ServiceChannelStatus struct {
	Channel []string `xml:"channel,omitempty" json:"channel,omitempty"`
}

type ServiceSetupAssistantSettings struct {
	*Metadata

	EnableServiceSetupAssistant bool `xml:"enableServiceSetupAssistant,omitempty" json:"enableServiceSetupAssistant,omitempty"`
}

type SharingBaseRule struct {
	*Metadata

	AccessLevel string `xml:"accessLevel,omitempty" json:"accessLevel,omitempty"`

	AccountSettings *AccountSharingRuleSettings `xml:"accountSettings,omitempty" json:"accountSettings,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	SharedTo *SharedTo `xml:"sharedTo,omitempty" json:"sharedTo,omitempty"`
}

type AccountSharingRuleSettings struct {
	CaseAccessLevel string `xml:"caseAccessLevel,omitempty" json:"caseAccessLevel,omitempty"`

	ContactAccessLevel string `xml:"contactAccessLevel,omitempty" json:"contactAccessLevel,omitempty"`

	OpportunityAccessLevel string `xml:"opportunityAccessLevel,omitempty" json:"opportunityAccessLevel,omitempty"`
}

type SharingCriteriaRule struct {
	*SharingBaseRule

	BooleanFilter string `xml:"booleanFilter,omitempty" json:"booleanFilter,omitempty"`

	CriteriaItems []*FilterItem `xml:"criteriaItems,omitempty" json:"criteriaItems,omitempty"`

	IncludeRecordsOwnedByAll bool `xml:"includeRecordsOwnedByAll,omitempty" json:"includeRecordsOwnedByAll,omitempty"`
}

type SharingGuestRule struct {
	*SharingBaseRule

	BooleanFilter string `xml:"booleanFilter,omitempty" json:"booleanFilter,omitempty"`

	CriteriaItems []*FilterItem `xml:"criteriaItems,omitempty" json:"criteriaItems,omitempty"`

	IncludeHVUOwnedRecords bool `xml:"includeHVUOwnedRecords,omitempty" json:"includeHVUOwnedRecords,omitempty"`
}

type SharingOwnerRule struct {
	*SharingBaseRule

	SharedFrom *SharedTo `xml:"sharedFrom,omitempty" json:"sharedFrom,omitempty"`
}

type SharingTerritoryRule struct {
	*SharingOwnerRule
}

type SharingRules struct {
	*Metadata

	SharingCriteriaRules []*SharingCriteriaRule `xml:"sharingCriteriaRules,omitempty" json:"sharingCriteriaRules,omitempty"`

	SharingGuestRules []*SharingGuestRule `xml:"sharingGuestRules,omitempty" json:"sharingGuestRules,omitempty"`

	SharingOwnerRules []*SharingOwnerRule `xml:"sharingOwnerRules,omitempty" json:"sharingOwnerRules,omitempty"`

	SharingTerritoryRules []*SharingTerritoryRule `xml:"sharingTerritoryRules,omitempty" json:"sharingTerritoryRules,omitempty"`
}

type SharingSet struct {
	*Metadata

	AccessMappings []*AccessMapping `xml:"accessMappings,omitempty" json:"accessMappings,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Profiles []string `xml:"profiles,omitempty" json:"profiles,omitempty"`
}

type AccessMapping struct {
	AccessLevel string `xml:"accessLevel,omitempty" json:"accessLevel,omitempty"`

	Object string `xml:"object,omitempty" json:"object,omitempty"`

	ObjectField string `xml:"objectField,omitempty" json:"objectField,omitempty"`

	UserField string `xml:"userField,omitempty" json:"userField,omitempty"`
}

type SharingSettings struct {
	*Metadata

	DeferGroupMembership bool `xml:"deferGroupMembership,omitempty" json:"deferGroupMembership,omitempty"`

	DeferSharingRules bool `xml:"deferSharingRules,omitempty" json:"deferSharingRules,omitempty"`

	EnableAccountRoleOptimization bool `xml:"enableAccountRoleOptimization,omitempty" json:"enableAccountRoleOptimization,omitempty"`

	EnableAssetSharing bool `xml:"enableAssetSharing,omitempty" json:"enableAssetSharing,omitempty"`

	EnableCommunityUserVisibility bool `xml:"enableCommunityUserVisibility,omitempty" json:"enableCommunityUserVisibility,omitempty"`

	EnableExternalSharingModel bool `xml:"enableExternalSharingModel,omitempty" json:"enableExternalSharingModel,omitempty"`

	EnableManagerGroups bool `xml:"enableManagerGroups,omitempty" json:"enableManagerGroups,omitempty"`

	EnableManualUserRecordSharing bool `xml:"enableManualUserRecordSharing,omitempty" json:"enableManualUserRecordSharing,omitempty"`

	EnablePartnerSuperUserAccess bool `xml:"enablePartnerSuperUserAccess,omitempty" json:"enablePartnerSuperUserAccess,omitempty"`

	EnablePortalUserCaseSharing bool `xml:"enablePortalUserCaseSharing,omitempty" json:"enablePortalUserCaseSharing,omitempty"`

	EnablePortalUserVisibility bool `xml:"enablePortalUserVisibility,omitempty" json:"enablePortalUserVisibility,omitempty"`

	EnableRemoveTMGroupMembership bool `xml:"enableRemoveTMGroupMembership,omitempty" json:"enableRemoveTMGroupMembership,omitempty"`

	EnableRestrictAccessLookupRecords bool `xml:"enableRestrictAccessLookupRecords,omitempty" json:"enableRestrictAccessLookupRecords,omitempty"`

	EnableSecureGuestAccess bool `xml:"enableSecureGuestAccess,omitempty" json:"enableSecureGuestAccess,omitempty"`

	EnableShareObjectReportTypes bool `xml:"enableShareObjectReportTypes,omitempty" json:"enableShareObjectReportTypes,omitempty"`

	EnableStandardReportVisibility bool `xml:"enableStandardReportVisibility,omitempty" json:"enableStandardReportVisibility,omitempty"`

	EnableTerritoryForecastManager bool `xml:"enableTerritoryForecastManager,omitempty" json:"enableTerritoryForecastManager,omitempty"`
}

type SiteSettings struct {
	*Metadata

	EnableEnhancedSitesAndContentPlatform bool `xml:"enableEnhancedSitesAndContentPlatform,omitempty" json:"enableEnhancedSitesAndContentPlatform,omitempty"`

	EnableProxyLoginICHeader bool `xml:"enableProxyLoginICHeader,omitempty" json:"enableProxyLoginICHeader,omitempty"`

	EnableSitesRecordReassignOrgPref bool `xml:"enableSitesRecordReassignOrgPref,omitempty" json:"enableSitesRecordReassignOrgPref,omitempty"`

	EnableTopicsInSites bool `xml:"enableTopicsInSites,omitempty" json:"enableTopicsInSites,omitempty"`
}

type Skill struct {
	*Metadata

	Assignments *SkillAssignments `xml:"assignments,omitempty" json:"assignments,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	SkillType string `xml:"skillType,omitempty" json:"skillType,omitempty"`
}

type SkillAssignments struct {
	Profiles *SkillProfileAssignments `xml:"profiles,omitempty" json:"profiles,omitempty"`

	Users *SkillUserAssignments `xml:"users,omitempty" json:"users,omitempty"`
}

type SkillProfileAssignments struct {
	Profile []string `xml:"profile,omitempty" json:"profile,omitempty"`
}

type SkillUserAssignments struct {
	User []string `xml:"user,omitempty" json:"user,omitempty"`
}

type SkillType struct {
	*Metadata

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type SocialCustomerServiceSettings struct {
	*Metadata

	CaseSubjectOption *CaseSubjectOption `xml:"caseSubjectOption,omitempty" json:"caseSubjectOption,omitempty"`

	EnableAllFBResponseAccounts bool `xml:"enableAllFBResponseAccounts,omitempty" json:"enableAllFBResponseAccounts,omitempty"`

	EnableInboundProcessingConcurrency bool `xml:"enableInboundProcessingConcurrency,omitempty" json:"enableInboundProcessingConcurrency,omitempty"`

	EnableSocialApprovals bool `xml:"enableSocialApprovals,omitempty" json:"enableSocialApprovals,omitempty"`

	EnableSocialCaseAssignmentRules bool `xml:"enableSocialCaseAssignmentRules,omitempty" json:"enableSocialCaseAssignmentRules,omitempty"`

	EnableSocialCustomerService bool `xml:"enableSocialCustomerService,omitempty" json:"enableSocialCustomerService,omitempty"`

	EnableSocialPersonaHistoryTracking bool `xml:"enableSocialPersonaHistoryTracking,omitempty" json:"enableSocialPersonaHistoryTracking,omitempty"`

	EnableSocialPostHistoryTracking bool `xml:"enableSocialPostHistoryTracking,omitempty" json:"enableSocialPostHistoryTracking,omitempty"`

	EnableSocialReceiveParentPost bool `xml:"enableSocialReceiveParentPost,omitempty" json:"enableSocialReceiveParentPost,omitempty"`
}

type SocialProfileSettings struct {
	*Metadata

	EnableSocialProfiles bool `xml:"enableSocialProfiles,omitempty" json:"enableSocialProfiles,omitempty"`

	IsFacebookSocialProfilesDisabled bool `xml:"isFacebookSocialProfilesDisabled,omitempty" json:"isFacebookSocialProfilesDisabled,omitempty"`

	IsLinkedInSocialProfilesDisabled bool `xml:"isLinkedInSocialProfilesDisabled,omitempty" json:"isLinkedInSocialProfilesDisabled,omitempty"`

	IsTwitterSocialProfilesDisabled bool `xml:"isTwitterSocialProfilesDisabled,omitempty" json:"isTwitterSocialProfilesDisabled,omitempty"`

	IsYouTubeSocialProfilesDisabled bool `xml:"isYouTubeSocialProfilesDisabled,omitempty" json:"isYouTubeSocialProfilesDisabled,omitempty"`
}

type StandardValueSet struct {
	*Metadata

	GroupingStringEnum string `xml:"groupingStringEnum,omitempty" json:"groupingStringEnum,omitempty"`

	Sorted bool `xml:"sorted,omitempty" json:"sorted,omitempty"`

	StandardValue []*StandardValue `xml:"standardValue,omitempty" json:"standardValue,omitempty"`
}

type StandardValueSetTranslation struct {
	*Metadata

	ValueTranslation []*ValueTranslation `xml:"valueTranslation,omitempty" json:"valueTranslation,omitempty"`
}

type SubscriptionManagementSettings struct {
	*Metadata

	EnableConvertNegativeInvoiceLinesToCreditMemoAndApply bool `xml:"enableConvertNegativeInvoiceLinesToCreditMemoAndApply,omitempty" json:"enableConvertNegativeInvoiceLinesToCreditMemoAndApply,omitempty"`

	EnablePaymentScheduleAutomation bool `xml:"enablePaymentScheduleAutomation,omitempty" json:"enablePaymentScheduleAutomation,omitempty"`

	EnableRefundAutomation bool `xml:"enableRefundAutomation,omitempty" json:"enableRefundAutomation,omitempty"`

	EnableRevSubMgmtBlngOptOut bool `xml:"enableRevSubMgmtBlngOptOut,omitempty" json:"enableRevSubMgmtBlngOptOut,omitempty"`

	EnableSubscriptionManagement bool `xml:"enableSubscriptionManagement,omitempty" json:"enableSubscriptionManagement,omitempty"`
}

type SurveySettings struct {
	*Metadata

	EnableIndustriesCxmEnabled bool `xml:"enableIndustriesCxmEnabled,omitempty" json:"enableIndustriesCxmEnabled,omitempty"`

	EnableSurvey bool `xml:"enableSurvey,omitempty" json:"enableSurvey,omitempty"`

	EnableSurveyOwnerCanManageResponse bool `xml:"enableSurveyOwnerCanManageResponse,omitempty" json:"enableSurveyOwnerCanManageResponse,omitempty"`
}

type SvcCatalogCategory struct {
	*Metadata

	Image string `xml:"image,omitempty" json:"image,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	ParentCategory string `xml:"parentCategory,omitempty" json:"parentCategory,omitempty"`

	SortOrder int32 `xml:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

type SvcCatalogFulfillmentFlow struct {
	*Metadata

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Flow string `xml:"flow,omitempty" json:"flow,omitempty"`

	Icon string `xml:"icon,omitempty" json:"icon,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	Items []*SvcCatalogFulfillFlowItem `xml:"items,omitempty" json:"items,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type SvcCatalogFulfillFlowItem struct {
	CatalogInputVariable string `xml:"catalogInputVariable,omitempty" json:"catalogInputVariable,omitempty"`

	DisplayType *PropertyDisplayType `xml:"displayType,omitempty" json:"displayType,omitempty"`

	FieldDefinition string `xml:"fieldDefinition,omitempty" json:"fieldDefinition,omitempty"`

	FieldLookupDomain string `xml:"fieldLookupDomain,omitempty" json:"fieldLookupDomain,omitempty"`

	IsAdditionalQuestionsInputVariable bool `xml:"isAdditionalQuestionsInputVariable,omitempty" json:"isAdditionalQuestionsInputVariable,omitempty"`

	IsRequired bool `xml:"isRequired,omitempty" json:"isRequired,omitempty"`

	LookupDomainFieldType string `xml:"lookupDomainFieldType,omitempty" json:"lookupDomainFieldType,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	ObjectLookupDomain string `xml:"objectLookupDomain,omitempty" json:"objectLookupDomain,omitempty"`
}

type SynonymDictionary struct {
	*Metadata

	Groups []*SynonymGroup `xml:"groups,omitempty" json:"groups,omitempty"`

	IsProtected bool `xml:"isProtected,omitempty" json:"isProtected,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`
}

type SystemNotificationSettings struct {
	*Metadata

	DisableDowntimeNotifications bool `xml:"disableDowntimeNotifications,omitempty" json:"disableDowntimeNotifications,omitempty"`

	DisableMaintenanceNotifications bool `xml:"disableMaintenanceNotifications,omitempty" json:"disableMaintenanceNotifications,omitempty"`
}

type Territory2 struct {
	*Metadata

	AccountAccessLevel string `xml:"accountAccessLevel,omitempty" json:"accountAccessLevel,omitempty"`

	CaseAccessLevel string `xml:"caseAccessLevel,omitempty" json:"caseAccessLevel,omitempty"`

	ContactAccessLevel string `xml:"contactAccessLevel,omitempty" json:"contactAccessLevel,omitempty"`

	CustomFields []*FieldValue `xml:"customFields,omitempty" json:"customFields,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	ObjectAccessLevels []*Territory2AccessLevel `xml:"objectAccessLevels,omitempty" json:"objectAccessLevels,omitempty"`

	OpportunityAccessLevel string `xml:"opportunityAccessLevel,omitempty" json:"opportunityAccessLevel,omitempty"`

	ParentTerritory string `xml:"parentTerritory,omitempty" json:"parentTerritory,omitempty"`

	RuleAssociations []*Territory2RuleAssociation `xml:"ruleAssociations,omitempty" json:"ruleAssociations,omitempty"`

	Territory2Type string `xml:"territory2Type,omitempty" json:"territory2Type,omitempty"`
}

type FieldValue struct {
	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Value *AnyType `xml:"value,omitempty" json:"value,omitempty"`
}

type Territory2AccessLevel struct {
	AccessLevel string `xml:"accessLevel,omitempty" json:"accessLevel,omitempty"`

	ObjectType string `xml:"objectType,omitempty" json:"objectType,omitempty"`
}

type Territory2RuleAssociation struct {
	Inherited bool `xml:"inherited,omitempty" json:"inherited,omitempty"`

	RuleName string `xml:"ruleName,omitempty" json:"ruleName,omitempty"`
}

type Territory2Model struct {
	*Metadata

	CustomFields []*FieldValue `xml:"customFields,omitempty" json:"customFields,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type Territory2Rule struct {
	*Metadata

	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	BooleanFilter string `xml:"booleanFilter,omitempty" json:"booleanFilter,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	ObjectType string `xml:"objectType,omitempty" json:"objectType,omitempty"`

	RuleItems []*Territory2RuleItem `xml:"ruleItems,omitempty" json:"ruleItems,omitempty"`
}

type Territory2RuleItem struct {
	Field string `xml:"field,omitempty" json:"field,omitempty"`

	Operation *FilterOperation `xml:"operation,omitempty" json:"operation,omitempty"`

	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type Territory2Settings struct {
	*Metadata

	DefaultAccountAccessLevel string `xml:"defaultAccountAccessLevel,omitempty" json:"defaultAccountAccessLevel,omitempty"`

	DefaultCaseAccessLevel string `xml:"defaultCaseAccessLevel,omitempty" json:"defaultCaseAccessLevel,omitempty"`

	DefaultContactAccessLevel string `xml:"defaultContactAccessLevel,omitempty" json:"defaultContactAccessLevel,omitempty"`

	DefaultOpportunityAccessLevel string `xml:"defaultOpportunityAccessLevel,omitempty" json:"defaultOpportunityAccessLevel,omitempty"`

	EnableTerritoryManagement2 bool `xml:"enableTerritoryManagement2,omitempty" json:"enableTerritoryManagement2,omitempty"`

	OpportunityFilterSettings *Territory2SettingsOpportunityFilter `xml:"opportunityFilterSettings,omitempty" json:"opportunityFilterSettings,omitempty"`

	ShowTM2EnabledBanner bool `xml:"showTM2EnabledBanner,omitempty" json:"showTM2EnabledBanner,omitempty"`

	SupportedObjects []*Territory2SupportedObject `xml:"supportedObjects,omitempty" json:"supportedObjects,omitempty"`

	T2ForecastAccessLevel string `xml:"t2ForecastAccessLevel,omitempty" json:"t2ForecastAccessLevel,omitempty"`

	Tm2BypassRealignAccInsert bool `xml:"tm2BypassRealignAccInsert,omitempty" json:"tm2BypassRealignAccInsert,omitempty"`

	Tm2EnableUserAssignmentLog bool `xml:"tm2EnableUserAssignmentLog,omitempty" json:"tm2EnableUserAssignmentLog,omitempty"`
}

type Territory2SettingsOpportunityFilter struct {
	ApexClassName *string `xml:"apexClassName,omitempty" json:"apexClassName,omitempty"`

	EnableFilter bool `xml:"enableFilter,omitempty" json:"enableFilter,omitempty"`

	RunOnCreate bool `xml:"runOnCreate,omitempty" json:"runOnCreate,omitempty"`
}

type Territory2SupportedObject struct {
	DefaultAccessLevel string `xml:"defaultAccessLevel,omitempty" json:"defaultAccessLevel,omitempty"`

	ObjectType string `xml:"objectType,omitempty" json:"objectType,omitempty"`

	State string `xml:"state,omitempty" json:"state,omitempty"`
}

type Territory2Type struct {
	*Metadata

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Priority int32 `xml:"priority,omitempty" json:"priority,omitempty"`
}

type TimeSheetTemplate struct {
	*Metadata

	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Frequency *TimeSheetFrequency `xml:"frequency,omitempty" json:"frequency,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	StartDate soap.XSDDate `xml:"startDate,omitempty" json:"startDate,omitempty"`

	TimeSheetTemplateAssignments []*TimeSheetTemplateAssignment `xml:"timeSheetTemplateAssignments,omitempty" json:"timeSheetTemplateAssignments,omitempty"`

	WorkWeekEndDay *DaysOfWeek `xml:"workWeekEndDay,omitempty" json:"workWeekEndDay,omitempty"`

	WorkWeekStartDay *DaysOfWeek `xml:"workWeekStartDay,omitempty" json:"workWeekStartDay,omitempty"`
}

type TimeSheetTemplateAssignment struct {
	AssignedTo string `xml:"assignedTo,omitempty" json:"assignedTo,omitempty"`
}

type TimelineObjectDefinition struct {
	*Metadata

	BaseObject string `xml:"baseObject,omitempty" json:"baseObject,omitempty"`

	Definition string `xml:"definition,omitempty" json:"definition,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`
}

type TopicsForObjects struct {
	*Metadata

	EnableTopics bool `xml:"enableTopics,omitempty" json:"enableTopics,omitempty"`

	EntityApiName string `xml:"entityApiName,omitempty" json:"entityApiName,omitempty"`
}

type TrailheadSettings struct {
	*Metadata

	EnableConfettiEffect bool `xml:"enableConfettiEffect,omitempty" json:"enableConfettiEffect,omitempty"`

	EnableMyTrailheadPref bool `xml:"enableMyTrailheadPref,omitempty" json:"enableMyTrailheadPref,omitempty"`

	EnableTrailheadInLexTerms bool `xml:"enableTrailheadInLexTerms,omitempty" json:"enableTrailheadInLexTerms,omitempty"`
}

type TransactionSecurityPolicy struct {
	*Metadata

	Action *TransactionSecurityAction `xml:"action,omitempty" json:"action,omitempty"`

	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	ApexClass string `xml:"apexClass,omitempty" json:"apexClass,omitempty"`

	BlockMessage string `xml:"blockMessage,omitempty" json:"blockMessage,omitempty"`

	CustomEmailContent string `xml:"customEmailContent,omitempty" json:"customEmailContent,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	EventName *TransactionSecurityEventName `xml:"eventName,omitempty" json:"eventName,omitempty"`

	EventType *MonitoredEvents `xml:"eventType,omitempty" json:"eventType,omitempty"`

	ExecutionUser string `xml:"executionUser,omitempty" json:"executionUser,omitempty"`

	Flow string `xml:"flow,omitempty" json:"flow,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	ResourceName string `xml:"resourceName,omitempty" json:"resourceName,omitempty"`

	Type_ *TxnSecurityPolicyType `xml:"type,omitempty" json:"type,omitempty"`
}

type TransactionSecurityAction struct {
	Block bool `xml:"block,omitempty" json:"block,omitempty"`

	EndSession bool `xml:"endSession,omitempty" json:"endSession,omitempty"`

	FreezeUser bool `xml:"freezeUser,omitempty" json:"freezeUser,omitempty"`

	Notifications []*TransactionSecurityNotification `xml:"notifications,omitempty" json:"notifications,omitempty"`

	TwoFactorAuthentication bool `xml:"twoFactorAuthentication,omitempty" json:"twoFactorAuthentication,omitempty"`
}

type TransactionSecurityNotification struct {
	InApp bool `xml:"inApp,omitempty" json:"inApp,omitempty"`

	SendEmail bool `xml:"sendEmail,omitempty" json:"sendEmail,omitempty"`

	User string `xml:"user,omitempty" json:"user,omitempty"`
}

type Translations struct {
	*Metadata

	BotBlocks []*BotBlockTranslation `xml:"botBlocks,omitempty" json:"botBlocks,omitempty"`

	BotTemplates []*BotTemplateTranslation `xml:"botTemplates,omitempty" json:"botTemplates,omitempty"`

	Bots []*BotTranslation `xml:"bots,omitempty" json:"bots,omitempty"`

	CustomApplications []*CustomApplicationTranslation `xml:"customApplications,omitempty" json:"customApplications,omitempty"`

	CustomLabels []*CustomLabelTranslation `xml:"customLabels,omitempty" json:"customLabels,omitempty"`

	CustomPageWebLinks []*CustomPageWebLinkTranslation `xml:"customPageWebLinks,omitempty" json:"customPageWebLinks,omitempty"`

	CustomTabs []*CustomTabTranslation `xml:"customTabs,omitempty" json:"customTabs,omitempty"`

	DesFieldTemplateMessages []*ExplainabilityMsgTemplateFieldTranslation `xml:"desFieldTemplateMessages,omitempty" json:"desFieldTemplateMessages,omitempty"`

	FlowDefinitions []*FlowDefinitionTranslation `xml:"flowDefinitions,omitempty" json:"flowDefinitions,omitempty"`

	IdentityVerificationCustomFieldLabels []*IdentityVerificationFieldTranslation `xml:"identityVerificationCustomFieldLabels,omitempty" json:"identityVerificationCustomFieldLabels,omitempty"`

	PipelineInspMetricConfigs []*PipelineInspMetricConfigTranslation `xml:"pipelineInspMetricConfigs,omitempty" json:"pipelineInspMetricConfigs,omitempty"`

	Prompts []*PromptTranslation `xml:"prompts,omitempty" json:"prompts,omitempty"`

	QuickActions []*GlobalQuickActionTranslation `xml:"quickActions,omitempty" json:"quickActions,omitempty"`

	ReportTypes []*ReportTypeTranslation `xml:"reportTypes,omitempty" json:"reportTypes,omitempty"`

	Scontrols []*ScontrolTranslation `xml:"scontrols,omitempty" json:"scontrols,omitempty"`
}

type BotBlockTranslation struct {
	BotBlockVersions []*BotBlockVersionTranslation `xml:"botBlockVersions,omitempty" json:"botBlockVersions,omitempty"`

	FullName string `xml:"fullName,omitempty" json:"fullName,omitempty"`
}

type BotBlockVersionTranslation struct {
	BotDialogs []*BotDialogTranslation `xml:"botDialogs,omitempty" json:"botDialogs,omitempty"`

	FullName string `xml:"fullName,omitempty" json:"fullName,omitempty"`
}

type BotDialogTranslation struct {
	BotSteps []*BotStepTranslation `xml:"botSteps,omitempty" json:"botSteps,omitempty"`

	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`
}

type BotStepTranslation struct {
	BotMessages []*BotMessageTranslation `xml:"botMessages,omitempty" json:"botMessages,omitempty"`

	BotSteps []*BotStepTranslation `xml:"botSteps,omitempty" json:"botSteps,omitempty"`

	BotVariableOperation *BotVariableOperationTranslation `xml:"botVariableOperation,omitempty" json:"botVariableOperation,omitempty"`

	StepIdentifier string `xml:"stepIdentifier,omitempty" json:"stepIdentifier,omitempty"`

	Type_ *BotStepType `xml:"type,omitempty" json:"type,omitempty"`
}

type BotMessageTranslation struct {
	Message string `xml:"message,omitempty" json:"message,omitempty"`

	MessageIdentifier string `xml:"messageIdentifier,omitempty" json:"messageIdentifier,omitempty"`
}

type BotVariableOperationTranslation struct {
	BotMessages []*BotMessageTranslation `xml:"botMessages,omitempty" json:"botMessages,omitempty"`

	BotQuickReplyOptions []*BotQuickReplyOptionTranslation `xml:"botQuickReplyOptions,omitempty" json:"botQuickReplyOptions,omitempty"`

	QuickReplyOptionTemplate string `xml:"quickReplyOptionTemplate,omitempty" json:"quickReplyOptionTemplate,omitempty"`

	RetryMessages []*BotMessageTranslation `xml:"retryMessages,omitempty" json:"retryMessages,omitempty"`

	SuccessMessages []*BotMessageTranslation `xml:"successMessages,omitempty" json:"successMessages,omitempty"`

	Type_ *BotVariableOperationType `xml:"type,omitempty" json:"type,omitempty"`

	VariableOperationIdentifier string `xml:"variableOperationIdentifier,omitempty" json:"variableOperationIdentifier,omitempty"`
}

type BotQuickReplyOptionTranslation struct {
	LiteralValue string `xml:"literalValue,omitempty" json:"literalValue,omitempty"`

	QuickReplyOptionIdentifier string `xml:"quickReplyOptionIdentifier,omitempty" json:"quickReplyOptionIdentifier,omitempty"`
}

type BotTemplateTranslation struct {
	BotDialogs []*BotDialogTranslation `xml:"botDialogs,omitempty" json:"botDialogs,omitempty"`

	FullName string `xml:"fullName,omitempty" json:"fullName,omitempty"`
}

type BotTranslation struct {
	BotVersions []*BotVersionTranslation `xml:"botVersions,omitempty" json:"botVersions,omitempty"`

	FullName string `xml:"fullName,omitempty" json:"fullName,omitempty"`
}

type BotVersionTranslation struct {
	BotDialogs []*BotDialogTranslation `xml:"botDialogs,omitempty" json:"botDialogs,omitempty"`

	FullName string `xml:"fullName,omitempty" json:"fullName,omitempty"`
}

type CustomApplicationTranslation struct {
	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type CustomLabelTranslation struct {
	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type CustomPageWebLinkTranslation struct {
	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type CustomTabTranslation struct {
	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type ExplainabilityMsgTemplateFieldTranslation struct {
	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	TemplateMessage string `xml:"templateMessage,omitempty" json:"templateMessage,omitempty"`
}

type FlowDefinitionTranslation struct {
	Flows []*FlowTranslation `xml:"flows,omitempty" json:"flows,omitempty"`

	FullName string `xml:"fullName,omitempty" json:"fullName,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`
}

type FlowTranslation struct {
	Choices []*FlowChoiceTranslation `xml:"choices,omitempty" json:"choices,omitempty"`

	CustomErrorMessages []*FlowCustomErrorMessageTranslation `xml:"customErrorMessages,omitempty" json:"customErrorMessages,omitempty"`

	FullName string `xml:"fullName,omitempty" json:"fullName,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Screens []*FlowScreenTranslation `xml:"screens,omitempty" json:"screens,omitempty"`

	Stages []*FlowStageTranslation `xml:"stages,omitempty" json:"stages,omitempty"`

	TextTemplates []*FlowTextTemplateTranslation `xml:"textTemplates,omitempty" json:"textTemplates,omitempty"`
}

type FlowChoiceTranslation struct {
	ChoiceText string `xml:"choiceText,omitempty" json:"choiceText,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	UserInput *FlowChoiceUserInputTranslation `xml:"userInput,omitempty" json:"userInput,omitempty"`
}

type FlowChoiceUserInputTranslation struct {
	PromptText string `xml:"promptText,omitempty" json:"promptText,omitempty"`

	ValidationRule *FlowInputValidationRuleTranslation `xml:"validationRule,omitempty" json:"validationRule,omitempty"`
}

type FlowInputValidationRuleTranslation struct {
	ErrorMessage string `xml:"errorMessage,omitempty" json:"errorMessage,omitempty"`
}

type FlowCustomErrorMessageTranslation struct {
	DeveloperName string `xml:"developerName,omitempty" json:"developerName,omitempty"`

	ErrorMessage string `xml:"errorMessage,omitempty" json:"errorMessage,omitempty"`

	Field string `xml:"field,omitempty" json:"field,omitempty"`
}

type FlowScreenTranslation struct {
	BackButtonLabel string `xml:"backButtonLabel,omitempty" json:"backButtonLabel,omitempty"`

	Fields []*FlowScreenFieldTranslation `xml:"fields,omitempty" json:"fields,omitempty"`

	HelpText string `xml:"helpText,omitempty" json:"helpText,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	NextOrFinishButtonLabel string `xml:"nextOrFinishButtonLabel,omitempty" json:"nextOrFinishButtonLabel,omitempty"`

	PauseButtonLabel string `xml:"pauseButtonLabel,omitempty" json:"pauseButtonLabel,omitempty"`

	PausedText string `xml:"pausedText,omitempty" json:"pausedText,omitempty"`
}

type FlowScreenFieldTranslation struct {
	FieldText string `xml:"fieldText,omitempty" json:"fieldText,omitempty"`

	HelpText string `xml:"helpText,omitempty" json:"helpText,omitempty"`

	InputParameters []*FlowInputParameterTranslation `xml:"inputParameters,omitempty" json:"inputParameters,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	ValidationRule *FlowInputValidationRuleTranslation `xml:"validationRule,omitempty" json:"validationRule,omitempty"`
}

type FlowInputParameterTranslation struct {
	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Value *FlowFerovTranslation `xml:"value,omitempty" json:"value,omitempty"`
}

type FlowFerovTranslation struct {
	ComplexValues []*FlowComplexLiteralTranslation `xml:"complexValues,omitempty" json:"complexValues,omitempty"`

	StringValue string `xml:"stringValue,omitempty" json:"stringValue,omitempty"`
}

type FlowComplexLiteralTranslation struct {
	CustomAspectKey string `xml:"customAspectKey,omitempty" json:"customAspectKey,omitempty"`

	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type FlowStageTranslation struct {
	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type FlowTextTemplateTranslation struct {
	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Text string `xml:"text,omitempty" json:"text,omitempty"`
}

type IdentityVerificationFieldTranslation struct {
	CustomFieldLabel string `xml:"customFieldLabel,omitempty" json:"customFieldLabel,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type PipelineInspMetricConfigTranslation struct {
	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type PromptTranslation struct {
	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	PromptVersions []*PromptVersionTranslation `xml:"promptVersions,omitempty" json:"promptVersions,omitempty"`
}

type PromptVersionTranslation struct {
	ActionButtonLabel string `xml:"actionButtonLabel,omitempty" json:"actionButtonLabel,omitempty"`

	ActionButtonLink string `xml:"actionButtonLink,omitempty" json:"actionButtonLink,omitempty"`

	Body string `xml:"body,omitempty" json:"body,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DismissButtonLabel string `xml:"dismissButtonLabel,omitempty" json:"dismissButtonLabel,omitempty"`

	Header string `xml:"header,omitempty" json:"header,omitempty"`

	ImageAltText string `xml:"imageAltText,omitempty" json:"imageAltText,omitempty"`

	ImageLink string `xml:"imageLink,omitempty" json:"imageLink,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	StepNumber int32 `xml:"stepNumber,omitempty" json:"stepNumber,omitempty"`

	Title string `xml:"title,omitempty" json:"title,omitempty"`

	VideoLink string `xml:"videoLink,omitempty" json:"videoLink,omitempty"`
}

type GlobalQuickActionTranslation struct {
	Aspect string `xml:"aspect,omitempty" json:"aspect,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type ReportTypeTranslation struct {
	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Sections []*ReportTypeSectionTranslation `xml:"sections,omitempty" json:"sections,omitempty"`
}

type ReportTypeSectionTranslation struct {
	Columns []*ReportTypeColumnTranslation `xml:"columns,omitempty" json:"columns,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type ReportTypeColumnTranslation struct {
	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type ScontrolTranslation struct {
	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`
}

type TrialOrgSettings struct {
	*Metadata

	EnableSampleDataDeleted bool `xml:"enableSampleDataDeleted,omitempty" json:"enableSampleDataDeleted,omitempty"`
}

type UIObjectRelationConfig struct {
	*Metadata

	UIObjectRelationFieldConfigs []*UIObjectRelationFieldConfig `xml:"UIObjectRelationFieldConfigs,omitempty" json:"UIObjectRelationFieldConfigs,omitempty"`

	ContextObject string `xml:"contextObject,omitempty" json:"contextObject,omitempty"`

	ContextObjectRecordType string `xml:"contextObjectRecordType,omitempty" json:"contextObjectRecordType,omitempty"`

	DirectRelationshipField string `xml:"directRelationshipField,omitempty" json:"directRelationshipField,omitempty"`

	IndirectObjectContextField string `xml:"indirectObjectContextField,omitempty" json:"indirectObjectContextField,omitempty"`

	IndirectObjectRelatedField string `xml:"indirectObjectRelatedField,omitempty" json:"indirectObjectRelatedField,omitempty"`

	IndirectRelationshipObject string `xml:"indirectRelationshipObject,omitempty" json:"indirectRelationshipObject,omitempty"`

	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	RelatedObject string `xml:"relatedObject,omitempty" json:"relatedObject,omitempty"`

	RelatedObjectRecordType string `xml:"relatedObjectRecordType,omitempty" json:"relatedObjectRecordType,omitempty"`

	RelationshipType *ObjectRelationshipType `xml:"relationshipType,omitempty" json:"relationshipType,omitempty"`
}

type UIObjectRelationFieldConfig struct {
	DisplayLabel string `xml:"displayLabel,omitempty" json:"displayLabel,omitempty"`

	QueryText string `xml:"queryText,omitempty" json:"queryText,omitempty"`

	RowOrder int32 `xml:"rowOrder,omitempty" json:"rowOrder,omitempty"`
}

type UserCriteria struct {
	*Metadata

	CreationAgeInSeconds int32 `xml:"creationAgeInSeconds,omitempty" json:"creationAgeInSeconds,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	LastChatterActivityAgeInSeconds int32 `xml:"lastChatterActivityAgeInSeconds,omitempty" json:"lastChatterActivityAgeInSeconds,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	Profiles []string `xml:"profiles,omitempty" json:"profiles,omitempty"`

	UserTypes []*NetworkUserType `xml:"userTypes,omitempty" json:"userTypes,omitempty"`
}

type UserEngagementSettings struct {
	*Metadata

	CanGovCloudUseAdoptionApps bool `xml:"canGovCloudUseAdoptionApps,omitempty" json:"canGovCloudUseAdoptionApps,omitempty"`

	DoesScheduledSwitcherRunDaily bool `xml:"doesScheduledSwitcherRunDaily,omitempty" json:"doesScheduledSwitcherRunDaily,omitempty"`

	EnableCustomHelpGlobalSection bool `xml:"enableCustomHelpGlobalSection,omitempty" json:"enableCustomHelpGlobalSection,omitempty"`

	EnableHelpMenuShowFeedback bool `xml:"enableHelpMenuShowFeedback,omitempty" json:"enableHelpMenuShowFeedback,omitempty"`

	EnableHelpMenuShowHelp bool `xml:"enableHelpMenuShowHelp,omitempty" json:"enableHelpMenuShowHelp,omitempty"`

	EnableHelpMenuShowNewUser bool `xml:"enableHelpMenuShowNewUser,omitempty" json:"enableHelpMenuShowNewUser,omitempty"`

	EnableHelpMenuShowSearch bool `xml:"enableHelpMenuShowSearch,omitempty" json:"enableHelpMenuShowSearch,omitempty"`

	EnableHelpMenuShowSfdcContent bool `xml:"enableHelpMenuShowSfdcContent,omitempty" json:"enableHelpMenuShowSfdcContent,omitempty"`

	EnableHelpMenuShowShortcut bool `xml:"enableHelpMenuShowShortcut,omitempty" json:"enableHelpMenuShowShortcut,omitempty"`

	EnableHelpMenuShowSupport bool `xml:"enableHelpMenuShowSupport,omitempty" json:"enableHelpMenuShowSupport,omitempty"`

	EnableHelpMenuShowTrailhead bool `xml:"enableHelpMenuShowTrailhead,omitempty" json:"enableHelpMenuShowTrailhead,omitempty"`

	EnableIBILOptOutDashboards bool `xml:"enableIBILOptOutDashboards,omitempty" json:"enableIBILOptOutDashboards,omitempty"`

	EnableIBILOptOutEvents bool `xml:"enableIBILOptOutEvents,omitempty" json:"enableIBILOptOutEvents,omitempty"`

	EnableIBILOptOutReports bool `xml:"enableIBILOptOutReports,omitempty" json:"enableIBILOptOutReports,omitempty"`

	EnableIBILOptOutTasks bool `xml:"enableIBILOptOutTasks,omitempty" json:"enableIBILOptOutTasks,omitempty"`

	EnableLexToClassicFeedbackEnable bool `xml:"enableLexToClassicFeedbackEnable,omitempty" json:"enableLexToClassicFeedbackEnable,omitempty"`

	EnableOrchestrationInSandbox bool `xml:"enableOrchestrationInSandbox,omitempty" json:"enableOrchestrationInSandbox,omitempty"`

	EnableOrgUserAssistEnabled bool `xml:"enableOrgUserAssistEnabled,omitempty" json:"enableOrgUserAssistEnabled,omitempty"`

	EnableScheduledSwitcher bool `xml:"enableScheduledSwitcher,omitempty" json:"enableScheduledSwitcher,omitempty"`

	EnableSfdcProductFeedbackSurvey bool `xml:"enableSfdcProductFeedbackSurvey,omitempty" json:"enableSfdcProductFeedbackSurvey,omitempty"`

	EnableShowSalesforceUserAssist bool `xml:"enableShowSalesforceUserAssist,omitempty" json:"enableShowSalesforceUserAssist,omitempty"`

	IsAutoTransitionDelayed bool `xml:"isAutoTransitionDelayed,omitempty" json:"isAutoTransitionDelayed,omitempty"`

	IsCrucNotificationDisabled bool `xml:"isCrucNotificationDisabled,omitempty" json:"isCrucNotificationDisabled,omitempty"`

	IsCustomProfileAutoTransitionDelayed bool `xml:"isCustomProfileAutoTransitionDelayed,omitempty" json:"isCustomProfileAutoTransitionDelayed,omitempty"`

	IsLEXWelcomeMatDisabled bool `xml:"isLEXWelcomeMatDisabled,omitempty" json:"isLEXWelcomeMatDisabled,omitempty"`

	IsMeetTheAssistantDisabledInClassic bool `xml:"isMeetTheAssistantDisabledInClassic,omitempty" json:"isMeetTheAssistantDisabledInClassic,omitempty"`

	IsMeetTheAssistantDisabledInLightning bool `xml:"isMeetTheAssistantDisabledInLightning,omitempty" json:"isMeetTheAssistantDisabledInLightning,omitempty"`

	IsSmartNudgesDisabled bool `xml:"isSmartNudgesDisabled,omitempty" json:"isSmartNudgesDisabled,omitempty"`

	OptimizerAppEnabled bool `xml:"optimizerAppEnabled,omitempty" json:"optimizerAppEnabled,omitempty"`
}

type UserInterfaceSettings struct {
	*Metadata

	AlternateAlohaListView bool `xml:"alternateAlohaListView,omitempty" json:"alternateAlohaListView,omitempty"`

	DynamicMruActionsOff bool `xml:"dynamicMruActionsOff,omitempty" json:"dynamicMruActionsOff,omitempty"`

	EnableAsyncRelatedLists bool `xml:"enableAsyncRelatedLists,omitempty" json:"enableAsyncRelatedLists,omitempty"`

	EnableClickjackUserPageHeaderless bool `xml:"enableClickjackUserPageHeaderless,omitempty" json:"enableClickjackUserPageHeaderless,omitempty"`

	EnableCollapsibleSections bool `xml:"enableCollapsibleSections,omitempty" json:"enableCollapsibleSections,omitempty"`

	EnableCollapsibleSideBar bool `xml:"enableCollapsibleSideBar,omitempty" json:"enableCollapsibleSideBar,omitempty"`

	EnableCustomObjectTruncate bool `xml:"enableCustomObjectTruncate,omitempty" json:"enableCustomObjectTruncate,omitempty"`

	EnableCustomeSideBarOnAllPages bool `xml:"enableCustomeSideBarOnAllPages,omitempty" json:"enableCustomeSideBarOnAllPages,omitempty"`

	EnableDeleteFieldHistory bool `xml:"enableDeleteFieldHistory,omitempty" json:"enableDeleteFieldHistory,omitempty"`

	EnableExternalObjectAsyncRelatedLists bool `xml:"enableExternalObjectAsyncRelatedLists,omitempty" json:"enableExternalObjectAsyncRelatedLists,omitempty"`

	EnableHoverDetails bool `xml:"enableHoverDetails,omitempty" json:"enableHoverDetails,omitempty"`

	EnableInlineEdit bool `xml:"enableInlineEdit,omitempty" json:"enableInlineEdit,omitempty"`

	EnableLightningVerticalNav bool `xml:"enableLightningVerticalNav,omitempty" json:"enableLightningVerticalNav,omitempty"`

	EnableNewPageLayoutEditor bool `xml:"enableNewPageLayoutEditor,omitempty" json:"enableNewPageLayoutEditor,omitempty"`

	EnablePersonalCanvas bool `xml:"enablePersonalCanvas,omitempty" json:"enablePersonalCanvas,omitempty"`

	EnablePrintableListViews bool `xml:"enablePrintableListViews,omitempty" json:"enablePrintableListViews,omitempty"`

	EnableProfileCustomTabsets bool `xml:"enableProfileCustomTabsets,omitempty" json:"enableProfileCustomTabsets,omitempty"`

	EnableQuickCreate bool `xml:"enableQuickCreate,omitempty" json:"enableQuickCreate,omitempty"`

	EnableRelatedListHovers bool `xml:"enableRelatedListHovers,omitempty" json:"enableRelatedListHovers,omitempty"`

	EnableTabOrganizer bool `xml:"enableTabOrganizer,omitempty" json:"enableTabOrganizer,omitempty"`
}

type UserManagementSettings struct {
	*Metadata

	EnableCanAnswerContainUsername bool `xml:"enableCanAnswerContainUsername,omitempty" json:"enableCanAnswerContainUsername,omitempty"`

	EnableConcealPersonalInfo bool `xml:"enableConcealPersonalInfo,omitempty" json:"enableConcealPersonalInfo,omitempty"`

	EnableContactlessExternalIdentityUsers bool `xml:"enableContactlessExternalIdentityUsers,omitempty" json:"enableContactlessExternalIdentityUsers,omitempty"`

	EnableEnhancedConcealPersonalInfo bool `xml:"enableEnhancedConcealPersonalInfo,omitempty" json:"enableEnhancedConcealPersonalInfo,omitempty"`

	EnableEnhancedPermsetMgmt bool `xml:"enableEnhancedPermsetMgmt,omitempty" json:"enableEnhancedPermsetMgmt,omitempty"`

	EnableEnhancedProfileMgmt bool `xml:"enableEnhancedProfileMgmt,omitempty" json:"enableEnhancedProfileMgmt,omitempty"`

	EnableNewProfileUI bool `xml:"enableNewProfileUI,omitempty" json:"enableNewProfileUI,omitempty"`

	EnableProfileFiltering bool `xml:"enableProfileFiltering,omitempty" json:"enableProfileFiltering,omitempty"`

	EnableRestrictEmailDomains bool `xml:"enableRestrictEmailDomains,omitempty" json:"enableRestrictEmailDomains,omitempty"`

	EnableScrambleUserData bool `xml:"enableScrambleUserData,omitempty" json:"enableScrambleUserData,omitempty"`

	EnableUserSelfDeactivate bool `xml:"enableUserSelfDeactivate,omitempty" json:"enableUserSelfDeactivate,omitempty"`

	PermsetsInFieldCreation bool `xml:"permsetsInFieldCreation,omitempty" json:"permsetsInFieldCreation,omitempty"`

	PsaExpirationUIEnabled bool `xml:"psaExpirationUIEnabled,omitempty" json:"psaExpirationUIEnabled,omitempty"`

	RestrictedProfileCloning bool `xml:"restrictedProfileCloning,omitempty" json:"restrictedProfileCloning,omitempty"`

	UserAccessPoliciesEnabled bool `xml:"userAccessPoliciesEnabled,omitempty" json:"userAccessPoliciesEnabled,omitempty"`
}

type UserProfileSearchScope struct {
	*Metadata

	EntityApiNames []string `xml:"entityApiNames,omitempty" json:"entityApiNames,omitempty"`

	Profile string `xml:"profile,omitempty" json:"profile,omitempty"`
}

type UserProvisioningConfig struct {
	*Metadata

	ApprovalRequired string `xml:"approvalRequired,omitempty" json:"approvalRequired,omitempty"`

	ConnectedApp string `xml:"connectedApp,omitempty" json:"connectedApp,omitempty"`

	Enabled bool `xml:"enabled,omitempty" json:"enabled,omitempty"`

	EnabledOperations string `xml:"enabledOperations,omitempty" json:"enabledOperations,omitempty"`

	Flow string `xml:"flow,omitempty" json:"flow,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	NamedCredential string `xml:"namedCredential,omitempty" json:"namedCredential,omitempty"`

	Notes string `xml:"notes,omitempty" json:"notes,omitempty"`

	OnUpdateAttributes string `xml:"onUpdateAttributes,omitempty" json:"onUpdateAttributes,omitempty"`

	ReconFilter string `xml:"reconFilter,omitempty" json:"reconFilter,omitempty"`

	UserAccountMapping string `xml:"userAccountMapping,omitempty" json:"userAccountMapping,omitempty"`
}

type VoiceSettings struct {
	*Metadata

	EnableCallDisposition bool `xml:"enableCallDisposition,omitempty" json:"enableCallDisposition,omitempty"`

	EnableConsentReminder bool `xml:"enableConsentReminder,omitempty" json:"enableConsentReminder,omitempty"`

	EnableDefaultRecording bool `xml:"enableDefaultRecording,omitempty" json:"enableDefaultRecording,omitempty"`

	EnableVoiceCallList bool `xml:"enableVoiceCallList,omitempty" json:"enableVoiceCallList,omitempty"`

	EnableVoiceCallRecording bool `xml:"enableVoiceCallRecording,omitempty" json:"enableVoiceCallRecording,omitempty"`

	EnableVoiceCoaching bool `xml:"enableVoiceCoaching,omitempty" json:"enableVoiceCoaching,omitempty"`

	EnableVoiceConferencing bool `xml:"enableVoiceConferencing,omitempty" json:"enableVoiceConferencing,omitempty"`

	EnableVoiceLocalPresence bool `xml:"enableVoiceLocalPresence,omitempty" json:"enableVoiceLocalPresence,omitempty"`

	EnableVoiceMail bool `xml:"enableVoiceMail,omitempty" json:"enableVoiceMail,omitempty"`

	EnableVoiceMailDrop bool `xml:"enableVoiceMailDrop,omitempty" json:"enableVoiceMailDrop,omitempty"`
}

type WarrantyLifecycleMgmtSettings struct {
	*Metadata

	EnableWarrantyLCMgmt bool `xml:"enableWarrantyLCMgmt,omitempty" json:"enableWarrantyLCMgmt,omitempty"`
}

type WaveApplication struct {
	*Metadata

	AssetIcon string `xml:"assetIcon,omitempty" json:"assetIcon,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Folder string `xml:"folder,omitempty" json:"folder,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	Shares []*FolderShare `xml:"shares,omitempty" json:"shares,omitempty"`

	TemplateOrigin string `xml:"templateOrigin,omitempty" json:"templateOrigin,omitempty"`

	TemplateVersion string `xml:"templateVersion,omitempty" json:"templateVersion,omitempty"`
}

type WaveDataset struct {
	*Metadata

	Application string `xml:"application,omitempty" json:"application,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	TemplateAssetSourceName string `xml:"templateAssetSourceName,omitempty" json:"templateAssetSourceName,omitempty"`

	Type_ string `xml:"type,omitempty" json:"type,omitempty"`
}

type WaveTemplateBundle struct {
	*Metadata

	AssetIcon string `xml:"assetIcon,omitempty" json:"assetIcon,omitempty"`

	AssetVersion float64 `xml:"assetVersion,omitempty" json:"assetVersion,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	TemplateType string `xml:"templateType,omitempty" json:"templateType,omitempty"`
}

type WaveXmd struct {
	*Metadata

	Application string `xml:"application,omitempty" json:"application,omitempty"`

	Dataset string `xml:"dataset,omitempty" json:"dataset,omitempty"`

	DatasetConnector string `xml:"datasetConnector,omitempty" json:"datasetConnector,omitempty"`

	DatasetFullyQualifiedName string `xml:"datasetFullyQualifiedName,omitempty" json:"datasetFullyQualifiedName,omitempty"`

	Dates []*WaveXmdDate `xml:"dates,omitempty" json:"dates,omitempty"`

	Dimensions []*WaveXmdDimension `xml:"dimensions,omitempty" json:"dimensions,omitempty"`

	Measures []*WaveXmdMeasure `xml:"measures,omitempty" json:"measures,omitempty"`

	Organizations []*WaveXmdOrganization `xml:"organizations,omitempty" json:"organizations,omitempty"`

	Origin string `xml:"origin,omitempty" json:"origin,omitempty"`

	Type_ string `xml:"type,omitempty" json:"type,omitempty"`

	WaveVisualization string `xml:"waveVisualization,omitempty" json:"waveVisualization,omitempty"`
}

type WaveXmdDate struct {
	Alias string `xml:"alias,omitempty" json:"alias,omitempty"`

	Compact bool `xml:"compact,omitempty" json:"compact,omitempty"`

	DateFieldDay string `xml:"dateFieldDay,omitempty" json:"dateFieldDay,omitempty"`

	DateFieldEpochDay string `xml:"dateFieldEpochDay,omitempty" json:"dateFieldEpochDay,omitempty"`

	DateFieldEpochSecond string `xml:"dateFieldEpochSecond,omitempty" json:"dateFieldEpochSecond,omitempty"`

	DateFieldFiscalMonth string `xml:"dateFieldFiscalMonth,omitempty" json:"dateFieldFiscalMonth,omitempty"`

	DateFieldFiscalQuarter string `xml:"dateFieldFiscalQuarter,omitempty" json:"dateFieldFiscalQuarter,omitempty"`

	DateFieldFiscalWeek string `xml:"dateFieldFiscalWeek,omitempty" json:"dateFieldFiscalWeek,omitempty"`

	DateFieldFiscalYear string `xml:"dateFieldFiscalYear,omitempty" json:"dateFieldFiscalYear,omitempty"`

	DateFieldFullYear string `xml:"dateFieldFullYear,omitempty" json:"dateFieldFullYear,omitempty"`

	DateFieldHour string `xml:"dateFieldHour,omitempty" json:"dateFieldHour,omitempty"`

	DateFieldMinute string `xml:"dateFieldMinute,omitempty" json:"dateFieldMinute,omitempty"`

	DateFieldMonth string `xml:"dateFieldMonth,omitempty" json:"dateFieldMonth,omitempty"`

	DateFieldQuarter string `xml:"dateFieldQuarter,omitempty" json:"dateFieldQuarter,omitempty"`

	DateFieldSecond string `xml:"dateFieldSecond,omitempty" json:"dateFieldSecond,omitempty"`

	DateFieldWeek string `xml:"dateFieldWeek,omitempty" json:"dateFieldWeek,omitempty"`

	DateFieldYear string `xml:"dateFieldYear,omitempty" json:"dateFieldYear,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	FirstDayOfWeek int32 `xml:"firstDayOfWeek,omitempty" json:"firstDayOfWeek,omitempty"`

	FiscalMonthOffset int32 `xml:"fiscalMonthOffset,omitempty" json:"fiscalMonthOffset,omitempty"`

	IsYearEndFiscalYear bool `xml:"isYearEndFiscalYear,omitempty" json:"isYearEndFiscalYear,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	ShowInExplorer bool `xml:"showInExplorer,omitempty" json:"showInExplorer,omitempty"`

	SortIndex int32 `xml:"sortIndex,omitempty" json:"sortIndex,omitempty"`

	Type_ string `xml:"type,omitempty" json:"type,omitempty"`
}

type WaveXmdDimension struct {
	ConditionalFormatting []*WaveXmdFormattingProperty `xml:"conditionalFormatting,omitempty" json:"conditionalFormatting,omitempty"`

	CustomActions []*WaveXmdDimensionCustomAction `xml:"customActions,omitempty" json:"customActions,omitempty"`

	CustomActionsEnabled bool `xml:"customActionsEnabled,omitempty" json:"customActionsEnabled,omitempty"`

	DateFormat string `xml:"dateFormat,omitempty" json:"dateFormat,omitempty"`

	DefaultAction string `xml:"defaultAction,omitempty" json:"defaultAction,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Field string `xml:"field,omitempty" json:"field,omitempty"`

	FullyQualifiedName string `xml:"fullyQualifiedName,omitempty" json:"fullyQualifiedName,omitempty"`

	ImageTemplate string `xml:"imageTemplate,omitempty" json:"imageTemplate,omitempty"`

	IsDerived bool `xml:"isDerived,omitempty" json:"isDerived,omitempty"`

	IsMultiValue bool `xml:"isMultiValue,omitempty" json:"isMultiValue,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	LinkTemplate string `xml:"linkTemplate,omitempty" json:"linkTemplate,omitempty"`

	LinkTemplateEnabled bool `xml:"linkTemplateEnabled,omitempty" json:"linkTemplateEnabled,omitempty"`

	LinkTooltip string `xml:"linkTooltip,omitempty" json:"linkTooltip,omitempty"`

	Members []*WaveXmdDimensionMember `xml:"members,omitempty" json:"members,omitempty"`

	Origin string `xml:"origin,omitempty" json:"origin,omitempty"`

	RecordDisplayFields []*WaveXmdRecordDisplayLookup `xml:"recordDisplayFields,omitempty" json:"recordDisplayFields,omitempty"`

	RecordIdField string `xml:"recordIdField,omitempty" json:"recordIdField,omitempty"`

	RecordOrganizationIdField string `xml:"recordOrganizationIdField,omitempty" json:"recordOrganizationIdField,omitempty"`

	SalesforceActions []*WaveXmdDimensionSalesforceAction `xml:"salesforceActions,omitempty" json:"salesforceActions,omitempty"`

	SalesforceActionsEnabled bool `xml:"salesforceActionsEnabled,omitempty" json:"salesforceActionsEnabled,omitempty"`

	ShowDetailsDefaultFieldIndex int32 `xml:"showDetailsDefaultFieldIndex,omitempty" json:"showDetailsDefaultFieldIndex,omitempty"`

	ShowInExplorer bool `xml:"showInExplorer,omitempty" json:"showInExplorer,omitempty"`

	SortIndex int32 `xml:"sortIndex,omitempty" json:"sortIndex,omitempty"`
}

type WaveXmdFormattingProperty struct {
	FormattingBins []*WaveXmdFormattingBin `xml:"formattingBins,omitempty" json:"formattingBins,omitempty"`

	FormattingPredicates []*WaveXmdFormattingPredicate `xml:"formattingPredicates,omitempty" json:"formattingPredicates,omitempty"`

	Property string `xml:"property,omitempty" json:"property,omitempty"`

	ReferenceField string `xml:"referenceField,omitempty" json:"referenceField,omitempty"`

	SortIndex int32 `xml:"sortIndex,omitempty" json:"sortIndex,omitempty"`

	Type_ string `xml:"type,omitempty" json:"type,omitempty"`
}

type WaveXmdFormattingBin struct {
	Bin string `xml:"bin,omitempty" json:"bin,omitempty"`

	FormatValue string `xml:"formatValue,omitempty" json:"formatValue,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	SortIndex int32 `xml:"sortIndex,omitempty" json:"sortIndex,omitempty"`
}

type WaveXmdFormattingPredicate struct {
	FormatValue string `xml:"formatValue,omitempty" json:"formatValue,omitempty"`

	Operator string `xml:"operator,omitempty" json:"operator,omitempty"`

	SortIndex int32 `xml:"sortIndex,omitempty" json:"sortIndex,omitempty"`

	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type WaveXmdDimensionCustomAction struct {
	CustomActionName string `xml:"customActionName,omitempty" json:"customActionName,omitempty"`

	Enabled bool `xml:"enabled,omitempty" json:"enabled,omitempty"`

	Icon string `xml:"icon,omitempty" json:"icon,omitempty"`

	Method string `xml:"method,omitempty" json:"method,omitempty"`

	SortIndex int32 `xml:"sortIndex,omitempty" json:"sortIndex,omitempty"`

	Target string `xml:"target,omitempty" json:"target,omitempty"`

	Tooltip string `xml:"tooltip,omitempty" json:"tooltip,omitempty"`

	Url string `xml:"url,omitempty" json:"url,omitempty"`
}

type WaveXmdDimensionMember struct {
	Color string `xml:"color,omitempty" json:"color,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Member string `xml:"member,omitempty" json:"member,omitempty"`

	SortIndex int32 `xml:"sortIndex,omitempty" json:"sortIndex,omitempty"`
}

type WaveXmdRecordDisplayLookup struct {
	RecordDisplayField string `xml:"recordDisplayField,omitempty" json:"recordDisplayField,omitempty"`

	SortIndex int32 `xml:"sortIndex,omitempty" json:"sortIndex,omitempty"`
}

type WaveXmdDimensionSalesforceAction struct {
	Enabled bool `xml:"enabled,omitempty" json:"enabled,omitempty"`

	SalesforceActionName string `xml:"salesforceActionName,omitempty" json:"salesforceActionName,omitempty"`

	SortIndex int32 `xml:"sortIndex,omitempty" json:"sortIndex,omitempty"`
}

type WaveXmdMeasure struct {
	ConditionalFormatting []*WaveXmdFormattingProperty `xml:"conditionalFormatting,omitempty" json:"conditionalFormatting,omitempty"`

	Currencies []*WaveXmdMeasure `xml:"currencies,omitempty" json:"currencies,omitempty"`

	CurrencyCode string `xml:"currencyCode,omitempty" json:"currencyCode,omitempty"`

	DateFormat string `xml:"dateFormat,omitempty" json:"dateFormat,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Field string `xml:"field,omitempty" json:"field,omitempty"`

	FormatCustomFormat string `xml:"formatCustomFormat,omitempty" json:"formatCustomFormat,omitempty"`

	FormatDecimalDigits int32 `xml:"formatDecimalDigits,omitempty" json:"formatDecimalDigits,omitempty"`

	FormatDecimalSeparator string `xml:"formatDecimalSeparator,omitempty" json:"formatDecimalSeparator,omitempty"`

	FormatIsNegativeParens bool `xml:"formatIsNegativeParens,omitempty" json:"formatIsNegativeParens,omitempty"`

	FormatPrefix string `xml:"formatPrefix,omitempty" json:"formatPrefix,omitempty"`

	FormatSuffix string `xml:"formatSuffix,omitempty" json:"formatSuffix,omitempty"`

	FormatThousandsSeparator string `xml:"formatThousandsSeparator,omitempty" json:"formatThousandsSeparator,omitempty"`

	FormatUnit string `xml:"formatUnit,omitempty" json:"formatUnit,omitempty"`

	FormatUnitMultiplier float64 `xml:"formatUnitMultiplier,omitempty" json:"formatUnitMultiplier,omitempty"`

	FullyQualifiedName string `xml:"fullyQualifiedName,omitempty" json:"fullyQualifiedName,omitempty"`

	IsDerived bool `xml:"isDerived,omitempty" json:"isDerived,omitempty"`

	IsMultiCurrency bool `xml:"isMultiCurrency,omitempty" json:"isMultiCurrency,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Origin string `xml:"origin,omitempty" json:"origin,omitempty"`

	ShowDetailsDefaultFieldIndex int32 `xml:"showDetailsDefaultFieldIndex,omitempty" json:"showDetailsDefaultFieldIndex,omitempty"`

	ShowInExplorer bool `xml:"showInExplorer,omitempty" json:"showInExplorer,omitempty"`

	SortIndex int32 `xml:"sortIndex,omitempty" json:"sortIndex,omitempty"`
}

type WaveXmdOrganization struct {
	InstanceUrl string `xml:"instanceUrl,omitempty" json:"instanceUrl,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	OrganizationIdentifier string `xml:"organizationIdentifier,omitempty" json:"organizationIdentifier,omitempty"`

	SortIndex int32 `xml:"sortIndex,omitempty" json:"sortIndex,omitempty"`
}

type WebStoreBundle struct {
	*Metadata

	AutoFacetingEnabled bool `xml:"autoFacetingEnabled,omitempty" json:"autoFacetingEnabled,omitempty"`

	CartToOrderAutoCustomFieldMapping bool `xml:"cartToOrderAutoCustomFieldMapping,omitempty" json:"cartToOrderAutoCustomFieldMapping,omitempty"`

	CommerceEinsteinActivitiesTracked bool `xml:"commerceEinsteinActivitiesTracked,omitempty" json:"commerceEinsteinActivitiesTracked,omitempty"`

	CommerceEinsteinDeployed bool `xml:"commerceEinsteinDeployed,omitempty" json:"commerceEinsteinDeployed,omitempty"`

	Country *CountryIsoCode `xml:"country,omitempty" json:"country,omitempty"`

	DefaultCurrency string `xml:"defaultCurrency,omitempty" json:"defaultCurrency,omitempty"`

	DefaultLanguage string `xml:"defaultLanguage,omitempty" json:"defaultLanguage,omitempty"`

	DefaultTaxLocaleType *TaxLocaleType `xml:"defaultTaxLocaleType,omitempty" json:"defaultTaxLocaleType,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	GuestBrowsingEnabled bool `xml:"guestBrowsingEnabled,omitempty" json:"guestBrowsingEnabled,omitempty"`

	GuestCartTimeToLive int32 `xml:"guestCartTimeToLive,omitempty" json:"guestCartTimeToLive,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	OrderLifeCycleType *OrderLifeCycleType `xml:"orderLifeCycleType,omitempty" json:"orderLifeCycleType,omitempty"`

	PricingStrategy *PricingStrategy `xml:"pricingStrategy,omitempty" json:"pricingStrategy,omitempty"`

	ProductGrouping *ProductGrouping `xml:"productGrouping,omitempty" json:"productGrouping,omitempty"`

	SkipAdditionalEntitlementCheckForSearch bool `xml:"skipAdditionalEntitlementCheckForSearch,omitempty" json:"skipAdditionalEntitlementCheckForSearch,omitempty"`

	SkuDetectionEnabled bool `xml:"skuDetectionEnabled,omitempty" json:"skuDetectionEnabled,omitempty"`

	StoreName string `xml:"storeName,omitempty" json:"storeName,omitempty"`

	SupportedCurrencies string `xml:"supportedCurrencies,omitempty" json:"supportedCurrencies,omitempty"`

	SupportedLanguages string `xml:"supportedLanguages,omitempty" json:"supportedLanguages,omitempty"`

	SupportedShipToCountries string `xml:"supportedShipToCountries,omitempty" json:"supportedShipToCountries,omitempty"`

	Type_ *WebStoreType `xml:"type,omitempty" json:"type,omitempty"`
}

type WebStoreTemplate struct {
	*Metadata

	AutoFacetingEnabled bool `xml:"autoFacetingEnabled,omitempty" json:"autoFacetingEnabled,omitempty"`

	CartAsyncProcessingEnabled bool `xml:"cartAsyncProcessingEnabled,omitempty" json:"cartAsyncProcessingEnabled,omitempty"`

	CartCalculateEnabled bool `xml:"cartCalculateEnabled,omitempty" json:"cartCalculateEnabled,omitempty"`

	CartToOrderAutoCustomFieldMapping bool `xml:"cartToOrderAutoCustomFieldMapping,omitempty" json:"cartToOrderAutoCustomFieldMapping,omitempty"`

	CheckoutTimeToLive int32 `xml:"checkoutTimeToLive,omitempty" json:"checkoutTimeToLive,omitempty"`

	CheckoutValidAfterDate soap.XSDDateTime `xml:"checkoutValidAfterDate,omitempty" json:"checkoutValidAfterDate,omitempty"`

	CommerceEinsteinActivitiesTracked bool `xml:"commerceEinsteinActivitiesTracked,omitempty" json:"commerceEinsteinActivitiesTracked,omitempty"`

	CommerceEinsteinDeployed bool `xml:"commerceEinsteinDeployed,omitempty" json:"commerceEinsteinDeployed,omitempty"`

	Country *CountryIsoCode `xml:"country,omitempty" json:"country,omitempty"`

	DefaultCurrency string `xml:"defaultCurrency,omitempty" json:"defaultCurrency,omitempty"`

	DefaultLanguage string `xml:"defaultLanguage,omitempty" json:"defaultLanguage,omitempty"`

	DefaultTaxLocaleType *TaxLocaleType `xml:"defaultTaxLocaleType,omitempty" json:"defaultTaxLocaleType,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DuplicateCartItemsEnabled bool `xml:"duplicateCartItemsEnabled,omitempty" json:"duplicateCartItemsEnabled,omitempty"`

	GuestBrowsingEnabled bool `xml:"guestBrowsingEnabled,omitempty" json:"guestBrowsingEnabled,omitempty"`

	GuestCartEnabled bool `xml:"guestCartEnabled,omitempty" json:"guestCartEnabled,omitempty"`

	GuestCartTimeToLive int32 `xml:"guestCartTimeToLive,omitempty" json:"guestCartTimeToLive,omitempty"`

	GuestCheckoutEnabled bool `xml:"guestCheckoutEnabled,omitempty" json:"guestCheckoutEnabled,omitempty"`

	MasterLabel string `xml:"masterLabel,omitempty" json:"masterLabel,omitempty"`

	MaxValuesPerFacet int32 `xml:"maxValuesPerFacet,omitempty" json:"maxValuesPerFacet,omitempty"`

	OrderActivationStatus string `xml:"orderActivationStatus,omitempty" json:"orderActivationStatus,omitempty"`

	OrderLifeCycleType *OrderLifeCycleType `xml:"orderLifeCycleType,omitempty" json:"orderLifeCycleType,omitempty"`

	PaginationSize int32 `xml:"paginationSize,omitempty" json:"paginationSize,omitempty"`

	PricingStrategy *PricingStrategy `xml:"pricingStrategy,omitempty" json:"pricingStrategy,omitempty"`

	ProductGrouping *ProductGrouping `xml:"productGrouping,omitempty" json:"productGrouping,omitempty"`

	SkipAdditionalEntitlementCheckForSearch bool `xml:"skipAdditionalEntitlementCheckForSearch,omitempty" json:"skipAdditionalEntitlementCheckForSearch,omitempty"`

	SkuDetectionEnabled bool `xml:"skuDetectionEnabled,omitempty" json:"skuDetectionEnabled,omitempty"`

	SupportedCurrencies string `xml:"supportedCurrencies,omitempty" json:"supportedCurrencies,omitempty"`

	SupportedLanguages string `xml:"supportedLanguages,omitempty" json:"supportedLanguages,omitempty"`

	SupportedShipToCountries string `xml:"supportedShipToCountries,omitempty" json:"supportedShipToCountries,omitempty"`

	Type_ *WebStoreType `xml:"type,omitempty" json:"type,omitempty"`
}

type WebToXSettings struct {
	*Metadata

	ShouldHideRecordInfoInEmail bool `xml:"shouldHideRecordInfoInEmail,omitempty" json:"shouldHideRecordInfoInEmail,omitempty"`

	WebToCaseSpamFilter bool `xml:"webToCaseSpamFilter,omitempty" json:"webToCaseSpamFilter,omitempty"`

	WebToLeadSpamFilter bool `xml:"webToLeadSpamFilter,omitempty" json:"webToLeadSpamFilter,omitempty"`
}

type WorkDotComSettings struct {
	*Metadata

	EnableCoachingManagerGroupAccess bool `xml:"enableCoachingManagerGroupAccess,omitempty" json:"enableCoachingManagerGroupAccess,omitempty"`

	EnableGoalManagerGroupAccess bool `xml:"enableGoalManagerGroupAccess,omitempty" json:"enableGoalManagerGroupAccess,omitempty"`

	EnableProfileSkills bool `xml:"enableProfileSkills,omitempty" json:"enableProfileSkills,omitempty"`

	EnableProfileSkillsAddFeedPost bool `xml:"enableProfileSkillsAddFeedPost,omitempty" json:"enableProfileSkillsAddFeedPost,omitempty"`

	EnableProfileSkillsAutoSuggest bool `xml:"enableProfileSkillsAutoSuggest,omitempty" json:"enableProfileSkillsAutoSuggest,omitempty"`

	EnableProfileSkillsUsePlatform bool `xml:"enableProfileSkillsUsePlatform,omitempty" json:"enableProfileSkillsUsePlatform,omitempty"`

	EnableWorkBadgeDefRestrictPref bool `xml:"enableWorkBadgeDefRestrictPref,omitempty" json:"enableWorkBadgeDefRestrictPref,omitempty"`

	EnableWorkCalibration bool `xml:"enableWorkCalibration,omitempty" json:"enableWorkCalibration,omitempty"`

	EnableWorkCanvasPref bool `xml:"enableWorkCanvasPref,omitempty" json:"enableWorkCanvasPref,omitempty"`

	EnableWorkCertification bool `xml:"enableWorkCertification,omitempty" json:"enableWorkCertification,omitempty"`

	EnableWorkCertificationNotification bool `xml:"enableWorkCertificationNotification,omitempty" json:"enableWorkCertificationNotification,omitempty"`

	EnableWorkRewardsPref bool `xml:"enableWorkRewardsPref,omitempty" json:"enableWorkRewardsPref,omitempty"`

	EnableWorkThanksPref bool `xml:"enableWorkThanksPref,omitempty" json:"enableWorkThanksPref,omitempty"`

	EnableWorkUseObjectivesForGoals bool `xml:"enableWorkUseObjectivesForGoals,omitempty" json:"enableWorkUseObjectivesForGoals,omitempty"`
}

type Workflow struct {
	*Metadata

	Alerts []*WorkflowAlert `xml:"alerts,omitempty" json:"alerts,omitempty"`

	FieldUpdates []*WorkflowFieldUpdate `xml:"fieldUpdates,omitempty" json:"fieldUpdates,omitempty"`

	FlowActions []*WorkflowFlowAction `xml:"flowActions,omitempty" json:"flowActions,omitempty"`

	KnowledgePublishes []*WorkflowKnowledgePublish `xml:"knowledgePublishes,omitempty" json:"knowledgePublishes,omitempty"`

	OutboundMessages []*WorkflowOutboundMessage `xml:"outboundMessages,omitempty" json:"outboundMessages,omitempty"`

	Rules []*WorkflowRule `xml:"rules,omitempty" json:"rules,omitempty"`

	Send []*WorkflowSend `xml:"send,omitempty" json:"send,omitempty"`

	Tasks []*WorkflowTask `xml:"tasks,omitempty" json:"tasks,omitempty"`
}

type WorkflowAlert struct {
	*WorkflowAction

	CcEmails []string `xml:"ccEmails,omitempty" json:"ccEmails,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Protected bool `xml:"protected,omitempty" json:"protected,omitempty"`

	Recipients []*WorkflowEmailRecipient `xml:"recipients,omitempty" json:"recipients,omitempty"`

	SenderAddress string `xml:"senderAddress,omitempty" json:"senderAddress,omitempty"`

	SenderType *ActionEmailSenderType `xml:"senderType,omitempty" json:"senderType,omitempty"`

	Template string `xml:"template,omitempty" json:"template,omitempty"`
}

type WorkflowAction struct {
	*Metadata
}

type WorkflowFieldUpdate struct {
	*WorkflowAction

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Field string `xml:"field,omitempty" json:"field,omitempty"`

	Formula string `xml:"formula,omitempty" json:"formula,omitempty"`

	LiteralValue string `xml:"literalValue,omitempty" json:"literalValue,omitempty"`

	LookupValue string `xml:"lookupValue,omitempty" json:"lookupValue,omitempty"`

	LookupValueType *LookupValueType `xml:"lookupValueType,omitempty" json:"lookupValueType,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	NotifyAssignee bool `xml:"notifyAssignee,omitempty" json:"notifyAssignee,omitempty"`

	Operation *FieldUpdateOperation `xml:"operation,omitempty" json:"operation,omitempty"`

	Protected bool `xml:"protected,omitempty" json:"protected,omitempty"`

	ReevaluateOnChange bool `xml:"reevaluateOnChange,omitempty" json:"reevaluateOnChange,omitempty"`

	TargetObject string `xml:"targetObject,omitempty" json:"targetObject,omitempty"`
}

type WorkflowFlowAction struct {
	*WorkflowAction

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Flow string `xml:"flow,omitempty" json:"flow,omitempty"`

	FlowInputs []*WorkflowFlowActionParameter `xml:"flowInputs,omitempty" json:"flowInputs,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Language string `xml:"language,omitempty" json:"language,omitempty"`

	Protected bool `xml:"protected,omitempty" json:"protected,omitempty"`
}

type WorkflowFlowActionParameter struct {
	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type WorkflowKnowledgePublish struct {
	*WorkflowAction

	Action *KnowledgeWorkflowAction `xml:"action,omitempty" json:"action,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Language string `xml:"language,omitempty" json:"language,omitempty"`

	Protected bool `xml:"protected,omitempty" json:"protected,omitempty"`
}

type WorkflowOutboundMessage struct {
	*WorkflowAction

	ApiVersion float64 `xml:"apiVersion,omitempty" json:"apiVersion,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	EndpointUrl string `xml:"endpointUrl,omitempty" json:"endpointUrl,omitempty"`

	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`

	IncludeSessionId bool `xml:"includeSessionId,omitempty" json:"includeSessionId,omitempty"`

	IntegrationUser string `xml:"integrationUser,omitempty" json:"integrationUser,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Protected bool `xml:"protected,omitempty" json:"protected,omitempty"`

	UseDeadLetterQueue bool `xml:"useDeadLetterQueue,omitempty" json:"useDeadLetterQueue,omitempty"`
}

type WorkflowSend struct {
	*WorkflowAction

	Action *SendAction `xml:"action,omitempty" json:"action,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Language string `xml:"language,omitempty" json:"language,omitempty"`

	Protected bool `xml:"protected,omitempty" json:"protected,omitempty"`
}

type WorkflowTask struct {
	*WorkflowAction

	AssignedTo string `xml:"assignedTo,omitempty" json:"assignedTo,omitempty"`

	AssignedToType *ActionTaskAssignedToTypes `xml:"assignedToType,omitempty" json:"assignedToType,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DueDateOffset int32 `xml:"dueDateOffset,omitempty" json:"dueDateOffset,omitempty"`

	NotifyAssignee bool `xml:"notifyAssignee,omitempty" json:"notifyAssignee,omitempty"`

	OffsetFromField string `xml:"offsetFromField,omitempty" json:"offsetFromField,omitempty"`

	Priority string `xml:"priority,omitempty" json:"priority,omitempty"`

	Protected bool `xml:"protected,omitempty" json:"protected,omitempty"`

	Status string `xml:"status,omitempty" json:"status,omitempty"`

	Subject string `xml:"subject,omitempty" json:"subject,omitempty"`
}

type WorkflowEmailRecipient struct {
	Field string `xml:"field,omitempty" json:"field,omitempty"`

	Recipient string `xml:"recipient,omitempty" json:"recipient,omitempty"`

	Type_ *ActionEmailRecipientTypes `xml:"type,omitempty" json:"type,omitempty"`
}

type WorkflowRule struct {
	*Metadata

	Actions []*WorkflowActionReference `xml:"actions,omitempty" json:"actions,omitempty"`

	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	BooleanFilter string `xml:"booleanFilter,omitempty" json:"booleanFilter,omitempty"`

	CriteriaItems []*FilterItem `xml:"criteriaItems,omitempty" json:"criteriaItems,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	FailedMigrationToolVersion string `xml:"failedMigrationToolVersion,omitempty" json:"failedMigrationToolVersion,omitempty"`

	Formula string `xml:"formula,omitempty" json:"formula,omitempty"`

	TriggerType *WorkflowTriggerTypes `xml:"triggerType,omitempty" json:"triggerType,omitempty"`

	WorkflowTimeTriggers []*WorkflowTimeTrigger `xml:"workflowTimeTriggers,omitempty" json:"workflowTimeTriggers,omitempty"`
}

type WorkflowTimeTrigger struct {
	Actions []*WorkflowActionReference `xml:"actions,omitempty" json:"actions,omitempty"`

	OffsetFromField string `xml:"offsetFromField,omitempty" json:"offsetFromField,omitempty"`

	TimeLength string `xml:"timeLength,omitempty" json:"timeLength,omitempty"`

	WorkflowTimeTriggerUnit *WorkflowTimeUnits `xml:"workflowTimeTriggerUnit,omitempty" json:"workflowTimeTriggerUnit,omitempty"`
}

type SaveResult struct {
	Errors []*Error `xml:"errors,omitempty" json:"errors,omitempty"`

	FullName string `xml:"fullName,omitempty" json:"fullName,omitempty"`

	Success bool `xml:"success,omitempty" json:"success,omitempty"`
}

type Error struct {
	ExtendedErrorDetails []*ExtendedErrorDetails `xml:"extendedErrorDetails,omitempty" json:"extendedErrorDetails,omitempty"`

	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`

	Message string `xml:"message,omitempty" json:"message,omitempty"`

	StatusCode *StatusCode `xml:"statusCode,omitempty" json:"statusCode,omitempty"`
}

type ExtendedErrorDetails struct {
	ExtendedErrorCode *ExtendedErrorCode `xml:"extendedErrorCode,omitempty" json:"extendedErrorCode,omitempty"`

	Items []string `xml:",any" json:"items,omitempty"`
}

type DeleteResult struct {
	Errors []*Error `xml:"errors,omitempty" json:"errors,omitempty"`

	FullName string `xml:"fullName,omitempty" json:"fullName,omitempty"`

	Success bool `xml:"success,omitempty" json:"success,omitempty"`
}

type DeployOptions struct {
	AllowMissingFiles bool `xml:"allowMissingFiles,omitempty" json:"allowMissingFiles,omitempty"`

	AutoUpdatePackage bool `xml:"autoUpdatePackage,omitempty" json:"autoUpdatePackage,omitempty"`

	CheckOnly bool `xml:"checkOnly,omitempty" json:"checkOnly,omitempty"`

	IgnoreWarnings bool `xml:"ignoreWarnings,omitempty" json:"ignoreWarnings,omitempty"`

	PerformRetrieve bool `xml:"performRetrieve,omitempty" json:"performRetrieve,omitempty"`

	PurgeOnDelete bool `xml:"purgeOnDelete,omitempty" json:"purgeOnDelete,omitempty"`

	RollbackOnError bool `xml:"rollbackOnError,omitempty" json:"rollbackOnError,omitempty"`

	RunTests []string `xml:"runTests,omitempty" json:"runTests,omitempty"`

	SinglePackage bool `xml:"singlePackage,omitempty" json:"singlePackage,omitempty"`

	TestLevel *TestLevel `xml:"testLevel,omitempty" json:"testLevel,omitempty"`
}

type AsyncResult struct {
	Done bool `xml:"done,omitempty" json:"done,omitempty"`

	Id *ID `xml:"id,omitempty" json:"id,omitempty"`

	Message string `xml:"message,omitempty" json:"message,omitempty"`

	State *AsyncRequestState `xml:"state,omitempty" json:"state,omitempty"`

	StatusCode *StatusCode `xml:"statusCode,omitempty" json:"statusCode,omitempty"`
}

type DescribeMetadataResult struct {
	MetadataObjects []*DescribeMetadataObject `xml:"metadataObjects,omitempty" json:"metadataObjects,omitempty"`

	OrganizationNamespace string `xml:"organizationNamespace,omitempty" json:"organizationNamespace,omitempty"`

	PartialSaveAllowed bool `xml:"partialSaveAllowed,omitempty" json:"partialSaveAllowed,omitempty"`

	TestRequired bool `xml:"testRequired,omitempty" json:"testRequired,omitempty"`
}

type DescribeMetadataObject struct {
	ChildXmlNames []string `xml:"childXmlNames,omitempty" json:"childXmlNames,omitempty"`

	DirectoryName string `xml:"directoryName,omitempty" json:"directoryName,omitempty"`

	InFolder bool `xml:"inFolder,omitempty" json:"inFolder,omitempty"`

	MetaFile bool `xml:"metaFile,omitempty" json:"metaFile,omitempty"`

	Suffix string `xml:"suffix,omitempty" json:"suffix,omitempty"`

	XmlName string `xml:"xmlName,omitempty" json:"xmlName,omitempty"`
}

type DescribeValueTypeResult struct {
	ApiCreatable bool `xml:"apiCreatable,omitempty" json:"apiCreatable,omitempty"`

	ApiDeletable bool `xml:"apiDeletable,omitempty" json:"apiDeletable,omitempty"`

	ApiReadable bool `xml:"apiReadable,omitempty" json:"apiReadable,omitempty"`

	ApiUpdatable bool `xml:"apiUpdatable,omitempty" json:"apiUpdatable,omitempty"`

	ParentField *ValueTypeField `xml:"parentField,omitempty" json:"parentField,omitempty"`

	ValueTypeFields []*ValueTypeField `xml:"valueTypeFields,omitempty" json:"valueTypeFields,omitempty"`
}

type ValueTypeField struct {
	Fields []*ValueTypeField `xml:"fields,omitempty" json:"fields,omitempty"`

	ForeignKeyDomain []string `xml:"foreignKeyDomain,omitempty" json:"foreignKeyDomain,omitempty"`

	IsForeignKey bool `xml:"isForeignKey,omitempty" json:"isForeignKey,omitempty"`

	IsNameField bool `xml:"isNameField,omitempty" json:"isNameField,omitempty"`

	MinOccurs int32 `xml:"minOccurs,omitempty" json:"minOccurs,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	PicklistValues []*PicklistEntry `xml:"picklistValues,omitempty" json:"picklistValues,omitempty"`

	SoapType string `xml:"soapType,omitempty" json:"soapType,omitempty"`

	ValueRequired bool `xml:"valueRequired,omitempty" json:"valueRequired,omitempty"`
}

type PicklistEntry struct {
	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	DefaultValue bool `xml:"defaultValue,omitempty" json:"defaultValue,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`

	ValidFor string `xml:"validFor,omitempty" json:"validFor,omitempty"`

	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type ListMetadataQuery struct {
	Folder string `xml:"folder,omitempty" json:"folder,omitempty"`

	Type_ string `xml:"type,omitempty" json:"type,omitempty"`
}

type ReadResult struct {
	Records []*Metadata `xml:"records,omitempty" json:"records,omitempty"`
}

type RetrieveRequest struct {
	ApiVersion float64 `xml:"apiVersion,omitempty" json:"apiVersion,omitempty"`

	PackageNames []string `xml:"packageNames,omitempty" json:"packageNames,omitempty"`

	SinglePackage bool `xml:"singlePackage,omitempty" json:"singlePackage,omitempty"`

	SpecificFiles []string `xml:"specificFiles,omitempty" json:"specificFiles,omitempty"`

	Unpackaged *Package `xml:"unpackaged,omitempty" json:"unpackaged,omitempty"`
}

type UpsertResult struct {
	Created bool `xml:"created,omitempty" json:"created,omitempty"`

	Errors []*Error `xml:"errors,omitempty" json:"errors,omitempty"`

	FullName string `xml:"fullName,omitempty" json:"fullName,omitempty"`

	Success bool `xml:"success,omitempty" json:"success,omitempty"`
}

type LogInfo struct {
	Category *LogCategory `xml:"category,omitempty" json:"category,omitempty"`

	Level *LogCategoryLevel `xml:"level,omitempty" json:"level,omitempty"`
}

type MetadataPortType interface {

	/* Cancels a metadata deploy. */
	CancelDeploy(request *CancelDeploy) (*CancelDeployResponse, error)

	CancelDeployContext(ctx context.Context, request *CancelDeploy) (*CancelDeployResponse, error)

	/* Check the current status of an asyncronous deploy call. */
	CheckDeployStatus(request *CheckDeployStatus) (*CheckDeployStatusResponse, error)

	CheckDeployStatusContext(ctx context.Context, request *CheckDeployStatus) (*CheckDeployStatusResponse, error)

	/* Check the current status of an asyncronous deploy call. */
	CheckRetrieveStatus(request *CheckRetrieveStatus) (*CheckRetrieveStatusResponse, error)

	CheckRetrieveStatusContext(ctx context.Context, request *CheckRetrieveStatus) (*CheckRetrieveStatusResponse, error)

	/* Creates metadata entries synchronously. */
	CreateMetadata(request *CreateMetadata) (*CreateMetadataResponse, error)

	CreateMetadataContext(ctx context.Context, request *CreateMetadata) (*CreateMetadataResponse, error)

	/* Deletes metadata entries synchronously. */
	DeleteMetadata(request *DeleteMetadata) (*DeleteMetadataResponse, error)

	DeleteMetadataContext(ctx context.Context, request *DeleteMetadata) (*DeleteMetadataResponse, error)

	/* Deploys a zipfile full of metadata entries asynchronously. */
	Deploy(request *Deploy) (*DeployResponse, error)

	DeployContext(ctx context.Context, request *Deploy) (*DeployResponse, error)

	/* Deploys a previously validated payload without running tests. */
	DeployRecentValidation(request *DeployRecentValidation) (*DeployRecentValidationResponse, error)

	DeployRecentValidationContext(ctx context.Context, request *DeployRecentValidation) (*DeployRecentValidationResponse, error)

	/* Describes features of the metadata API. */
	DescribeMetadata(request *DescribeMetadata) (*DescribeMetadataResponse, error)

	DescribeMetadataContext(ctx context.Context, request *DescribeMetadata) (*DescribeMetadataResponse, error)

	/* Describe a complex value type */
	DescribeValueType(request *DescribeValueType) (*DescribeValueTypeResponse, error)

	DescribeValueTypeContext(ctx context.Context, request *DescribeValueType) (*DescribeValueTypeResponse, error)

	/* Lists the available metadata components. */
	ListMetadata(request *ListMetadata) (*ListMetadataResponse, error)

	ListMetadataContext(ctx context.Context, request *ListMetadata) (*ListMetadataResponse, error)

	/* Reads metadata entries synchronously. */
	ReadMetadata(request *ReadMetadata) (*ReadMetadataResponse, error)

	ReadMetadataContext(ctx context.Context, request *ReadMetadata) (*ReadMetadataResponse, error)

	/* Renames a metadata entry synchronously. */
	RenameMetadata(request *RenameMetadata) (*RenameMetadataResponse, error)

	RenameMetadataContext(ctx context.Context, request *RenameMetadata) (*RenameMetadataResponse, error)

	/* Retrieves a set of individually specified metadata entries. */
	Retrieve(request *Retrieve) (*RetrieveResponse, error)

	RetrieveContext(ctx context.Context, request *Retrieve) (*RetrieveResponse, error)

	/* Updates metadata entries synchronously. */
	UpdateMetadata(request *UpdateMetadata) (*UpdateMetadataResponse, error)

	UpdateMetadataContext(ctx context.Context, request *UpdateMetadata) (*UpdateMetadataResponse, error)

	/* Upserts metadata entries synchronously. */
	UpsertMetadata(request *UpsertMetadata) (*UpsertMetadataResponse, error)

	UpsertMetadataContext(ctx context.Context, request *UpsertMetadata) (*UpsertMetadataResponse, error)
}

type metadataPortType struct {
	client *soap.Client
}

func NewMetadataPortType(client *soap.Client) MetadataPortType {
	return &metadataPortType{
		client: client,
	}
}

func (service *metadataPortType) CancelDeployContext(ctx context.Context, request *CancelDeploy) (*CancelDeployResponse, error) {
	response := new(CancelDeployResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *metadataPortType) CancelDeploy(request *CancelDeploy) (*CancelDeployResponse, error) {
	return service.CancelDeployContext(
		context.Background(),
		request,
	)
}

func (service *metadataPortType) CheckDeployStatusContext(ctx context.Context, request *CheckDeployStatus) (*CheckDeployStatusResponse, error) {
	response := new(CheckDeployStatusResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *metadataPortType) CheckDeployStatus(request *CheckDeployStatus) (*CheckDeployStatusResponse, error) {
	return service.CheckDeployStatusContext(
		context.Background(),
		request,
	)
}

func (service *metadataPortType) CheckRetrieveStatusContext(ctx context.Context, request *CheckRetrieveStatus) (*CheckRetrieveStatusResponse, error) {
	response := new(CheckRetrieveStatusResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *metadataPortType) CheckRetrieveStatus(request *CheckRetrieveStatus) (*CheckRetrieveStatusResponse, error) {
	return service.CheckRetrieveStatusContext(
		context.Background(),
		request,
	)
}

func (service *metadataPortType) CreateMetadataContext(ctx context.Context, request *CreateMetadata) (*CreateMetadataResponse, error) {
	response := new(CreateMetadataResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *metadataPortType) CreateMetadata(request *CreateMetadata) (*CreateMetadataResponse, error) {
	return service.CreateMetadataContext(
		context.Background(),
		request,
	)
}

func (service *metadataPortType) DeleteMetadataContext(ctx context.Context, request *DeleteMetadata) (*DeleteMetadataResponse, error) {
	response := new(DeleteMetadataResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *metadataPortType) DeleteMetadata(request *DeleteMetadata) (*DeleteMetadataResponse, error) {
	return service.DeleteMetadataContext(
		context.Background(),
		request,
	)
}

func (service *metadataPortType) DeployContext(ctx context.Context, request *Deploy) (*DeployResponse, error) {
	response := new(DeployResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *metadataPortType) Deploy(request *Deploy) (*DeployResponse, error) {
	return service.DeployContext(
		context.Background(),
		request,
	)
}

func (service *metadataPortType) DeployRecentValidationContext(ctx context.Context, request *DeployRecentValidation) (*DeployRecentValidationResponse, error) {
	response := new(DeployRecentValidationResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *metadataPortType) DeployRecentValidation(request *DeployRecentValidation) (*DeployRecentValidationResponse, error) {
	return service.DeployRecentValidationContext(
		context.Background(),
		request,
	)
}

func (service *metadataPortType) DescribeMetadataContext(ctx context.Context, request *DescribeMetadata) (*DescribeMetadataResponse, error) {
	response := new(DescribeMetadataResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *metadataPortType) DescribeMetadata(request *DescribeMetadata) (*DescribeMetadataResponse, error) {
	return service.DescribeMetadataContext(
		context.Background(),
		request,
	)
}

func (service *metadataPortType) DescribeValueTypeContext(ctx context.Context, request *DescribeValueType) (*DescribeValueTypeResponse, error) {
	response := new(DescribeValueTypeResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *metadataPortType) DescribeValueType(request *DescribeValueType) (*DescribeValueTypeResponse, error) {
	return service.DescribeValueTypeContext(
		context.Background(),
		request,
	)
}

func (service *metadataPortType) ListMetadataContext(ctx context.Context, request *ListMetadata) (*ListMetadataResponse, error) {
	response := new(ListMetadataResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *metadataPortType) ListMetadata(request *ListMetadata) (*ListMetadataResponse, error) {
	return service.ListMetadataContext(
		context.Background(),
		request,
	)
}

func (service *metadataPortType) ReadMetadataContext(ctx context.Context, request *ReadMetadata) (*ReadMetadataResponse, error) {
	response := new(ReadMetadataResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *metadataPortType) ReadMetadata(request *ReadMetadata) (*ReadMetadataResponse, error) {
	return service.ReadMetadataContext(
		context.Background(),
		request,
	)
}

func (service *metadataPortType) RenameMetadataContext(ctx context.Context, request *RenameMetadata) (*RenameMetadataResponse, error) {
	response := new(RenameMetadataResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *metadataPortType) RenameMetadata(request *RenameMetadata) (*RenameMetadataResponse, error) {
	return service.RenameMetadataContext(
		context.Background(),
		request,
	)
}

func (service *metadataPortType) RetrieveContext(ctx context.Context, request *Retrieve) (*RetrieveResponse, error) {
	response := new(RetrieveResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *metadataPortType) Retrieve(request *Retrieve) (*RetrieveResponse, error) {
	return service.RetrieveContext(
		context.Background(),
		request,
	)
}

func (service *metadataPortType) UpdateMetadataContext(ctx context.Context, request *UpdateMetadata) (*UpdateMetadataResponse, error) {
	response := new(UpdateMetadataResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *metadataPortType) UpdateMetadata(request *UpdateMetadata) (*UpdateMetadataResponse, error) {
	return service.UpdateMetadataContext(
		context.Background(),
		request,
	)
}

func (service *metadataPortType) UpsertMetadataContext(ctx context.Context, request *UpsertMetadata) (*UpsertMetadataResponse, error) {
	response := new(UpsertMetadataResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *metadataPortType) UpsertMetadata(request *UpsertMetadata) (*UpsertMetadataResponse, error) {
	return service.UpsertMetadataContext(
		context.Background(),
		request,
	)
}
